{"ast":null,"code":"import { useState, useCallback } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { jobstatus_url } from \"../../utils/constants\";\nimport { filterByEmpId } from \"./utils\";\nimport axios from \"axios\";\nimport { queryKeys } from \"../react-query/constants\";\nasync function getJobstatus(jobId) {\n  const {\n    data\n  } = await axios.get(`${jobstatus_url}?fv=${jobId}`);\n  //const { data } = await axios.get(`${leaves_url}`);\n  return data;\n}\nexport function useJobstatus(empid) {\n  const [filter, setFilter] = useState(\"all\");\n  const [statusjobId, setStatusJobId] = useState(\"\");\n  const selectFn = useCallback(unfiltered => filterByEmpId(unfiltered, filter), [filter]);\n  const fallback = [];\n  const {\n    data: jobstatus = fallback\n  } = useQuery([queryKeys.jobstatus, statusjobId],\n  //queryKeys.leaves,\n  () => getJobstatus(statusjobId), {\n    select: filter !== \"all\" ? selectFn : undefined\n  });\n  return {\n    jobstatus,\n    filter,\n    setFilter,\n    setStatusJobId\n  };\n}","map":{"version":3,"names":["useState","useCallback","useQuery","jobstatus_url","filterByEmpId","axios","queryKeys","getJobstatus","jobId","data","get","useJobstatus","empid","filter","setFilter","statusjobId","setStatusJobId","selectFn","unfiltered","fallback","jobstatus","select","undefined"],"sources":["D:/react-myprojects/hrms-demo/src/components/jobstatus/useJobstatus.js"],"sourcesContent":["import { useState, useCallback } from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport { jobstatus_url } from \"../../utils/constants\";\r\nimport { filterByEmpId } from \"./utils\";\r\n\r\nimport axios from \"axios\";\r\nimport { queryKeys } from \"../react-query/constants\";\r\n\r\nasync function getJobstatus(jobId) {\r\n  const { data } = await axios.get(`${jobstatus_url}?fv=${jobId}`);\r\n  //const { data } = await axios.get(`${leaves_url}`);\r\n  return data;\r\n}\r\n\r\nexport function useJobstatus(empid) {\r\n  const [filter, setFilter] = useState(\"all\");\r\n  const [statusjobId, setStatusJobId] = useState(\"\");\r\n\r\n  const selectFn = useCallback(\r\n    (unfiltered) => filterByEmpId(unfiltered, filter),\r\n    [filter]\r\n  );\r\n\r\n  const fallback = [];\r\n  const { data: jobstatus = fallback } = useQuery(\r\n    [queryKeys.jobstatus, statusjobId],\r\n    //queryKeys.leaves,\r\n    () => getJobstatus(statusjobId),\r\n    {\r\n      select: filter !== \"all\" ? selectFn : undefined,\r\n    }\r\n  );\r\n\r\n  return { jobstatus, filter, setFilter, setStatusJobId };\r\n}\r\n"],"mappings":"AAAA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAC7C,SAASC,QAAQ,QAAQ,aAAa;AACtC,SAASC,aAAa,QAAQ,uBAAuB;AACrD,SAASC,aAAa,QAAQ,SAAS;AAEvC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,0BAA0B;AAEpD,eAAeC,YAAY,CAACC,KAAK,EAAE;EACjC,MAAM;IAAEC;EAAK,CAAC,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAE,GAAEP,aAAc,OAAMK,KAAM,EAAC,CAAC;EAChE;EACA,OAAOC,IAAI;AACb;AAEA,OAAO,SAASE,YAAY,CAACC,KAAK,EAAE;EAClC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAACe,WAAW,EAAEC,cAAc,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMiB,QAAQ,GAAGhB,WAAW,CACzBiB,UAAU,IAAKd,aAAa,CAACc,UAAU,EAAEL,MAAM,CAAC,EACjD,CAACA,MAAM,CAAC,CACT;EAED,MAAMM,QAAQ,GAAG,EAAE;EACnB,MAAM;IAAEV,IAAI,EAAEW,SAAS,GAAGD;EAAS,CAAC,GAAGjB,QAAQ,CAC7C,CAACI,SAAS,CAACc,SAAS,EAAEL,WAAW,CAAC;EAClC;EACA,MAAMR,YAAY,CAACQ,WAAW,CAAC,EAC/B;IACEM,MAAM,EAAER,MAAM,KAAK,KAAK,GAAGI,QAAQ,GAAGK;EACxC,CAAC,CACF;EAED,OAAO;IAAEF,SAAS;IAAEP,MAAM;IAAEC,SAAS;IAAEE;EAAe,CAAC;AACzD"},"metadata":{},"sourceType":"module"}
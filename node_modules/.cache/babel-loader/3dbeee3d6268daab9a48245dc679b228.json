{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-demo\\\\src\\\\components\\\\AllowancesTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useMemo } from \"react\";\nimport MaterialTable from \"material-table\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { usePayItems } from \"./payitems/usePayItems\";\nimport { useUpdatePayItems } from \"./payitems/useUpdatePayItems\";\nimport { useDeletePayItems } from \"./payitems/useDeletePayItems\";\nimport { useAddPayItems } from \"./payitems/useAddPayItems\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UpdateAllowances() {\n  _s();\n\n  const classes = useStyles();\n  const {\n    payitems,\n    setPayItemId\n  } = usePayItems();\n  const updatePayItems = useUpdatePayItems();\n  const deletePayItems = useDeletePayItems();\n  const addPayItems = useAddPayItems();\n  const columns = useMemo(() => [{\n    title: \"Name\",\n    field: \"name\"\n  }], []);\n\n  const update_Allowance = data => {\n    const {\n      id,\n      rec_id,\n      ...fields\n    } = data;\n    updatePayItems({\n      id,\n      ...fields\n    });\n  };\n\n  const add_Allowance = async data => {\n    const fields = { ...data,\n      pay_type: \"Allowances\"\n    };\n    addPayItems(fields);\n  };\n\n  const delete_Allowance = data => {\n    const {\n      id\n    } = data;\n    deletePayItems(id);\n  };\n\n  useEffect(() => {\n    setPayItemId(\"Allowances\");\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: \"100%\",\n        paddingTop: \"5px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n        columns: columns,\n        data: payitems,\n        title: \"Allowances\",\n        editable: {\n          onRowAdd: newData => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              add_Allowance(newData);\n              resolve();\n            }, 1000);\n          }),\n          onRowUpdate: (newData, oldData) => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              update_Allowance(newData);\n              resolve();\n            }, 1000);\n          }),\n          onRowDelete: oldData => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              delete_Allowance(oldData);\n              resolve();\n            }, 1000);\n          })\n        },\n        options: {\n          filtering: true,\n          headerStyle: {\n            backgroundColor: \"#90CDF4\",\n            color: \"primary\"\n          },\n          showTitle: true\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UpdateAllowances, \"iBBMzzwz9PFYvapB5yJHcTY2rms=\", false, function () {\n  return [useStyles, usePayItems, useUpdatePayItems, useDeletePayItems, useAddPayItems];\n});\n\n_c = UpdateAllowances;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: 0\n  }\n}));\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateAllowances\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-demo/src/components/AllowancesTable.js"],"names":["React","useEffect","useMemo","MaterialTable","makeStyles","usePayItems","useUpdatePayItems","useDeletePayItems","useAddPayItems","UpdateAllowances","classes","useStyles","payitems","setPayItemId","updatePayItems","deletePayItems","addPayItems","columns","title","field","update_Allowance","data","id","rec_id","fields","add_Allowance","pay_type","delete_Allowance","root","maxWidth","paddingTop","onRowAdd","newData","Promise","resolve","reject","setTimeout","onRowUpdate","oldData","onRowDelete","filtering","headerStyle","backgroundColor","color","showTitle","theme","padding"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,OAA3B,QAA0C,OAA1C;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,iBAAT,QAAkC,8BAAlC;AACA,SAASC,iBAAT,QAAkC,8BAAlC;AACA,SAASC,cAAT,QAA+B,2BAA/B;;AAEA,eAAe,SAASC,gBAAT,GAA4B;AAAA;;AACzC,QAAMC,OAAO,GAAGC,SAAS,EAAzB;AACA,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA6BR,WAAW,EAA9C;AACA,QAAMS,cAAc,GAAGR,iBAAiB,EAAxC;AACA,QAAMS,cAAc,GAAGR,iBAAiB,EAAxC;AACA,QAAMS,WAAW,GAAGR,cAAc,EAAlC;AAEA,QAAMS,OAAO,GAAGf,OAAO,CACrB,MAAM,CACJ;AACEgB,IAAAA,KAAK,EAAE,MADT;AAEEC,IAAAA,KAAK,EAAE;AAFT,GADI,CADe,EAOrB,EAPqB,CAAvB;;AAUA,QAAMC,gBAAgB,GAAIC,IAAD,IAAU;AACjC,UAAM;AAAEC,MAAAA,EAAF;AAAMC,MAAAA,MAAN;AAAc,SAAGC;AAAjB,QAA4BH,IAAlC;AACAP,IAAAA,cAAc,CAAC;AAAEQ,MAAAA,EAAF;AAAM,SAAGE;AAAT,KAAD,CAAd;AACD,GAHD;;AAKA,QAAMC,aAAa,GAAG,MAAOJ,IAAP,IAAgB;AACpC,UAAMG,MAAM,GAAG,EAAE,GAAGH,IAAL;AAAWK,MAAAA,QAAQ,EAAE;AAArB,KAAf;AACAV,IAAAA,WAAW,CAACQ,MAAD,CAAX;AACD,GAHD;;AAKA,QAAMG,gBAAgB,GAAIN,IAAD,IAAU;AACjC,UAAM;AAAEC,MAAAA;AAAF,QAASD,IAAf;AACAN,IAAAA,cAAc,CAACO,EAAD,CAAd;AACD,GAHD;;AAKArB,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,YAAY,CAAC,YAAD,CAAZ;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAK,IAAA,SAAS,EAAEH,OAAO,CAACkB,IAAxB;AAAA,2BACE;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,QAAQ,EAAE,MAAZ;AAAoBC,QAAAA,UAAU,EAAE;AAAhC,OAAZ;AAAA,6BACE,QAAC,aAAD;AACE,QAAA,OAAO,EAAEb,OADX;AAEE,QAAA,IAAI,EAAEL,QAFR;AAGE,QAAA,KAAK,EAAC,YAHR;AAIE,QAAA,QAAQ,EAAE;AACRmB,UAAAA,QAAQ,EAAGC,OAAD,IACR,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC/BC,YAAAA,UAAU,CAAC,MAAM;AACfX,cAAAA,aAAa,CAACO,OAAD,CAAb;AACAE,cAAAA,OAAO;AACR,aAHS,EAGP,IAHO,CAAV;AAID,WALD,CAFM;AAQRG,UAAAA,WAAW,EAAE,CAACL,OAAD,EAAUM,OAAV,KACX,IAAIL,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC/BC,YAAAA,UAAU,CAAC,MAAM;AACfhB,cAAAA,gBAAgB,CAACY,OAAD,CAAhB;AACAE,cAAAA,OAAO;AACR,aAHS,EAGP,IAHO,CAAV;AAID,WALD,CATM;AAeRK,UAAAA,WAAW,EAAGD,OAAD,IACX,IAAIL,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC/BC,YAAAA,UAAU,CAAC,MAAM;AACfT,cAAAA,gBAAgB,CAACW,OAAD,CAAhB;AACAJ,cAAAA,OAAO;AACR,aAHS,EAGP,IAHO,CAAV;AAID,WALD;AAhBM,SAJZ;AA2BE,QAAA,OAAO,EAAE;AACPM,UAAAA,SAAS,EAAE,IADJ;AAEPC,UAAAA,WAAW,EAAE;AACXC,YAAAA,eAAe,EAAE,SADN;AAEXC,YAAAA,KAAK,EAAE;AAFI,WAFN;AAMPC,UAAAA,SAAS,EAAE;AANJ;AA3BX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA0CD;;GA9EuBnC,gB;UACNE,S,EACmBN,W,EACZC,iB,EACAC,iB,EACHC,c;;;KALEC,gB;AAgFxB,MAAME,SAAS,GAAGP,UAAU,CAAEyC,KAAD,KAAY;AACvCjB,EAAAA,IAAI,EAAE;AACJkB,IAAAA,OAAO,EAAE;AADL;AADiC,CAAZ,CAAD,CAA5B","sourcesContent":["import React, { useEffect, useMemo } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { usePayItems } from \"./payitems/usePayItems\";\r\nimport { useUpdatePayItems } from \"./payitems/useUpdatePayItems\";\r\nimport { useDeletePayItems } from \"./payitems/useDeletePayItems\";\r\nimport { useAddPayItems } from \"./payitems/useAddPayItems\";\r\n\r\nexport default function UpdateAllowances() {\r\n  const classes = useStyles();\r\n  const { payitems, setPayItemId } = usePayItems();\r\n  const updatePayItems = useUpdatePayItems();\r\n  const deletePayItems = useDeletePayItems();\r\n  const addPayItems = useAddPayItems();\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        title: \"Name\",\r\n        field: \"name\",\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  const update_Allowance = (data) => {\r\n    const { id, rec_id, ...fields } = data;\r\n    updatePayItems({ id, ...fields });\r\n  };\r\n\r\n  const add_Allowance = async (data) => {\r\n    const fields = { ...data, pay_type: \"Allowances\" };\r\n    addPayItems(fields);\r\n  };\r\n\r\n  const delete_Allowance = (data) => {\r\n    const { id } = data;\r\n    deletePayItems(id);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setPayItemId(\"Allowances\");\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={payitems}\r\n          title=\"Allowances\"\r\n          editable={{\r\n            onRowAdd: (newData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  add_Allowance(newData);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowUpdate: (newData, oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  update_Allowance(newData);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowDelete: (oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  delete_Allowance(oldData);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n          }}\r\n          options={{\r\n            filtering: true,\r\n            headerStyle: {\r\n              backgroundColor: \"#90CDF4\",\r\n              color: \"primary\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-demo\\\\src\\\\components\\\\LeaveFormAdmin.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { //Button,\n//Icon,\nTextField, Paper, Typography, Divider } from \"@material-ui/core\";\nimport { useRecoilState } from \"recoil\";\nimport { loginLevelState } from \"./data/atomdata\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useLeavesContext } from \"../context/leaves_context\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport { useCustomToast } from \"../helpers/useCustomToast\"; //import { useLeaves } from \"./leaves/useLeaves\";\n\nimport { useAddLeaves } from \"./leaves/useAddLeaves\"; //import { useDeleteLeaves } from \"./leaves/useDeleteLeaves\";\n\nimport { useUpdateLeaves } from \"./leaves/useUpdateLeaves\"; // const initial_state = {\n//   name: \"\",\n//   to_date: \"\",\n//   from_date: \"\",\n//   reason: \"\",\n//   status: \"Pending\",\n//   no_of_days: 0,\n//   leave_bal: 0,\n// };\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LeaveForm = ({\n  formdata,\n  setFormdata,\n  handleDialogClose\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const toast = useCustomToast(); //const { leaves, filter, setFilter, setLeaveId } = useLeaves();\n\n  const updateLeaves = useUpdateLeaves();\n  const addLeaves = useAddLeaves(); //const [state, setState] = useState(initial_state);\n\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\n  const {\n    handleSubmit,\n    control\n  } = useForm(); //const initialValues = Object.values(initial_state).join(\"\");\n\n  const {\n    isLeaveEditing,\n    editLeaveID\n  } = useLeavesContext(); //console.log(\"leave\", isLeaveEditing, formdata);\n\n  const onSubmit = data => {\n    console.log(\"leave\", data);\n\n    if (isLeaveEditing) {\n      updateLeaves({\n        id: editLeaveID,\n        ...data\n      });\n      toast({\n        title: \"Leave record being rejected!\",\n        status: \"success\"\n      });\n    } else {\n      addLeaves({ ...data,\n        empid: loginLevel.loginUserId,\n        reporting_email: loginLevel.reporting_email\n      });\n    } //history.push(\"/leave\");\n\n\n    handleDialogClose();\n  }; // useEffect(() => {\n  //   setState(initial_state);\n  //   setState({ ...formdata });\n  //   setState({ ...formdata });\n  //   console.log(\"laeve form\",state)\n  // }, [initialValues]);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        component: \"h3\",\n        children: \"LEAVE FORM\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        component: \"p\",\n        children: \"Leave Application\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"name\",\n            control: control,\n            defaultValue: formdata.name,\n            render: ({\n              field: {\n                onChange,\n                value\n              },\n              fieldState: {\n                error\n              }\n            }) => {\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Name\",\n                id: \"margin-normal\",\n                name: \"name\",\n                defaultValue: formdata.name //value={value}\n                ,\n                className: classes.textField,\n                onChange: e => {\n                  console.log(e.target.value);\n                  onChange(e.target.value);\n                },\n                InputProps: {\n                  readOnly: true\n                },\n                error: !!error,\n                helperText: error ? error.message : null //select\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 19\n              }, this);\n            } // rules={{ required: \"Name required\" }}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"from_date\",\n            control: control,\n            defaultValue: formdata.from_date,\n            render: ({\n              field: {\n                onChange,\n                value\n              },\n              fieldState: {\n                error\n              }\n            }) => {\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"From Date\",\n                type: \"date\",\n                id: \"margin-normal\",\n                name: \"from_date\",\n                defaultValue: formdata.from_date,\n                className: classes.textField,\n                onChange: onChange,\n                error: !!error,\n                helperText: error ? error.message : null,\n                InputLabelProps: {\n                  shrink: true\n                },\n                InputProps: {\n                  readOnly: true\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 19\n              }, this);\n            },\n            rules: {\n              required: \"From Date is required\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"to_date\",\n            control: control,\n            defaultValue: formdata.to_date,\n            render: ({\n              field: {\n                onChange,\n                value\n              },\n              fieldState: {\n                error\n              }\n            }) => {\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"To Date\",\n                id: \"margin-normal\",\n                type: \"date\",\n                name: \"to_date\",\n                defaultValue: formdata.to_date,\n                className: classes.textField,\n                onChange: onChange,\n                error: !!error,\n                helperText: error ? error.message : null,\n                InputLabelProps: {\n                  shrink: true\n                },\n                InputProps: {\n                  readOnly: true\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 19\n              }, this);\n            },\n            rules: {\n              required: \"To Date is required\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"leave_bal\",\n            control: control,\n            defaultValue: formdata.leave_bal,\n            render: ({\n              field: {\n                onChange,\n                value\n              },\n              fieldState: {\n                error\n              }\n            }) => {\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                disable: true,\n                label: \"Leave Balance\",\n                type: \"number\",\n                id: \"standard-number\",\n                name: \"leave_bal\",\n                defaultValue: formdata.leave_bal,\n                className: classes.textField //onChange={onChange}\n                ,\n                onChange: e => {\n                  onChange(parseInt(e.target.value, 10));\n                },\n                error: !!error,\n                helperText: error ? error.message : null,\n                InputProps: {\n                  readOnly: true\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 19\n              }, this);\n            } //rules={{ required: \"IC No required\" }}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"no_of_days\",\n            control: control,\n            defaultValue: formdata.no_of_days,\n            render: ({\n              field: {\n                onChange,\n                value\n              },\n              fieldState: {\n                error\n              }\n            }) => {\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"No Of Days\",\n                type: \"number\",\n                id: \"standard-number\",\n                name: \"no_of_days\",\n                defaultValue: formdata.no_of_days,\n                className: classes.textField //onChange={onChange}\n                ,\n                onChange: e => {\n                  onChange(parseInt(e.target.value, 10));\n                },\n                error: !!error,\n                helperText: error ? error.message : null,\n                InputProps: {\n                  readOnly: true\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 19\n              }, this);\n            } //rules={{ required: \"IC No required\" }}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"reason\",\n            control: control,\n            defaultValue: formdata.reason,\n            render: ({\n              field: {\n                onChange,\n                value\n              },\n              fieldState: {\n                error\n              }\n            }) => {\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Reason\",\n                id: \"margin-normal\",\n                name: \"reason\",\n                defaultValue: formdata.reason,\n                className: classes.textField,\n                onChange: onChange,\n                error: !!error,\n                helperText: error ? error.message : null,\n                InputProps: {\n                  readOnly: true\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 19\n              }, this);\n            } // rules={{ required: \"Reason is required\" }}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"status\",\n            control: control,\n            defaultValue: formdata.status,\n            render: ({\n              field: {\n                onChange,\n                value\n              },\n              fieldState: {\n                error\n              }\n            }) => {\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Status\",\n                id: \"margin-normal\",\n                name: \"status\",\n                defaultValue: formdata.status,\n                className: classes.textField,\n                onChange: onChange,\n                error: !!error,\n                helperText: error ? error.message : null,\n                InputProps: {\n                  readOnly: true\n                } // select\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 19\n              }, this);\n            } //rules={{ required: \"Status is required\" }}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LeaveForm, \"ndaIZRyeMnnEiV7mIZgz2zvn14A=\", false, function () {\n  return [useStyles, useCustomToast, useUpdateLeaves, useAddLeaves, useRecoilState, useForm, useLeavesContext];\n});\n\n_c = LeaveForm;\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(1)\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1)\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1)\n  },\n  iconSmall: {\n    fontSize: 20\n  },\n  root: {\n    padding: theme.spacing(3, 2)\n  },\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 400\n  }\n}));\nexport default LeaveForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LeaveForm\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-demo/src/components/LeaveFormAdmin.js"],"names":["React","useState","TextField","Paper","Typography","Divider","useRecoilState","loginLevelState","makeStyles","useLeavesContext","Controller","useForm","useCustomToast","useAddLeaves","useUpdateLeaves","LeaveForm","formdata","setFormdata","handleDialogClose","classes","useStyles","toast","updateLeaves","addLeaves","loginLevel","setLoginLevel","handleSubmit","control","isLeaveEditing","editLeaveID","onSubmit","data","console","log","id","title","status","empid","loginUserId","reporting_email","root","name","field","onChange","value","fieldState","error","textField","e","target","readOnly","message","from_date","shrink","required","to_date","leave_bal","parseInt","no_of_days","reason","theme","button","margin","spacing","leftIcon","marginRight","rightIcon","marginLeft","iconSmall","fontSize","padding","container","display","flexWrap","width"],"mappings":"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","sourcesContent":["import React, { useState} from \"react\";\r\nimport {\r\n  //Button,\r\n  //Icon,\r\n  TextField,\r\n  Paper,\r\n  Typography,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useLeavesContext } from \"../context/leaves_context\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport { useCustomToast } from \"../helpers/useCustomToast\";\r\n//import { useLeaves } from \"./leaves/useLeaves\";\r\nimport { useAddLeaves } from \"./leaves/useAddLeaves\";\r\n//import { useDeleteLeaves } from \"./leaves/useDeleteLeaves\";\r\nimport { useUpdateLeaves } from \"./leaves/useUpdateLeaves\";\r\n\r\n// const initial_state = {\r\n//   name: \"\",\r\n//   to_date: \"\",\r\n//   from_date: \"\",\r\n//   reason: \"\",\r\n//   status: \"Pending\",\r\n//   no_of_days: 0,\r\n//   leave_bal: 0,\r\n// };\r\n\r\nconst LeaveForm = ({ formdata, setFormdata, handleDialogClose }) => {\r\n  const classes = useStyles();\r\n  const toast = useCustomToast()\r\n  //const { leaves, filter, setFilter, setLeaveId } = useLeaves();\r\n  const updateLeaves = useUpdateLeaves();\r\n  const addLeaves = useAddLeaves();\r\n  //const [state, setState] = useState(initial_state);\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const { handleSubmit, control } = useForm();\r\n  //const initialValues = Object.values(initial_state).join(\"\");\r\n  const { isLeaveEditing, editLeaveID } = useLeavesContext();\r\n\r\n  //console.log(\"leave\", isLeaveEditing, formdata);\r\n  const onSubmit = (data) => {\r\n    console.log(\"leave\", data);\r\n    if (isLeaveEditing) {\r\n      updateLeaves({ id: editLeaveID, ...data });\r\n       toast({\r\n         title: \"Leave record being rejected!\",\r\n         status: \"success\",\r\n       });\r\n    } else {\r\n      addLeaves({\r\n        ...data,\r\n        empid: loginLevel.loginUserId,\r\n        reporting_email: loginLevel.reporting_email,\r\n      });\r\n    }\r\n\r\n    //history.push(\"/leave\");\r\n    handleDialogClose();\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   setState(initial_state);\r\n  //   setState({ ...formdata });\r\n  //   setState({ ...formdata });\r\n  //   console.log(\"laeve form\",state)\r\n  // }, [initialValues]);\r\n\r\n  return (\r\n    <div>\r\n      <Paper className={classes.root}>\r\n        <Typography variant=\"h5\" component=\"h3\">\r\n          LEAVE FORM\r\n        </Typography>\r\n        <Typography component=\"p\">Leave Application</Typography>\r\n        <Divider />\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <div>\r\n            <Controller\r\n              name=\"name\"\r\n              control={control}\r\n              defaultValue={formdata.name}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Name\"\r\n                    id=\"margin-normal\"\r\n                    name=\"name\"\r\n                    defaultValue={formdata.name}\r\n                    //value={value}\r\n                    className={classes.textField}\r\n                    onChange={(e) => {\r\n                      console.log(e.target.value);\r\n                      onChange(e.target.value);\r\n                    }}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    //select\r\n                  >\r\n                    {/* {employees.map((e) => {\r\n                      return (\r\n                        <MenuItem key={e.name} value={e.name}>\r\n                          {e.name}\r\n                        </MenuItem>\r\n                      );\r\n                    })} */}\r\n                  </TextField>\r\n                );\r\n              }}\r\n              // rules={{ required: \"Name required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"from_date\"\r\n              control={control}\r\n              defaultValue={formdata.from_date}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"From Date\"\r\n                    type=\"date\"\r\n                    id=\"margin-normal\"\r\n                    name=\"from_date\"\r\n                    defaultValue={formdata.from_date}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                  />\r\n                );\r\n              }}\r\n              rules={{ required: \"From Date is required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"to_date\"\r\n              control={control}\r\n              defaultValue={formdata.to_date}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"To Date\"\r\n                    id=\"margin-normal\"\r\n                    type=\"date\"\r\n                    name=\"to_date\"\r\n                    defaultValue={formdata.to_date}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                  />\r\n                );\r\n              }}\r\n              rules={{ required: \"To Date is required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"leave_bal\"\r\n              control={control}\r\n              defaultValue={formdata.leave_bal}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    disable\r\n                    label=\"Leave Balance\"\r\n                    type=\"number\"\r\n                    id=\"standard-number\"\r\n                    name=\"leave_bal\"\r\n                    defaultValue={formdata.leave_bal}\r\n                    className={classes.textField}\r\n                    //onChange={onChange}\r\n                    onChange={(e) => {\r\n                      onChange(parseInt(e.target.value, 10));\r\n                    }}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                  />\r\n                );\r\n              }}\r\n              //rules={{ required: \"IC No required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"no_of_days\"\r\n              control={control}\r\n              defaultValue={formdata.no_of_days}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"No Of Days\"\r\n                    type=\"number\"\r\n                    id=\"standard-number\"\r\n                    name=\"no_of_days\"\r\n                    defaultValue={formdata.no_of_days}\r\n                    className={classes.textField}\r\n                    //onChange={onChange}\r\n                    onChange={(e) => {\r\n                      onChange(parseInt(e.target.value, 10));\r\n                    }}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                     InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                  />\r\n                 \r\n                );\r\n              }}\r\n              //rules={{ required: \"IC No required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"reason\"\r\n              control={control}\r\n              defaultValue={formdata.reason}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Reason\"\r\n                    id=\"margin-normal\"\r\n                    name=\"reason\"\r\n                    defaultValue={formdata.reason}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                     InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                  />\r\n                  \r\n                );\r\n              }}\r\n              // rules={{ required: \"Reason is required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"status\"\r\n              control={control}\r\n              defaultValue={formdata.status}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Status\"\r\n                    id=\"margin-normal\"\r\n                    name=\"status\"\r\n                    defaultValue={formdata.status}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                    // select\r\n                  >\r\n                    {/* <MenuItem value=\"Pending\">Pending</MenuItem>\r\n                    <MenuItem value=\"Cancel\">Cancel</MenuItem>\r\n                    <MenuItem value=\"Approve\">Approve</MenuItem>\r\n                    <MenuItem value=\"Reject\">Reject</MenuItem> */}\r\n                  </TextField>\r\n                );\r\n              }}\r\n              //rules={{ required: \"Status is required\" }}\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            {/* <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              onClick={handleSubmit(onSubmit)}\r\n            >\r\n              Submit <Icon className={classes.rightIcon}>send</Icon>\r\n            </Button> */}\r\n          </div>\r\n        </form>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  leftIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  iconSmall: {\r\n    fontSize: 20,\r\n  },\r\n  root: {\r\n    padding: theme.spacing(3, 2),\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 400,\r\n  },\r\n}));\r\n\r\nexport default LeaveForm;\r\n"]},"metadata":{},"sourceType":"module"}
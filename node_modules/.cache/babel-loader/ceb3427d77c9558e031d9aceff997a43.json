{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-demo\\\\src\\\\components\\\\HocForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Icon, TextField, Paper, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useRecoilState } from \"recoil\";\nimport * as emailjs from \"emailjs-com\";\nimport { loginLevelState } from \"./data/atomdata\";\nimport MenuItem from \"@material-ui/core/MenuItem\"; //import { useEmployeesContext } from \"../context/employees_context\";\n//import { useExpensesContext } from \"../context/expenses_context\";\n\nimport { Controller, useForm } from \"react-hook-form\";\nimport { useCustomToast } from \"../helpers/useCustomToast\";\nimport { useEmployees } from \"./employees/useEmployees\";\nimport { useHoc } from \"./hoc/useHoc\";\nimport { useAddHoc } from \"./hoc/useAddHoc\"; //import { useDeleteHoc } from \"./hoc/useDeleteHoc\";\n\nimport { useUpdateHoc } from \"./hoc/useUpdateHoc\";\nimport { useHoccategory } from \"./hoccategory/useHoccategory\";\nimport { useHocwhat } from \"./hocwhat/useHocwhat\";\nimport { useHocwhatdetails } from \"./hocwhatdetails/useHocwhatdetails\";\nimport { useHocwhy } from \"./hocwhy/useHocwhy\";\nimport { useHocwhydetails } from \"./hocwhydetails/useHocwhydetails\";\nimport { useHoclocation } from \"./hoclocation/useHoclocation\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SERVICE_ID = process.env.REACT_APP_EMAILJS_SERVICEID;\nconst TEMPLATE_ID = \"template_1y8odlq\";\nconst USER_ID = process.env.REACT_APP_EMAILJS_USERID;\n\nconst HocForm = ({\n  formdata,\n  setFormdata,\n  handleDialogClose,\n  isEditId,\n  isNew\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const toast = useCustomToast(); //const { hoc, filter, setFilter, setHocId } = useHoc();\n\n  const {\n    employees\n  } = useEmployees();\n  const {\n    hocwhat\n  } = useHocwhat();\n  const {\n    hocwhatdetails,\n    setHocwhatdetailsId\n  } = useHocwhatdetails();\n  const {\n    hocwhy,\n    setHocwhyId\n  } = useHocwhy();\n  const {\n    hocwhydetails,\n    setHocwhydetailsId\n  } = useHocwhydetails();\n  const {\n    hoccategory\n  } = useHoccategory();\n  const {\n    hoclocation,\n    setHoclocationId\n  } = useHoclocation();\n  const updateHoc = useUpdateHoc();\n  const addHoc = useAddHoc();\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\n  const [category, setCategory] = useState(\"\" || formdata.category);\n  const [whatstatus, setWhatstatus] = useState(\"\" || formdata.what);\n  const [whystatus, setWhystatus] = useState(\"\" || formdata.why);\n  const [useremail, setUserEmail] = useState(\"\");\n  console.log(\"formdata\", formdata);\n  const {\n    handleSubmit,\n    control\n  } = useForm({\n    defaultValues: { ...formdata\n    }\n  });\n\n  const handleSentEmail = data => {\n    const {\n      date\n    } = data; //console.log(\"expense form\", loginLevel);\n\n    var emaildata = {\n      to_name: loginLevel.loginUser,\n      to_email: loginLevel.loginEmail,\n      message: `Your expenses claim application dated on ${date} has been successfully submitted for approval`,\n      cc_to: loginLevel.reporting_email\n    };\n    emailjs.send(SERVICE_ID, TEMPLATE_ID, emaildata, USER_ID).then(function (response) {\n      console.log(response.status, response.text);\n      toast({\n        title: `Email has sent successfully to ${emaildata.to_email}!`,\n        status: \"success\"\n      });\n    }, function (err) {\n      console.log(err);\n      toast({\n        title: `Email has fail to send to ${emaildata.to_email}!`,\n        status: \"warning\"\n      });\n    });\n  };\n\n  const onSubmit = (data, e) => {\n    e.preventDefault();\n\n    if (isNew) {\n      const {\n        tableData,\n        ...fields\n      } = data;\n      const emp = employees.filter(r => r.name === data.raisedby);\n      console.log(\"emp\", emp);\n      addHoc({ ...fields,\n        empid: emp[0].id,\n        email: emp[0].email\n      });\n    } else {\n      if (data.id) {\n        const {\n          id,\n          tableData,\n          ...fields\n        } = data;\n        updateHoc({\n          id,\n          ...fields\n        });\n      } else {\n        const {\n          tableData,\n          ...fields\n        } = data;\n        addHoc({ ...fields,\n          empid: loginLevel.loginUserId\n        }); //handleSentEmail(data);\n      }\n    }\n\n    handleDialogClose();\n  };\n\n  useEffect(() => {\n    setHoclocationId(\"C\");\n  }, []);\n  useEffect(() => {\n    if (whatstatus === \"\") {\n      setHocwhatdetailsId(prev => prev = \"none\");\n    } else {\n      setHocwhatdetailsId(prev => prev = whatstatus);\n    }\n  }, [whatstatus]);\n  useEffect(() => {\n    if (category === \"Positive Act\") {\n      setHocwhyId(prev => prev = \"none\");\n      setHocwhydetailsId(prev => prev = \"none\");\n    } else {\n      setHocwhyId(prev => prev = \"\");\n      setHocwhydetailsId(prev => prev = whystatus);\n    }\n  }, [whystatus, category]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        component: \"h3\",\n        children: \"HOC FORM\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        component: \"p\",\n        children: \"HOC Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"findings\",\n            control: control,\n            defaultValue: formdata.findings,\n            render: ({\n              field: {\n                onChange,\n                value\n              },\n              fieldState: {\n                error\n              }\n            }) => {\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"What is/are the findings?\",\n                id: \"margin-findings\",\n                name: \"findings\",\n                defaultValue: formdata.findings,\n                className: classes.textField,\n                onChange: onChange,\n                multiline: true,\n                rows: 2,\n                error: !!error,\n                helperText: error ? error.message : null\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 19\n              }, this);\n            },\n            rules: {\n              required: \"Findings is required\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"risks\",\n            control: control,\n            defaultValue: formdata.risks,\n            render: ({\n              field: {\n                onChange,\n                value\n              },\n              fieldState: {\n                error\n              }\n            }) => {\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"What is/are the potential hazard(s)/risk(s)?\",\n                id: \"margin-risks\",\n                name: \"risks\",\n                defaultValue: formdata.risks,\n                className: classes.textField,\n                onChange: onChange,\n                multiline: true,\n                rows: 2,\n                error: !!error,\n                helperText: error ? error.message : null\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 19\n              }, this);\n            },\n            rules: {\n              required: \"Potential hazard/risk is required\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"category\",\n            control: control,\n            defaultValue: formdata.category,\n            render: ({\n              field: {\n                onChange,\n                value\n              },\n              fieldState: {\n                error\n              }\n            }) => {\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Type/Category\" //type=\"date\"\n                ,\n                id: \"margin-category\",\n                name: \"formdata.category\",\n                value: value,\n                className: classes.textField,\n                onChange: e => {\n                  onChange(e.target.value);\n                  setCategory(prev => prev = e.target.value);\n                },\n                error: !!error,\n                helperText: error ? error.message : null // InputLabelProps={{\n                //   shrink: true,\n                // }}\n                ,\n                select: true,\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"\",\n                  children: \"None\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 21\n                }, this), hoccategory && hoccategory.map(rec => {\n                  return /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: rec.description,\n                    children: rec.description\n                  }, rec.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 228,\n                    columnNumber: 27\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 19\n              }, this);\n            },\n            rules: {\n              required: \"Category is required\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"what\",\n            control: control,\n            defaultValue: formdata.what,\n            render: ({\n              field: {\n                onChange,\n                value\n              },\n              fieldState: {\n                error\n              }\n            }) => {\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"What\",\n                id: \"margin-what\",\n                name: \"what\",\n                defaultValue: formdata.what,\n                className: classes.textField,\n                onChange: e => {\n                  onChange(e.target.value);\n                  setWhatstatus(prev => prev = e.target.value);\n                },\n                error: !!error,\n                helperText: error ? error.message : null,\n                select: true,\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"\",\n                  children: \"None\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 21\n                }, this), hocwhat && hocwhat.filter(r => {\n                  // if (category === \"Positive Act\") {\n                  //   return r.positiveact;\n                  // } else {\n                  //   return r.unsafeact;\n                  // }\n                  switch (category) {\n                    case \"Positive Act\":\n                      return r.positiveact;\n\n                    case \"Quality\":\n                      return r.quality;\n\n                    default:\n                      return r.unsafeact;\n                  }\n                }).map(rec => {\n                  return /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: rec.description,\n                    children: rec.description\n                  }, rec.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 283,\n                    columnNumber: 29\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 19\n              }, this);\n            } //rules={{ required: \"What is required\" }}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"what_details\",\n            control: control,\n            defaultValue: formdata.what_details,\n            render: ({\n              field: {\n                onChange,\n                value\n              },\n              fieldState: {\n                error\n              }\n            }) => {\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"What Details\",\n                id: \"margin-whatdetails\",\n                name: \"what_details\",\n                defaultValue: formdata.what_details,\n                value: value,\n                className: classes.textField,\n                onChange: onChange,\n                error: !!error,\n                helperText: error ? error.message : null,\n                select: true,\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"\",\n                  children: \"None\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 316,\n                  columnNumber: 21\n                }, this), hocwhatdetails && hocwhatdetails.filter(r => {\n                  // if (category === \"Positive Act\") {\n                  //   return r.positiveact;\n                  // } else {\n                  //   return r.unsafeact;\n                  // }\n                  switch (category) {\n                    case \"Positive Act\":\n                      return r.positiveact;\n\n                    case \"Quality\":\n                      return r.quality;\n\n                    default:\n                      return r.unsafeact;\n                  }\n                }).map(rec => {\n                  return /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: rec.description,\n                    children: rec.description\n                  }, rec.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 336,\n                    columnNumber: 29\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 19\n              }, this);\n            } //rules={{ required: \"What detail is required\" }}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"why\",\n            control: control,\n            defaultValue: formdata.why,\n            render: ({\n              field: {\n                onChange,\n                value\n              },\n              fieldState: {\n                error\n              }\n            }) => {\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Why\" //type=\"number\"\n                ,\n                id: \"standard-why\",\n                name: \"why\",\n                defaultValue: formdata.why,\n                className: classes.textField //onChange={onChange}\n                ,\n                onChange: e => {\n                  onChange(e.target.value);\n                  setWhystatus(prev => prev = e.target.value);\n                },\n                error: !!error,\n                helperText: error ? error.message : null,\n                select: true,\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"\",\n                  children: \"None\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 373,\n                  columnNumber: 21\n                }, this), hocwhy && hocwhy.filter(r => {\n                  switch (category) {\n                    case \"Positive Act\":\n                      return r.positiveact;\n\n                    case \"Quality\":\n                      return r.quality;\n\n                    default:\n                      return r.unsafeact;\n                  }\n                }).map(rec => {\n                  return /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: rec.description,\n                    children: rec.description\n                  }, rec.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 388,\n                    columnNumber: 29\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 19\n              }, this);\n            } //rules={{ required: \"Why is required\" }}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"why_details\",\n            control: control,\n            defaultValue: formdata.why_details,\n            render: ({\n              field: {\n                onChange,\n                value\n              },\n              fieldState: {\n                error\n              }\n            }) => {\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Why Details\",\n                id: \"margin-whydetails\",\n                name: \"why_details\",\n                defaultValue: formdata.why_details,\n                className: classes.textField,\n                onChange: onChange,\n                error: !!error,\n                helperText: error ? error.message : null,\n                select: true,\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"\",\n                  children: \"None\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 420,\n                  columnNumber: 21\n                }, this), hocwhydetails && hocwhydetails.map(rec => {\n                  return /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: rec.description,\n                    children: rec.description\n                  }, rec.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 426,\n                    columnNumber: 29\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 409,\n                columnNumber: 19\n              }, this);\n            } //rules={{ required: \"Why detail is required\" }}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"discussion\",\n            control: control,\n            defaultValue: formdata.discussion,\n            render: ({\n              field: {\n                onChange,\n                value\n              },\n              fieldState: {\n                error\n              }\n            }) => {\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Did a conversation take place?\",\n                id: \"margin-discussion\",\n                name: \"discussion\",\n                defaultValue: formdata.discussion,\n                className: classes.textField,\n                onChange: onChange,\n                error: !!error,\n                helperText: error ? error.message : null,\n                select: true,\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"Yes\",\n                  children: \"Yes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 458,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"No\",\n                  children: \"No\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 459,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 447,\n                columnNumber: 19\n              }, this);\n            } //rules={{ required: \"Status is required\" }}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"action\",\n            control: control,\n            defaultValue: formdata.action,\n            render: ({\n              field: {\n                onChange,\n                value\n              },\n              fieldState: {\n                error\n              }\n            }) => {\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Was there an agreed remedial/corrective or preventive action? \",\n                id: \"margin-action\",\n                name: \"action\",\n                defaultValue: formdata.action,\n                className: classes.textField,\n                onChange: onChange,\n                multiline: true,\n                rows: 2,\n                error: !!error,\n                helperText: error ? error.message : null\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 476,\n                columnNumber: 19\n              }, this);\n            } //rules={{ required: \"Status is required\" }}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"isfollowup\",\n            control: control,\n            defaultValue: formdata.isfollowup,\n            render: ({\n              field: {\n                onChange,\n                value\n              },\n              fieldState: {\n                error\n              }\n            }) => {\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Follow-up required?\",\n                id: \"standard-isfollowup\",\n                name: \"isfollowup\",\n                defaultValue: formdata.isfollowup,\n                className: classes.textField,\n                onChange: onChange,\n                error: !!error,\n                helperText: error ? error.message : null,\n                select: true,\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"Yes\",\n                  children: \"Yes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 514,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"No\",\n                  children: \"No\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 515,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 503,\n                columnNumber: 19\n              }, this);\n            } //rules={{ required: \"IC No required\" }}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 494,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"isworkrelated\",\n            control: control,\n            defaultValue: formdata.isworkrelated,\n            render: ({\n              field: {\n                onChange,\n                value\n              },\n              fieldState: {\n                error\n              }\n            }) => {\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Work Related?\",\n                id: \"margin-workrelated\",\n                name: \"isworkrelated\",\n                defaultValue: formdata.isworkrelated,\n                className: classes.textField,\n                onChange: onChange,\n                error: !!error,\n                helperText: error ? error.message : null,\n                select: true,\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"Yes\",\n                  children: \"Yes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 543,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"No\",\n                  children: \"No\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 544,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 532,\n                columnNumber: 19\n              }, this);\n            } //rules={{ required: \"Status is required\" }}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 523,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 11\n        }, this), formdata.raisedby ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"raisedby\",\n            control: control,\n            defaultValue: formdata.raisedby,\n            render: ({\n              field: {\n                onChange,\n                value\n              },\n              fieldState: {\n                error\n              }\n            }) => {\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Raised By\",\n                id: \"margin-raisedby\",\n                name: \"raisedby\",\n                defaultValue: formdata.raisedby,\n                className: classes.textField,\n                onChange: onChange,\n                error: !!error,\n                helperText: error ? error.message : null,\n                inputProps: {\n                  readOnly: true\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 562,\n                columnNumber: 21\n              }, this);\n            } //rules={{ required: \"Status is required\" }}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 553,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 552,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"raisedby\",\n            control: control,\n            defaultValue: formdata.raisedby,\n            render: ({\n              field: {\n                onChange,\n                value\n              },\n              fieldState: {\n                error\n              }\n            }) => {\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Raised By\",\n                id: \"margin-raisedby\",\n                name: \"raisedby\",\n                defaultValue: formdata.raisedby,\n                className: classes.textField,\n                onChange: onChange,\n                error: !!error,\n                helperText: error ? error.message : null //inputProps={{ readOnly: true }}\n                ,\n                select: true,\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"\",\n                  children: \"None\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 601,\n                  columnNumber: 23\n                }, this), employees && employees.filter(r => !r.hasresigned).sort((a, b) => a.name > b.name ? 1 : b.name > a.name ? -1 : 0).map(rec => {\n                  return /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: rec.name,\n                    children: rec.name\n                  }, rec.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 610,\n                    columnNumber: 31\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 589,\n                columnNumber: 21\n              }, this);\n            } //rules={{ required: \"Status is required\" }}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 580,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 579,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"raisedon\",\n            control: control,\n            defaultValue: formdata.raisedon,\n            render: ({\n              field: {\n                onChange,\n                value\n              },\n              fieldState: {\n                error\n              }\n            }) => {\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Raised On\",\n                id: \"margin-raisedon\",\n                name: \"raisedon\",\n                type: \"date\",\n                defaultValue: formdata.raisedon,\n                className: classes.textField,\n                onChange: onChange,\n                error: !!error,\n                helperText: error ? error.message : null,\n                InputLabelProps: {\n                  shrink: true\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 632,\n                columnNumber: 19\n              }, this);\n            } //rules={{ required: \"Status is required\" }}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 623,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 622,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"company\",\n            control: control,\n            defaultValue: formdata.company,\n            render: ({\n              field: {\n                onChange,\n                value\n              },\n              fieldState: {\n                error\n              }\n            }) => {\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Company\",\n                id: \"margin-company\",\n                name: \"company\",\n                defaultValue: formdata.company,\n                className: classes.textField,\n                onChange: onChange,\n                error: !!error,\n                helperText: error ? error.message : null,\n                inputProps: {\n                  readOnly: true\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 661,\n                columnNumber: 19\n              }, this);\n            } //rules={{ required: \"Status is required\" }}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 652,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 651,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"location\",\n            control: control,\n            defaultValue: formdata.location,\n            render: ({\n              field: {\n                onChange,\n                value\n              },\n              fieldState: {\n                error\n              }\n            }) => {\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Location\",\n                id: \"margin-location\",\n                name: \"location\",\n                defaultValue: formdata.location,\n                className: classes.textField,\n                onChange: onChange,\n                error: !!error,\n                helperText: error ? error.message : null,\n                select: true,\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"\",\n                  children: \"None\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 698,\n                  columnNumber: 21\n                }, this), hoclocation && hoclocation.map(rec => {\n                  return /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: rec.name,\n                    children: rec.name\n                  }, rec.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 702,\n                    columnNumber: 27\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 687,\n                columnNumber: 19\n              }, this);\n            } //rules={{ required: \"Status is required\" }}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 678,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 677,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            color: \"primary\",\n            className: classes.button //onClick={() => handleSubmit(onSubmit)()}\n            ,\n            children: [\"Save \", /*#__PURE__*/_jsxDEV(Icon, {\n              className: classes.rightIcon,\n              children: \"send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 746,\n              columnNumber: 20\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 739,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 738,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n};\n\n_s(HocForm, \"6u5Cr62RocXAcoZFUxb4sB7q3Ec=\", false, function () {\n  return [useStyles, useCustomToast, useEmployees, useHocwhat, useHocwhatdetails, useHocwhy, useHocwhydetails, useHoccategory, useHoclocation, useUpdateHoc, useAddHoc, useRecoilState, useForm];\n});\n\n_c = HocForm;\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(1)\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1)\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1)\n  },\n  iconSmall: {\n    fontSize: 20\n  },\n  root: {\n    padding: theme.spacing(3, 2)\n  },\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 500\n  }\n}));\nexport default HocForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"HocForm\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-demo/src/components/HocForm.js"],"names":["React","useState","useEffect","Button","Icon","TextField","Paper","Typography","makeStyles","useRecoilState","emailjs","loginLevelState","MenuItem","Controller","useForm","useCustomToast","useEmployees","useHoc","useAddHoc","useUpdateHoc","useHoccategory","useHocwhat","useHocwhatdetails","useHocwhy","useHocwhydetails","useHoclocation","SERVICE_ID","process","env","REACT_APP_EMAILJS_SERVICEID","TEMPLATE_ID","USER_ID","REACT_APP_EMAILJS_USERID","HocForm","formdata","setFormdata","handleDialogClose","isEditId","isNew","classes","useStyles","toast","employees","hocwhat","hocwhatdetails","setHocwhatdetailsId","hocwhy","setHocwhyId","hocwhydetails","setHocwhydetailsId","hoccategory","hoclocation","setHoclocationId","updateHoc","addHoc","loginLevel","setLoginLevel","category","setCategory","whatstatus","setWhatstatus","what","whystatus","setWhystatus","why","useremail","setUserEmail","console","log","handleSubmit","control","defaultValues","handleSentEmail","data","date","emaildata","to_name","loginUser","to_email","loginEmail","message","cc_to","reporting_email","send","then","response","status","text","title","err","onSubmit","e","preventDefault","tableData","fields","emp","filter","r","name","raisedby","empid","id","email","loginUserId","prev","root","findings","field","onChange","value","fieldState","error","textField","required","risks","target","map","rec","description","positiveact","quality","unsafeact","what_details","why_details","discussion","action","isfollowup","isworkrelated","readOnly","hasresigned","sort","a","b","raisedon","shrink","company","location","button","rightIcon","theme","margin","spacing","leftIcon","marginRight","marginLeft","iconSmall","fontSize","padding","container","display","flexWrap","width"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Button, Icon, TextField, Paper, Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport * as emailjs from \"emailjs-com\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n//import { useEmployeesContext } from \"../context/employees_context\";\r\n//import { useExpensesContext } from \"../context/expenses_context\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport { useCustomToast } from \"../helpers/useCustomToast\";\r\nimport { useEmployees } from \"./employees/useEmployees\";\r\nimport { useHoc } from \"./hoc/useHoc\";\r\nimport { useAddHoc } from \"./hoc/useAddHoc\";\r\n//import { useDeleteHoc } from \"./hoc/useDeleteHoc\";\r\nimport { useUpdateHoc } from \"./hoc/useUpdateHoc\";\r\nimport { useHoccategory } from \"./hoccategory/useHoccategory\";\r\nimport { useHocwhat } from \"./hocwhat/useHocwhat\";\r\nimport { useHocwhatdetails } from \"./hocwhatdetails/useHocwhatdetails\";\r\nimport { useHocwhy } from \"./hocwhy/useHocwhy\";\r\nimport { useHocwhydetails } from \"./hocwhydetails/useHocwhydetails\";\r\nimport { useHoclocation } from \"./hoclocation/useHoclocation\";\r\n\r\nconst SERVICE_ID = process.env.REACT_APP_EMAILJS_SERVICEID;\r\nconst TEMPLATE_ID = \"template_1y8odlq\";\r\nconst USER_ID = process.env.REACT_APP_EMAILJS_USERID;\r\n\r\nconst HocForm = ({\r\n  formdata,\r\n  setFormdata,\r\n  handleDialogClose,\r\n  isEditId,\r\n  isNew,\r\n}) => {\r\n  const classes = useStyles();\r\n  const toast = useCustomToast();\r\n  //const { hoc, filter, setFilter, setHocId } = useHoc();\r\n  const { employees } = useEmployees();\r\n  const { hocwhat } = useHocwhat();\r\n  const { hocwhatdetails, setHocwhatdetailsId } = useHocwhatdetails();\r\n  const { hocwhy, setHocwhyId } = useHocwhy();\r\n  const { hocwhydetails, setHocwhydetailsId } = useHocwhydetails();\r\n  const { hoccategory } = useHoccategory();\r\n  const { hoclocation, setHoclocationId } = useHoclocation();\r\n  const updateHoc = useUpdateHoc();\r\n  const addHoc = useAddHoc();\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const [category, setCategory] = useState(\"\" || formdata.category);\r\n  const [whatstatus, setWhatstatus] = useState(\"\" || formdata.what);\r\n  const [whystatus, setWhystatus] = useState(\"\" || formdata.why);\r\n  const [useremail, setUserEmail] = useState(\"\");\r\n\r\n  console.log(\"formdata\", formdata);\r\n\r\n  const { handleSubmit, control } = useForm({\r\n    defaultValues: {\r\n      ...formdata,\r\n    },\r\n  });\r\n\r\n  const handleSentEmail = (data) => {\r\n    const { date } = data;\r\n    //console.log(\"expense form\", loginLevel);\r\n    var emaildata = {\r\n      to_name: loginLevel.loginUser,\r\n      to_email: loginLevel.loginEmail,\r\n      message: `Your expenses claim application dated on ${date} has been successfully submitted for approval`,\r\n      cc_to: loginLevel.reporting_email,\r\n    };\r\n\r\n    emailjs.send(SERVICE_ID, TEMPLATE_ID, emaildata, USER_ID).then(\r\n      function (response) {\r\n        console.log(response.status, response.text);\r\n        toast({\r\n          title: `Email has sent successfully to ${emaildata.to_email}!`,\r\n          status: \"success\",\r\n        });\r\n      },\r\n      function (err) {\r\n        console.log(err);\r\n        toast({\r\n          title: `Email has fail to send to ${emaildata.to_email}!`,\r\n          status: \"warning\",\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  const onSubmit = (data, e) => {\r\n    e.preventDefault();\r\n\r\n    if (isNew) {\r\n      const { tableData, ...fields } = data;\r\n      const emp = employees.filter((r) => r.name === data.raisedby);\r\n      console.log(\"emp\", emp);\r\n      addHoc({ ...fields, empid: emp[0].id, email: emp[0].email });\r\n    } else {\r\n      if (data.id) {\r\n        const { id, tableData, ...fields } = data;\r\n        updateHoc({ id, ...fields });\r\n      } else {\r\n        const { tableData, ...fields } = data;\r\n        addHoc({ ...fields, empid: loginLevel.loginUserId });\r\n        //handleSentEmail(data);\r\n      }\r\n    }\r\n\r\n    handleDialogClose();\r\n  };\r\n\r\n  useEffect(() => {\r\n    setHoclocationId(\"C\");\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (whatstatus === \"\") {\r\n      setHocwhatdetailsId((prev) => (prev = \"none\"));\r\n    } else {\r\n      setHocwhatdetailsId((prev) => (prev = whatstatus));\r\n    }\r\n  }, [whatstatus]);\r\n\r\n  useEffect(() => {\r\n    if (category === \"Positive Act\") {\r\n      setHocwhyId((prev) => (prev = \"none\"));\r\n      setHocwhydetailsId((prev) => (prev = \"none\"));\r\n    } else {\r\n      setHocwhyId((prev) => (prev = \"\"));\r\n      setHocwhydetailsId((prev) => (prev = whystatus));\r\n    }\r\n  }, [whystatus, category]);\r\n\r\n  return (\r\n    <div>\r\n      <Paper className={classes.root}>\r\n        <Typography variant=\"h5\" component=\"h3\">\r\n          HOC FORM\r\n        </Typography>\r\n        <Typography component=\"p\">HOC Form</Typography>\r\n\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <div>\r\n            <Controller\r\n              name=\"findings\"\r\n              control={control}\r\n              defaultValue={formdata.findings}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"What is/are the findings?\"\r\n                    id=\"margin-findings\"\r\n                    name=\"findings\"\r\n                    defaultValue={formdata.findings}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    multiline\r\n                    rows={2}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                  ></TextField>\r\n                );\r\n              }}\r\n              rules={{ required: \"Findings is required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"risks\"\r\n              control={control}\r\n              defaultValue={formdata.risks}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"What is/are the potential hazard(s)/risk(s)?\"\r\n                    id=\"margin-risks\"\r\n                    name=\"risks\"\r\n                    defaultValue={formdata.risks}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    multiline\r\n                    rows={2}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                  ></TextField>\r\n                );\r\n              }}\r\n              rules={{ required: \"Potential hazard/risk is required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"category\"\r\n              control={control}\r\n              defaultValue={formdata.category}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Type/Category\"\r\n                    //type=\"date\"\r\n                    id=\"margin-category\"\r\n                    name=\"formdata.category\"\r\n                    value={value}\r\n                    className={classes.textField}\r\n                    onChange={(e) => {\r\n                      onChange(e.target.value);\r\n                      setCategory((prev) => (prev = e.target.value));\r\n                    }}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    // InputLabelProps={{\r\n                    //   shrink: true,\r\n                    // }}\r\n                    select\r\n                  >\r\n                    <MenuItem value=\"\">None</MenuItem>\r\n                    {hoccategory &&\r\n                      hoccategory.map((rec) => {\r\n                        return (\r\n                          <MenuItem key={rec.id} value={rec.description}>\r\n                            {rec.description}\r\n                          </MenuItem>\r\n                        );\r\n                      })}\r\n                  </TextField>\r\n                );\r\n              }}\r\n              rules={{ required: \"Category is required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"what\"\r\n              control={control}\r\n              defaultValue={formdata.what}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"What\"\r\n                    id=\"margin-what\"\r\n                    name=\"what\"\r\n                    defaultValue={formdata.what}\r\n                    className={classes.textField}\r\n                    onChange={(e) => {\r\n                      onChange(e.target.value);\r\n                      setWhatstatus((prev) => (prev = e.target.value));\r\n                    }}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    select\r\n                  >\r\n                    <MenuItem value=\"\">None</MenuItem>\r\n                    {hocwhat &&\r\n                      hocwhat\r\n                        .filter((r) => {\r\n                          // if (category === \"Positive Act\") {\r\n                          //   return r.positiveact;\r\n                          // } else {\r\n                          //   return r.unsafeact;\r\n                          // }\r\n                          switch (category) {\r\n                            case \"Positive Act\":\r\n                              return r.positiveact;\r\n                            case \"Quality\":\r\n                              return r.quality;\r\n                            default:\r\n                              return r.unsafeact;\r\n                          }\r\n                        })\r\n                        .map((rec) => {\r\n                          return (\r\n                            <MenuItem key={rec.id} value={rec.description}>\r\n                              {rec.description}\r\n                            </MenuItem>\r\n                          );\r\n                        })}\r\n                  </TextField>\r\n                );\r\n              }}\r\n              //rules={{ required: \"What is required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"what_details\"\r\n              control={control}\r\n              defaultValue={formdata.what_details}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"What Details\"\r\n                    id=\"margin-whatdetails\"\r\n                    name=\"what_details\"\r\n                    defaultValue={formdata.what_details}\r\n                    value={value}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    select\r\n                  >\r\n                    <MenuItem value=\"\">None</MenuItem>\r\n                    {hocwhatdetails &&\r\n                      hocwhatdetails\r\n                        .filter((r) => {\r\n                          // if (category === \"Positive Act\") {\r\n                          //   return r.positiveact;\r\n                          // } else {\r\n                          //   return r.unsafeact;\r\n                          // }\r\n                          switch (category) {\r\n                            case \"Positive Act\":\r\n                              return r.positiveact;\r\n                            case \"Quality\":\r\n                              return r.quality;\r\n                            default:\r\n                              return r.unsafeact;\r\n                          }\r\n                        })\r\n                        .map((rec) => {\r\n                          return (\r\n                            <MenuItem key={rec.id} value={rec.description}>\r\n                              {rec.description}\r\n                            </MenuItem>\r\n                          );\r\n                        })}\r\n                  </TextField>\r\n                );\r\n              }}\r\n              //rules={{ required: \"What detail is required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"why\"\r\n              control={control}\r\n              defaultValue={formdata.why}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Why\"\r\n                    //type=\"number\"\r\n                    id=\"standard-why\"\r\n                    name=\"why\"\r\n                    defaultValue={formdata.why}\r\n                    className={classes.textField}\r\n                    //onChange={onChange}\r\n                    onChange={(e) => {\r\n                      onChange(e.target.value);\r\n                      setWhystatus((prev) => (prev = e.target.value));\r\n                    }}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    select\r\n                  >\r\n                    <MenuItem value=\"\">None</MenuItem>\r\n                    {hocwhy &&\r\n                      hocwhy\r\n                        .filter((r) => {\r\n                          switch (category) {\r\n                            case \"Positive Act\":\r\n                              return r.positiveact;\r\n                            case \"Quality\":\r\n                              return r.quality;\r\n                            default:\r\n                              return r.unsafeact;\r\n                          }\r\n                        })\r\n                        .map((rec) => {\r\n                          return (\r\n                            <MenuItem key={rec.id} value={rec.description}>\r\n                              {rec.description}\r\n                            </MenuItem>\r\n                          );\r\n                        })}\r\n                  </TextField>\r\n                );\r\n              }}\r\n              //rules={{ required: \"Why is required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"why_details\"\r\n              control={control}\r\n              defaultValue={formdata.why_details}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Why Details\"\r\n                    id=\"margin-whydetails\"\r\n                    name=\"why_details\"\r\n                    defaultValue={formdata.why_details}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    select\r\n                  >\r\n                    <MenuItem value=\"\">None</MenuItem>\r\n                    {hocwhydetails &&\r\n                      hocwhydetails\r\n                      \r\n                        .map((rec) => {\r\n                          return (\r\n                            <MenuItem key={rec.id} value={rec.description}>\r\n                              {rec.description}\r\n                            </MenuItem>\r\n                          );\r\n                        })}\r\n                  </TextField>\r\n                );\r\n              }}\r\n              //rules={{ required: \"Why detail is required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"discussion\"\r\n              control={control}\r\n              defaultValue={formdata.discussion}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Did a conversation take place?\"\r\n                    id=\"margin-discussion\"\r\n                    name=\"discussion\"\r\n                    defaultValue={formdata.discussion}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    select\r\n                  >\r\n                    <MenuItem value=\"Yes\">Yes</MenuItem>\r\n                    <MenuItem value=\"No\">No</MenuItem>\r\n                  </TextField>\r\n                );\r\n              }}\r\n              //rules={{ required: \"Status is required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"action\"\r\n              control={control}\r\n              defaultValue={formdata.action}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Was there an agreed remedial/corrective or preventive action? \"\r\n                    id=\"margin-action\"\r\n                    name=\"action\"\r\n                    defaultValue={formdata.action}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    multiline\r\n                    rows={2}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                  ></TextField>\r\n                );\r\n              }}\r\n              //rules={{ required: \"Status is required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"isfollowup\"\r\n              control={control}\r\n              defaultValue={formdata.isfollowup}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Follow-up required?\"\r\n                    id=\"standard-isfollowup\"\r\n                    name=\"isfollowup\"\r\n                    defaultValue={formdata.isfollowup}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    select\r\n                  >\r\n                    <MenuItem value=\"Yes\">Yes</MenuItem>\r\n                    <MenuItem value=\"No\">No</MenuItem>\r\n                  </TextField>\r\n                );\r\n              }}\r\n              //rules={{ required: \"IC No required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"isworkrelated\"\r\n              control={control}\r\n              defaultValue={formdata.isworkrelated}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Work Related?\"\r\n                    id=\"margin-workrelated\"\r\n                    name=\"isworkrelated\"\r\n                    defaultValue={formdata.isworkrelated}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    select\r\n                  >\r\n                    <MenuItem value=\"Yes\">Yes</MenuItem>\r\n                    <MenuItem value=\"No\">No</MenuItem>\r\n                  </TextField>\r\n                );\r\n              }}\r\n              //rules={{ required: \"Status is required\" }}\r\n            />\r\n          </div>\r\n          {formdata.raisedby ? (\r\n            <div>\r\n              <Controller\r\n                name=\"raisedby\"\r\n                control={control}\r\n                defaultValue={formdata.raisedby}\r\n                render={({\r\n                  field: { onChange, value },\r\n                  fieldState: { error },\r\n                }) => {\r\n                  return (\r\n                    <TextField\r\n                      label=\"Raised By\"\r\n                      id=\"margin-raisedby\"\r\n                      name=\"raisedby\"\r\n                      defaultValue={formdata.raisedby}\r\n                      className={classes.textField}\r\n                      onChange={onChange}\r\n                      error={!!error}\r\n                      helperText={error ? error.message : null}\r\n                      inputProps={{ readOnly: true }}\r\n                    ></TextField>\r\n                  );\r\n                }}\r\n                //rules={{ required: \"Status is required\" }}\r\n              />\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <Controller\r\n                name=\"raisedby\"\r\n                control={control}\r\n                defaultValue={formdata.raisedby}\r\n                render={({\r\n                  field: { onChange, value },\r\n                  fieldState: { error },\r\n                }) => {\r\n                  return (\r\n                    <TextField\r\n                      label=\"Raised By\"\r\n                      id=\"margin-raisedby\"\r\n                      name=\"raisedby\"\r\n                      defaultValue={formdata.raisedby}\r\n                      className={classes.textField}\r\n                      onChange={onChange}\r\n                      error={!!error}\r\n                      helperText={error ? error.message : null}\r\n                      //inputProps={{ readOnly: true }}\r\n                      select\r\n                    >\r\n                      <MenuItem value=\"\">None</MenuItem>\r\n                      {employees &&\r\n                        employees\r\n                          .filter((r) => !r.hasresigned)\r\n                          .sort((a, b) =>\r\n                            a.name > b.name ? 1 : b.name > a.name ? -1 : 0\r\n                          )\r\n                          .map((rec) => {\r\n                            return (\r\n                              <MenuItem key={rec.id} value={rec.name}>\r\n                                {rec.name}\r\n                              </MenuItem>\r\n                            );\r\n                          })}\r\n                    </TextField>\r\n                  );\r\n                }}\r\n                //rules={{ required: \"Status is required\" }}\r\n              />\r\n            </div>\r\n          )}\r\n          <div>\r\n            <Controller\r\n              name=\"raisedon\"\r\n              control={control}\r\n              defaultValue={formdata.raisedon}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Raised On\"\r\n                    id=\"margin-raisedon\"\r\n                    name=\"raisedon\"\r\n                    type=\"date\"\r\n                    defaultValue={formdata.raisedon}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                  ></TextField>\r\n                );\r\n              }}\r\n              //rules={{ required: \"Status is required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"company\"\r\n              control={control}\r\n              defaultValue={formdata.company}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Company\"\r\n                    id=\"margin-company\"\r\n                    name=\"company\"\r\n                    defaultValue={formdata.company}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    inputProps={{ readOnly: true }}\r\n                  ></TextField>\r\n                );\r\n              }}\r\n              //rules={{ required: \"Status is required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"location\"\r\n              control={control}\r\n              defaultValue={formdata.location}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Location\"\r\n                    id=\"margin-location\"\r\n                    name=\"location\"\r\n                    defaultValue={formdata.location}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    select\r\n                  >\r\n                    <MenuItem value=\"\">None</MenuItem>\r\n                    {hoclocation &&\r\n                      hoclocation.map((rec) => {\r\n                        return (\r\n                          <MenuItem key={rec.id} value={rec.name}>\r\n                            {rec.name}\r\n                          </MenuItem>\r\n                        );\r\n                      })}\r\n                  </TextField>\r\n                );\r\n              }}\r\n              //rules={{ required: \"Status is required\" }}\r\n            />\r\n          </div>\r\n          {/* <div>\r\n            <Controller\r\n              name=\"department\"\r\n              control={control}\r\n              defaultValue={formdata.department}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Department\"\r\n                    id=\"margin-department\"\r\n                    name=\"department\"\r\n                    defaultValue={formdata.department}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                  ></TextField>\r\n                );\r\n              }}\r\n              //rules={{ required: \"Status is required\" }}\r\n            />\r\n          </div> */}\r\n          <div>\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              //onClick={() => handleSubmit(onSubmit)()}\r\n            >\r\n              Save <Icon className={classes.rightIcon}>send</Icon>\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  leftIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  iconSmall: {\r\n    fontSize: 20,\r\n  },\r\n  root: {\r\n    padding: theme.spacing(3, 2),\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 500,\r\n  },\r\n}));\r\n\r\nexport default HocForm;\r\n"]},"metadata":{},"sourceType":"module"}
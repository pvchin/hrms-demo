{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useCallback } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { payrun_url } from \"../../utils/constants\";\nimport { filterByEmpId } from \"./utils\";\nimport axios from \"axios\";\nimport { queryKeys } from \"../react-query/constants\";\nasync function getPayrun(empid) {\n  //const { data } = await axios.get(`${leaves_url}?fv=${empid}`);\n  const {\n    data\n  } = await axios.get(`${payrun_url}`);\n  return data;\n}\nexport function usePayrun(empid) {\n  _s();\n  const [filter, setFilter] = useState(\"all\");\n  const [payrunId, setPayrunId] = useState(\"\");\n  const selectFn = useCallback(unfiltered => filterByEmpId(unfiltered, filter), [filter]);\n  const fallback = [];\n  const {\n    data: payrun = fallback\n  } = useQuery(\n  //[queryKeys.leaves, { leaveId }],\n  queryKeys.payrun, () => getPayrun(payrunId), {\n    select: filter !== \"all\" ? selectFn : undefined\n  });\n  return {\n    payrun,\n    filter,\n    setFilter,\n    setPayrunId\n  };\n}\n_s(usePayrun, \"s7OPbkYSDsSfpHcc8a2GfTEWMCc=\", false, function () {\n  return [useQuery];\n});","map":{"version":3,"names":["useState","useCallback","useQuery","payrun_url","filterByEmpId","axios","queryKeys","getPayrun","empid","data","get","usePayrun","filter","setFilter","payrunId","setPayrunId","selectFn","unfiltered","fallback","payrun","select","undefined"],"sources":["D:/react-myprojects/hrms-demo/src/components/payrun/usePayrun.js"],"sourcesContent":["import { useState, useCallback } from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport { payrun_url } from \"../../utils/constants\";\r\nimport { filterByEmpId } from \"./utils\";\r\n\r\nimport axios from \"axios\";\r\nimport { queryKeys } from \"../react-query/constants\";\r\n\r\nasync function getPayrun(empid) {\r\n  //const { data } = await axios.get(`${leaves_url}?fv=${empid}`);\r\n  const { data } = await axios.get(`${payrun_url}`);\r\n  return data;\r\n}\r\n\r\nexport function usePayrun(empid) {\r\n  const [filter, setFilter] = useState(\"all\");\r\n  const [payrunId, setPayrunId] = useState(\"\");\r\n\r\n  const selectFn = useCallback(\r\n    (unfiltered) => filterByEmpId(unfiltered, filter),\r\n    [filter]\r\n  );\r\n\r\n  const fallback = [];\r\n  const { data: payrun = fallback } = useQuery(\r\n    //[queryKeys.leaves, { leaveId }],\r\n    queryKeys.payrun,\r\n    () => getPayrun(payrunId),\r\n    {\r\n      select: filter !== \"all\" ? selectFn : undefined,\r\n    }\r\n  );\r\n\r\n  return { payrun, filter, setFilter, setPayrunId };\r\n}\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAC7C,SAASC,QAAQ,QAAQ,aAAa;AACtC,SAASC,UAAU,QAAQ,uBAAuB;AAClD,SAASC,aAAa,QAAQ,SAAS;AAEvC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,0BAA0B;AAEpD,eAAeC,SAAS,CAACC,KAAK,EAAE;EAC9B;EACA,MAAM;IAAEC;EAAK,CAAC,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAE,GAAEP,UAAW,EAAC,CAAC;EACjD,OAAOM,IAAI;AACb;AAEA,OAAO,SAASE,SAAS,CAACH,KAAK,EAAE;EAAA;EAC/B,MAAM,CAACI,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMgB,QAAQ,GAAGf,WAAW,CACzBgB,UAAU,IAAKb,aAAa,CAACa,UAAU,EAAEL,MAAM,CAAC,EACjD,CAACA,MAAM,CAAC,CACT;EAED,MAAMM,QAAQ,GAAG,EAAE;EACnB,MAAM;IAAET,IAAI,EAAEU,MAAM,GAAGD;EAAS,CAAC,GAAGhB,QAAQ;EAC1C;EACAI,SAAS,CAACa,MAAM,EAChB,MAAMZ,SAAS,CAACO,QAAQ,CAAC,EACzB;IACEM,MAAM,EAAER,MAAM,KAAK,KAAK,GAAGI,QAAQ,GAAGK;EACxC,CAAC,CACF;EAED,OAAO;IAAEF,MAAM;IAAEP,MAAM;IAAEC,SAAS;IAAEE;EAAY,CAAC;AACnD;AAAC,GApBeJ,SAAS;EAAA,QAUaT,QAAQ;AAAA"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-airtable\\\\src\\\\components\\\\LeaveFormAdmin.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport {\n//Button,\n//Icon,\nTextField, Paper, Typography, Divider } from \"@material-ui/core\";\nimport { useRecoilState } from \"recoil\";\nimport { loginLevelState } from \"./data/atomdata\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useLeavesContext } from \"../context/leaves_context\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport { useCustomToast } from \"../helpers/useCustomToast\";\n//import { useLeaves } from \"./leaves/useLeaves\";\nimport { useAddLeaves } from \"./leaves/useAddLeaves\";\n//import { useDeleteLeaves } from \"./leaves/useDeleteLeaves\";\nimport { useUpdateLeaves } from \"./leaves/useUpdateLeaves\";\n\n// const initial_state = {\n//   name: \"\",\n//   to_date: \"\",\n//   from_date: \"\",\n//   reason: \"\",\n//   status: \"Pending\",\n//   no_of_days: 0,\n//   leave_bal: 0,\n// };\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LeaveForm = _ref => {\n  _s();\n  let {\n    formdata,\n    setFormdata,\n    handleDialogClose\n  } = _ref;\n  const classes = useStyles();\n  const toast = useCustomToast();\n  //const { leaves, filter, setFilter, setLeaveId } = useLeaves();\n  const updateLeaves = useUpdateLeaves();\n  const addLeaves = useAddLeaves();\n  //const [state, setState] = useState(initial_state);\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\n  const {\n    handleSubmit,\n    control\n  } = useForm();\n  //const initialValues = Object.values(initial_state).join(\"\");\n  const {\n    isLeaveEditing,\n    editLeaveID\n  } = useLeavesContext();\n\n  //console.log(\"leave\", isLeaveEditing, formdata);\n  const onSubmit = data => {\n    console.log(\"leave\", data);\n    if (isLeaveEditing) {\n      updateLeaves({\n        id: editLeaveID,\n        ...data\n      });\n      toast({\n        title: \"Leave record being rejected!\",\n        status: \"success\"\n      });\n    } else {\n      addLeaves({\n        ...data,\n        empid: loginLevel.loginUserId,\n        reporting_email: loginLevel.reporting_email\n      });\n    }\n\n    //history.push(\"/leave\");\n    handleDialogClose();\n  };\n\n  // useEffect(() => {\n  //   setState(initial_state);\n  //   setState({ ...formdata });\n  //   setState({ ...formdata });\n  //   console.log(\"laeve form\",state)\n  // }, [initialValues]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        component: \"h3\",\n        children: \"LEAVE FORM\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        component: \"p\",\n        children: \"Leave Application\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"name\",\n            control: control,\n            defaultValue: formdata.name,\n            render: _ref2 => {\n              let {\n                field: {\n                  onChange,\n                  value\n                },\n                fieldState: {\n                  error\n                }\n              } = _ref2;\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Name\",\n                id: \"margin-normal\",\n                name: \"name\",\n                defaultValue: formdata.name\n                //value={value}\n                ,\n                className: classes.textField,\n                onChange: e => {\n                  console.log(e.target.value);\n                  onChange(e.target.value);\n                },\n                InputProps: {\n                  readOnly: true\n                },\n                error: !!error,\n                helperText: error ? error.message : null\n                //select\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 19\n              }, this);\n            }\n            // rules={{ required: \"Name required\" }}\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"from_date\",\n            control: control,\n            defaultValue: formdata.from_date,\n            render: _ref3 => {\n              let {\n                field: {\n                  onChange,\n                  value\n                },\n                fieldState: {\n                  error\n                }\n              } = _ref3;\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"From Date\",\n                type: \"date\",\n                id: \"margin-normal\",\n                name: \"from_date\",\n                defaultValue: formdata.from_date,\n                className: classes.textField,\n                onChange: onChange,\n                error: !!error,\n                helperText: error ? error.message : null,\n                InputLabelProps: {\n                  shrink: true\n                },\n                InputProps: {\n                  readOnly: true\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 19\n              }, this);\n            },\n            rules: {\n              required: \"From Date is required\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"to_date\",\n            control: control,\n            defaultValue: formdata.to_date,\n            render: _ref4 => {\n              let {\n                field: {\n                  onChange,\n                  value\n                },\n                fieldState: {\n                  error\n                }\n              } = _ref4;\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"To Date\",\n                id: \"margin-normal\",\n                type: \"date\",\n                name: \"to_date\",\n                defaultValue: formdata.to_date,\n                className: classes.textField,\n                onChange: onChange,\n                error: !!error,\n                helperText: error ? error.message : null,\n                InputLabelProps: {\n                  shrink: true\n                },\n                InputProps: {\n                  readOnly: true\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 19\n              }, this);\n            },\n            rules: {\n              required: \"To Date is required\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"leave_bal\",\n            control: control,\n            defaultValue: formdata.leave_bal,\n            render: _ref5 => {\n              let {\n                field: {\n                  onChange,\n                  value\n                },\n                fieldState: {\n                  error\n                }\n              } = _ref5;\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                disable: true,\n                label: \"Leave Balance\",\n                type: \"number\",\n                id: \"standard-number\",\n                name: \"leave_bal\",\n                defaultValue: formdata.leave_bal,\n                className: classes.textField\n                //onChange={onChange}\n                ,\n                onChange: e => {\n                  onChange(parseInt(e.target.value, 10));\n                },\n                error: !!error,\n                helperText: error ? error.message : null,\n                InputProps: {\n                  readOnly: true\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 19\n              }, this);\n            }\n            //rules={{ required: \"IC No required\" }}\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"no_of_days\",\n            control: control,\n            defaultValue: formdata.no_of_days,\n            render: _ref6 => {\n              let {\n                field: {\n                  onChange,\n                  value\n                },\n                fieldState: {\n                  error\n                }\n              } = _ref6;\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"No Of Days\",\n                type: \"number\",\n                id: \"standard-number\",\n                name: \"no_of_days\",\n                defaultValue: formdata.no_of_days,\n                className: classes.textField\n                //onChange={onChange}\n                ,\n                onChange: e => {\n                  onChange(parseInt(e.target.value, 10));\n                },\n                error: !!error,\n                helperText: error ? error.message : null,\n                InputProps: {\n                  readOnly: true\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 19\n              }, this);\n            }\n            //rules={{ required: \"IC No required\" }}\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"reason\",\n            control: control,\n            defaultValue: formdata.reason,\n            render: _ref7 => {\n              let {\n                field: {\n                  onChange,\n                  value\n                },\n                fieldState: {\n                  error\n                }\n              } = _ref7;\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Reason\",\n                id: \"margin-normal\",\n                name: \"reason\",\n                defaultValue: formdata.reason,\n                className: classes.textField,\n                onChange: onChange,\n                error: !!error,\n                helperText: error ? error.message : null,\n                InputProps: {\n                  readOnly: true\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 19\n              }, this);\n            }\n            // rules={{ required: \"Reason is required\" }}\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"status\",\n            control: control,\n            defaultValue: formdata.status,\n            render: _ref8 => {\n              let {\n                field: {\n                  onChange,\n                  value\n                },\n                fieldState: {\n                  error\n                }\n              } = _ref8;\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Status\",\n                id: \"margin-normal\",\n                name: \"status\",\n                defaultValue: formdata.status,\n                className: classes.textField,\n                onChange: onChange,\n                error: !!error,\n                helperText: error ? error.message : null,\n                InputProps: {\n                  readOnly: true\n                }\n                // select\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 19\n              }, this);\n            }\n            //rules={{ required: \"Status is required\" }}\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(LeaveForm, \"ndaIZRyeMnnEiV7mIZgz2zvn14A=\", false, function () {\n  return [useStyles, useCustomToast, useUpdateLeaves, useAddLeaves, useRecoilState, useForm, useLeavesContext];\n});\n_c = LeaveForm;\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(1)\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1)\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1)\n  },\n  iconSmall: {\n    fontSize: 20\n  },\n  root: {\n    padding: theme.spacing(3, 2)\n  },\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 400\n  }\n}));\nexport default LeaveForm;\nvar _c;\n$RefreshReg$(_c, \"LeaveForm\");","map":{"version":3,"names":["React","useState","TextField","Paper","Typography","Divider","useRecoilState","loginLevelState","makeStyles","useLeavesContext","Controller","useForm","useCustomToast","useAddLeaves","useUpdateLeaves","LeaveForm","formdata","setFormdata","handleDialogClose","classes","useStyles","toast","updateLeaves","addLeaves","loginLevel","setLoginLevel","handleSubmit","control","isLeaveEditing","editLeaveID","onSubmit","data","console","log","id","title","status","empid","loginUserId","reporting_email","root","name","field","onChange","value","fieldState","error","textField","e","target","readOnly","message","from_date","shrink","required","to_date","leave_bal","parseInt","no_of_days","reason","theme","button","margin","spacing","leftIcon","marginRight","rightIcon","marginLeft","iconSmall","fontSize","padding","container","display","flexWrap","width"],"sources":["D:/react-myprojects/hrms-airtable/src/components/LeaveFormAdmin.js"],"sourcesContent":["import React, { useState} from \"react\";\r\nimport {\r\n  //Button,\r\n  //Icon,\r\n  TextField,\r\n  Paper,\r\n  Typography,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useLeavesContext } from \"../context/leaves_context\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport { useCustomToast } from \"../helpers/useCustomToast\";\r\n//import { useLeaves } from \"./leaves/useLeaves\";\r\nimport { useAddLeaves } from \"./leaves/useAddLeaves\";\r\n//import { useDeleteLeaves } from \"./leaves/useDeleteLeaves\";\r\nimport { useUpdateLeaves } from \"./leaves/useUpdateLeaves\";\r\n\r\n// const initial_state = {\r\n//   name: \"\",\r\n//   to_date: \"\",\r\n//   from_date: \"\",\r\n//   reason: \"\",\r\n//   status: \"Pending\",\r\n//   no_of_days: 0,\r\n//   leave_bal: 0,\r\n// };\r\n\r\nconst LeaveForm = ({ formdata, setFormdata, handleDialogClose }) => {\r\n  const classes = useStyles();\r\n  const toast = useCustomToast()\r\n  //const { leaves, filter, setFilter, setLeaveId } = useLeaves();\r\n  const updateLeaves = useUpdateLeaves();\r\n  const addLeaves = useAddLeaves();\r\n  //const [state, setState] = useState(initial_state);\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const { handleSubmit, control } = useForm();\r\n  //const initialValues = Object.values(initial_state).join(\"\");\r\n  const { isLeaveEditing, editLeaveID } = useLeavesContext();\r\n\r\n  //console.log(\"leave\", isLeaveEditing, formdata);\r\n  const onSubmit = (data) => {\r\n    console.log(\"leave\", data);\r\n    if (isLeaveEditing) {\r\n      updateLeaves({ id: editLeaveID, ...data });\r\n       toast({\r\n         title: \"Leave record being rejected!\",\r\n         status: \"success\",\r\n       });\r\n    } else {\r\n      addLeaves({\r\n        ...data,\r\n        empid: loginLevel.loginUserId,\r\n        reporting_email: loginLevel.reporting_email,\r\n      });\r\n    }\r\n\r\n    //history.push(\"/leave\");\r\n    handleDialogClose();\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   setState(initial_state);\r\n  //   setState({ ...formdata });\r\n  //   setState({ ...formdata });\r\n  //   console.log(\"laeve form\",state)\r\n  // }, [initialValues]);\r\n\r\n  return (\r\n    <div>\r\n      <Paper className={classes.root}>\r\n        <Typography variant=\"h5\" component=\"h3\">\r\n          LEAVE FORM\r\n        </Typography>\r\n        <Typography component=\"p\">Leave Application</Typography>\r\n        <Divider />\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <div>\r\n            <Controller\r\n              name=\"name\"\r\n              control={control}\r\n              defaultValue={formdata.name}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Name\"\r\n                    id=\"margin-normal\"\r\n                    name=\"name\"\r\n                    defaultValue={formdata.name}\r\n                    //value={value}\r\n                    className={classes.textField}\r\n                    onChange={(e) => {\r\n                      console.log(e.target.value);\r\n                      onChange(e.target.value);\r\n                    }}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    //select\r\n                  >\r\n                    {/* {employees.map((e) => {\r\n                      return (\r\n                        <MenuItem key={e.name} value={e.name}>\r\n                          {e.name}\r\n                        </MenuItem>\r\n                      );\r\n                    })} */}\r\n                  </TextField>\r\n                );\r\n              }}\r\n              // rules={{ required: \"Name required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"from_date\"\r\n              control={control}\r\n              defaultValue={formdata.from_date}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"From Date\"\r\n                    type=\"date\"\r\n                    id=\"margin-normal\"\r\n                    name=\"from_date\"\r\n                    defaultValue={formdata.from_date}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                  />\r\n                );\r\n              }}\r\n              rules={{ required: \"From Date is required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"to_date\"\r\n              control={control}\r\n              defaultValue={formdata.to_date}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"To Date\"\r\n                    id=\"margin-normal\"\r\n                    type=\"date\"\r\n                    name=\"to_date\"\r\n                    defaultValue={formdata.to_date}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                  />\r\n                );\r\n              }}\r\n              rules={{ required: \"To Date is required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"leave_bal\"\r\n              control={control}\r\n              defaultValue={formdata.leave_bal}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    disable\r\n                    label=\"Leave Balance\"\r\n                    type=\"number\"\r\n                    id=\"standard-number\"\r\n                    name=\"leave_bal\"\r\n                    defaultValue={formdata.leave_bal}\r\n                    className={classes.textField}\r\n                    //onChange={onChange}\r\n                    onChange={(e) => {\r\n                      onChange(parseInt(e.target.value, 10));\r\n                    }}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                  />\r\n                );\r\n              }}\r\n              //rules={{ required: \"IC No required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"no_of_days\"\r\n              control={control}\r\n              defaultValue={formdata.no_of_days}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"No Of Days\"\r\n                    type=\"number\"\r\n                    id=\"standard-number\"\r\n                    name=\"no_of_days\"\r\n                    defaultValue={formdata.no_of_days}\r\n                    className={classes.textField}\r\n                    //onChange={onChange}\r\n                    onChange={(e) => {\r\n                      onChange(parseInt(e.target.value, 10));\r\n                    }}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                     InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                  />\r\n                 \r\n                );\r\n              }}\r\n              //rules={{ required: \"IC No required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"reason\"\r\n              control={control}\r\n              defaultValue={formdata.reason}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Reason\"\r\n                    id=\"margin-normal\"\r\n                    name=\"reason\"\r\n                    defaultValue={formdata.reason}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                     InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                  />\r\n                  \r\n                );\r\n              }}\r\n              // rules={{ required: \"Reason is required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"status\"\r\n              control={control}\r\n              defaultValue={formdata.status}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Status\"\r\n                    id=\"margin-normal\"\r\n                    name=\"status\"\r\n                    defaultValue={formdata.status}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                    // select\r\n                  >\r\n                    {/* <MenuItem value=\"Pending\">Pending</MenuItem>\r\n                    <MenuItem value=\"Cancel\">Cancel</MenuItem>\r\n                    <MenuItem value=\"Approve\">Approve</MenuItem>\r\n                    <MenuItem value=\"Reject\">Reject</MenuItem> */}\r\n                  </TextField>\r\n                );\r\n              }}\r\n              //rules={{ required: \"Status is required\" }}\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            {/* <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              onClick={handleSubmit(onSubmit)}\r\n            >\r\n              Submit <Icon className={classes.rightIcon}>send</Icon>\r\n            </Button> */}\r\n          </div>\r\n        </form>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  leftIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  iconSmall: {\r\n    fontSize: 20,\r\n  },\r\n  root: {\r\n    padding: theme.spacing(3, 2),\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 400,\r\n  },\r\n}));\r\n\r\nexport default LeaveForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
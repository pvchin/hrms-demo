{"ast":null,"code":"'use strict';\n\nvar DataReader = require('./dataReader');\nvar utils = require('./utils');\nfunction StringReader(data, optimizedBinaryString) {\n  this.data = data;\n  if (!optimizedBinaryString) {\n    this.data = utils.string2binary(this.data);\n  }\n  this.length = this.data.length;\n  this.index = 0;\n}\nStringReader.prototype = new DataReader();\n/**\n * @see DataReader.byteAt\n */\nStringReader.prototype.byteAt = function (i) {\n  return this.data.charCodeAt(i);\n};\n/**\n * @see DataReader.lastIndexOfSignature\n */\nStringReader.prototype.lastIndexOfSignature = function (sig) {\n  return this.data.lastIndexOf(sig);\n};\n/**\n * @see DataReader.readData\n */\nStringReader.prototype.readData = function (size) {\n  this.checkOffset(size);\n  // this will work because the constructor applied the \"& 0xff\" mask.\n  var result = this.data.slice(this.index, this.index + size);\n  this.index += size;\n  return result;\n};\nmodule.exports = StringReader;","map":{"version":3,"names":["DataReader","require","utils","StringReader","data","optimizedBinaryString","string2binary","length","index","prototype","byteAt","i","charCodeAt","lastIndexOfSignature","sig","lastIndexOf","readData","size","checkOffset","result","slice","module","exports"],"sources":["D:/react-myprojects/hrms-demo/node_modules/jszip/lib/stringReader.js"],"sourcesContent":["'use strict';\nvar DataReader = require('./dataReader');\nvar utils = require('./utils');\n\nfunction StringReader(data, optimizedBinaryString) {\n    this.data = data;\n    if (!optimizedBinaryString) {\n        this.data = utils.string2binary(this.data);\n    }\n    this.length = this.data.length;\n    this.index = 0;\n}\nStringReader.prototype = new DataReader();\n/**\n * @see DataReader.byteAt\n */\nStringReader.prototype.byteAt = function(i) {\n    return this.data.charCodeAt(i);\n};\n/**\n * @see DataReader.lastIndexOfSignature\n */\nStringReader.prototype.lastIndexOfSignature = function(sig) {\n    return this.data.lastIndexOf(sig);\n};\n/**\n * @see DataReader.readData\n */\nStringReader.prototype.readData = function(size) {\n    this.checkOffset(size);\n    // this will work because the constructor applied the \"& 0xff\" mask.\n    var result = this.data.slice(this.index, this.index + size);\n    this.index += size;\n    return result;\n};\nmodule.exports = StringReader;\n"],"mappings":"AAAA,YAAY;;AACZ,IAAIA,UAAU,GAAGC,OAAO,CAAC,cAAc,CAAC;AACxC,IAAIC,KAAK,GAAGD,OAAO,CAAC,SAAS,CAAC;AAE9B,SAASE,YAAY,CAACC,IAAI,EAAEC,qBAAqB,EAAE;EAC/C,IAAI,CAACD,IAAI,GAAGA,IAAI;EAChB,IAAI,CAACC,qBAAqB,EAAE;IACxB,IAAI,CAACD,IAAI,GAAGF,KAAK,CAACI,aAAa,CAAC,IAAI,CAACF,IAAI,CAAC;EAC9C;EACA,IAAI,CAACG,MAAM,GAAG,IAAI,CAACH,IAAI,CAACG,MAAM;EAC9B,IAAI,CAACC,KAAK,GAAG,CAAC;AAClB;AACAL,YAAY,CAACM,SAAS,GAAG,IAAIT,UAAU,EAAE;AACzC;AACA;AACA;AACAG,YAAY,CAACM,SAAS,CAACC,MAAM,GAAG,UAASC,CAAC,EAAE;EACxC,OAAO,IAAI,CAACP,IAAI,CAACQ,UAAU,CAACD,CAAC,CAAC;AAClC,CAAC;AACD;AACA;AACA;AACAR,YAAY,CAACM,SAAS,CAACI,oBAAoB,GAAG,UAASC,GAAG,EAAE;EACxD,OAAO,IAAI,CAACV,IAAI,CAACW,WAAW,CAACD,GAAG,CAAC;AACrC,CAAC;AACD;AACA;AACA;AACAX,YAAY,CAACM,SAAS,CAACO,QAAQ,GAAG,UAASC,IAAI,EAAE;EAC7C,IAAI,CAACC,WAAW,CAACD,IAAI,CAAC;EACtB;EACA,IAAIE,MAAM,GAAG,IAAI,CAACf,IAAI,CAACgB,KAAK,CAAC,IAAI,CAACZ,KAAK,EAAE,IAAI,CAACA,KAAK,GAAGS,IAAI,CAAC;EAC3D,IAAI,CAACT,KAAK,IAAIS,IAAI;EAClB,OAAOE,MAAM;AACjB,CAAC;AACDE,MAAM,CAACC,OAAO,GAAGnB,YAAY"},"metadata":{},"sourceType":"script"}
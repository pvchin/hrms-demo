{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-demo\\\\src\\\\components\\\\HocTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport MaterialTable, { MTableToolbar } from \"material-table\";\nimport { format, getYear, getMonth } from \"date-fns\";\nimport * as moment from \"moment\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useRecoilState } from \"recoil\";\nimport { Box, Button, Container, Divider //Grid,\n, Heading, HStack, Modal, ModalOverlay, ModalContent //ModalHeader,\n//ModalFooter,\n, ModalBody, ModalCloseButton, Select, SimpleGrid, Tabs, TabList, TabPanels, Tab, TabPanel //Text,\n, useDisclosure } from \"@chakra-ui/react\";\nimport { loginLevelState } from \"./data/atomdata\";\nimport AddIcon from \"@material-ui/icons/Add\"; //import EditIcon from \"@material-ui/icons/Edit\";\n\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport CheckCircleOutlineOutlinedIcon from \"@material-ui/icons/CheckCircleOutlineOutlined\"; //import { useCustomToast } from \"../helpers/useCustomToast\";\n//import { useExpensesContext } from \"../context/expenses_context\";\n\nimport HocForm from \"./HocForm\"; //import { useEmployeesContext } from \"../context/employees_context\";\n\nimport { CustomDialog } from \"../helpers/CustomDialog\";\nimport { AlertDialogBox } from \"../helpers/AlertDialogBox\";\nimport { useHoc } from \"./hoc/useHoc\"; //import { useAddHoc } from \"./hoc/useAddHoc\";\n\nimport { useDeleteHoc } from \"./hoc/useDeleteHoc\"; //import { useUpdateHoc } from \"./hoc/useUpdateHoc\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  title: \"Findings\",\n  field: \"findings\",\n  editable: \"never\",\n  cellStyle: {\n    minWidth: 200,\n    maxWidth: 200\n  }\n}, {\n  title: \"Risks\",\n  field: \"risks\",\n  editable: \"never\",\n  cellStyle: {\n    minWidth: 150,\n    maxWidth: 150\n  }\n}, {\n  title: \"Type/Category\",\n  field: \"category\",\n  editable: \"never\"\n}, {\n  title: \"What\",\n  field: \"what\",\n  editable: \"never\"\n}, {\n  title: \"What Details\",\n  field: \"what_details\",\n  editable: \"never\",\n  cellStyle: {\n    minWidth: 150,\n    maxWidth: 150\n  }\n}, {\n  title: \"Why\",\n  field: \"why\",\n  editable: \"never\"\n}, {\n  title: \"Why Details\",\n  field: \"why_details\",\n  editable: \"never\"\n}, {\n  title: \"Discussion\",\n  field: \"discussion\",\n  editable: \"never\"\n}, {\n  title: \"Action\",\n  field: \"action\",\n  editable: \"never\",\n  cellStyle: {\n    minWidth: 200,\n    maxWidth: 200\n  }\n}, {\n  title: \"Follow-up required?\",\n  field: \"isfollowup\",\n  editable: \"never\"\n}, {\n  title: \"Work Related?\",\n  field: \"isworkrelated\",\n  editable: \"never\"\n}, {\n  title: \"Raised By\",\n  field: \"raisedby\",\n  editable: \"never\"\n}, {\n  title: \"Raised On\",\n  field: \"raisedon\",\n  type: \"date\",\n  dateSetting: {\n    locale: \"en-GB\"\n  },\n  editable: \"never\"\n}, {\n  title: \"Company\",\n  field: \"company\",\n  editable: \"never\"\n}, {\n  title: \"Location\",\n  field: \"location\",\n  editable: \"never\"\n} // {\n//   title: \"Department\",\n//   field: \"department\",\n//   editable: \"never\",\n// },\n];\nconst initial_form = {\n  findings: \"\",\n  category: \"\",\n  what: \"\",\n  what_details: \"\",\n  why: \"\",\n  why_details: \"\",\n  discussion: \"No\",\n  action: \"\",\n  isfollowup: \"No\",\n  isworkrelated: \"No\",\n  raisedby: \"\",\n  email: \"\",\n  raisedon: null,\n  company: \"APPSMITH SUTERA\",\n  location: \" \",\n  department: \"\"\n};\nexport default function HocTable({\n  year,\n  month\n}) {\n  _s();\n\n  const classes = useStyles(); //const toast = useCustomToast();\n  //const [isLoad, setIsLoad] = useState(false);\n\n  const {\n    hoc,\n    setHocId,\n    setYearId\n  } = useHoc(); //const updateHoc = useUpdateHoc();\n  //const addHoc = useAddHoc();\n\n  const deleteHoc = useDeleteHoc();\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n  const [isAlertOpen, setIsAlertOpen] = useState(false); //const [hocdata, setHocdata] = useState([]);\n  //const [alertSuccess, setAlertSuccess] = useState(false);\n\n  const [formdata, setFormdata] = useState(initial_form);\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\n  const [isEditId, setIsEditId] = useState(\"\");\n  console.log(\"hoctable\", year, month);\n  useEffect(() => {\n    //console.log(\"loginid\", loginLevel.loginUserId)\n    setHocId(loginLevel.loginUserId);\n    setYearId(year);\n  }, []);\n\n  const add_Hoc = async data => {\n    //const { id } = data;\n    let today = format(new Date(), \"yyyy-MM-dd\"); //console.log(\"today\", today);\n\n    setIsEditId(prev => prev = \"\");\n    setFormdata(prev => prev = { ...data,\n      raisedby: loginLevel.loginUser,\n      email: loginLevel.loginEmail,\n      company: \"APPSMITHS SUTERA\",\n      raisedon: today\n    }); //setFormdata(initial_form);\n    //setIsHocEditingOff();\n\n    handleDialogOpen(); // history.push(\"/singleexpense\");\n  };\n\n  const update_Hoc = async data => {\n    console.log(\"hoc\", data);\n    const {\n      id\n    } = data;\n    setIsEditId(prev => prev = id);\n    setFormdata(prev => prev = { ...data\n    }); //setFormdata({ ...data });\n    //setHocId(prev => prev = id)\n    //setEditHocID(id);\n    //setIsExpenseEditingOn();\n\n    handleDialogOpen(); // history.push(\"/singleexpense\");\n  };\n\n  const delete_Hoc = data => {\n    const {\n      id\n    } = data;\n    setIsEditId(prev => prev = id);\n    handleAlertOpen(); // deleteExpense(id);\n    // loadExpenses();\n  };\n\n  const handleDialogOpen = () => {\n    setIsDialogOpen(true);\n  };\n\n  const handleDialogClose = () => {\n    setIsDialogOpen(false);\n  };\n\n  const handleAlertOpen = () => {\n    setIsAlertOpen(true);\n  };\n\n  const handleAlertClose = () => {\n    setIsAlertOpen(false);\n  };\n\n  const handleOnDeleteConfirm = () => {\n    //const id = isEditId;\n    deleteHoc(isEditId);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: \"100%\",\n        paddingTop: \"5px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(MaterialTable, {\n        columns: columns,\n        data: hoc.filter(r => // getYear(new Date(r.raisedon)) === year &&\n        getMonth(new Date(r.raisedon)) === month).sort((a, b) => a.raisedon < b.raisedon ? 1 : b.raisedon < a.raisedon ? -1 : 0),\n        title: \"HOC Tables\",\n        icons: {\n          Add: props => /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 29\n          }, this),\n          Edit: props => /*#__PURE__*/_jsxDEV(CheckCircleOutlineOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 30\n          }, this),\n          Delete: props => /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 32\n          }, this),\n          Clear: props => /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 31\n          }, this),\n          Check: props => /*#__PURE__*/_jsxDEV(CheckIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 31\n          }, this),\n          Search: props => /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 32\n          }, this),\n          ResetSearch: props => /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 37\n          }, this)\n        } // editable={{\n        //   onRowUpdate: (newData, oldData) =>\n        //     new Promise((resolve, reject) => {\n        //       setTimeout(() => {\n        //         const dataUpdate = [...expensesdata];\n        //         const index = oldData.tableData.id;\n        //         dataUpdate[index] = newData;\n        //         setExpensesdata([...dataUpdate]);\n        //         //approve_Expense(newData);\n        //         resolve();\n        //       }, 1000);\n        //     }),\n        // }}\n        ,\n        actions: [rowData => ({\n          icon: \"edit\",\n          tooltip: \"Edit Record\",\n          onClick: (event, rowData) => {\n            update_Hoc(rowData);\n          }\n        }), rowData => ({\n          icon: \"delete\",\n          tooltip: \"Delete Record\",\n          onClick: (event, rowData) => {\n            delete_Hoc(rowData);\n          }\n        }), {\n          icon: \"add\",\n          tooltip: \"Add Record\",\n          isFreeAction: true,\n          onClick: (event, rowData) => {\n            add_Hoc(rowData);\n          }\n        }],\n        options: {\n          filtering: true,\n          pageSize: 10,\n          headerStyle: {\n            backgroundColor: \"orange\",\n            color: \"#FFF\"\n          },\n          showTitle: true\n        },\n        components: {\n          Toolbar: props => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(MTableToolbar, { ...props\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 15\n          }, this)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CustomDialog, {\n        isOpen: isDialogOpen,\n        handleClose: handleDialogClose,\n        title: \"\",\n        showButton: true,\n        isFullscreen: false,\n        isFullwidth: false,\n        isEditId: isEditId,\n        children: /*#__PURE__*/_jsxDEV(HocForm, {\n          formdata: formdata,\n          setFormdata: setFormdata,\n          handleDialogClose: handleDialogClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AlertDialogBox, {\n        onClose: handleAlertClose,\n        onConfirm: handleOnDeleteConfirm,\n        isOpen: isAlertOpen,\n        title: \"Delete HOC\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Are you sure you want to delete ?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 260,\n    columnNumber: 5\n  }, this);\n}\n\n_s(HocTable, \"KUA37RF4xDpY2SJ8nWoIP91NO28=\", false, function () {\n  return [useStyles, useHoc, useDeleteHoc, useRecoilState];\n});\n\n_c = HocTable;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: 0\n  }\n}));\n\nvar _c;\n\n$RefreshReg$(_c, \"HocTable\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-demo/src/components/HocTable.js"],"names":["React","useState","useEffect","MaterialTable","MTableToolbar","format","getYear","getMonth","moment","makeStyles","useRecoilState","Box","Button","Container","Divider","Heading","HStack","Modal","ModalOverlay","ModalContent","ModalBody","ModalCloseButton","Select","SimpleGrid","Tabs","TabList","TabPanels","Tab","TabPanel","useDisclosure","loginLevelState","AddIcon","DeleteIcon","CheckIcon","SearchIcon","CheckCircleOutlineOutlinedIcon","HocForm","CustomDialog","AlertDialogBox","useHoc","useDeleteHoc","columns","title","field","editable","cellStyle","minWidth","maxWidth","type","dateSetting","locale","initial_form","findings","category","what","what_details","why","why_details","discussion","action","isfollowup","isworkrelated","raisedby","email","raisedon","company","location","department","HocTable","year","month","classes","useStyles","hoc","setHocId","setYearId","deleteHoc","isDialogOpen","setIsDialogOpen","isAlertOpen","setIsAlertOpen","formdata","setFormdata","loginLevel","setLoginLevel","isEditId","setIsEditId","console","log","loginUserId","add_Hoc","data","today","Date","prev","loginUser","loginEmail","handleDialogOpen","update_Hoc","id","delete_Hoc","handleAlertOpen","handleDialogClose","handleAlertClose","handleOnDeleteConfirm","root","paddingTop","filter","r","sort","a","b","Add","props","Edit","Delete","Clear","Check","Search","ResetSearch","rowData","icon","tooltip","onClick","event","isFreeAction","filtering","pageSize","headerStyle","backgroundColor","color","showTitle","Toolbar","theme","padding"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { format, getYear, getMonth } from \"date-fns\";\r\nimport * as moment from \"moment\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  Divider,\r\n  //Grid,\r\n  Heading,\r\n  HStack,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  //ModalHeader,\r\n  //ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  Select,\r\n  SimpleGrid,\r\n  Tabs,\r\n  TabList,\r\n  TabPanels,\r\n  Tab,\r\n  TabPanel,\r\n  //Text,\r\n  useDisclosure,\r\n} from \"@chakra-ui/react\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\n//import EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport CheckCircleOutlineOutlinedIcon from \"@material-ui/icons/CheckCircleOutlineOutlined\";\r\n//import { useCustomToast } from \"../helpers/useCustomToast\";\r\n//import { useExpensesContext } from \"../context/expenses_context\";\r\nimport HocForm from \"./HocForm\";\r\n//import { useEmployeesContext } from \"../context/employees_context\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { AlertDialogBox } from \"../helpers/AlertDialogBox\";\r\nimport { useHoc } from \"./hoc/useHoc\";\r\n//import { useAddHoc } from \"./hoc/useAddHoc\";\r\nimport { useDeleteHoc } from \"./hoc/useDeleteHoc\";\r\n//import { useUpdateHoc } from \"./hoc/useUpdateHoc\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Findings\",\r\n    field: \"findings\",\r\n    editable: \"never\",\r\n    cellStyle: {\r\n      minWidth: 200,\r\n      maxWidth: 200,\r\n    },\r\n  },\r\n  {\r\n    title: \"Risks\",\r\n    field: \"risks\",\r\n    editable: \"never\",\r\n    cellStyle: {\r\n      minWidth: 150,\r\n      maxWidth: 150,\r\n    },\r\n  },\r\n  {\r\n    title: \"Type/Category\",\r\n    field: \"category\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"What\",\r\n    field: \"what\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"What Details\",\r\n    field: \"what_details\",\r\n    editable: \"never\",\r\n    cellStyle: {\r\n      minWidth: 150,\r\n      maxWidth: 150,\r\n    },\r\n  },\r\n  {\r\n    title: \"Why\",\r\n    field: \"why\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Why Details\",\r\n    field: \"why_details\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Discussion\",\r\n    field: \"discussion\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Action\",\r\n    field: \"action\",\r\n    editable: \"never\",\r\n    cellStyle: {\r\n      minWidth: 200,\r\n      maxWidth: 200,\r\n    },\r\n  },\r\n  {\r\n    title: \"Follow-up required?\",\r\n    field: \"isfollowup\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Work Related?\",\r\n    field: \"isworkrelated\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Raised By\",\r\n    field: \"raisedby\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Raised On\",\r\n    field: \"raisedon\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Company\",\r\n    field: \"company\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Location\",\r\n    field: \"location\",\r\n    editable: \"never\",\r\n  },\r\n  // {\r\n  //   title: \"Department\",\r\n  //   field: \"department\",\r\n  //   editable: \"never\",\r\n  // },\r\n];\r\n\r\nconst initial_form = {\r\n  findings: \"\",\r\n  category: \"\",\r\n  what: \"\",\r\n  what_details: \"\",\r\n  why: \"\",\r\n  why_details: \"\",\r\n  discussion: \"No\",\r\n  action: \"\",\r\n  isfollowup: \"No\",\r\n  isworkrelated: \"No\",\r\n  raisedby: \"\",\r\n  email: \"\",\r\n  raisedon: null,\r\n  company: \"APPSMITH SUTERA\",\r\n  location: \" \",\r\n  department: \"\",\r\n};\r\n\r\nexport default function HocTable({ year, month }) {\r\n  const classes = useStyles();\r\n  //const toast = useCustomToast();\r\n  //const [isLoad, setIsLoad] = useState(false);\r\n  const { hoc, setHocId, setYearId } = useHoc();\r\n  //const updateHoc = useUpdateHoc();\r\n  //const addHoc = useAddHoc();\r\n  const deleteHoc = useDeleteHoc();\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\r\n  //const [hocdata, setHocdata] = useState([]);\r\n  //const [alertSuccess, setAlertSuccess] = useState(false);\r\n  const [formdata, setFormdata] = useState(initial_form);\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const [isEditId, setIsEditId] = useState(\"\");\r\n\r\n  console.log(\"hoctable\", year, month);\r\n\r\n  useEffect(() => {\r\n    //console.log(\"loginid\", loginLevel.loginUserId)\r\n    setHocId(loginLevel.loginUserId);\r\n    setYearId(year);\r\n  }, []);\r\n\r\n  const add_Hoc = async (data) => {\r\n    //const { id } = data;\r\n    let today = format(new Date(), \"yyyy-MM-dd\");\r\n    //console.log(\"today\", today);\r\n    setIsEditId((prev) => (prev = \"\"));\r\n    setFormdata(\r\n      (prev) =>\r\n        (prev = {\r\n          ...data,\r\n          raisedby: loginLevel.loginUser,\r\n          email: loginLevel.loginEmail,\r\n          company: \"APPSMITHS SUTERA\",\r\n          raisedon: today,\r\n        })\r\n    );\r\n    //setFormdata(initial_form);\r\n    //setIsHocEditingOff();\r\n    handleDialogOpen();\r\n    // history.push(\"/singleexpense\");\r\n  };\r\n\r\n  const update_Hoc = async (data) => {\r\n    console.log(\"hoc\", data);\r\n    const { id } = data;\r\n    setIsEditId((prev) => (prev = id));\r\n    setFormdata((prev) => (prev = { ...data }));\r\n    //setFormdata({ ...data });\r\n    //setHocId(prev => prev = id)\r\n    //setEditHocID(id);\r\n    //setIsExpenseEditingOn();\r\n    handleDialogOpen();\r\n\r\n    // history.push(\"/singleexpense\");\r\n  };\r\n\r\n  const delete_Hoc = (data) => {\r\n    const { id } = data;\r\n    setIsEditId((prev) => (prev = id));\r\n    handleAlertOpen();\r\n\r\n    // deleteExpense(id);\r\n    // loadExpenses();\r\n  };\r\n\r\n  const handleDialogOpen = () => {\r\n    setIsDialogOpen(true);\r\n  };\r\n\r\n  const handleDialogClose = () => {\r\n    setIsDialogOpen(false);\r\n  };\r\n\r\n  const handleAlertOpen = () => {\r\n    setIsAlertOpen(true);\r\n  };\r\n\r\n  const handleAlertClose = () => {\r\n    setIsAlertOpen(false);\r\n  };\r\n\r\n  const handleOnDeleteConfirm = () => {\r\n    //const id = isEditId;\r\n    deleteHoc(isEditId);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={hoc\r\n            .filter(\r\n              (r) =>\r\n                // getYear(new Date(r.raisedon)) === year &&\r\n                getMonth(new Date(r.raisedon)) === month\r\n            )\r\n            .sort((a, b) =>\r\n              a.raisedon < b.raisedon ? 1 : b.raisedon < a.raisedon ? -1 : 0\r\n            )}\r\n          title=\"HOC Tables\"\r\n          icons={{\r\n            Add: (props) => <AddIcon />,\r\n            Edit: (props) => <CheckCircleOutlineOutlinedIcon />,\r\n            Delete: (props) => <DeleteIcon />,\r\n            Clear: (props) => <DeleteIcon />,\r\n            Check: (props) => <CheckIcon />,\r\n            Search: (props) => <SearchIcon />,\r\n            ResetSearch: (props) => <DeleteIcon />,\r\n          }}\r\n          // editable={{\r\n          //   onRowUpdate: (newData, oldData) =>\r\n          //     new Promise((resolve, reject) => {\r\n          //       setTimeout(() => {\r\n          //         const dataUpdate = [...expensesdata];\r\n          //         const index = oldData.tableData.id;\r\n          //         dataUpdate[index] = newData;\r\n          //         setExpensesdata([...dataUpdate]);\r\n          //         //approve_Expense(newData);\r\n\r\n          //         resolve();\r\n          //       }, 1000);\r\n          //     }),\r\n          // }}\r\n          actions={[\r\n            (rowData) => ({\r\n              icon: \"edit\",\r\n              tooltip: \"Edit Record\",\r\n              onClick: (event, rowData) => {\r\n                update_Hoc(rowData);\r\n              },\r\n            }),\r\n            (rowData) => ({\r\n              icon: \"delete\",\r\n              tooltip: \"Delete Record\",\r\n              onClick: (event, rowData) => {\r\n                delete_Hoc(rowData);\r\n              },\r\n            }),\r\n            {\r\n              icon: \"add\",\r\n              tooltip: \"Add Record\",\r\n              isFreeAction: true,\r\n              onClick: (event, rowData) => {\r\n                add_Hoc(rowData);\r\n              },\r\n            },\r\n          ]}\r\n          options={{\r\n            filtering: true,\r\n            pageSize: 10,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"#FFF\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n        <CustomDialog\r\n          isOpen={isDialogOpen}\r\n          handleClose={handleDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscreen={false}\r\n          isFullwidth={false}\r\n          isEditId={isEditId}\r\n        >\r\n          <HocForm\r\n            formdata={formdata}\r\n            setFormdata={setFormdata}\r\n            handleDialogClose={handleDialogClose}\r\n          />\r\n        </CustomDialog>\r\n\r\n        <AlertDialogBox\r\n          onClose={handleAlertClose}\r\n          onConfirm={handleOnDeleteConfirm}\r\n          isOpen={isAlertOpen}\r\n          title=\"Delete HOC\"\r\n        >\r\n          <h2>Are you sure you want to delete ?</h2>\r\n        </AlertDialogBox>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n"]},"metadata":{},"sourceType":"module"}
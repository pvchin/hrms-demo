{"ast":null,"code":"import { useState, useCallback } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { dailyallowances_url } from \"../../utils/constants\";\nimport { filterByEmpId } from \"./utils\";\nimport axios from \"axios\";\nimport { queryKeys } from \"../react-query/constants\";\nasync function getDailyAllowsPeriod(period) {\n  const {\n    data\n  } = await axios.get(`${dailyallowances_url}?fv=${period}`);\n  return data;\n}\nexport function useDailyAllowsPeriod() {\n  const [filter, setFilter] = useState(\"all\");\n  const [dailyallowsperiodId, setDailyAllowsPeriodId] = useState(\"\");\n  const selectFn = useCallback(unfiltered => filterByEmpId(unfiltered, filter), [filter]);\n  const fallback = [];\n  const {\n    data: dailyallowsperiod = fallback\n  } = useQuery([queryKeys.dailyallowsperiod, dailyallowsperiodId],\n  //queryKeys.dailyallows,\n  () => getDailyAllowsPeriod(dailyallowsperiodId), {\n    select: filter !== \"all\" ? selectFn : undefined\n  });\n  return {\n    dailyallowsperiod,\n    filter,\n    setFilter,\n    setDailyAllowsPeriodId\n  };\n}","map":{"version":3,"names":["useState","useCallback","useQuery","dailyallowances_url","filterByEmpId","axios","queryKeys","getDailyAllowsPeriod","period","data","get","useDailyAllowsPeriod","filter","setFilter","dailyallowsperiodId","setDailyAllowsPeriodId","selectFn","unfiltered","fallback","dailyallowsperiod","select","undefined"],"sources":["D:/react-myprojects/hrms-demo/src/components/dailyallows/useDailyAllowsPeriod.js"],"sourcesContent":["import { useState, useCallback } from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport { dailyallowances_url } from \"../../utils/constants\";\r\nimport { filterByEmpId } from \"./utils\";\r\n\r\nimport axios from \"axios\";\r\nimport { queryKeys } from \"../react-query/constants\";\r\n\r\nasync function getDailyAllowsPeriod(period) {\r\n  const { data } = await axios.get(`${dailyallowances_url}?fv=${period}`);\r\n  return data;\r\n}\r\n\r\nexport function useDailyAllowsPeriod() {\r\n  const [filter, setFilter] = useState(\"all\");\r\n  const [dailyallowsperiodId, setDailyAllowsPeriodId] = useState(\"\");\r\n\r\n  const selectFn = useCallback(\r\n    (unfiltered) => filterByEmpId(unfiltered, filter),\r\n    [filter]\r\n  );\r\n\r\n  const fallback = [];\r\n  const { data: dailyallowsperiod = fallback } = useQuery(\r\n    [queryKeys.dailyallowsperiod, dailyallowsperiodId],\r\n    //queryKeys.dailyallows,\r\n    () => getDailyAllowsPeriod(dailyallowsperiodId),\r\n    {\r\n      select: filter !== \"all\" ? selectFn : undefined,\r\n    }\r\n  );\r\n\r\n  return {\r\n    dailyallowsperiod,\r\n    filter,\r\n    setFilter,\r\n    setDailyAllowsPeriodId,\r\n  };\r\n}\r\n"],"mappings":"AAAA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAC7C,SAASC,QAAQ,QAAQ,aAAa;AACtC,SAASC,mBAAmB,QAAQ,uBAAuB;AAC3D,SAASC,aAAa,QAAQ,SAAS;AAEvC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,0BAA0B;AAEpD,eAAeC,oBAAoB,CAACC,MAAM,EAAE;EAC1C,MAAM;IAAEC;EAAK,CAAC,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAE,GAAEP,mBAAoB,OAAMK,MAAO,EAAC,CAAC;EACvE,OAAOC,IAAI;AACb;AAEA,OAAO,SAASE,oBAAoB,GAAG;EACrC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAACc,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAElE,MAAMgB,QAAQ,GAAGf,WAAW,CACzBgB,UAAU,IAAKb,aAAa,CAACa,UAAU,EAAEL,MAAM,CAAC,EACjD,CAACA,MAAM,CAAC,CACT;EAED,MAAMM,QAAQ,GAAG,EAAE;EACnB,MAAM;IAAET,IAAI,EAAEU,iBAAiB,GAAGD;EAAS,CAAC,GAAGhB,QAAQ,CACrD,CAACI,SAAS,CAACa,iBAAiB,EAAEL,mBAAmB,CAAC;EAClD;EACA,MAAMP,oBAAoB,CAACO,mBAAmB,CAAC,EAC/C;IACEM,MAAM,EAAER,MAAM,KAAK,KAAK,GAAGI,QAAQ,GAAGK;EACxC,CAAC,CACF;EAED,OAAO;IACLF,iBAAiB;IACjBP,MAAM;IACNC,SAAS;IACTE;EACF,CAAC;AACH"},"metadata":{},"sourceType":"module"}
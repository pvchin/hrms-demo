{"ast":null,"code":"import pdfMake from \"pdfmake/build/pdfmake.min\";\nimport vfsFonts from \"pdfmake/build/vfs_fonts\";\nimport { formatPrice, formatPriceZero } from \"../helpers/Utils\";\nconst PrintPayslip = _ref => {\n  let {\n    data,\n    emp\n  } = _ref;\n  var months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  const subtitle = \"Payslip for the month of \" + months[parseInt(data.rowData.payrun.slice(-2) - 1)] + \" \" + data.rowData.payrun.slice(0, 4);\n  const footer = \"This is computer generated report so no signature is required\";\n  const {\n    empno,\n    ic_no,\n    designation,\n    bank_acno,\n    //bank_name,\n    tap_acno,\n    scp_acno\n    //payrun,\n  } = emp[0];\n  const {\n    name\n  } = data.rowData;\n  const totalEarnings = data.rowData.wages_bnd + data.rowData.site_allows_bnd + data.rowData.expenses_claims_bnd + data.rowData.total_allowances_bnd;\n  const totalDeductions = data.rowData.tap_amount_bnd + data.rowData.scp_amount_bnd + data.rowData.total_deductions_bnd;\n  const earningsdesp = [\"Wages\", data.rowData.site_allows_bnd === 0 ? \"\" : data.rowData.allows_type1, data.rowData.expenses_claims_bnd === 0 ? \"\" : data.rowData.allows_type2, data.rowData.allows_type3, data.rowData.allows_type4, data.rowData.allows_type5, data.rowData.allows_type6, data.rowData.allows_type7, data.rowData.allows_type8];\n  const earningsamt = [formatPrice(data.rowData.wages_bnd), data.rowData.site_allows_bnd === 0 ? \"\" : formatPrice(data.rowData.site_allows_bnd), data.rowData.expenses_claims_bnd === 0 ? \"\" : formatPrice(data.rowData.expenses_claims_bnd), formatPrice(Math.round((data.rowData.allows_type3amt + Number.EPSILON) * data.rowData.currency_rate * 100) / 100), formatPrice(Math.round((data.rowData.allows_type4amt + Number.EPSILON) * data.rowData.currency_rate * 100) / 100), formatPrice(Math.round((data.rowData.allows_type5amt + Number.EPSILON) * data.rowData.currency_rate * 100) / 100), formatPrice(Math.round((data.rowData.allows_type6amt + Number.EPSILON) * data.rowData.currency_rate * 100) / 100), formatPrice(Math.round((data.rowData.allows_type7amt + Number.EPSILON) * data.rowData.currency_rate * 100) / 100), formatPrice(Math.round((data.rowData.allows_type8amt + Number.EPSILON) * data.rowData.currency_rate * 100) / 100)];\n  const deductionsdesp = [data.rowData.tap_amount_bnd === 0 ? \"\" : \"TAP Amount\", data.rowData.scp_amount_bnd === 0 ? \"\" : \"SCP Amount\", data.rowData.deducts_type1, data.rowData.deducts_type2, data.rowData.deducts_type3, data.rowData.deducts_type4, data.rowData.deducts_type5, data.rowData.deducts_type6, data.rowData.deducts_type7, data.rowData.deducts_type8];\n  const deductionsamt = [formatPrice(parseFloat(data.rowData.tap_amount_bnd, 10)), formatPrice(parseFloat(data.rowData.scp_amount_bnd, 10)), formatPrice(Math.round((data.rowData.deducts_type1amt + Number.EPSILON) * data.rowData.currency_rate * 100) / 100), formatPrice(Math.round((data.rowData.deducts_type2amt + Number.EPSILON) * data.rowData.currency_rate * 100) / 100), formatPrice(Math.round((data.rowData.deducts_type3amt + Number.EPSILON) * data.rowData.currency_rate * 100) / 100), formatPrice(Math.round((data.rowData.deducts_type4amt + Number.EPSILON) * data.rowData.currency_rate * 100) / 100), formatPrice(Math.round((data.rowData.deducts_type5amt + Number.EPSILON) * data.rowData.currency_rate * 100) / 100), formatPrice(Math.round((data.rowData.deducts_type6amt + Number.EPSILON) * data.rowData.currency_rate * 100) / 100), formatPrice(Math.round((data.rowData.deducts_type7amt + Number.EPSILON) * data.rowData.currency_rate * 100) / 100), formatPrice(Math.round((data.rowData.allows_type8amt + Number.EPSILON) * data.rowData.currency_rate * 100) / 100)];\n  pdfMake.fonts = {\n    // Courier: {\n    //   normal: \"Courier\",\n    //   bold: \"Courier-Bold\",\n    //   italics: \"Courier-Oblique\",\n    //   bolditalics: \"Courier-BoldOblique\",\n    // },\n    // Helvetica: {\n    //   normal: \"Helvetica\",\n    //   bold: \"Helvetica-Bold\",\n    //   italics: \"Helvetica-Oblique\",\n    //   bolditalics: \"Helvetica-BoldOblique\",\n    // },\n    // Times: {\n    //   normal: \"Times-Roman\",\n    //   bold: \"Times-Bold\",\n    //   italics: \"Times-Italic\",\n    //   bolditalics: \"Times-BoldItalic\",\n    // },\n    Roboto: {\n      normal: \"Roboto-Regular.ttf\",\n      bold: \"Roboto-Medium.ttf\",\n      italics: \"Roboto-Italic.ttf\",\n      bolditalics: \"Roboto-MediumItalic.ttf\"\n    }\n    // Symbol: {\n    //   normal: \"Symbol\",\n    // },\n    // ZapfDingbats: {\n    //   normal: \"ZapfDingbats\",\n    // },\n  };\n\n  const {\n    vfs\n  } = vfsFonts.pdfMake;\n  pdfMake.vfs = vfs;\n  const documentDefinition = {\n    pageSize: \"A4\",\n    pageOrientation: \"portrait\",\n    content: [{\n      image: \"logo\",\n      width: 200\n    },\n    // { text: \"AppSmith Sutera Sdn Bhd\", style: \"header\" },\n    {\n      text: subtitle + \"\\n\",\n      style: \"subheader\"\n    }, {\n      canvas: [{\n        type: \"line\",\n        x1: 0,\n        y1: 5,\n        x2: 500,\n        y2: 5,\n        lineWidth: 2\n      }]\n    }, {\n      columns: [{\n        width: 90,\n        text: \"\\n\"\n      }, {\n        width: 20,\n        text: \"\"\n      }, {\n        width: \"200\",\n        text: \"\"\n      }, {\n        width: \"*\",\n        text: \"\"\n      }]\n    }, {\n      columns: [{\n        width: 90,\n        text: \"Emp No \"\n      }, {\n        width: 20,\n        text: \":\"\n      }, {\n        width: \"200\",\n        text: empno\n      }, {\n        width: \"*\",\n        text: \"\"\n      }]\n    }, {\n      columns: [{\n        width: 90,\n        text: \"Name \"\n      }, {\n        width: 20,\n        text: \":\"\n      }, {\n        width: 200,\n        text: name\n      }, {\n        width: \"*\",\n        text: \"\"\n      }]\n    }, {\n      columns: [{\n        width: 90,\n        text: \"I/C No \"\n      }, {\n        width: 20,\n        text: \":\"\n      }, {\n        width: 200,\n        text: ic_no\n      }, {\n        width: \"*\",\n        text: \"\"\n      }]\n    }, {\n      columns: [{\n        width: 90,\n        text: \"Designation \"\n      }, {\n        width: 20,\n        text: \":\"\n      }, {\n        width: 200,\n        text: designation\n      }, {\n        width: \"*\",\n        text: \"\"\n      }]\n    }, {\n      columns: [{\n        width: 90,\n        text: \"Bank A/C No \"\n      }, {\n        width: 20,\n        text: \":\"\n      }, {\n        width: 200,\n        text: bank_acno\n      }, {\n        width: \"*\",\n        text: \"\"\n      }]\n    }, {\n      columns: [{\n        width: 90,\n        text: \"TAP No \"\n      }, {\n        width: 20,\n        text: \":\"\n      }, {\n        width: 200,\n        text: tap_acno\n      }, {\n        width: \"*\",\n        text: \"\"\n      }]\n    }, {\n      columns: [{\n        width: 90,\n        text: \"SCP No \"\n      }, {\n        width: 20,\n        text: \":\"\n      }, {\n        width: 200,\n        text: scp_acno\n      }, {\n        width: \"*\",\n        text: \"\"\n      }]\n    },\n    // {\n    //   text: [\n    //     { text: \"Emp No : \" + empno + \"\\n\", style: \"text\" },\n    //     { text: \"Name   : \" + name + \"\\n\", style: \"text\" },\n    //     { text: \"Addess : \" + address + \"\\n\", style: \"text\" },\n    //     { text: \"Phone  : \" + phone + \"\\n\\n\", style: \"text\" },\n    //   ],\n    // },\n\n    {\n      table: {\n        headerRows: 1,\n        widths: [\"97%\"],\n        body: [[\"\"], [\"\"]]\n      },\n      layout: \"headerLineOnly\"\n    }, {\n      style: \"tableExample\",\n      table: {\n        widths: [150, 80, 150, 80],\n        body: [[{\n          alignment: \"left\",\n          text: \"Earnings\"\n        }, {\n          alignment: \"right\",\n          text: \"Amount\"\n        }, {\n          alignment: \"left\",\n          text: \"Deductions\"\n        }, {\n          alignment: \"right\",\n          text: \"Amount\"\n        }], [{\n          stack: [{\n            type: \"none\",\n            fontSize: 12,\n            ul: earningsdesp\n          }]\n        }, {\n          stack: [{\n            type: \"none\",\n            fontSize: 12,\n            alignment: \"right\",\n            ul: earningsamt\n          }]\n        }, {\n          stack: [{\n            type: \"none\",\n            fontSize: 12,\n            ul: deductionsdesp\n          }]\n        }, {\n          stack: [{\n            type: \"none\",\n            fontSize: 12,\n            alignment: \"right\",\n            ul: deductionsamt\n          }]\n        }], [{\n          alignment: \"left\",\n          text: \"Total Earnings\"\n        }, {\n          alignment: \"right\",\n          text: formatPrice(totalEarnings)\n        }, {\n          alignment: \"left\",\n          text: \"Total Deductions\"\n        }, {\n          alignment: \"right\",\n          text: formatPriceZero(totalDeductions)\n        }], [{\n          alignment: \"left\",\n          text: \"\"\n        }, {\n          alignment: \"right\",\n          text: \"\"\n        }, {\n          alignment: \"left\",\n          text: \"Nett Pay\"\n        }, {\n          alignment: \"right\",\n          text: formatPrice(data.rowData.nett_pay)\n        }]]\n      }\n    },\n    // {\n    //   style: \"tableExample\",\n    //   table: {\n    //     widths: [480, 80],\n    //     body: [\n    //       [\n    //         { alignment: \"left\", text: \"Nettpay\" },\n    //         { alignment: \"right\", text: \"Amount\" },\n    //       ],\n    //     ],\n    //   },\n    // },\n    {\n      text: footer + \"\\n\",\n      style: \"footer\"\n    }],\n    styles: {\n      header: {\n        fontSize: 18,\n        bold: true,\n        margin: [0, 0, 0, 10]\n      },\n      subheader: {\n        fontSize: 16,\n        bold: true,\n        margin: [0, 10, 0, 5]\n      },\n      text: {\n        fontSize: 12,\n        bold: false,\n        margin: [0, 10, 0, 5]\n      },\n      tableExample: {\n        margin: [0, 5, 0, 15]\n      },\n      tableOpacityExample: {\n        margin: [0, 5, 0, 15],\n        fillColor: \"blue\",\n        fillOpacity: 0.3\n      },\n      tableHeader: {\n        bold: true,\n        fontSize: 13,\n        color: \"black\"\n      }\n    },\n    defaultStyle: {\n      // alignment: 'justify'\n      //font: \"Helvetica\",\n    },\n    images: {\n      logo: \"https://res.cloudinary.com/dlmzwvakr/image/upload/v1658466681/appsmiths/AppSutLogo_tijr4l.jpg\",\n      img1: \"./AppSutLogo.jpg\"\n    }\n  };\n  pdfMake.createPdf(documentDefinition).open();\n};\n_c = PrintPayslip;\nexport default PrintPayslip;\nvar _c;\n$RefreshReg$(_c, \"PrintPayslip\");","map":{"version":3,"names":["pdfMake","vfsFonts","formatPrice","formatPriceZero","PrintPayslip","data","emp","months","subtitle","parseInt","rowData","payrun","slice","footer","empno","ic_no","designation","bank_acno","tap_acno","scp_acno","name","totalEarnings","wages_bnd","site_allows_bnd","expenses_claims_bnd","total_allowances_bnd","totalDeductions","tap_amount_bnd","scp_amount_bnd","total_deductions_bnd","earningsdesp","allows_type1","allows_type2","allows_type3","allows_type4","allows_type5","allows_type6","allows_type7","allows_type8","earningsamt","Math","round","allows_type3amt","Number","EPSILON","currency_rate","allows_type4amt","allows_type5amt","allows_type6amt","allows_type7amt","allows_type8amt","deductionsdesp","deducts_type1","deducts_type2","deducts_type3","deducts_type4","deducts_type5","deducts_type6","deducts_type7","deducts_type8","deductionsamt","parseFloat","deducts_type1amt","deducts_type2amt","deducts_type3amt","deducts_type4amt","deducts_type5amt","deducts_type6amt","deducts_type7amt","fonts","Roboto","normal","bold","italics","bolditalics","vfs","documentDefinition","pageSize","pageOrientation","content","image","width","text","style","canvas","type","x1","y1","x2","y2","lineWidth","columns","table","headerRows","widths","body","layout","alignment","stack","fontSize","ul","nett_pay","styles","header","margin","subheader","tableExample","tableOpacityExample","fillColor","fillOpacity","tableHeader","color","defaultStyle","images","logo","img1","createPdf","open"],"sources":["D:/react-myprojects/hrms-airtable/src/components/PrintPayslip.js"],"sourcesContent":["import pdfMake from \"pdfmake/build/pdfmake.min\";\r\nimport vfsFonts from \"pdfmake/build/vfs_fonts\";\r\nimport { formatPrice, formatPriceZero } from \"../helpers/Utils\";\r\n\r\nconst PrintPayslip = ({ data, emp }) => {\r\n  var months = [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\",\r\n  ];\r\n  const subtitle =\r\n    \"Payslip for the month of \" +\r\n    months[parseInt(data.rowData.payrun.slice(-2) - 1)] +\r\n    \" \" +\r\n    data.rowData.payrun.slice(0, 4);\r\n  const footer =\r\n    \"This is computer generated report so no signature is required\";\r\n  const {\r\n    empno,\r\n    ic_no,\r\n    designation,\r\n    bank_acno,\r\n    //bank_name,\r\n    tap_acno,\r\n    scp_acno,\r\n    //payrun,\r\n  } = emp[0];\r\n  const { name } = data.rowData;\r\n  const totalEarnings =\r\n    data.rowData.wages_bnd +\r\n    data.rowData.site_allows_bnd +\r\n    data.rowData.expenses_claims_bnd +\r\n    data.rowData.total_allowances_bnd;\r\n  const totalDeductions =\r\n    data.rowData.tap_amount_bnd +\r\n    data.rowData.scp_amount_bnd +\r\n    data.rowData.total_deductions_bnd;\r\n  const earningsdesp = [\r\n    \"Wages\",\r\n    data.rowData.site_allows_bnd === 0 ? \"\" : data.rowData.allows_type1,\r\n    data.rowData.expenses_claims_bnd === 0 ? \"\" : data.rowData.allows_type2,\r\n    data.rowData.allows_type3,\r\n    data.rowData.allows_type4,\r\n    data.rowData.allows_type5,\r\n    data.rowData.allows_type6,\r\n    data.rowData.allows_type7,\r\n    data.rowData.allows_type8,\r\n  ];\r\n  const earningsamt = [\r\n    formatPrice(data.rowData.wages_bnd),\r\n    data.rowData.site_allows_bnd === 0\r\n      ? \"\"\r\n      : formatPrice(data.rowData.site_allows_bnd),\r\n    data.rowData.expenses_claims_bnd === 0\r\n      ? \"\"\r\n      : formatPrice(data.rowData.expenses_claims_bnd),\r\n    formatPrice(\r\n      Math.round(\r\n        (data.rowData.allows_type3amt + Number.EPSILON) *\r\n          data.rowData.currency_rate *\r\n          100\r\n      ) / 100\r\n    ),\r\n    formatPrice(\r\n      Math.round(\r\n        (data.rowData.allows_type4amt + Number.EPSILON) *\r\n          data.rowData.currency_rate *\r\n          100\r\n      ) / 100\r\n    ),\r\n    formatPrice(\r\n      Math.round(\r\n        (data.rowData.allows_type5amt + Number.EPSILON) *\r\n          data.rowData.currency_rate *\r\n          100\r\n      ) / 100\r\n    ),\r\n    formatPrice(\r\n      Math.round(\r\n        (data.rowData.allows_type6amt + Number.EPSILON) *\r\n          data.rowData.currency_rate *\r\n          100\r\n      ) / 100\r\n    ),\r\n    formatPrice(\r\n      Math.round(\r\n        (data.rowData.allows_type7amt + Number.EPSILON) *\r\n          data.rowData.currency_rate *\r\n          100\r\n      ) / 100\r\n    ),\r\n    formatPrice(\r\n      Math.round(\r\n        (data.rowData.allows_type8amt + Number.EPSILON) *\r\n          data.rowData.currency_rate *\r\n          100\r\n      ) / 100\r\n    ),\r\n  ];\r\n  const deductionsdesp = [\r\n    data.rowData.tap_amount_bnd === 0 ? \"\" : \"TAP Amount\",\r\n    data.rowData.scp_amount_bnd === 0 ? \"\" : \"SCP Amount\",\r\n    data.rowData.deducts_type1,\r\n    data.rowData.deducts_type2,\r\n    data.rowData.deducts_type3,\r\n    data.rowData.deducts_type4,\r\n    data.rowData.deducts_type5,\r\n    data.rowData.deducts_type6,\r\n    data.rowData.deducts_type7,\r\n    data.rowData.deducts_type8,\r\n  ];\r\n  const deductionsamt = [\r\n    formatPrice(parseFloat(data.rowData.tap_amount_bnd, 10)),\r\n    formatPrice(parseFloat(data.rowData.scp_amount_bnd, 10)),\r\n    formatPrice(\r\n      Math.round(\r\n        (data.rowData.deducts_type1amt + Number.EPSILON) *\r\n          data.rowData.currency_rate *\r\n          100\r\n      ) / 100\r\n    ),\r\n    formatPrice(\r\n      Math.round(\r\n        (data.rowData.deducts_type2amt + Number.EPSILON) *\r\n          data.rowData.currency_rate *\r\n          100\r\n      ) / 100\r\n    ),\r\n    formatPrice(\r\n      Math.round(\r\n        (data.rowData.deducts_type3amt + Number.EPSILON) *\r\n          data.rowData.currency_rate *\r\n          100\r\n      ) / 100\r\n    ),\r\n    formatPrice(\r\n      Math.round(\r\n        (data.rowData.deducts_type4amt + Number.EPSILON) *\r\n          data.rowData.currency_rate *\r\n          100\r\n      ) / 100\r\n    ),\r\n    formatPrice(\r\n      Math.round(\r\n        (data.rowData.deducts_type5amt + Number.EPSILON) *\r\n          data.rowData.currency_rate *\r\n          100\r\n      ) / 100\r\n    ),\r\n    formatPrice(\r\n      Math.round(\r\n        (data.rowData.deducts_type6amt + Number.EPSILON) *\r\n          data.rowData.currency_rate *\r\n          100\r\n      ) / 100\r\n    ),\r\n    formatPrice(\r\n      Math.round(\r\n        (data.rowData.deducts_type7amt + Number.EPSILON) *\r\n          data.rowData.currency_rate *\r\n          100\r\n      ) / 100\r\n    ),\r\n    formatPrice(\r\n      Math.round(\r\n        (data.rowData.allows_type8amt + Number.EPSILON) *\r\n          data.rowData.currency_rate *\r\n          100\r\n      ) / 100\r\n    ),\r\n  ];\r\n\r\n  pdfMake.fonts = {\r\n    // Courier: {\r\n    //   normal: \"Courier\",\r\n    //   bold: \"Courier-Bold\",\r\n    //   italics: \"Courier-Oblique\",\r\n    //   bolditalics: \"Courier-BoldOblique\",\r\n    // },\r\n    // Helvetica: {\r\n    //   normal: \"Helvetica\",\r\n    //   bold: \"Helvetica-Bold\",\r\n    //   italics: \"Helvetica-Oblique\",\r\n    //   bolditalics: \"Helvetica-BoldOblique\",\r\n    // },\r\n    // Times: {\r\n    //   normal: \"Times-Roman\",\r\n    //   bold: \"Times-Bold\",\r\n    //   italics: \"Times-Italic\",\r\n    //   bolditalics: \"Times-BoldItalic\",\r\n    // },\r\n    Roboto: {\r\n      normal: \"Roboto-Regular.ttf\",\r\n      bold: \"Roboto-Medium.ttf\",\r\n      italics: \"Roboto-Italic.ttf\",\r\n      bolditalics: \"Roboto-MediumItalic.ttf\",\r\n    },\r\n    // Symbol: {\r\n    //   normal: \"Symbol\",\r\n    // },\r\n    // ZapfDingbats: {\r\n    //   normal: \"ZapfDingbats\",\r\n    // },\r\n  };\r\n\r\n  const { vfs } = vfsFonts.pdfMake;\r\n  pdfMake.vfs = vfs;\r\n\r\n  const documentDefinition = {\r\n    pageSize: \"A4\",\r\n    pageOrientation: \"portrait\",\r\n    content: [\r\n      {\r\n        image: \"logo\",\r\n        width: 200,\r\n      },\r\n      // { text: \"AppSmith Sutera Sdn Bhd\", style: \"header\" },\r\n      { text: subtitle + \"\\n\", style: \"subheader\" },\r\n      {\r\n        canvas: [\r\n          {\r\n            type: \"line\",\r\n            x1: 0,\r\n            y1: 5,\r\n            x2: 500,\r\n            y2: 5,\r\n            lineWidth: 2,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        columns: [\r\n          {\r\n            width: 90,\r\n            text: \"\\n\",\r\n          },\r\n          {\r\n            width: 20,\r\n            text: \"\",\r\n          },\r\n          {\r\n            width: \"200\",\r\n            text: \"\",\r\n          },\r\n          {\r\n            width: \"*\",\r\n            text: \"\",\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        columns: [\r\n          {\r\n            width: 90,\r\n            text: \"Emp No \",\r\n          },\r\n          {\r\n            width: 20,\r\n            text: \":\",\r\n          },\r\n          {\r\n            width: \"200\",\r\n            text: empno,\r\n          },\r\n          {\r\n            width: \"*\",\r\n            text: \"\",\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        columns: [\r\n          {\r\n            width: 90,\r\n            text: \"Name \",\r\n          },\r\n          {\r\n            width: 20,\r\n            text: \":\",\r\n          },\r\n          {\r\n            width: 200,\r\n            text: name,\r\n          },\r\n          {\r\n            width: \"*\",\r\n            text: \"\",\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        columns: [\r\n          {\r\n            width: 90,\r\n            text: \"I/C No \",\r\n          },\r\n          {\r\n            width: 20,\r\n            text: \":\",\r\n          },\r\n          {\r\n            width: 200,\r\n            text: ic_no,\r\n          },\r\n          {\r\n            width: \"*\",\r\n            text: \"\",\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        columns: [\r\n          {\r\n            width: 90,\r\n            text: \"Designation \",\r\n          },\r\n          {\r\n            width: 20,\r\n            text: \":\",\r\n          },\r\n          {\r\n            width: 200,\r\n            text: designation,\r\n          },\r\n          {\r\n            width: \"*\",\r\n            text: \"\",\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        columns: [\r\n          {\r\n            width: 90,\r\n            text: \"Bank A/C No \",\r\n          },\r\n          {\r\n            width: 20,\r\n            text: \":\",\r\n          },\r\n          {\r\n            width: 200,\r\n            text: bank_acno,\r\n          },\r\n          {\r\n            width: \"*\",\r\n            text: \"\",\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        columns: [\r\n          {\r\n            width: 90,\r\n            text: \"TAP No \",\r\n          },\r\n          {\r\n            width: 20,\r\n            text: \":\",\r\n          },\r\n          {\r\n            width: 200,\r\n            text: tap_acno,\r\n          },\r\n          {\r\n            width: \"*\",\r\n            text: \"\",\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        columns: [\r\n          {\r\n            width: 90,\r\n            text: \"SCP No \",\r\n          },\r\n          {\r\n            width: 20,\r\n            text: \":\",\r\n          },\r\n          {\r\n            width: 200,\r\n            text: scp_acno,\r\n          },\r\n          {\r\n            width: \"*\",\r\n            text: \"\",\r\n          },\r\n        ],\r\n      },\r\n      // {\r\n      //   text: [\r\n      //     { text: \"Emp No : \" + empno + \"\\n\", style: \"text\" },\r\n      //     { text: \"Name   : \" + name + \"\\n\", style: \"text\" },\r\n      //     { text: \"Addess : \" + address + \"\\n\", style: \"text\" },\r\n      //     { text: \"Phone  : \" + phone + \"\\n\\n\", style: \"text\" },\r\n      //   ],\r\n      // },\r\n\r\n      {\r\n        table: {\r\n          headerRows: 1,\r\n          widths: [\"97%\"],\r\n          body: [[\"\"], [\"\"]],\r\n        },\r\n        layout: \"headerLineOnly\",\r\n      },\r\n      {\r\n        style: \"tableExample\",\r\n        table: {\r\n          widths: [150, 80, 150, 80],\r\n          body: [\r\n            [\r\n              { alignment: \"left\", text: \"Earnings\" },\r\n              { alignment: \"right\", text: \"Amount\" },\r\n              { alignment: \"left\", text: \"Deductions\" },\r\n              { alignment: \"right\", text: \"Amount\" },\r\n            ],\r\n            [\r\n              {\r\n                stack: [\r\n                  {\r\n                    type: \"none\",\r\n                    fontSize: 12,\r\n                    ul: earningsdesp,\r\n                  },\r\n                ],\r\n              },\r\n              {\r\n                stack: [\r\n                  {\r\n                    type: \"none\",\r\n                    fontSize: 12,\r\n                    alignment: \"right\",\r\n                    ul: earningsamt,\r\n                  },\r\n                ],\r\n              },\r\n              {\r\n                stack: [\r\n                  {\r\n                    type: \"none\",\r\n                    fontSize: 12,\r\n                    ul: deductionsdesp,\r\n                  },\r\n                ],\r\n              },\r\n              {\r\n                stack: [\r\n                  {\r\n                    type: \"none\",\r\n                    fontSize: 12,\r\n                    alignment: \"right\",\r\n                    ul: deductionsamt,\r\n                  },\r\n                ],\r\n              },\r\n            ],\r\n            [\r\n              { alignment: \"left\", text: \"Total Earnings\" },\r\n              { alignment: \"right\", text: formatPrice(totalEarnings) },\r\n              { alignment: \"left\", text: \"Total Deductions\" },\r\n              { alignment: \"right\", text: formatPriceZero(totalDeductions) },\r\n            ],\r\n            [\r\n              { alignment: \"left\", text: \"\" },\r\n              { alignment: \"right\", text: \"\" },\r\n              { alignment: \"left\", text: \"Nett Pay\" },\r\n              { alignment: \"right\", text: formatPrice(data.rowData.nett_pay) },\r\n            ],\r\n          ],\r\n        },\r\n      },\r\n      // {\r\n      //   style: \"tableExample\",\r\n      //   table: {\r\n      //     widths: [480, 80],\r\n      //     body: [\r\n      //       [\r\n      //         { alignment: \"left\", text: \"Nettpay\" },\r\n      //         { alignment: \"right\", text: \"Amount\" },\r\n      //       ],\r\n      //     ],\r\n      //   },\r\n      // },\r\n      { text: footer + \"\\n\", style: \"footer\" },\r\n    ],\r\n    styles: {\r\n      header: {\r\n        fontSize: 18,\r\n        bold: true,\r\n        margin: [0, 0, 0, 10],\r\n      },\r\n      subheader: {\r\n        fontSize: 16,\r\n        bold: true,\r\n        margin: [0, 10, 0, 5],\r\n      },\r\n      text: {\r\n        fontSize: 12,\r\n        bold: false,\r\n        margin: [0, 10, 0, 5],\r\n      },\r\n      tableExample: {\r\n        margin: [0, 5, 0, 15],\r\n      },\r\n      tableOpacityExample: {\r\n        margin: [0, 5, 0, 15],\r\n        fillColor: \"blue\",\r\n        fillOpacity: 0.3,\r\n      },\r\n      tableHeader: {\r\n        bold: true,\r\n        fontSize: 13,\r\n        color: \"black\",\r\n      },\r\n    },\r\n    defaultStyle: {\r\n      // alignment: 'justify'\r\n      //font: \"Helvetica\",\r\n    },\r\n    images: {\r\n      logo: \"https://res.cloudinary.com/dlmzwvakr/image/upload/v1658466681/appsmiths/AppSutLogo_tijr4l.jpg\",\r\n      img1: \"./AppSutLogo.jpg\",\r\n    },\r\n  };\r\n\r\n  pdfMake.createPdf(documentDefinition).open();\r\n};\r\n\r\nexport default PrintPayslip;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
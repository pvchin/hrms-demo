{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useCallback } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { family_url } from \"../../utils/constants\";\nimport { filterByEmpId } from \"./utils\";\nimport axios from \"axios\";\nimport { queryKeys } from \"../react-query/constants\";\nasync function getFamily(empid) {\n  const {\n    data\n  } = await axios.get(`${family_url}?fv=${empid}`);\n  return data;\n}\nexport function useFamily(empid) {\n  _s();\n  const [filter, setFilter] = useState(\"all\");\n  const [familyId, setFamilyId] = useState(\"\");\n  const selectFn = useCallback(unfiltered => filterByEmpId(unfiltered, filter), [filter]);\n  const fallback = [];\n  const {\n    data: family = fallback\n  } = useQuery([queryKeys.family, familyId], () => getFamily(familyId), {\n    select: filter !== \"all\" ? selectFn : undefined\n  });\n  return {\n    family,\n    filter,\n    setFilter,\n    setFamilyId\n  };\n}\n_s(useFamily, \"lsIc0baHIn0pEzKoTJIXIczPaU8=\", false, function () {\n  return [useQuery];\n});","map":{"version":3,"names":["useState","useCallback","useQuery","family_url","filterByEmpId","axios","queryKeys","getFamily","empid","data","get","useFamily","filter","setFilter","familyId","setFamilyId","selectFn","unfiltered","fallback","family","select","undefined"],"sources":["D:/react-myprojects/hrms-airtable/src/components/family/useFamily.js"],"sourcesContent":["import { useState, useCallback } from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport { family_url } from \"../../utils/constants\";\r\nimport { filterByEmpId } from \"./utils\";\r\n\r\nimport axios from \"axios\";\r\nimport { queryKeys } from \"../react-query/constants\";\r\n\r\nasync function getFamily(empid) {\r\n  const { data } = await axios.get(`${family_url}?fv=${empid}`);\r\n  return data;\r\n}\r\n\r\nexport function useFamily(empid) {\r\n  const [filter, setFilter] = useState(\"all\");\r\n  const [familyId, setFamilyId] = useState(\"\");\r\n\r\n  const selectFn = useCallback(\r\n    (unfiltered) => filterByEmpId(unfiltered, filter),\r\n    [filter]\r\n  );\r\n\r\n  const fallback = [];\r\n  const { data: family = fallback } = useQuery(\r\n    [queryKeys.family, familyId ],\r\n    () => getFamily(familyId),\r\n    {\r\n      select: filter !== \"all\" ? selectFn : undefined,\r\n    }\r\n  );\r\n\r\n  return { family,filter,setFilter, setFamilyId };\r\n}\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAC7C,SAASC,QAAQ,QAAQ,aAAa;AACtC,SAASC,UAAU,QAAQ,uBAAuB;AAClD,SAASC,aAAa,QAAQ,SAAS;AAEvC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,0BAA0B;AAEpD,eAAeC,SAAS,CAACC,KAAK,EAAE;EAC9B,MAAM;IAAEC;EAAK,CAAC,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAE,GAAEP,UAAW,OAAMK,KAAM,EAAC,CAAC;EAC7D,OAAOC,IAAI;AACb;AAEA,OAAO,SAASE,SAAS,CAACH,KAAK,EAAE;EAAA;EAC/B,MAAM,CAACI,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMgB,QAAQ,GAAGf,WAAW,CACzBgB,UAAU,IAAKb,aAAa,CAACa,UAAU,EAAEL,MAAM,CAAC,EACjD,CAACA,MAAM,CAAC,CACT;EAED,MAAMM,QAAQ,GAAG,EAAE;EACnB,MAAM;IAAET,IAAI,EAAEU,MAAM,GAAGD;EAAS,CAAC,GAAGhB,QAAQ,CAC1C,CAACI,SAAS,CAACa,MAAM,EAAEL,QAAQ,CAAE,EAC7B,MAAMP,SAAS,CAACO,QAAQ,CAAC,EACzB;IACEM,MAAM,EAAER,MAAM,KAAK,KAAK,GAAGI,QAAQ,GAAGK;EACxC,CAAC,CACF;EAED,OAAO;IAAEF,MAAM;IAACP,MAAM;IAACC,SAAS;IAAEE;EAAY,CAAC;AACjD;AAAC,GAnBeJ,SAAS;EAAA,QAUaT,QAAQ;AAAA"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useMutation, useQueryClient } from \"react-query\";\nimport { periods_url } from \"../../utils/constants\";\nimport { useCustomToast } from \"../../helpers/useCustomToast\";\nasync function updatePeriods(data) {\n  const {\n    id,\n    ...fields\n  } = data;\n  await fetch(periods_url, {\n    method: \"PUT\",\n    body: JSON.stringify({\n      id,\n      ...fields\n    })\n  });\n}\nexport function useUpdatePeriods(data) {\n  _s();\n  const queryClient = useQueryClient();\n  const toast = useCustomToast();\n  const {\n    mutate\n  } = useMutation(data => updatePeriods(data), {\n    onSuccess: () => {\n      queryClient.invalidateQueries(\"periods\");\n      // toast({\n      //   title: \"Payslip record being updated!\",\n      //   status: \"success\",\n      // });\n    },\n\n    onErrot: () => {\n      toast({\n        title: \"Internet connection error! Record not updated!\",\n        status: \"warning\"\n      });\n    }\n  });\n  return mutate;\n}\n_s(useUpdatePeriods, \"hoUwZA1xHrROpctkoAMiT28Sz2U=\", false, function () {\n  return [useQueryClient, useCustomToast, useMutation];\n});","map":{"version":3,"names":["useMutation","useQueryClient","periods_url","useCustomToast","updatePeriods","data","id","fields","fetch","method","body","JSON","stringify","useUpdatePeriods","queryClient","toast","mutate","onSuccess","invalidateQueries","onErrot","title","status"],"sources":["D:/react-myprojects/hrms-demo/src/components/periods/useUpdatePeriods.js"],"sourcesContent":["import { useMutation, useQueryClient } from \"react-query\";\r\nimport { periods_url } from \"../../utils/constants\";\r\nimport { useCustomToast } from \"../../helpers/useCustomToast\";\r\n\r\nasync function updatePeriods(data) {\r\n  const { id, ...fields } = data;\r\n\r\n  await fetch(periods_url, {\r\n    method: \"PUT\",\r\n    body: JSON.stringify({ id, ...fields }),\r\n  });\r\n}\r\n\r\nexport function useUpdatePeriods(data) {\r\n  const queryClient = useQueryClient();\r\n  const toast = useCustomToast();\r\n\r\n  const { mutate } = useMutation((data) => updatePeriods(data), {\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries(\"periods\");\r\n      // toast({\r\n      //   title: \"Payslip record being updated!\",\r\n      //   status: \"success\",\r\n      // });\r\n    },\r\n    onErrot: () => {\r\n      toast({\r\n        title: \"Internet connection error! Record not updated!\",\r\n        status: \"warning\",\r\n      });\r\n    },\r\n  });\r\n\r\n  return mutate;\r\n}\r\n"],"mappings":";AAAA,SAASA,WAAW,EAAEC,cAAc,QAAQ,aAAa;AACzD,SAASC,WAAW,QAAQ,uBAAuB;AACnD,SAASC,cAAc,QAAQ,8BAA8B;AAE7D,eAAeC,aAAa,CAACC,IAAI,EAAE;EACjC,MAAM;IAAEC,EAAE;IAAE,GAAGC;EAAO,CAAC,GAAGF,IAAI;EAE9B,MAAMG,KAAK,CAACN,WAAW,EAAE;IACvBO,MAAM,EAAE,KAAK;IACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEN,EAAE;MAAE,GAAGC;IAAO,CAAC;EACxC,CAAC,CAAC;AACJ;AAEA,OAAO,SAASM,gBAAgB,CAACR,IAAI,EAAE;EAAA;EACrC,MAAMS,WAAW,GAAGb,cAAc,EAAE;EACpC,MAAMc,KAAK,GAAGZ,cAAc,EAAE;EAE9B,MAAM;IAAEa;EAAO,CAAC,GAAGhB,WAAW,CAAEK,IAAI,IAAKD,aAAa,CAACC,IAAI,CAAC,EAAE;IAC5DY,SAAS,EAAE,MAAM;MACfH,WAAW,CAACI,iBAAiB,CAAC,SAAS,CAAC;MACxC;MACA;MACA;MACA;IACF,CAAC;;IACDC,OAAO,EAAE,MAAM;MACbJ,KAAK,CAAC;QACJK,KAAK,EAAE,gDAAgD;QACvDC,MAAM,EAAE;MACV,CAAC,CAAC;IACJ;EACF,CAAC,CAAC;EAEF,OAAOL,MAAM;AACf;AAAC,GArBeH,gBAAgB;EAAA,QACVZ,cAAc,EACpBE,cAAc,EAETH,WAAW;AAAA"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-demo\\\\src\\\\components\\\\JobhistoryForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport //   Button,\n//   Icon,\n//   MenuItem,\n//   TextField,\n//   Paper,\n//   Select,\n//   Typography,\n//   Divider,\n\"@material-ui/core\";\nimport { //AspectRatio,\nBox, Button //ButtonGroup,\n//Center,\n, Checkbox //Container,\n, Divider //Flex,\n, FormControl //FormLabel,\n//FormErrorMessage,\n//FormHelperText,\n//Grid,\n//GridItem,\n, Heading, HStack //Icon,\n//IconButton,\n//Image,\n, Input, InputGroup, InputLeftAddon //InputLeftElement,\n//Modal,\n//ModalOverlay,\n//ModalContent,\n//ModalHeader,\n//ModalFooter,\n//ModalBody,\n//ModalCloseButton,\n//Radio,\n//RadioGroup,\n, Select //SimpleGrid,\n//Stack,\n//StackDivider,\n//Text,\n//Tabs,\n} from \"@chakra-ui/react\"; //import * as emailjs from \"emailjs-com\";\n//import { useRecoilState } from \"recoil\";\n//import { loginLevelState } from \"./data/atomdata\";\n\nimport { makeStyles } from \"@material-ui/core/styles\"; //import { useCustomToast } from \"../helpers/useCustomToast\";\n//import { useEmployees } from \"./employees/useEmployees\";\n\nimport { useDepartments } from \"./departments/useDepartments\";\nimport { useDesignations } from \"./designations/useDesignations\";\nimport { useJobstatus } from \"./jobstatus/useJobstatus\";\nimport { Controller, useForm } from \"react-hook-form\"; //const SERVICE_ID = process.env.REACT_APP_EMAILJS_SERVICEID;\n//const TEMPLATE_ID = \"template_1y8odlq\";\n//const USER_ID = process.env.REACT_APP_EMAILJS_USERID;\n// const initial_state = {\n//   empid: \"\",\n//   name: \"\",\n//   designation: \"\",\n//   department: \"\",\n//   effectdate: \"\",\n//   basicsalary: 0,\n//   siteallows: 0,\n//   remark: \"\",\n//   status: \"\",\n//   isresign: false,\n//};\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst JobhistoryForm = ({\n  state,\n  setState,\n  statustype,\n  add_Item,\n  update_Item,\n  onJobClose\n}) => {\n  _s();\n\n  //const toast = useCustomToast();\n  const classes = useStyles();\n  const field_width = \"138\"; //const { employees } = useEmployees();\n\n  const {\n    departments\n  } = useDepartments();\n  const {\n    designations\n  } = useDesignations();\n  const {\n    jobstatus\n  } = useJobstatus();\n  const [isresign, setIsresign] = useState(false); //const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\n\n  const {\n    handleSubmit,\n    control\n  } = useForm({\n    defaultValues: { ...state\n    }\n  }); //console.log(\"jobstate\",state)  \n\n  const onSubmit = values => {\n    if (statustype === \"edit\") {\n      update_Item(values);\n    }\n\n    if (statustype === \"add\") {\n      add_Item(values);\n    }\n\n    handleClose();\n  };\n\n  const handleClose = () => {\n    onJobClose();\n  }; // useEffect(() => {\n  //   setState(initial_state);\n  //   setState({ ...formdata });\n  //   setState({ ...formdata });\n  //   console.log(\"laeve form\",state)\n  // }, [initialValues]);\n\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      p: 2,\n      children: /*#__PURE__*/_jsxDEV(Heading, {\n        size: \"md\",\n        children: \"EMPLOYMENT HISTORY FORM\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            control: control,\n            name: \"name\",\n            defaultValue: state.name,\n            render: ({\n              field: {\n                onChange,\n                value,\n                ref\n              }\n            }) => /*#__PURE__*/_jsxDEV(InputGroup, {\n              children: /*#__PURE__*/_jsxDEV(HStack, {\n                w: \"100%\",\n                py: 1,\n                children: [/*#__PURE__*/_jsxDEV(InputLeftAddon, {\n                  children: \"Name\",\n                  minWidth: field_width\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  name: \"name\",\n                  value: value,\n                  width: \"full\",\n                  onChange: onChange,\n                  borderColor: \"gray.400\",\n                  isReadOnly: true //textTransform=\"capitalize\"\n                  ,\n                  ref: ref,\n                  placeholder: \"name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            control: control,\n            name: \"designation\",\n            defaultValue: state.designation,\n            render: ({\n              field: {\n                onChange,\n                value,\n                ref\n              }\n            }) => /*#__PURE__*/_jsxDEV(InputGroup, {\n              children: /*#__PURE__*/_jsxDEV(HStack, {\n                w: \"100%\",\n                py: 1,\n                children: [/*#__PURE__*/_jsxDEV(InputLeftAddon, {\n                  children: \"Designation\",\n                  minWidth: field_width\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  name: \"designation\",\n                  value: value,\n                  width: \"full\",\n                  onChange: onChange,\n                  borderColor: \"gray.400\" //textTransform=\"capitalize\"\n                  ,\n                  ref: ref //placeholder=\"category\"\n                  ,\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"None\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 183,\n                    columnNumber: 23\n                  }, this), designations && designations.map(rec => {\n                    return /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: rec.name,\n                      children: rec.name\n                    }, rec.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 187,\n                      columnNumber: 29\n                    }, this);\n                  })]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            control: control,\n            name: \"department\",\n            defaultValue: state.department,\n            render: ({\n              field: {\n                onChange,\n                value,\n                ref\n              }\n            }) => /*#__PURE__*/_jsxDEV(InputGroup, {\n              children: /*#__PURE__*/_jsxDEV(HStack, {\n                w: \"100%\",\n                py: 1,\n                children: [/*#__PURE__*/_jsxDEV(InputLeftAddon, {\n                  children: \"Department\",\n                  minWidth: field_width\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  name: \"department\",\n                  value: value,\n                  width: \"full\",\n                  onChange: onChange,\n                  borderColor: \"gray.400\" //textTransform=\"capitalize\"\n                  ,\n                  ref: ref //placeholder=\"category\"\n                  ,\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"None\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 222,\n                    columnNumber: 23\n                  }, this), departments && departments.map(rec => {\n                    return /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: rec.name,\n                      children: rec.name\n                    }, rec.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 226,\n                      columnNumber: 29\n                    }, this);\n                  })]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            control: control,\n            name: \"basicsalary\",\n            defaultValue: state.basicsalary,\n            render: ({\n              field: {\n                onChange,\n                value,\n                ref\n              }\n            }) => /*#__PURE__*/_jsxDEV(InputGroup, {\n              children: /*#__PURE__*/_jsxDEV(HStack, {\n                w: \"100%\",\n                py: 1,\n                children: [/*#__PURE__*/_jsxDEV(InputLeftAddon, {\n                  children: \"Basic Salary\",\n                  minWidth: field_width\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  name: \"basicsalary\",\n                  value: value,\n                  type: \"number\",\n                  width: \"full\",\n                  onChange: onChange,\n                  borderColor: \"gray.400\" //textTransform=\"capitalize\"\n                  ,\n                  ref: ref,\n                  placeholder: \"basic salary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            control: control,\n            name: \"siteallows\",\n            defaultValue: state.siteallows,\n            render: ({\n              field: {\n                onChange,\n                value,\n                ref\n              }\n            }) => /*#__PURE__*/_jsxDEV(InputGroup, {\n              children: /*#__PURE__*/_jsxDEV(HStack, {\n                w: \"100%\",\n                py: 1,\n                children: [/*#__PURE__*/_jsxDEV(InputLeftAddon, {\n                  children: \"Site Allowance\",\n                  minWidth: field_width\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 277,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  name: \"siteallows\",\n                  value: value,\n                  type: \"number\",\n                  width: \"full\",\n                  onChange: onChange,\n                  borderColor: \"gray.400\" //textTransform=\"capitalize\"\n                  ,\n                  ref: ref,\n                  placeholder: \"site allowance\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            control: control,\n            name: \"effectdate\",\n            defaultValue: state.effectdate,\n            render: ({\n              field: {\n                onChange,\n                value,\n                ref\n              }\n            }) => /*#__PURE__*/_jsxDEV(InputGroup, {\n              children: /*#__PURE__*/_jsxDEV(HStack, {\n                w: \"100%\",\n                py: 1,\n                children: [/*#__PURE__*/_jsxDEV(InputLeftAddon, {\n                  children: \"Effective Date\",\n                  minWidth: field_width\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 307,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  name: \"effectdate\",\n                  value: value,\n                  type: \"date\",\n                  width: \"full\",\n                  onChange: onChange,\n                  borderColor: \"gray.400\" //textTransform=\"capitalize\"\n                  ,\n                  ref: ref,\n                  placeholder: \"effective date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 311,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            control: control,\n            name: \"status\",\n            defaultValue: state.department,\n            render: ({\n              field: {\n                onChange,\n                value,\n                ref\n              }\n            }) => /*#__PURE__*/_jsxDEV(InputGroup, {\n              children: /*#__PURE__*/_jsxDEV(HStack, {\n                w: \"100%\",\n                py: 1,\n                children: [/*#__PURE__*/_jsxDEV(InputLeftAddon, {\n                  children: \"Status\",\n                  minWidth: field_width\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 338,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  name: \"status\",\n                  value: value,\n                  width: \"full\",\n                  onChange: onChange,\n                  borderColor: \"gray.400\" //textTransform=\"capitalize\"\n                  ,\n                  ref: ref //placeholder=\"category\"\n                  ,\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"None\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 349,\n                    columnNumber: 23\n                  }, this), jobstatus && jobstatus.map(rec => {\n                    return /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: rec.name,\n                      children: rec.name\n                    }, rec.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 353,\n                      columnNumber: 29\n                    }, this);\n                  })]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 339,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 337,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            control: control,\n            name: \"isresign\",\n            defaultValue: isresign,\n            render: ({\n              field: {\n                onChange,\n                value,\n                ref\n              }\n            }) => /*#__PURE__*/_jsxDEV(InputGroup, {\n              children: /*#__PURE__*/_jsxDEV(HStack, {\n                w: \"100%\",\n                py: 1,\n                children: [/*#__PURE__*/_jsxDEV(InputLeftAddon, {\n                  children: \"Resign ?\",\n                  minWidth: field_width\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 372,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n                  name: \"isresign\",\n                  value: value,\n                  width: \"full\",\n                  onChange: e => {\n                    onChange(e.target.checked);\n                    setIsresign(e.target.checked);\n                  },\n                  borderColor: \"gray.400\" //textTransform=\"capitalize\"\n                  ,\n                  ref: ref\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 376,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            control: control,\n            name: \"remark\",\n            defaultValue: state.remark,\n            render: ({\n              field: {\n                onChange,\n                value,\n                ref\n              }\n            }) => /*#__PURE__*/_jsxDEV(InputGroup, {\n              children: /*#__PURE__*/_jsxDEV(HStack, {\n                w: \"100%\",\n                py: 1,\n                children: [/*#__PURE__*/_jsxDEV(InputLeftAddon, {\n                  children: \"Remark\",\n                  minWidth: field_width\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 403,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  name: \"remark\",\n                  value: value,\n                  width: \"full\",\n                  onChange: onChange,\n                  borderColor: \"gray.400\" //textTransform=\"capitalize\"\n                  ,\n                  ref: ref,\n                  placeholder: \"remark\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 404,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 402,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          color: \"primary\",\n          className: classes.button,\n          onClick: handleSubmit(onSubmit),\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n};\n\n_s(JobhistoryForm, \"qQE4QLYA1TVAXkA9KRzHhbFdeew=\", false, function () {\n  return [useStyles, useDepartments, useDesignations, useJobstatus, useForm];\n});\n\n_c = JobhistoryForm;\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(1)\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1)\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1)\n  },\n  iconSmall: {\n    fontSize: 20\n  },\n  root: {\n    padding: theme.spacing(3, 2)\n  },\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 400\n  }\n}));\nexport default JobhistoryForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"JobhistoryForm\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-demo/src/components/JobhistoryForm.js"],"names":["React","useState","Box","Button","Checkbox","Divider","FormControl","Heading","HStack","Input","InputGroup","InputLeftAddon","Select","makeStyles","useDepartments","useDesignations","useJobstatus","Controller","useForm","JobhistoryForm","state","setState","statustype","add_Item","update_Item","onJobClose","classes","useStyles","field_width","departments","designations","jobstatus","isresign","setIsresign","handleSubmit","control","defaultValues","onSubmit","values","handleClose","name","field","onChange","value","ref","designation","map","rec","id","department","basicsalary","siteallows","effectdate","e","target","checked","remark","button","theme","margin","spacing","leftIcon","marginRight","rightIcon","marginLeft","iconSmall","fontSize","root","padding","container","display","flexWrap","textField","width"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport //   Button,\r\n//   Icon,\r\n//   MenuItem,\r\n//   TextField,\r\n//   Paper,\r\n//   Select,\r\n//   Typography,\r\n//   Divider,\r\n\"@material-ui/core\";\r\nimport {\r\n  //AspectRatio,\r\n  Box,\r\n  Button,\r\n  //ButtonGroup,\r\n  //Center,\r\n  Checkbox,\r\n  //Container,\r\n  Divider,\r\n  //Flex,\r\n  FormControl,\r\n  //FormLabel,\r\n  //FormErrorMessage,\r\n  //FormHelperText,\r\n  //Grid,\r\n  //GridItem,\r\n  Heading,\r\n  HStack,\r\n  //Icon,\r\n  //IconButton,\r\n  //Image,\r\n  Input,\r\n  InputGroup,\r\n  InputLeftAddon,\r\n  //InputLeftElement,\r\n  //Modal,\r\n  //ModalOverlay,\r\n  //ModalContent,\r\n  //ModalHeader,\r\n  //ModalFooter,\r\n  //ModalBody,\r\n  //ModalCloseButton,\r\n  //Radio,\r\n  //RadioGroup,\r\n  Select,\r\n  //SimpleGrid,\r\n  //Stack,\r\n  //StackDivider,\r\n  //Text,\r\n  //Tabs,\r\n \r\n} from \"@chakra-ui/react\";\r\n//import * as emailjs from \"emailjs-com\";\r\n//import { useRecoilState } from \"recoil\";\r\n//import { loginLevelState } from \"./data/atomdata\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n//import { useCustomToast } from \"../helpers/useCustomToast\";\r\n//import { useEmployees } from \"./employees/useEmployees\";\r\nimport { useDepartments } from \"./departments/useDepartments\";\r\nimport { useDesignations } from \"./designations/useDesignations\";\r\nimport { useJobstatus } from \"./jobstatus/useJobstatus\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\n\r\n//const SERVICE_ID = process.env.REACT_APP_EMAILJS_SERVICEID;\r\n//const TEMPLATE_ID = \"template_1y8odlq\";\r\n//const USER_ID = process.env.REACT_APP_EMAILJS_USERID;\r\n\r\n// const initial_state = {\r\n//   empid: \"\",\r\n//   name: \"\",\r\n//   designation: \"\",\r\n//   department: \"\",\r\n//   effectdate: \"\",\r\n//   basicsalary: 0,\r\n//   siteallows: 0,\r\n//   remark: \"\",\r\n//   status: \"\",\r\n//   isresign: false,\r\n//};\r\n\r\nconst JobhistoryForm = ({\r\n  state,\r\n  setState,\r\n  statustype,\r\n  add_Item,\r\n  update_Item,\r\n  onJobClose,\r\n}) => {\r\n  //const toast = useCustomToast();\r\n  const classes = useStyles();\r\n  const field_width = \"138\";\r\n  //const { employees } = useEmployees();\r\n  const { departments } = useDepartments();\r\n  const { designations } = useDesignations();\r\n  const { jobstatus } = useJobstatus();\r\n  const [isresign, setIsresign] = useState(false);\r\n  //const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const { handleSubmit, control } = useForm({\r\n    defaultValues: {\r\n      ...state,\r\n    },\r\n  });\r\n\r\n  //console.log(\"jobstate\",state)  \r\n  const onSubmit = (values) => {\r\n    if (statustype === \"edit\") {\r\n      update_Item(values);\r\n    }\r\n    if (statustype === \"add\") {\r\n      add_Item(values);\r\n    }\r\n    handleClose();\r\n  };\r\n\r\n  const handleClose = () => {\r\n    onJobClose();\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   setState(initial_state);\r\n  //   setState({ ...formdata });\r\n  //   setState({ ...formdata });\r\n  //   console.log(\"laeve form\",state)\r\n  // }, [initialValues]);\r\n\r\n  return (\r\n    <Box>\r\n      <Box p={2}>\r\n        <Heading size=\"md\">EMPLOYMENT HISTORY FORM</Heading>\r\n      </Box>\r\n      <Divider />\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <div>\r\n          <FormControl>\r\n            <Controller\r\n              control={control}\r\n              name=\"name\"\r\n              defaultValue={state.name}\r\n              render={({ field: { onChange, value, ref } }) => (\r\n                <InputGroup>\r\n                  <HStack w=\"100%\" py={1}>\r\n                    <InputLeftAddon children=\"Name\" minWidth={field_width} />\r\n                    <Input\r\n                      name=\"name\"\r\n                      value={value}\r\n                      width=\"full\"\r\n                      onChange={onChange}\r\n                      borderColor=\"gray.400\"\r\n                      isReadOnly\r\n                      //textTransform=\"capitalize\"\r\n                      ref={ref}\r\n                      placeholder=\"name\"\r\n                    />\r\n                  </HStack>\r\n                </InputGroup>\r\n              )}\r\n            />\r\n          </FormControl>\r\n        </div>\r\n        <div>\r\n          <FormControl>\r\n            <Controller\r\n              control={control}\r\n              name=\"designation\"\r\n              defaultValue={state.designation}\r\n              render={({ field: { onChange, value, ref } }) => (\r\n                <InputGroup>\r\n                  <HStack w=\"100%\" py={1}>\r\n                    <InputLeftAddon\r\n                      children=\"Designation\"\r\n                      minWidth={field_width}\r\n                    />\r\n                    <Select\r\n                      name=\"designation\"\r\n                      value={value}\r\n                      width=\"full\"\r\n                      onChange={onChange}\r\n                      borderColor=\"gray.400\"\r\n                      //textTransform=\"capitalize\"\r\n                      ref={ref}\r\n                      //placeholder=\"category\"\r\n                    >\r\n                      <option value=\"\">None</option>\r\n                      {designations &&\r\n                        designations.map((rec) => {\r\n                          return (\r\n                            <option key={rec.id} value={rec.name}>\r\n                              {rec.name}\r\n                            </option>\r\n                          );\r\n                        })}\r\n                    </Select>\r\n                  </HStack>\r\n                </InputGroup>\r\n              )}\r\n            />\r\n          </FormControl>\r\n        </div>\r\n        <div>\r\n          <FormControl>\r\n            <Controller\r\n              control={control}\r\n              name=\"department\"\r\n              defaultValue={state.department}\r\n              render={({ field: { onChange, value, ref } }) => (\r\n                <InputGroup>\r\n                  <HStack w=\"100%\" py={1}>\r\n                    <InputLeftAddon\r\n                      children=\"Department\"\r\n                      minWidth={field_width}\r\n                    />\r\n                    <Select\r\n                      name=\"department\"\r\n                      value={value}\r\n                      width=\"full\"\r\n                      onChange={onChange}\r\n                      borderColor=\"gray.400\"\r\n                      //textTransform=\"capitalize\"\r\n                      ref={ref}\r\n                      //placeholder=\"category\"\r\n                    >\r\n                      <option value=\"\">None</option>\r\n                      {departments &&\r\n                        departments.map((rec) => {\r\n                          return (\r\n                            <option key={rec.id} value={rec.name}>\r\n                              {rec.name}\r\n                            </option>\r\n                          );\r\n                        })}\r\n                    </Select>\r\n                  </HStack>\r\n                </InputGroup>\r\n              )}\r\n            />\r\n          </FormControl>\r\n        </div>\r\n        <div>\r\n          <FormControl>\r\n            <Controller\r\n              control={control}\r\n              name=\"basicsalary\"\r\n              defaultValue={state.basicsalary}\r\n              render={({ field: { onChange, value, ref } }) => (\r\n                <InputGroup>\r\n                  <HStack w=\"100%\" py={1}>\r\n                    <InputLeftAddon\r\n                      children=\"Basic Salary\"\r\n                      minWidth={field_width}\r\n                    />\r\n                    <Input\r\n                      name=\"basicsalary\"\r\n                      value={value}\r\n                      type=\"number\"\r\n                      width=\"full\"\r\n                      onChange={onChange}\r\n                      borderColor=\"gray.400\"\r\n                      //textTransform=\"capitalize\"\r\n                      ref={ref}\r\n                      placeholder=\"basic salary\"\r\n                    />\r\n                  </HStack>\r\n                </InputGroup>\r\n              )}\r\n            />\r\n          </FormControl>\r\n        </div>\r\n        <div>\r\n          <FormControl>\r\n            <Controller\r\n              control={control}\r\n              name=\"siteallows\"\r\n              defaultValue={state.siteallows}\r\n              render={({ field: { onChange, value, ref } }) => (\r\n                <InputGroup>\r\n                  <HStack w=\"100%\" py={1}>\r\n                    <InputLeftAddon\r\n                      children=\"Site Allowance\"\r\n                      minWidth={field_width}\r\n                    />\r\n                    <Input\r\n                      name=\"siteallows\"\r\n                      value={value}\r\n                      type=\"number\"\r\n                      width=\"full\"\r\n                      onChange={onChange}\r\n                      borderColor=\"gray.400\"\r\n                      //textTransform=\"capitalize\"\r\n                      ref={ref}\r\n                      placeholder=\"site allowance\"\r\n                    />\r\n                  </HStack>\r\n                </InputGroup>\r\n              )}\r\n            />\r\n          </FormControl>\r\n        </div>\r\n        <div>\r\n          <FormControl>\r\n            <Controller\r\n              control={control}\r\n              name=\"effectdate\"\r\n              defaultValue={state.effectdate}\r\n              render={({ field: { onChange, value, ref } }) => (\r\n                <InputGroup>\r\n                  <HStack w=\"100%\" py={1}>\r\n                    <InputLeftAddon\r\n                      children=\"Effective Date\"\r\n                      minWidth={field_width}\r\n                    />\r\n                    <Input\r\n                      name=\"effectdate\"\r\n                      value={value}\r\n                      type=\"date\"\r\n                      width=\"full\"\r\n                      onChange={onChange}\r\n                      borderColor=\"gray.400\"\r\n                      //textTransform=\"capitalize\"\r\n                      ref={ref}\r\n                      placeholder=\"effective date\"\r\n                    />\r\n                  </HStack>\r\n                </InputGroup>\r\n              )}\r\n            />\r\n          </FormControl>\r\n        </div>\r\n\r\n        <div>\r\n          <FormControl>\r\n            <Controller\r\n              control={control}\r\n              name=\"status\"\r\n              defaultValue={state.department}\r\n              render={({ field: { onChange, value, ref } }) => (\r\n                <InputGroup>\r\n                  <HStack w=\"100%\" py={1}>\r\n                    <InputLeftAddon children=\"Status\" minWidth={field_width} />\r\n                    <Select\r\n                      name=\"status\"\r\n                      value={value}\r\n                      width=\"full\"\r\n                      onChange={onChange}\r\n                      borderColor=\"gray.400\"\r\n                      //textTransform=\"capitalize\"\r\n                      ref={ref}\r\n                      //placeholder=\"category\"\r\n                    >\r\n                      <option value=\"\">None</option>\r\n                      {jobstatus &&\r\n                        jobstatus.map((rec) => {\r\n                          return (\r\n                            <option key={rec.id} value={rec.name}>\r\n                              {rec.name}\r\n                            </option>\r\n                          );\r\n                        })}\r\n                    </Select>\r\n                  </HStack>\r\n                </InputGroup>\r\n              )}\r\n            />\r\n          </FormControl>\r\n          <FormControl>\r\n            <Controller\r\n              control={control}\r\n              name=\"isresign\"\r\n              defaultValue={isresign}\r\n              render={({ field: { onChange, value, ref } }) => (\r\n                <InputGroup>\r\n                  <HStack w=\"100%\" py={1}>\r\n                    <InputLeftAddon\r\n                      children=\"Resign ?\"\r\n                      minWidth={field_width}\r\n                    />\r\n                    <Checkbox\r\n                      name=\"isresign\"\r\n                      value={value}\r\n                      width=\"full\"\r\n                      onChange={(e) => {\r\n                        onChange(e.target.checked);\r\n                        setIsresign(e.target.checked);\r\n                      }}\r\n                      borderColor=\"gray.400\"\r\n                      //textTransform=\"capitalize\"\r\n                      ref={ref}\r\n                    ></Checkbox>\r\n                  </HStack>\r\n                </InputGroup>\r\n              )}\r\n            />\r\n          </FormControl>\r\n        </div>\r\n        <div>\r\n          <FormControl>\r\n            <Controller\r\n              control={control}\r\n              name=\"remark\"\r\n              defaultValue={state.remark}\r\n              render={({ field: { onChange, value, ref } }) => (\r\n                <InputGroup>\r\n                  <HStack w=\"100%\" py={1}>\r\n                    <InputLeftAddon children=\"Remark\" minWidth={field_width} />\r\n                    <Input\r\n                      name=\"remark\"\r\n                      value={value}\r\n                      width=\"full\"\r\n                      onChange={onChange}\r\n                      borderColor=\"gray.400\"\r\n                      //textTransform=\"capitalize\"\r\n                      ref={ref}\r\n                      placeholder=\"remark\"\r\n                    />\r\n                  </HStack>\r\n                </InputGroup>\r\n              )}\r\n            />\r\n          </FormControl>\r\n        </div>\r\n\r\n        <div>\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.button}\r\n            onClick={handleSubmit(onSubmit)}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  leftIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  iconSmall: {\r\n    fontSize: 20,\r\n  },\r\n  root: {\r\n    padding: theme.spacing(3, 2),\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 400,\r\n  },\r\n}));\r\n\r\nexport default JobhistoryForm;\r\n"]},"metadata":{},"sourceType":"module"}
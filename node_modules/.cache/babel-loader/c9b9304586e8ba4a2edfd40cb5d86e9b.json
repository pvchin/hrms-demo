{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useCallback } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { payslips_url } from \"../../utils/constants\";\nimport { filterByPayrun } from \"./utils\";\nimport axios from \"axios\";\nimport { queryKeys } from \"../react-query/constants\";\nasync function getPayslips(payrun) {\n  const {\n    data\n  } = await axios.get(`${payslips_url}?fv=${payrun}`);\n  //const { data } = await axios.get(`${payslips_url}`);\n  return data;\n}\nexport function usePayslipsBatch(payrun) {\n  _s();\n  const [filter, setFilter] = useState(\"all\");\n  const [psbpayrunId, setPSBPayrunId] = useState(\"\");\n  const selectFn = useCallback(unfiltered => filterByPayrun(unfiltered, filter), [filter]);\n  const fallback = [];\n  const {\n    data: payslipsbatch = fallback\n  } = useQuery([queryKeys.payslipsbatch, psbpayrunId],\n  //queryKeys.payslips,\n  () => getPayslips(psbpayrunId), {\n    select: filter !== \"all\" ? selectFn : undefined\n  });\n  return {\n    payslipsbatch,\n    filter,\n    setFilter,\n    setPSBPayrunId\n  };\n}\n_s(usePayslipsBatch, \"3I7FwR9BsCgD/hC7lJxBn431zCc=\", false, function () {\n  return [useQuery];\n});","map":{"version":3,"names":["useState","useCallback","useQuery","payslips_url","filterByPayrun","axios","queryKeys","getPayslips","payrun","data","get","usePayslipsBatch","filter","setFilter","psbpayrunId","setPSBPayrunId","selectFn","unfiltered","fallback","payslipsbatch","select","undefined"],"sources":["D:/react-myprojects/hrms-demo/src/components/payslips/usePayslipsBatch.js"],"sourcesContent":["import { useState, useCallback } from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport { payslips_url } from \"../../utils/constants\";\r\nimport { filterByPayrun } from \"./utils\";\r\n\r\nimport axios from \"axios\";\r\nimport { queryKeys } from \"../react-query/constants\";\r\n\r\nasync function getPayslips(payrun) {\r\n  const { data } = await axios.get(`${payslips_url}?fv=${payrun}`);\r\n  //const { data } = await axios.get(`${payslips_url}`);\r\n  return data;\r\n}\r\n\r\nexport function usePayslipsBatch(payrun) {\r\n  const [filter, setFilter] = useState(\"all\");\r\n  const [psbpayrunId, setPSBPayrunId] = useState(\"\");\r\n\r\n  const selectFn = useCallback(\r\n    (unfiltered) => filterByPayrun(unfiltered, filter),\r\n    [filter]\r\n  );\r\n\r\n  const fallback = [];\r\n  const { data: payslipsbatch = fallback } = useQuery(\r\n    [queryKeys.payslipsbatch, psbpayrunId],\r\n    //queryKeys.payslips,\r\n    () => getPayslips(psbpayrunId),\r\n    {\r\n      select: filter !== \"all\" ? selectFn : undefined,\r\n    }\r\n  );\r\n\r\n  return { payslipsbatch, filter, setFilter, setPSBPayrunId };\r\n}\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAC7C,SAASC,QAAQ,QAAQ,aAAa;AACtC,SAASC,YAAY,QAAQ,uBAAuB;AACpD,SAASC,cAAc,QAAQ,SAAS;AAExC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,0BAA0B;AAEpD,eAAeC,WAAW,CAACC,MAAM,EAAE;EACjC,MAAM;IAAEC;EAAK,CAAC,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAE,GAAEP,YAAa,OAAMK,MAAO,EAAC,CAAC;EAChE;EACA,OAAOC,IAAI;AACb;AAEA,OAAO,SAASE,gBAAgB,CAACH,MAAM,EAAE;EAAA;EACvC,MAAM,CAACI,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAACc,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMgB,QAAQ,GAAGf,WAAW,CACzBgB,UAAU,IAAKb,cAAc,CAACa,UAAU,EAAEL,MAAM,CAAC,EAClD,CAACA,MAAM,CAAC,CACT;EAED,MAAMM,QAAQ,GAAG,EAAE;EACnB,MAAM;IAAET,IAAI,EAAEU,aAAa,GAAGD;EAAS,CAAC,GAAGhB,QAAQ,CACjD,CAACI,SAAS,CAACa,aAAa,EAAEL,WAAW,CAAC;EACtC;EACA,MAAMP,WAAW,CAACO,WAAW,CAAC,EAC9B;IACEM,MAAM,EAAER,MAAM,KAAK,KAAK,GAAGI,QAAQ,GAAGK;EACxC,CAAC,CACF;EAED,OAAO;IAAEF,aAAa;IAAEP,MAAM;IAAEC,SAAS;IAAEE;EAAe,CAAC;AAC7D;AAAC,GApBeJ,gBAAgB;EAAA,QAUaT,QAAQ;AAAA"},"metadata":{},"sourceType":"module"}
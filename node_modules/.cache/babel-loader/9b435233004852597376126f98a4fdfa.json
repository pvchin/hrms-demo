{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-demo\\\\src\\\\components\\\\AllEmployeesTable.js\";\nimport React, { useState, useMemo } from \"react\";\nimport MaterialTable, { MTableToolbar } from \"material-table\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Box, Heading, Modal, ModalOverlay, ModalContent,\n//ModalHeader,\n//ModalFooter,\nModalBody, ModalCloseButton, Tabs, TabList, TabPanels, Tab, TabPanel, useDisclosure } from \"@chakra-ui/react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button, Icon } from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { useCustomToast } from \"../helpers/useCustomToast\";\n//import { useRecoilState } from \"recoil\";\n//import { editEmployeeIdState } from \"./data/atomdata\";\nimport { CustomDialog } from \"../helpers/CustomDialog\";\nimport { AlertDialogBox } from \"../helpers/AlertDialogBox\";\nimport EmployeeView from \"./EmployeeView\";\nimport { useEmployeesContext } from \"../context/employees_context\";\n//import { useTablesContext } from \"../context/tables_context\";\n//import { useDepartments } from \"./departments/useDepartments\";\n//import { useDesignations } from \"./designations/useDesignations\";\nimport { useEmployees } from \"./employees/useEmployees\";\n//import { useAllEmployees } from \"./employees/useAllEmployees\";\nimport { useDeleteEmployees } from \"./employees/useDeleteEmployees\";\nimport App from \"../utils/firebase\";\nimport EmployeeFormAdd from \"./EmployeeFormAdd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AllEmployeesTable() {\n  let navigate = useNavigate();\n  const classes = useStyles();\n  const toast = useCustomToast();\n  //const { designations } = useDesignations();\n  //const { departments } = useDepartments();\n  const {\n    employees,\n    setEmployeeId\n  } = useEmployees();\n  //const { allemployees, setAllEmpId } = useAllEmployees();\n  //const [empId, setEmpId] = useRecoilState(editEmployeeIdState);\n  const deleteEmployees = useDeleteEmployees();\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\n  const {\n    isOpen: isAddEmpFormOpen,\n    onOpen: onAddEmpFormOpen,\n    onClose: onAddEmpFormClose\n  } = useDisclosure();\n  const columns = useMemo(() => [{\n    title: \"Name\",\n    field: \"name\"\n  }, {\n    title: \"IC No\",\n    field: \"ic_no\"\n  }, {\n    title: \"Gender\",\n    field: \"gender\"\n  }, {\n    title: \"Birth Date\",\n    field: \"birthdate\",\n    type: \"date\",\n    dateSetting: {\n      locale: \"en-GB\"\n    }\n  }, {\n    title: \"Email\",\n    field: \"email\"\n  }], []);\n  const {\n    editEmployeeID,\n    //employees_loading,\n    //deleteEmployee,\n    //loadEmployees,\n    setEditEmployeeID,\n    setIsEditingOn,\n    //setIsEditingOff,\n    resetSingleEmployee,\n    resetEmployees\n    //getSingleEmployee,\n  } = useEmployeesContext();\n\n  //const { loadDepartments, loadDesignations, resetTables } = useTablesContext();\n\n  // useEffect(() => {\n  //   setAllEmpId(\"111\");\n  // }, []);\n\n  // useEffect(() => {\n  //   resetEmployees();\n  //   loadEmployees();\n  // }, []);\n\n  const update_Employee = async data => {\n    const {\n      id\n    } = data;\n    resetSingleEmployee();\n    resetEmployees();\n    setEditEmployeeID(id);\n    setIsEditingOn();\n    setEmployeeId(id);\n    navigate(\"/singleemployee\");\n  };\n  const add_Employee = async data => {\n    //resetSingleEmployee();\n    //setEditEmployeeID(\"\");\n    //setIsEditingOff();\n    //handleDialogOpen();\n    onAddEmpFormOpen();\n    //history.push(\"/singleemployee\");\n  };\n\n  const delete_Employee = data => {\n    const {\n      id\n    } = data;\n    setEditEmployeeID(id);\n    handleAlertOpen();\n    //deleteEmployee(id);\n    //loadEmployees();\n  };\n\n  // const handleDialogOpen = () => {\n  //   setIsDialogOpen(true);\n  // };\n\n  const handleDialogClose = () => {\n    setIsDialogOpen(false);\n    //loadEmployees();\n  };\n\n  const handleAlertOpen = () => {\n    setIsAlertOpen(true);\n  };\n  const handleAlertClose = () => {\n    setIsAlertOpen(false);\n  };\n  const handleOnDeleteConfirm = () => {\n    const id = editEmployeeID;\n    deleteEmployees(id);\n    //loadEmployees();\n  };\n\n  // const calculateAge = (dob) => {\n  //   var today = new Date();\n  //   var birthDate = new Date(dob);\n  //   var age = today.getFullYear() - birthDate.getFullYear();\n  //   var m = today.getMonth() - birthDate.getMonth();\n  //   if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\n  //     age--;\n  //   }\n  //   return age;\n  // };\n\n  const Reset_PW = () => {\n    employees.forEach(rec => {\n      if (rec.tableData.checked) {\n        try {\n          if (rec.password) {\n            App.auth().createUserWithEmailAndPassword(rec.email, rec.password);\n          } else {\n            App.auth().createUserWithEmailAndPassword(rec.email, \"abc123*\");\n          }\n        } catch (error) {\n          console.log(error);\n        }\n        try {\n          App.auth().sendPasswordResetEmail(rec.email);\n          toast({\n            title: `Reset Password sent to ${rec.email}!`,\n            status: \"success\"\n          });\n        } catch (error) {\n          toast({\n            title: `Error send to  ${rec.email}!`,\n            status: \"warning\"\n          });\n        }\n      }\n    });\n    employees.forEach(d => {\n      if (d.tableData) d.tableData.checked = false;\n    });\n  };\n\n  // if (employees_loading) {\n  //   return <div>Loading...</div>;\n  // } else {\n  //   //console.log(employees);\n  // }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      p: 2,\n      children: /*#__PURE__*/_jsxDEV(Heading, {\n        size: \"md\",\n        children: \"Employee Listing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n      children: [/*#__PURE__*/_jsxDEV(TabList, {\n        children: [/*#__PURE__*/_jsxDEV(Tab, {\n          children: \"Current\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          children: \"Resigned\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TabPanels, {\n        children: [/*#__PURE__*/_jsxDEV(TabPanel, {\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            maxW: \"100%\",\n            pt: \"5px\",\n            children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n              columns: columns,\n              data: employees.filter(r => !r.hasresigned).sort((a, b) => a.name > b.name ? 1 : b.name > a.name ? -1 : 0),\n              title: \"Current Employees\",\n              icons: {\n                Add: props => /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 35\n                }, this),\n                Edit: props => /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 36\n                }, this),\n                Delete: props => /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 38\n                }, this),\n                Clear: props => /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 37\n                }, this),\n                Check: props => /*#__PURE__*/_jsxDEV(CheckIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 37\n                }, this),\n                Search: props => /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 38\n                }, this),\n                ResetSearch: props => /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 43\n                }, this)\n              },\n              actions: [{\n                icon: \"edit\",\n                tooltip: \"Edit Record\",\n                position: \"row\",\n                onClick: (event, rowData) => {\n                  update_Employee(rowData);\n                }\n              }, {\n                icon: \"delete\",\n                tooltip: \"Delete Record\",\n                position: \"row\",\n                onClick: (event, rowData) => {\n                  delete_Employee(rowData);\n                }\n              }, {\n                icon: \"add\",\n                tooltip: \"Add Record\",\n                isFreeAction: true,\n                onClick: (event, rowData) => {\n                  add_Employee(rowData);\n                }\n              }],\n              options: {\n                filtering: true,\n                selection: true,\n                paging: false,\n                headerStyle: {\n                  //backgroundColor: \"#DAAD86\",\n                  backgroundColor: \"#90CDF4\",\n                  color: \"secondary\"\n                },\n                showTitle: true\n              },\n              components: {\n                Toolbar: props => /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(MTableToolbar, {\n                    ...props\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 270,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      padding: \"5px 10px\"\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      type: \"submit\",\n                      variant: \"contained\",\n                      color: \"secondary\",\n                      className: classes.button,\n                      onClick: Reset_PW,\n                      children: [\"Reset PW\", \" \", /*#__PURE__*/_jsxDEV(Icon, {\n                        className: classes.rightIcon,\n                        children: \"send\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 280,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 272,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 271,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 21\n                }, this)\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            maxW: \"100%\",\n            pt: \"5px\",\n            children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n              columns: columns,\n              data: employees.filter(r => r.hasresigned).sort((a, b) => a.name > b.name ? 1 : b.name > a.name ? -1 : 0),\n              title: \"Resigned Employees\",\n              icons: {\n                Add: props => /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 300,\n                  columnNumber: 35\n                }, this),\n                Edit: props => /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 301,\n                  columnNumber: 36\n                }, this),\n                Delete: props => /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 302,\n                  columnNumber: 38\n                }, this),\n                Clear: props => /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 37\n                }, this),\n                Check: props => /*#__PURE__*/_jsxDEV(CheckIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 37\n                }, this),\n                Search: props => /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 305,\n                  columnNumber: 38\n                }, this),\n                ResetSearch: props => /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 306,\n                  columnNumber: 43\n                }, this)\n              },\n              actions: [{\n                icon: \"edit\",\n                tooltip: \"Edit Record\",\n                position: \"row\",\n                onClick: (event, rowData) => {\n                  update_Employee(rowData);\n                }\n              }, {\n                icon: \"delete\",\n                tooltip: \"Delete Record\",\n                position: \"row\",\n                onClick: (event, rowData) => {\n                  delete_Employee(rowData);\n                }\n              }, {\n                icon: \"add\",\n                tooltip: \"Add Record\",\n                isFreeAction: true,\n                onClick: (event, rowData) => {\n                  add_Employee(rowData);\n                }\n              }],\n              options: {\n                filtering: true,\n                selection: false,\n                paging: false,\n                headerStyle: {\n                  //backgroundColor: \"#DAAD86\",\n                  backgroundColor: \"#90CDF4\",\n                  color: \"secondary\"\n                },\n                showTitle: true\n              },\n              components: {\n                Toolbar: props => /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(MTableToolbar, {\n                    ...props\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 348,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      padding: \"5px 10px\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 349,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 347,\n                  columnNumber: 21\n                }, this)\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      closeOnOverlayClick: false,\n      isOpen: isAddEmpFormOpen,\n      onClose: onAddEmpFormClose,\n      size: \"md\",\n      children: [/*#__PURE__*/_jsxDEV(ModalOverlay, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalContent, {\n        children: [/*#__PURE__*/_jsxDEV(ModalCloseButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          children: /*#__PURE__*/_jsxDEV(EmployeeFormAdd, {\n            onAddEmpFormClose: onAddEmpFormClose\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CustomDialog, {\n      isOpen: isDialogOpen,\n      handleClose: handleDialogClose,\n      title: \"\",\n      showButton: true,\n      isFullscreen: true,\n      isFullwidth: true,\n      children: /*#__PURE__*/_jsxDEV(EmployeeView, {\n        handleDialogClose: handleDialogClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AlertDialogBox, {\n      onClose: handleAlertClose,\n      onConfirm: handleOnDeleteConfirm,\n      isOpen: isAlertOpen,\n      title: \"Delete Employee\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Are you sure you want to delete ?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 201,\n    columnNumber: 5\n  }, this);\n}\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3, 2)\n  }\n}));","map":{"version":3,"names":["React","useState","useMemo","MaterialTable","MTableToolbar","useNavigate","Box","Heading","Modal","ModalOverlay","ModalContent","ModalBody","ModalCloseButton","Tabs","TabList","TabPanels","Tab","TabPanel","useDisclosure","makeStyles","Button","Icon","AddIcon","EditIcon","DeleteIcon","CheckIcon","SearchIcon","useCustomToast","CustomDialog","AlertDialogBox","EmployeeView","useEmployeesContext","useEmployees","useDeleteEmployees","App","EmployeeFormAdd","AllEmployeesTable","navigate","classes","useStyles","toast","employees","setEmployeeId","deleteEmployees","isDialogOpen","setIsDialogOpen","isAlertOpen","setIsAlertOpen","isOpen","isAddEmpFormOpen","onOpen","onAddEmpFormOpen","onClose","onAddEmpFormClose","columns","title","field","type","dateSetting","locale","editEmployeeID","setEditEmployeeID","setIsEditingOn","resetSingleEmployee","resetEmployees","update_Employee","data","id","add_Employee","delete_Employee","handleAlertOpen","handleDialogClose","handleAlertClose","handleOnDeleteConfirm","Reset_PW","forEach","rec","tableData","checked","password","auth","createUserWithEmailAndPassword","email","error","console","log","sendPasswordResetEmail","status","d","root","filter","r","hasresigned","sort","a","b","name","Add","props","Edit","Delete","Clear","Check","Search","ResetSearch","icon","tooltip","position","onClick","event","rowData","isFreeAction","filtering","selection","paging","headerStyle","backgroundColor","color","showTitle","Toolbar","padding","button","rightIcon","theme","spacing"],"sources":["D:/react-myprojects/hrms-demo/src/components/AllEmployeesTable.js"],"sourcesContent":["import React, { useState, useMemo } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {\r\n  Box,\r\n  Heading,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  //ModalHeader,\r\n  //ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  Tabs,\r\n  TabList,\r\n  TabPanels,\r\n  Tab,\r\n  TabPanel,\r\n  useDisclosure,\r\n} from \"@chakra-ui/react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button, Icon } from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { useCustomToast } from \"../helpers/useCustomToast\";\r\n//import { useRecoilState } from \"recoil\";\r\n//import { editEmployeeIdState } from \"./data/atomdata\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { AlertDialogBox } from \"../helpers/AlertDialogBox\";\r\nimport EmployeeView from \"./EmployeeView\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\n//import { useTablesContext } from \"../context/tables_context\";\r\n//import { useDepartments } from \"./departments/useDepartments\";\r\n//import { useDesignations } from \"./designations/useDesignations\";\r\nimport { useEmployees } from \"./employees/useEmployees\";\r\n//import { useAllEmployees } from \"./employees/useAllEmployees\";\r\nimport { useDeleteEmployees } from \"./employees/useDeleteEmployees\";\r\nimport App from \"../utils/firebase\";\r\nimport EmployeeFormAdd from \"./EmployeeFormAdd\";\r\n\r\nexport default function AllEmployeesTable() {\r\n  let navigate = useNavigate();\r\n  const classes = useStyles();\r\n  const toast = useCustomToast();\r\n  //const { designations } = useDesignations();\r\n  //const { departments } = useDepartments();\r\n  const { employees, setEmployeeId } = useEmployees();\r\n  //const { allemployees, setAllEmpId } = useAllEmployees();\r\n  //const [empId, setEmpId] = useRecoilState(editEmployeeIdState);\r\n  const deleteEmployees = useDeleteEmployees();\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\r\n  const {\r\n    isOpen: isAddEmpFormOpen,\r\n    onOpen: onAddEmpFormOpen,\r\n    onClose: onAddEmpFormClose,\r\n  } = useDisclosure();\r\n  \r\n  const columns = useMemo(() => [\r\n    {\r\n      title: \"Name\",\r\n      field: \"name\",\r\n    },\r\n    { title: \"IC No\", field: \"ic_no\" },\r\n    { title: \"Gender\", field: \"gender\" },\r\n    {\r\n      title: \"Birth Date\",\r\n      field: \"birthdate\",\r\n      type: \"date\",\r\n      dateSetting: { locale: \"en-GB\" },\r\n    },\r\n    { title: \"Email\", field: \"email\" },\r\n  ],[]);\r\n\r\n  const {\r\n    editEmployeeID,\r\n    //employees_loading,\r\n    //deleteEmployee,\r\n    //loadEmployees,\r\n    setEditEmployeeID,\r\n    setIsEditingOn,\r\n    //setIsEditingOff,\r\n    resetSingleEmployee,\r\n    resetEmployees,\r\n    //getSingleEmployee,\r\n  } = useEmployeesContext();\r\n\r\n  //const { loadDepartments, loadDesignations, resetTables } = useTablesContext();\r\n\r\n  // useEffect(() => {\r\n  //   setAllEmpId(\"111\");\r\n  // }, []);\r\n\r\n  // useEffect(() => {\r\n  //   resetEmployees();\r\n  //   loadEmployees();\r\n  // }, []);\r\n\r\n  const update_Employee = async (data) => {\r\n    const { id } = data;\r\n    resetSingleEmployee();\r\n    resetEmployees();\r\n    setEditEmployeeID(id);\r\n    setIsEditingOn();\r\n    setEmployeeId(id);\r\n\r\n    navigate(\"/singleemployee\");\r\n  };\r\n\r\n  const add_Employee = async (data) => {\r\n    //resetSingleEmployee();\r\n    //setEditEmployeeID(\"\");\r\n    //setIsEditingOff();\r\n    //handleDialogOpen();\r\n    onAddEmpFormOpen()\r\n    //history.push(\"/singleemployee\");\r\n  };\r\n\r\n  const delete_Employee = (data) => {\r\n    const { id } = data;\r\n    setEditEmployeeID(id);\r\n    handleAlertOpen();\r\n    //deleteEmployee(id);\r\n    //loadEmployees();\r\n  };\r\n\r\n  // const handleDialogOpen = () => {\r\n  //   setIsDialogOpen(true);\r\n  // };\r\n\r\n  const handleDialogClose = () => {\r\n    setIsDialogOpen(false);\r\n    //loadEmployees();\r\n  };\r\n\r\n  const handleAlertOpen = () => {\r\n    setIsAlertOpen(true);\r\n  };\r\n\r\n  const handleAlertClose = () => {\r\n    setIsAlertOpen(false);\r\n  };\r\n\r\n  const handleOnDeleteConfirm = () => {\r\n    const id = editEmployeeID;\r\n    deleteEmployees(id);\r\n    //loadEmployees();\r\n  };\r\n\r\n  // const calculateAge = (dob) => {\r\n  //   var today = new Date();\r\n  //   var birthDate = new Date(dob);\r\n  //   var age = today.getFullYear() - birthDate.getFullYear();\r\n  //   var m = today.getMonth() - birthDate.getMonth();\r\n  //   if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n  //     age--;\r\n  //   }\r\n  //   return age;\r\n  // };\r\n\r\n  const Reset_PW = () => {\r\n    employees.forEach((rec) => {\r\n      if (rec.tableData.checked) {\r\n        try {\r\n          if (rec.password) {\r\n            App.auth().createUserWithEmailAndPassword(rec.email, rec.password);\r\n          } else {\r\n            App.auth().createUserWithEmailAndPassword(rec.email, \"abc123*\");\r\n          }\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n        try {\r\n          App.auth().sendPasswordResetEmail(rec.email);\r\n          toast({\r\n            title: `Reset Password sent to ${rec.email}!`,\r\n            status: \"success\",\r\n          });\r\n        } catch (error) {\r\n          toast({\r\n            title: `Error send to  ${rec.email}!`,\r\n            status: \"warning\",\r\n          });\r\n        }\r\n      }\r\n    });\r\n    employees.forEach((d) => {\r\n      if (d.tableData) d.tableData.checked = false;\r\n    });\r\n  };\r\n\r\n  // if (employees_loading) {\r\n  //   return <div>Loading...</div>;\r\n  // } else {\r\n  //   //console.log(employees);\r\n  // }\r\n  return (\r\n    <div className={classes.root}>\r\n      <Box p={2}>\r\n        <Heading size=\"md\">Employee Listing</Heading>\r\n      </Box>\r\n      <Tabs>\r\n        <TabList>\r\n          <Tab>Current</Tab>\r\n          <Tab>Resigned</Tab>\r\n        </TabList>\r\n        <TabPanels>\r\n          <TabPanel>\r\n            <Box maxW=\"100%\" pt=\"5px\">\r\n              <MaterialTable\r\n                columns={columns}\r\n                data={employees\r\n                  .filter((r) => !r.hasresigned)\r\n                  .sort((a, b) =>\r\n                    a.name > b.name ? 1 : b.name > a.name ? -1 : 0\r\n                  )}\r\n                title=\"Current Employees\"\r\n                icons={{\r\n                  Add: (props) => <AddIcon />,\r\n                  Edit: (props) => <EditIcon />,\r\n                  Delete: (props) => <DeleteIcon />,\r\n                  Clear: (props) => <DeleteIcon />,\r\n                  Check: (props) => <CheckIcon />,\r\n                  Search: (props) => <SearchIcon />,\r\n                  ResetSearch: (props) => <DeleteIcon />,\r\n                }}\r\n                actions={[\r\n                  {\r\n                    icon: \"edit\",\r\n                    tooltip: \"Edit Record\",\r\n                    position: \"row\",\r\n                    onClick: (event, rowData) => {\r\n                      update_Employee(rowData);\r\n                    },\r\n                  },\r\n                  {\r\n                    icon: \"delete\",\r\n                    tooltip: \"Delete Record\",\r\n                    position: \"row\",\r\n                    onClick: (event, rowData) => {\r\n                      delete_Employee(rowData);\r\n                    },\r\n                  },\r\n                  {\r\n                    icon: \"add\",\r\n                    tooltip: \"Add Record\",\r\n                    isFreeAction: true,\r\n                    onClick: (event, rowData) => {\r\n                      add_Employee(rowData);\r\n                    },\r\n                  },\r\n                ]}\r\n                options={{\r\n                  filtering: true,\r\n                  selection: true,\r\n                  paging: false,\r\n                  headerStyle: {\r\n                    //backgroundColor: \"#DAAD86\",\r\n                    backgroundColor: \"#90CDF4\",\r\n                    color: \"secondary\",\r\n                  },\r\n                  showTitle: true,\r\n                }}\r\n                components={{\r\n                  Toolbar: (props) => (\r\n                    <div>\r\n                      <MTableToolbar {...props} />\r\n                      <div style={{ padding: \"5px 10px\" }}>\r\n                        <Button\r\n                          type=\"submit\"\r\n                          variant=\"contained\"\r\n                          color=\"secondary\"\r\n                          className={classes.button}\r\n                          onClick={Reset_PW}\r\n                        >\r\n                          Reset PW{\" \"}\r\n                          <Icon className={classes.rightIcon}>send</Icon>\r\n                        </Button>\r\n                      </div>\r\n                    </div>\r\n                  ),\r\n                }}\r\n              />\r\n            </Box>\r\n          </TabPanel>\r\n          <TabPanel>\r\n            <Box maxW=\"100%\" pt=\"5px\">\r\n              <MaterialTable\r\n                columns={columns}\r\n                data={employees\r\n                  .filter((r) => r.hasresigned)\r\n                  .sort((a, b) =>\r\n                    a.name > b.name ? 1 : b.name > a.name ? -1 : 0\r\n                  )}\r\n                title=\"Resigned Employees\"\r\n                icons={{\r\n                  Add: (props) => <AddIcon />,\r\n                  Edit: (props) => <EditIcon />,\r\n                  Delete: (props) => <DeleteIcon />,\r\n                  Clear: (props) => <DeleteIcon />,\r\n                  Check: (props) => <CheckIcon />,\r\n                  Search: (props) => <SearchIcon />,\r\n                  ResetSearch: (props) => <DeleteIcon />,\r\n                }}\r\n                actions={[\r\n                  {\r\n                    icon: \"edit\",\r\n                    tooltip: \"Edit Record\",\r\n                    position: \"row\",\r\n                    onClick: (event, rowData) => {\r\n                      update_Employee(rowData);\r\n                    },\r\n                  },\r\n                  {\r\n                    icon: \"delete\",\r\n                    tooltip: \"Delete Record\",\r\n                    position: \"row\",\r\n                    onClick: (event, rowData) => {\r\n                      delete_Employee(rowData);\r\n                    },\r\n                  },\r\n                  {\r\n                    icon: \"add\",\r\n                    tooltip: \"Add Record\",\r\n                    isFreeAction: true,\r\n                    onClick: (event, rowData) => {\r\n                      add_Employee(rowData);\r\n                    },\r\n                  },\r\n                ]}\r\n                options={{\r\n                  filtering: true,\r\n                  selection: false,\r\n                  paging: false,\r\n                  headerStyle: {\r\n                    //backgroundColor: \"#DAAD86\",\r\n                    backgroundColor: \"#90CDF4\",\r\n                    color: \"secondary\",\r\n                  },\r\n                  showTitle: true,\r\n                }}\r\n                components={{\r\n                  Toolbar: (props) => (\r\n                    <div>\r\n                      <MTableToolbar {...props} />\r\n                      <div style={{ padding: \"5px 10px\" }}>\r\n                        {/* <Button\r\n                          type=\"submit\"\r\n                          variant=\"contained\"\r\n                          color=\"secondary\"\r\n                          className={classes.button}\r\n                          onClick={Reset_PW}\r\n                        >\r\n                          Reset PW{\" \"}\r\n                          <Icon className={classes.rightIcon}>send</Icon>\r\n                        </Button> */}\r\n                      </div>\r\n                    </div>\r\n                  ),\r\n                }}\r\n              />\r\n            </Box>\r\n          </TabPanel>\r\n        </TabPanels>\r\n      </Tabs>\r\n      <Modal\r\n        closeOnOverlayClick={false}\r\n        isOpen={isAddEmpFormOpen}\r\n        onClose={onAddEmpFormClose}\r\n        size=\"md\"\r\n      >\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          {/* <ModalHeader>Product Form</ModalHeader> */}\r\n          <ModalCloseButton />\r\n          <ModalBody>\r\n            <EmployeeFormAdd onAddEmpFormClose={onAddEmpFormClose} />\r\n          </ModalBody>\r\n\r\n          {/* <ModalFooter>\r\n            <Button colorScheme=\"blue\" mr={3} onClick={onProductClose}>\r\n              Close\r\n            </Button>\r\n          </ModalFooter> */}\r\n        </ModalContent>\r\n      </Modal>\r\n      <CustomDialog\r\n        isOpen={isDialogOpen}\r\n        handleClose={handleDialogClose}\r\n        title=\"\"\r\n        showButton={true}\r\n        isFullscreen={true}\r\n        isFullwidth={true}\r\n      >\r\n        <EmployeeView handleDialogClose={handleDialogClose} />\r\n      </CustomDialog>\r\n\r\n      <AlertDialogBox\r\n        onClose={handleAlertClose}\r\n        onConfirm={handleOnDeleteConfirm}\r\n        isOpen={isAlertOpen}\r\n        title=\"Delete Employee\"\r\n      >\r\n        <h2>Are you sure you want to delete ?</h2>\r\n      </AlertDialogBox>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(3, 2),\r\n  },\r\n}));\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
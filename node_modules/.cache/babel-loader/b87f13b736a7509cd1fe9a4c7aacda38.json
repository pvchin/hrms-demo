{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useCallback } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { groups_url } from \"../../utils/constants\";\nimport { filterByEmpId } from \"./utils\";\nimport axios from \"axios\";\nimport { queryKeys } from \"../react-query/constants\";\n\nasync function getGroups(groupId) {\n  const {\n    data\n  } = await axios.get(`${groups_url}?fv=${groupId}`);\n  return data;\n}\n\nexport function useGroups(empid) {\n  _s();\n\n  const [filter, setFilter] = useState(\"all\");\n  const [groupId, setGroupId] = useState(\"\");\n  const selectFn = useCallback(unfiltered => filterByEmpId(unfiltered, filter), [filter]);\n  const fallback = [];\n  const {\n    data: groups = fallback\n  } = useQuery([queryKeys.groups, groupId], () => getGroups(groupId), {\n    select: filter !== \"all\" ? selectFn : undefined\n  });\n  return {\n    groups,\n    filter,\n    setFilter,\n    setGroupId\n  };\n}\n\n_s(useGroups, \"NJJCWNOvNxNLHQMV49gtlGIy8Sc=\", false, function () {\n  return [useQuery];\n});","map":{"version":3,"sources":["D:/react-myprojects/hrms-demo/src/components/groups/useGroups.js"],"names":["useState","useCallback","useQuery","groups_url","filterByEmpId","axios","queryKeys","getGroups","groupId","data","get","useGroups","empid","filter","setFilter","setGroupId","selectFn","unfiltered","fallback","groups","select","undefined"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,OAAtC;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,UAAT,QAA2B,uBAA3B;AACA,SAASC,aAAT,QAA8B,SAA9B;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,0BAA1B;;AAEA,eAAeC,SAAf,CAAyBC,OAAzB,EAAkC;AAChC,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMJ,KAAK,CAACK,GAAN,CAAW,GAAEP,UAAW,OAAMK,OAAQ,EAAtC,CAAvB;AACA,SAAOC,IAAP;AACD;;AAED,OAAO,SAASE,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AAC/B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACQ,OAAD,EAAUO,UAAV,IAAwBf,QAAQ,CAAC,EAAD,CAAtC;AAEA,QAAMgB,QAAQ,GAAGf,WAAW,CACzBgB,UAAD,IAAgBb,aAAa,CAACa,UAAD,EAAaJ,MAAb,CADH,EAE1B,CAACA,MAAD,CAF0B,CAA5B;AAKA,QAAMK,QAAQ,GAAG,EAAjB;AACA,QAAM;AAAET,IAAAA,IAAI,EAAEU,MAAM,GAAGD;AAAjB,MAA8BhB,QAAQ,CAC1C,CAACI,SAAS,CAACa,MAAX,EAAmBX,OAAnB,CAD0C,EAE1C,MAAMD,SAAS,CAACC,OAAD,CAF2B,EAG1C;AACEY,IAAAA,MAAM,EAAEP,MAAM,KAAK,KAAX,GAAmBG,QAAnB,GAA8BK;AADxC,GAH0C,CAA5C;AAQA,SAAO;AAAEF,IAAAA,MAAF;AAAUN,IAAAA,MAAV;AAAkBC,IAAAA,SAAlB;AAA6BC,IAAAA;AAA7B,GAAP;AACD;;GAnBeJ,S;UAUsBT,Q","sourcesContent":["import { useState, useCallback } from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport { groups_url } from \"../../utils/constants\";\r\nimport { filterByEmpId } from \"./utils\";\r\n\r\nimport axios from \"axios\";\r\nimport { queryKeys } from \"../react-query/constants\";\r\n\r\nasync function getGroups(groupId) {\r\n  const { data } = await axios.get(`${groups_url}?fv=${groupId}`);\r\n  return data;\r\n}\r\n\r\nexport function useGroups(empid) {\r\n  const [filter, setFilter] = useState(\"all\");\r\n  const [groupId, setGroupId] = useState(\"\");\r\n\r\n  const selectFn = useCallback(\r\n    (unfiltered) => filterByEmpId(unfiltered, filter),\r\n    [filter]\r\n  );\r\n\r\n  const fallback = [];\r\n  const { data: groups = fallback } = useQuery(\r\n    [queryKeys.groups, groupId],\r\n    () => getGroups(groupId),\r\n    {\r\n      select: filter !== \"all\" ? selectFn : undefined,\r\n    }\r\n  );\r\n\r\n  return { groups, filter, setFilter, setGroupId };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
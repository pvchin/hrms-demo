{"ast":null,"code":"import { useState, useCallback } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { expenses_url } from \"../../utils/constants\";\nimport { filterByEmpId } from \"./utils\";\nimport axios from \"axios\";\nimport { queryKeys } from \"../react-query/constants\";\nasync function getExpenses(empid) {\n  const {\n    data\n  } = await axios.get(`${expenses_url}?fv=${empid}`);\n  //const { data } = await axios.get(`${expenses_url}`);\n  return data;\n}\nexport function useExpenses(empid) {\n  const [filter, setFilter] = useState(\"all\");\n  const [expenseId, setExpenseId] = useState(\"\");\n  const selectFn = useCallback(unfiltered => filterByEmpId(unfiltered, filter), [filter]);\n  const fallback = [];\n  const {\n    data: expenses = fallback\n  } = useQuery([queryKeys.expenses, expenseId],\n  //queryKeys.expenses,\n  () => getExpenses(expenseId), {\n    select: filter !== \"all\" ? selectFn : undefined\n  });\n  return {\n    expenses,\n    filter,\n    setFilter,\n    setExpenseId\n  };\n}","map":{"version":3,"names":["useState","useCallback","useQuery","expenses_url","filterByEmpId","axios","queryKeys","getExpenses","empid","data","get","useExpenses","filter","setFilter","expenseId","setExpenseId","selectFn","unfiltered","fallback","expenses","select","undefined"],"sources":["D:/react-myprojects/hrms-demo/src/components/expenses/useExpenses.js"],"sourcesContent":["import { useState, useCallback } from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport { expenses_url } from \"../../utils/constants\";\r\nimport { filterByEmpId } from \"./utils\";\r\n\r\nimport axios from \"axios\";\r\nimport { queryKeys } from \"../react-query/constants\";\r\n\r\nasync function getExpenses(empid) {\r\n  const { data } = await axios.get(`${expenses_url}?fv=${empid}`);\r\n  //const { data } = await axios.get(`${expenses_url}`);\r\n  return data;\r\n}\r\n\r\nexport function useExpenses(empid) {\r\n  const [filter, setFilter] = useState(\"all\");\r\n  const [expenseId, setExpenseId] = useState(\"\");\r\n\r\n  const selectFn = useCallback(\r\n    (unfiltered) => filterByEmpId(unfiltered, filter),\r\n    [filter]\r\n  );\r\n\r\n  const fallback = [];\r\n  const { data: expenses = fallback } = useQuery(\r\n    [queryKeys.expenses,  expenseId ],\r\n    //queryKeys.expenses,\r\n    () => getExpenses(expenseId),\r\n    {\r\n      select: filter !== \"all\" ? selectFn : undefined,\r\n    }\r\n  );\r\n\r\n  return { expenses, filter, setFilter, setExpenseId };\r\n}\r\n"],"mappings":"AAAA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAC7C,SAASC,QAAQ,QAAQ,aAAa;AACtC,SAASC,YAAY,QAAQ,uBAAuB;AACpD,SAASC,aAAa,QAAQ,SAAS;AAEvC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,0BAA0B;AAEpD,eAAeC,WAAW,CAACC,KAAK,EAAE;EAChC,MAAM;IAAEC;EAAK,CAAC,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAE,GAAEP,YAAa,OAAMK,KAAM,EAAC,CAAC;EAC/D;EACA,OAAOC,IAAI;AACb;AAEA,OAAO,SAASE,WAAW,CAACH,KAAK,EAAE;EACjC,MAAM,CAACI,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAACc,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMgB,QAAQ,GAAGf,WAAW,CACzBgB,UAAU,IAAKb,aAAa,CAACa,UAAU,EAAEL,MAAM,CAAC,EACjD,CAACA,MAAM,CAAC,CACT;EAED,MAAMM,QAAQ,GAAG,EAAE;EACnB,MAAM;IAAET,IAAI,EAAEU,QAAQ,GAAGD;EAAS,CAAC,GAAGhB,QAAQ,CAC5C,CAACI,SAAS,CAACa,QAAQ,EAAGL,SAAS,CAAE;EACjC;EACA,MAAMP,WAAW,CAACO,SAAS,CAAC,EAC5B;IACEM,MAAM,EAAER,MAAM,KAAK,KAAK,GAAGI,QAAQ,GAAGK;EACxC,CAAC,CACF;EAED,OAAO;IAAEF,QAAQ;IAAEP,MAAM;IAAEC,SAAS;IAAEE;EAAa,CAAC;AACtD"},"metadata":{},"sourceType":"module"}
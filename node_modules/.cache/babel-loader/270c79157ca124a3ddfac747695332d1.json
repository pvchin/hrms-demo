{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-demo\\\\src\\\\components\\\\LeaveTableViewAdmin.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\"; //import clsx from \"clsx\";\n\nimport { useNavigate } from \"react-router-dom\";\nimport { differenceInDays } from \"date-fns\"; //import axios from \"axios\";\n//import MaterialTable from \"material-table\";\n\nimport { Box, Grid, Heading, GridItem //Icon,\n, IconButton, Stack, Spacer } from \"@chakra-ui/react\";\nimport { EditIcon, ViewIcon } from \"@chakra-ui/icons\";\nimport { List } from \"@material-ui/core\"; //import {  useRecoilState } from \"recoil\";\n//import { loginLevelState } from \"./data/atomdata\";\n//import { useEmployeesContext } from \"../context/employees_context\";\n\nimport { useLeavesContext } from \"../context/leaves_context\"; //import { leaves_url } from \"../utils/constants\";\n\nimport { useLeaves } from \"./leaves/useLeaves\";\nimport { CustomDialog } from \"../helpers/CustomDialog\";\nimport LeaveFormAdmin from \"./LeaveFormAdmin\"; //const drawerWidth = 240;\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initial_form = {\n  name: \"\",\n  to_date: \"\",\n  from_date: \"\",\n  reason: \"\",\n  status: \"Pending\",\n  no_of_days: 0,\n  leave_bal: 0\n}; // const fetchExpensesDetails = selector({\n//   key: \"fetchExpensesDetailsSelector\",\n//   get: async ({ get }) => {\n//     try {\n//       const { data } = await axios.get(expenses_url);\n//       const wpexpirydata = data;\n//       return data;\n//     } catch (error) {\n//       throw error;\n//     }\n//   },\n// });\n\nconst LeaveTableViewStaff = () => {\n  _s();\n\n  const classes = useStyles();\n  const navigate = useNavigate(); //const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  const {\n    leaves\n  } = useLeaves(); //const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\n  //const [userdata, setUserdata] = useState([]);\n\n  const [isDialogOpen, setIsDialogOpen] = useState(false); //const [userdata, setUserdata] = useRecoilState(userdatastate);\n  //const ExpensesDetails = useRecoilValueLoadable(fetchExpensesDetails);\n  //const { state, contents } = ExpensesDetails;\n  //const { editEmployeeID } = useEmployeesContext();\n\n  const [formdata, setFormdata] = useState(initial_form); //const { leaves_loading, leaves_error, loadEmpLeaves } = useLeavesContext();\n\n  const today = Date().toLocaleString();\n  const {\n    // leaves,\n    //editLeaveID,\n    //deleteLeave,\n    //loadLeaves,\n    //getSingleLeave,\n    setEditLeaveID,\n    setIsLeaveEditingOn //setIsLeaveEditingOff,\n    //resetSingleLeave,\n\n  } = useLeavesContext();\n\n  const handleOnClick = data => {\n    setFormdata({ ...data\n    });\n    setFormdata({ ...data\n    });\n    setEditLeaveID(data.id);\n    setIsLeaveEditingOn();\n    handleDialogOpen(); //history.push(\"/singleleave\");\n  };\n\n  const handleDialogOpen = () => {\n    setIsDialogOpen(true);\n  };\n\n  const handleDialogClose = () => {\n    setIsDialogOpen(false); // if (isLeaveEditing) {\n    //   loadEmpLeaves(editEmployeeID);\n    // }\n  };\n\n  return /*#__PURE__*/_jsxDEV(List, {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          as: \"h4\",\n          size: \"md\",\n          children: \"Leaves Schedule\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Spacer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton // variant=\"outline\"\n        , {\n          size: \"md\",\n          \"aria-label\": \"Edit\",\n          icon: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 19\n          }, this),\n          onClick: () => navigate(\"/leave\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), leaves.filter(i => i.status === \"Approve\" && differenceInDays(new Date(i.from_date), new Date(today)) < 60 && differenceInDays(new Date(i.to_date), new Date(today)) < 60 && differenceInDays(new Date(i.from_date), new Date(today)) > 0).map(row => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            templateColumns: \"repeat(13, 1fr)\",\n            gap: 3,\n            p: 1,\n            children: [/*#__PURE__*/_jsxDEV(GridItem, {\n              colSpan: 1,\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                w: \"100%\",\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  size: \"sm\",\n                  \"aria-label\": \"Edit\",\n                  icon: /*#__PURE__*/_jsxDEV(ViewIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 135,\n                    columnNumber: 31\n                  }, this),\n                  onClick: () => handleOnClick(row)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n              colSpan: 3,\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                w: \"100%\",\n                children: row.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n              colSpan: 3,\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                w: \"100%\",\n                children: row.from_date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n              colSpan: 3,\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                w: \"100%\",\n                children: row.to_date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n              colSpan: 3,\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                w: \"100%\",\n                children: row.reason\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(CustomDialog, {\n            isOpen: isDialogOpen,\n            handleClose: handleDialogClose,\n            title: \"\",\n            showButton: true,\n            isFullscree: false,\n            children: /*#__PURE__*/_jsxDEV(LeaveFormAdmin, {\n              formdata: formdata,\n              setFormdata: setFormdata,\n              handleDialogClose: handleDialogClose\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LeaveTableViewStaff, \"zrn8kxG+vibpS/8Ax76YZIhhb+0=\", false, function () {\n  return [useStyles, useNavigate, useLeaves, useLeavesContext];\n});\n\n_c = LeaveTableViewStaff;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: 0\n  }\n}));\nexport default LeaveTableViewStaff;\n\nvar _c;\n\n$RefreshReg$(_c, \"LeaveTableViewStaff\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-demo/src/components/LeaveTableViewAdmin.js"],"names":["React","useState","makeStyles","useNavigate","differenceInDays","Box","Grid","Heading","GridItem","IconButton","Stack","Spacer","EditIcon","ViewIcon","List","useLeavesContext","useLeaves","CustomDialog","LeaveFormAdmin","initial_form","name","to_date","from_date","reason","status","no_of_days","leave_bal","LeaveTableViewStaff","classes","useStyles","navigate","leaves","isDialogOpen","setIsDialogOpen","formdata","setFormdata","today","Date","toLocaleString","setEditLeaveID","setIsLeaveEditingOn","handleOnClick","data","id","handleDialogOpen","handleDialogClose","root","filter","i","map","row","theme","padding"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,0BAA3B,C,CACA;;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,gBAAT,QAAiC,UAAjC,C,CACA;AACA;;AACA,SACEC,GADF,EAEEC,IAFF,EAGEC,OAHF,EAIEC,QAJF,CAKE;AALF,EAMEC,UANF,EAOEC,KAPF,EAQEC,MARF,QASO,kBATP;AAUA,SAASC,QAAT,EAAmBC,QAAnB,QAAmC,kBAAnC;AACA,SAASC,IAAT,QAAqB,mBAArB,C,CACA;AACA;AACA;;AACA,SAASC,gBAAT,QAAiC,2BAAjC,C,CACA;;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,YAAT,QAA6B,yBAA7B;AACA,OAAOC,cAAP,MAA2B,kBAA3B,C,CAEA;;;;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,EADa;AAEnBC,EAAAA,OAAO,EAAE,EAFU;AAGnBC,EAAAA,SAAS,EAAE,EAHQ;AAInBC,EAAAA,MAAM,EAAE,EAJW;AAKnBC,EAAAA,MAAM,EAAE,SALW;AAMnBC,EAAAA,UAAU,EAAE,CANO;AAOnBC,EAAAA,SAAS,EAAE;AAPQ,CAArB,C,CAUA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,mBAAmB,GAAG,MAAM;AAAA;;AAChC,QAAMC,OAAO,GAAGC,SAAS,EAAzB;AACA,QAAMC,QAAQ,GAAG3B,WAAW,EAA5B,CAFgC,CAGhC;;AACA,QAAM;AAAE4B,IAAAA;AAAF,MAAaf,SAAS,EAA5B,CAJgC,CAKhC;AACA;;AACA,QAAM,CAACgB,YAAD,EAAeC,eAAf,IAAkChC,QAAQ,CAAC,KAAD,CAAhD,CAPgC,CAQhC;AACA;AACA;AACA;;AACA,QAAM,CAACiC,QAAD,EAAWC,WAAX,IAA0BlC,QAAQ,CAACkB,YAAD,CAAxC,CAZgC,CAahC;;AACA,QAAMiB,KAAK,GAAGC,IAAI,GAAGC,cAAP,EAAd;AACA,QAAM;AACJ;AACA;AACA;AACA;AACA;AACAC,IAAAA,cANI;AAOJC,IAAAA,mBAPI,CAQJ;AACA;;AATI,MAUFzB,gBAAgB,EAVpB;;AAYA,QAAM0B,aAAa,GAAIC,IAAD,IAAU;AAC9BP,IAAAA,WAAW,CAAC,EAAE,GAAGO;AAAL,KAAD,CAAX;AACAP,IAAAA,WAAW,CAAC,EAAE,GAAGO;AAAL,KAAD,CAAX;AACAH,IAAAA,cAAc,CAACG,IAAI,CAACC,EAAN,CAAd;AACAH,IAAAA,mBAAmB;AACnBI,IAAAA,gBAAgB,GALc,CAM9B;AACD,GAPD;;AASA,QAAMA,gBAAgB,GAAG,MAAM;AAC7BX,IAAAA,eAAe,CAAC,IAAD,CAAf;AACD,GAFD;;AAIA,QAAMY,iBAAiB,GAAG,MAAM;AAC9BZ,IAAAA,eAAe,CAAC,KAAD,CAAf,CAD8B,CAE9B;AACA;AACA;AACD,GALD;;AAMA,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,EAAEL,OAAO,CAACkB,IAAzB;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,SAAS,EAAC,KAA1B;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,SAAS,EAAC,KAAjB;AAAA,gCACE,QAAC,OAAD;AAAS,UAAA,EAAE,EAAC,IAAZ;AAAiB,UAAA,IAAI,EAAC,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE,QAAC,UAAD,CACE;AADF;AAEE,UAAA,IAAI,EAAC,IAFP;AAGE,wBAAW,MAHb;AAIE,UAAA,IAAI,eAAE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,kBAJR;AAKE,UAAA,OAAO,EAAE,MAAMhB,QAAQ,CAAC,QAAD;AALzB;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAeGC,MAAM,CACJgB,MADF,CAEIC,CAAD,IACEA,CAAC,CAACxB,MAAF,KAAa,SAAb,IACApB,gBAAgB,CAAC,IAAIiC,IAAJ,CAASW,CAAC,CAAC1B,SAAX,CAAD,EAAwB,IAAIe,IAAJ,CAASD,KAAT,CAAxB,CAAhB,GAA2D,EAD3D,IAEAhC,gBAAgB,CAAC,IAAIiC,IAAJ,CAASW,CAAC,CAAC3B,OAAX,CAAD,EAAsB,IAAIgB,IAAJ,CAASD,KAAT,CAAtB,CAAhB,GAAyD,EAFzD,IAGAhC,gBAAgB,CAAC,IAAIiC,IAAJ,CAASW,CAAC,CAAC1B,SAAX,CAAD,EAAwB,IAAIe,IAAJ,CAASD,KAAT,CAAxB,CAAhB,GAA2D,CANhE,EAQEa,GARF,CAQOC,GAAD,IAAS;AACZ,4BACE;AAAA,kCACE,QAAC,IAAD;AAAM,YAAA,eAAe,EAAC,iBAAtB;AAAwC,YAAA,GAAG,EAAE,CAA7C;AAAgD,YAAA,CAAC,EAAE,CAAnD;AAAA,oCACE,QAAC,QAAD;AAAU,cAAA,OAAO,EAAE,CAAnB;AAAA,qCACE,QAAC,GAAD;AAAK,gBAAA,CAAC,EAAC,MAAP;AAAA,uCACE,QAAC,UAAD;AACE,kBAAA,IAAI,EAAC,IADP;AAEE,gCAAW,MAFb;AAGE,kBAAA,IAAI,eAAE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,0BAHR;AAIE,kBAAA,OAAO,EAAE,MAAMT,aAAa,CAACS,GAAD;AAJ9B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eAWE,QAAC,QAAD;AAAU,cAAA,OAAO,EAAE,CAAnB;AAAA,qCACE,QAAC,GAAD;AAAK,gBAAA,CAAC,EAAC,MAAP;AAAA,0BAAeA,GAAG,CAAC9B;AAAnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAXF,eAcE,QAAC,QAAD;AAAU,cAAA,OAAO,EAAE,CAAnB;AAAA,qCACE,QAAC,GAAD;AAAK,gBAAA,CAAC,EAAC,MAAP;AAAA,0BAAe8B,GAAG,CAAC5B;AAAnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAdF,eAiBE,QAAC,QAAD;AAAU,cAAA,OAAO,EAAE,CAAnB;AAAA,qCACE,QAAC,GAAD;AAAK,gBAAA,CAAC,EAAC,MAAP;AAAA,0BAAe4B,GAAG,CAAC7B;AAAnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAjBF,eAoBE,QAAC,QAAD;AAAU,cAAA,OAAO,EAAE,CAAnB;AAAA,qCACE,QAAC,GAAD;AAAK,gBAAA,CAAC,EAAC,MAAP;AAAA,0BAAe6B,GAAG,CAAC3B;AAAnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBApBF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAyBE,QAAC,YAAD;AACE,YAAA,MAAM,EAAES,YADV;AAEE,YAAA,WAAW,EAAEa,iBAFf;AAGE,YAAA,KAAK,EAAC,EAHR;AAIE,YAAA,UAAU,EAAE,IAJd;AAKE,YAAA,WAAW,EAAE,KALf;AAAA,mCAOE,QAAC,cAAD;AACE,cAAA,QAAQ,EAAEX,QADZ;AAEE,cAAA,WAAW,EAAEC,WAFf;AAGE,cAAA,iBAAiB,EAAEU;AAHrB;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,kBAzBF;AAAA,wBADF;AAyCD,OAlDF,CAfH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAuED,CArHD;;GAAMlB,mB;UACYE,S,EACC1B,W,EAEEa,S,EAqBfD,gB;;;KAzBAY,mB;AAuHN,MAAME,SAAS,GAAG3B,UAAU,CAAEiD,KAAD,KAAY;AACvCL,EAAAA,IAAI,EAAE;AACJM,IAAAA,OAAO,EAAE;AADL;AADiC,CAAZ,CAAD,CAA5B;AAMA,eAAezB,mBAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n//import clsx from \"clsx\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { differenceInDays } from \"date-fns\";\r\n//import axios from \"axios\";\r\n//import MaterialTable from \"material-table\";\r\nimport {\r\n  Box,\r\n  Grid,\r\n  Heading,\r\n  GridItem,\r\n  //Icon,\r\n  IconButton,\r\n  Stack,\r\n  Spacer,\r\n} from \"@chakra-ui/react\";\r\nimport { EditIcon, ViewIcon } from \"@chakra-ui/icons\";\r\nimport { List } from \"@material-ui/core\";\r\n//import {  useRecoilState } from \"recoil\";\r\n//import { loginLevelState } from \"./data/atomdata\";\r\n//import { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useLeavesContext } from \"../context/leaves_context\";\r\n//import { leaves_url } from \"../utils/constants\";\r\nimport { useLeaves } from \"./leaves/useLeaves\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport LeaveFormAdmin from \"./LeaveFormAdmin\";\r\n\r\n//const drawerWidth = 240;\r\n\r\nconst initial_form = {\r\n  name: \"\",\r\n  to_date: \"\",\r\n  from_date: \"\",\r\n  reason: \"\",\r\n  status: \"Pending\",\r\n  no_of_days: 0,\r\n  leave_bal: 0,\r\n};\r\n\r\n// const fetchExpensesDetails = selector({\r\n//   key: \"fetchExpensesDetailsSelector\",\r\n//   get: async ({ get }) => {\r\n//     try {\r\n//       const { data } = await axios.get(expenses_url);\r\n//       const wpexpirydata = data;\r\n\r\n//       return data;\r\n//     } catch (error) {\r\n//       throw error;\r\n//     }\r\n//   },\r\n// });\r\n\r\nconst LeaveTableViewStaff = () => {\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n  //const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  const { leaves } = useLeaves();\r\n  //const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  //const [userdata, setUserdata] = useState([]);\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  //const [userdata, setUserdata] = useRecoilState(userdatastate);\r\n  //const ExpensesDetails = useRecoilValueLoadable(fetchExpensesDetails);\r\n  //const { state, contents } = ExpensesDetails;\r\n  //const { editEmployeeID } = useEmployeesContext();\r\n  const [formdata, setFormdata] = useState(initial_form);\r\n  //const { leaves_loading, leaves_error, loadEmpLeaves } = useLeavesContext();\r\n  const today = Date().toLocaleString();\r\n  const {\r\n    // leaves,\r\n    //editLeaveID,\r\n    //deleteLeave,\r\n    //loadLeaves,\r\n    //getSingleLeave,\r\n    setEditLeaveID,\r\n    setIsLeaveEditingOn,\r\n    //setIsLeaveEditingOff,\r\n    //resetSingleLeave,\r\n  } = useLeavesContext();\r\n\r\n  const handleOnClick = (data) => {\r\n    setFormdata({ ...data });\r\n    setFormdata({ ...data });\r\n    setEditLeaveID(data.id);\r\n    setIsLeaveEditingOn();\r\n    handleDialogOpen()\r\n    //history.push(\"/singleleave\");\r\n  };\r\n\r\n  const handleDialogOpen = () => {\r\n    setIsDialogOpen(true);\r\n  };\r\n\r\n  const handleDialogClose = () => {\r\n    setIsDialogOpen(false);\r\n    // if (isLeaveEditing) {\r\n    //   loadEmpLeaves(editEmployeeID);\r\n    // }\r\n  };\r\n  return (\r\n    <List className={classes.root}>\r\n      <Grid container direction=\"row\">\r\n        <Stack direction=\"row\">\r\n          <Heading as=\"h4\" size=\"md\">\r\n            Leaves Schedule\r\n          </Heading>\r\n          <Spacer />\r\n          <IconButton\r\n            // variant=\"outline\"\r\n            size=\"md\"\r\n            aria-label=\"Edit\"\r\n            icon={<EditIcon />}\r\n            onClick={() => navigate(\"/leave\")}\r\n          />\r\n        </Stack>\r\n\r\n        {leaves\r\n          .filter(\r\n            (i) =>\r\n              i.status === \"Approve\" &&\r\n              differenceInDays(new Date(i.from_date), new Date(today)) < 60 &&\r\n              differenceInDays(new Date(i.to_date), new Date(today)) < 60 &&\r\n              differenceInDays(new Date(i.from_date), new Date(today)) > 0\r\n          )\r\n          .map((row) => {\r\n            return (\r\n              <>\r\n                <Grid templateColumns=\"repeat(13, 1fr)\" gap={3} p={1}>\r\n                  <GridItem colSpan={1}>\r\n                    <Box w=\"100%\">\r\n                      <IconButton\r\n                        size=\"sm\"\r\n                        aria-label=\"Edit\"\r\n                        icon={<ViewIcon />}\r\n                        onClick={() => handleOnClick(row)}\r\n                      />\r\n                    </Box>\r\n                  </GridItem>\r\n                  <GridItem colSpan={3}>\r\n                    <Box w=\"100%\">{row.name}</Box>\r\n                  </GridItem>\r\n                  <GridItem colSpan={3}>\r\n                    <Box w=\"100%\">{row.from_date}</Box>\r\n                  </GridItem>\r\n                  <GridItem colSpan={3}>\r\n                    <Box w=\"100%\">{row.to_date}</Box>\r\n                  </GridItem>\r\n                  <GridItem colSpan={3}>\r\n                    <Box w=\"100%\">{row.reason}</Box>\r\n                  </GridItem>\r\n                </Grid>\r\n                <CustomDialog\r\n                  isOpen={isDialogOpen}\r\n                  handleClose={handleDialogClose}\r\n                  title=\"\"\r\n                  showButton={true}\r\n                  isFullscree={false}\r\n                >\r\n                  <LeaveFormAdmin\r\n                    formdata={formdata}\r\n                    setFormdata={setFormdata}\r\n                    handleDialogClose={handleDialogClose}\r\n                  />\r\n                </CustomDialog>\r\n              </>\r\n            );\r\n          })}\r\n      </Grid>\r\n    </List>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n\r\nexport default LeaveTableViewStaff;\r\n"]},"metadata":{},"sourceType":"module"}
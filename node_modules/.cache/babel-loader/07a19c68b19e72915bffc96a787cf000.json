{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-demo\\\\src\\\\components\\\\CurrencyTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo } from \"react\";\nimport MaterialTable from \"material-table\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useCurrency } from \"./currency/useCurrency\";\nimport { useUpdateCurrency } from \"./currency/useUpdateCurrency\";\nimport { useDeleteCurrency } from \"./currency/useDeleteCurrency\";\nimport { useAddCurrency } from \"./currency/useAddCurrency\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UpdateCurrency() {\n  _s();\n\n  const classes = useStyles();\n  const {\n    currency\n  } = useCurrency();\n  const updateCurrency = useUpdateCurrency();\n  const deleteCurrency = useDeleteCurrency();\n  const addCurrency = useAddCurrency();\n  const columns = useMemo(() => [{\n    title: \"Currency\",\n    field: \"currency\"\n  }, {\n    title: \"Rate\",\n    field: \"rate\"\n  }], []);\n\n  const update_Currency = data => {\n    const {\n      id,\n      rec_id,\n      rate,\n      ...fields\n    } = data;\n    const ratevalue = parseFloat(rate);\n    updateCurrency({\n      id,\n      rate: ratevalue,\n      ...fields\n    });\n  };\n\n  const add_Currency = data => {\n    const {\n      rate,\n      ...fields\n    } = data;\n    const ratevalue = parseFloat(rate);\n    addCurrency({\n      rate: ratevalue,\n      ...fields\n    });\n  };\n\n  const delete_Currency = data => {\n    const {\n      id\n    } = data;\n    deleteCurrency(id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: \"100%\",\n        paddingTop: \"5px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n        columns: columns,\n        data: currency,\n        title: \"Currency Tables\",\n        editable: {\n          onRowAdd: newData => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              add_Currency(newData);\n              resolve();\n            }, 1000);\n          }),\n          onRowUpdate: (newData, oldData) => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              update_Currency(newData);\n              resolve();\n            }, 1000);\n          }),\n          onRowDelete: oldData => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              delete_Currency(oldData);\n              resolve();\n            }, 1000);\n          })\n        },\n        options: {\n          filtering: true,\n          headerStyle: {\n            backgroundColor: \"#90CDF4\",\n            color: \"primary\"\n          },\n          showTitle: true\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UpdateCurrency, \"zr1lVFivJZOoLt7oCBQ1S0ov2Z8=\", false, function () {\n  return [useStyles, useCurrency, useUpdateCurrency, useDeleteCurrency, useAddCurrency];\n});\n\n_c = UpdateCurrency;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: 0\n  }\n}));\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateCurrency\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-demo/src/components/CurrencyTable.js"],"names":["React","useMemo","MaterialTable","makeStyles","useCurrency","useUpdateCurrency","useDeleteCurrency","useAddCurrency","UpdateCurrency","classes","useStyles","currency","updateCurrency","deleteCurrency","addCurrency","columns","title","field","update_Currency","data","id","rec_id","rate","fields","ratevalue","parseFloat","add_Currency","delete_Currency","root","maxWidth","paddingTop","onRowAdd","newData","Promise","resolve","reject","setTimeout","onRowUpdate","oldData","onRowDelete","filtering","headerStyle","backgroundColor","color","showTitle","theme","padding"],"mappings":"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","sourcesContent":["import React, { useMemo } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useCurrency } from \"./currency/useCurrency\";\r\nimport { useUpdateCurrency } from \"./currency/useUpdateCurrency\";\r\nimport { useDeleteCurrency } from \"./currency/useDeleteCurrency\";\r\nimport { useAddCurrency } from \"./currency/useAddCurrency\";\r\n\r\nexport default function UpdateCurrency() {\r\n  const classes = useStyles();\r\n  const { currency } = useCurrency();\r\n  const updateCurrency = useUpdateCurrency();\r\n  const deleteCurrency = useDeleteCurrency();\r\n  const addCurrency = useAddCurrency();\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        title: \"Currency\",\r\n        field: \"currency\",\r\n      },\r\n      {\r\n        title: \"Rate\",\r\n        field: \"rate\",\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  const update_Currency = (data) => {\r\n    const { id, rec_id, rate, ...fields } = data;\r\n    const ratevalue = parseFloat(rate);\r\n    updateCurrency({ id, rate: ratevalue, ...fields });\r\n  };\r\n\r\n  const add_Currency = (data) => {\r\n    const { rate, ...fields } = data;\r\n    const ratevalue = parseFloat(rate);\r\n    addCurrency({ rate: ratevalue, ...fields });\r\n  };\r\n\r\n  const delete_Currency = (data) => {\r\n    const { id } = data;\r\n    deleteCurrency(id);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={currency}\r\n          title=\"Currency Tables\"\r\n          editable={{\r\n            onRowAdd: (newData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  add_Currency(newData);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowUpdate: (newData, oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  update_Currency(newData);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowDelete: (oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  delete_Currency(oldData);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n          }}\r\n          options={{\r\n            filtering: true,\r\n            headerStyle: {\r\n              backgroundColor: \"#90CDF4\",\r\n              color: \"primary\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n"]},"metadata":{},"sourceType":"module"}
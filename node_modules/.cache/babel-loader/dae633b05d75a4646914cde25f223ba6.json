{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-demo\\\\src\\\\components\\\\Payrunbatch.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\"; //import { makeStyles } from \"@material-ui/core/styles\";\n//import clsx from \"clsx\";\n\nimport { useNavigate } from \"react-router-dom\";\nimport * as emailjs from \"emailjs-com\";\nimport MaterialTable, { MTableToolbar } from \"material-table\";\nimport { FiSave, FiCheckCircle, FiMail } from \"react-icons/fi\";\nimport { useCustomToast } from \"../helpers/useCustomToast\"; //import { Button} from \"@material-ui/core\"\n\nimport { Box, Button, Divider, Grid, GridItem, Flex, Heading, Stack //Spacer,\n, Tabs, TabList, TabPanels, Tab, TabPanel, Table //Thead,\n, Tbody //Tfoot,\n//Tr,\n//Th,\n//Td,\n//TableCaption,\n, Text, Modal, ModalOverlay, ModalContent //ModalHeader,\n, ModalFooter, ModalBody, ModalCloseButton //Wrap,\n//WrapItem,\n, useDisclosure } from \"@chakra-ui/react\";\nimport PayForm from \"./PayForm\";\nimport PaySummary from \"./PaySummary\";\nimport PrintPaySummary from \"./PrintPaySummary\";\nimport { useEmployees } from \"./employees/useEmployees\";\nimport { usePayrun } from \"./payrun/usePayrun\";\nimport { useUpdatePayrun } from \"./payrun/useUpdatePayrun\";\nimport { usePayslipsBatch } from \"./payslips/usePayslipsBatch\";\nimport { useUpdatePayslips } from \"./payslips/useUpdatePayslips\";\nimport { usePayslipsContext } from \"../context/payslips_context\";\nimport { useTablesContext } from \"../context/tables_context\";\nimport { useRecoilState } from \"recoil\";\nimport { payrunState //paydataState,\n, payrunIdState, payrunStatusState } from \"./data/atomdata\"; //import { useRecoilValue } from \"recoil\";\n//const drawerWidth = 240;\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SERVICE_ID = process.env.REACT_APP_EMAILJS_SERVICEID;\nconst TEMPLATE_ID = \"template_1y8odlq\";\nconst USER_ID = process.env.REACT_APP_EMAILJS_USERID;\nconst initial_formdata = {\n  name: \"\",\n  period: \"\",\n  pay_date: null,\n  payrun: \"\",\n  bank_name: \"\",\n  bank_acno: \"\",\n  salary_currency: \"BND\",\n  currency_rate: 1,\n  tap_acno: \"\",\n  scp_acno: \"\",\n  tap_checkbox: false,\n  empid: \"\",\n  status: \"\",\n  allows_type1: \"\",\n  allows_type1amt: \"\",\n  allows_type2: \"\",\n  allows_type2amt: \"\",\n  allows_type3: \" \",\n  allows_type3amt: 0,\n  allows_type4: \"\",\n  allows_type4amt: 0,\n  allows_type5: \" \",\n  allows_type5amt: 0,\n  allows_type6: \" \",\n  allows_type6amt: 0,\n  allows_type7: \" \",\n  allows_type7amt: 0,\n  allows_type8: \" \",\n  allows_type8amt: 0,\n  deducts_type1: \" \",\n  deducts_type1amt: 0,\n  deducts_type2: \" \",\n  deducts_type2amt: 0,\n  deducts_type3: \" \",\n  deducts_type3amt: 0,\n  deducts_type4: \" \",\n  deducts_type4amt: 0,\n  deducts_type5: \" \",\n  deducts_type5amt: 0,\n  deducts_type6: \" \",\n  deducts_type6amt: 0,\n  deducts_type7: \" \",\n  deducts_type7amt: 0,\n  deducts_type8: \" \",\n  deducts_type8amt: 0,\n  wages: 0,\n  tap_amount: 0,\n  scp_amount: 0,\n  total_allowances: 0,\n  total_deductions: 0,\n  site_allows: 0,\n  expenses_claims: 0,\n  nett_pay: 0,\n  wages_bnd: 0,\n  site_allows_bnd: 0,\n  expenses_claims_bnd: 0,\n  total_allowances_bnd: 0,\n  total_deductions_bnd: 0,\n  tap_amount_bnd: 0,\n  scp_amount_bnd: 0,\n  nett_pay_bnd: 0\n};\nconst months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\nconst columns = [{\n  title: \"Name\",\n  field: \"name\",\n  editable: \"never\",\n  cellStyle: {\n    width: 280,\n    maxWidth: 280\n  }\n}];\n\nconst Payrunbatch = () => {\n  _s();\n\n  let navigate = useNavigate(); //const classes = useStyles();\n\n  const toast = useCustomToast(); //const componentRef = useRef();\n  //const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n  //const { register, handleSubmit, control, setValue, reset, watch } = useForm();\n\n  const {\n    //payrun,\n    //getSingleBatchPayslip,\n    //singlebatchpayslip,\n    payslip_period //updatePayslip,\n    //updatePayrun,\n    //singlebatch_payslip_loading,\n    //singlebatch_payslip_error,\n\n  } = usePayslipsContext();\n  const {\n    payslipsbatch,\n    psbpayrunId,\n    setPSBPayrunId\n  } = usePayslipsBatch();\n  const {\n    employees\n  } = useEmployees();\n  const {\n    payrun\n  } = usePayrun();\n  const updatePayslip = useUpdatePayslips();\n  const updatePayrun = useUpdatePayrun();\n  const {\n    loadPayitems,\n    payitems\n  } = useTablesContext();\n  const [payrundata, setPayrundata] = useRecoilState(payrunState);\n  const [payrunId] = useRecoilState(payrunIdState);\n  const [payrunstatus, setPayrunStatus] = useRecoilState(payrunStatusState);\n  const [loadFormdata, setLoadFormdata] = useState(false);\n  const [loadUpdatedata, setLoadUpdatedata] = useState(false);\n  const [formdata, setFormdata] = useState(initial_formdata);\n  const [rowindex, setRowIndex] = useState(0);\n  const [emponclick, setEmponclick] = useState(false); //const [showSumm, setShowSumm] = useState(false);\n\n  const [isCalc, setIsCalc] = useState(false);\n  const [isStart, setIsStart] = useState(true);\n  const [isShow, setIsShow] = useState(false);\n  const [tabno, setTabno] = useState(0);\n  const {\n    isOpen,\n    onOpen,\n    onClose\n  } = useDisclosure();\n  const singlebatchpayslip = payslipsbatch;\n  useEffect(() => {\n    loadPayitems();\n    setEmponclick(true); // getSingleBatchPayslip(payslip_period);\n  }, []);\n  useEffect(() => {\n    setRowIndex(0); // handleEmpButtonClick(0);\n\n    setEmponclick(false);\n  }, [emponclick]);\n  useEffect(() => {\n    setLoadFormdata(false);\n  }, [loadUpdatedata]);\n  useEffect(() => {\n    setPSBPayrunId(payslip_period); //setIsCalc(true);\n  }, [psbpayrunId]);\n  useEffect(() => {\n    calcPayrunTotals();\n    setIsCalc(false);\n  }, [isCalc]); // useEffect(() => {\n  //   handleEmpButtonClick(0);\n  //   setIsLoad(false);\n  // }, [isLoad]);\n  // const handleShowSumm = (e) => {\n  //   e.preventDefault();\n  //   setShowSumm(!showSumm);\n  // };\n\n  const handlePrintSummary = e => {\n    e.preventDefault();\n\n    if (payrundata.status === \"Verified\" || payrundata.status === \"Approved\") {\n      exportPdfTable(singlebatchpayslip);\n    } else {\n      // save individual payslips\n      saveIndividualPayslips(); // save payrun\n\n      updatePayrun({\n        id: payrunId,\n        totalpayroll: payrundata.totalpayroll,\n        totalwages: payrundata.totalwages,\n        totaltap: payrundata.totaltap,\n        totalscp: payrundata.totalscp,\n        totalallows: payrundata.totalallows,\n        totaldeducts: payrundata.totaldeducts,\n        totalsitesallows: payrundata.totalsiteallows,\n        totalexpensesclaims: payrundata.totalexpensesclaims\n      });\n      exportPdfTable(singlebatchpayslip);\n    }\n  };\n\n  const exportPdfTable = singlebatchpayslip => {\n    PrintPaySummary(singlebatchpayslip = {\n      singlebatchpayslip\n    });\n  };\n\n  const handleSavePayslips = e => {\n    e.preventDefault(); //calcPayrunTotals();\n    // eslint-disable-next-line no-lone-blocks\n    // {\n    //   singlebatchpayslip.forEach((rec) => {\n    //     const { id, rec_id, tableData, ...fields } = rec;\n    //     updatePayslip({ id, ...fields });\n    //   });\n    // }\n    // save individual payslips\n\n    saveIndividualPayslips(); //update payrun\n\n    handleSavePayrun();\n    toast({\n      title: \"Changes have been saved!\",\n      status: \"success\"\n    });\n    navigate(\"/payslip\");\n  };\n\n  const saveIndividualPayslips = () => {\n    singlebatchpayslip.forEach(rec => {\n      const {\n        id,\n        rec_id,\n        tableData,\n        ...fields\n      } = rec; //console.log(\"updatepayslip\", rec);\n\n      updatePayslip({\n        id,\n        ...fields\n      });\n    });\n  };\n\n  const calcPayrunTotals = () => {\n    // if (!psbpayrunId) {\n    //   return null;\n    // }\n    const tmpbatch = singlebatchpayslip.filter(r => r.payrun === payslip_period).map(rec => {\n      return { ...rec\n      };\n    }); //console.log(\"recalc\", tmpbatch);\n\n    const totalpayroll = tmpbatch.reduce((acc, item) => {\n      const value = isNaN(item.nett_pay_bnd) ? 0 : item.nett_pay_bnd;\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\n    }, 0);\n    const totalwages = tmpbatch.reduce((acc, item, index) => {\n      const value = isNaN(item.wages_bnd) ? 0 : item.wages_bnd;\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\n    }, 0);\n    const totaltap = tmpbatch.reduce((acc, item) => {\n      const value = isNaN(item.tap_amount_bnd) ? 0 : item.tap_amount_bnd;\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\n    }, 0);\n    const totalscp = tmpbatch.reduce((acc, item) => {\n      const value = isNaN(item.scp_amount_bnd) ? 0 : item.scp_amount_bnd;\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\n    }, 0);\n    const totalallows = tmpbatch.reduce((acc, item) => {\n      const value = isNaN(item.total_allowances_bnd) ? 0 : item.total_allowances_bnd;\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\n    }, 0);\n    const totaldeducts = tmpbatch.reduce((acc, item) => {\n      const value = isNaN(item.total_deductions_bnd) ? 0 : item.total_deductions_bnd;\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\n    }, 0);\n    const totalsiteallows = tmpbatch.reduce((acc, item) => {\n      const value = isNaN(item.site_allows_bnd) ? 0 : item.site_allows_bnd;\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\n    }, 0);\n    const totalexpensesclaims = tmpbatch.reduce((acc, item) => {\n      const value = isNaN(item.expenses_claims_bnd) ? 0 : item.expenses_claims_bnd;\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\n    }, 0);\n    setPayrundata(prev => prev = { ...payrundata,\n      totalpayroll: totalpayroll,\n      totalwages: totalwages,\n      totaltap: totaltap,\n      totalscp: totalscp,\n      totalallows: totalallows,\n      totaldeducts: totaldeducts,\n      totalsiteallows: totalsiteallows,\n      totalexpensesclaims: totalexpensesclaims\n    });\n  };\n\n  const handleSavePayrun = () => {\n    if (payrundata.status === \"Verified\" || payrundata.status === \"Approved\") {\n      toast({\n        title: `This payroll batch has been ${payrundata.status}! No changes can be made!`,\n        status: \"warning\"\n      });\n      return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 14\n      }, this);\n    }\n\n    const tmppayrun = payrun.filter(r => r.payrun === payslip_period); //console.log(\"paysave\", tmppayrun[0].id);\n    // eslint-disable-next-line no-lone-blocks\n    //console.log(\"paybatch\", payslip_period, payrundata);\n\n    updatePayrun({\n      id: tmppayrun[0].id,\n      totalpayroll: payrundata.totalpayroll,\n      totalwages: payrundata.totalwages,\n      totaltap: payrundata.totaltap,\n      totalscp: payrundata.totalscp,\n      totalallows: payrundata.totalallows,\n      totaldeducts: payrundata.totaldeducts,\n      totalsitesallows: payrundata.totalsiteallows,\n      totalexpensesclaims: payrundata.totalexpensesclaims\n    });\n    navigate(\"/payslip\");\n  };\n\n  const handleVerifyPayslips = e => {\n    e.preventDefault();\n    setPayrundata(prev => prev = { ...payrundata,\n      status: \"Verified\"\n    });\n    setPayrunStatus(\"Verified\"); // save individual payslips\n\n    saveIndividualPayslips(); // save payrun\n\n    updatePayrun({\n      id: payrunId,\n      status: \"Verified\",\n      totalpayroll: payrundata.totalpayroll,\n      totalwages: payrundata.totalwages,\n      totaltap: payrundata.totaltap,\n      totalscp: payrundata.totalscp,\n      totalallows: payrundata.totalallows,\n      totaldeducts: payrundata.totaldeducts,\n      totalsitesallows: payrundata.totalsiteallows,\n      totalexpensesclaims: payrundata.totalexpensesclaims\n    });\n    toast({\n      title: \"Batch has been verified!\",\n      status: \"success\"\n    });\n  };\n\n  const handleEmpButtonClick = index => {\n    const paydata = singlebatchpayslip[index]; //setFormdata(prev => prev = initial_formdata);\n\n    setFormdata(prev => prev = { ...initial_formdata,\n      ...paydata\n    }); //setFormdata({ ...initial_formdata, ...paydata });\n\n    setLoadFormdata(true);\n  };\n\n  const handleTabChange = index => {\n    setTabno(index);\n\n    if (index === 1) {\n      calcPayrunTotals();\n    }\n\n    setIsShow(false);\n  };\n\n  useEffect(() => {\n    if (tabno === 1) {\n      setIsShow(true);\n    } else {\n      setIsShow(false);\n    }\n  }, [tabno]);\n\n  const SentEmailModal = () => {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n        columns: columns,\n        data: payslipsbatch,\n        title: \"Employees\",\n        options: {\n          filtering: false,\n          search: false,\n          toolbar: true,\n          selection: true,\n          pageSize: 10,\n          headerStyle: {\n            backgroundColor: \"#daad86\",\n            color: \"primary\"\n          },\n          showTitle: true\n        },\n        components: {\n          Toolbar: props => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(MTableToolbar, { ...props\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 466,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                padding: \"5px 10px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                colorScheme: \"blue\",\n                isDisabled: payrundata.status !== \"Approve\" ? true : false,\n                onClick: () => handleSentEmail(),\n                leftIcon: /*#__PURE__*/_jsxDEV(FiMail, {\n                  color: \"white\",\n                  fontSize: \"1.5em\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 472,\n                  columnNumber: 31\n                }, this),\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 468,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 15\n          }, this)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 7\n    }, this);\n  };\n\n  const handleSentEmail = data => {\n    const mth = months[payslip_period.substring(6, 7)];\n    const yr = payslip_period.substring(0, 4);\n    payslipsbatch.forEach(pay => {\n      if (pay.tableData.checked) {\n        const {\n          name,\n          empid\n        } = pay;\n        const emp = employees.filter(r => r.id === empid).map(rec => {\n          return { ...rec\n          };\n        });\n        var emaildata = {\n          to_name: name,\n          to_email: emp[0].email,\n          message: `Your payroll for the month of ${mth} ${yr} has been transfered. Please login in to view your payslip!`\n        };\n        emailjs.send(SERVICE_ID, TEMPLATE_ID, emaildata, USER_ID).then(function (response) {\n          console.log(response.status, response.text);\n          toast({\n            title: `Email has sent successfully to ${emaildata.to_email}!`,\n            status: \"success\"\n          });\n        }, function (err) {\n          console.log(err);\n          toast({\n            title: `Email has fail to send to ${emaildata.to_email}!`,\n            status: \"warning\"\n          });\n        });\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    marginLeft: 4,\n    marginTop: 70,\n    w: \"98%\",\n    h: \"100%\",\n    style: {\n      backgroundColor: \"lightcyan\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      templateRows: \"repeat(1,1fr)\",\n      templateColumns: \"repeat(1,1fr)\",\n      children: [/*#__PURE__*/_jsxDEV(GridItem, {\n        rowSpan: 1,\n        colSpan: 1,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          templateRows: \"repeat(1,1fr)\",\n          templateColumns: \"repeat(10,1fr)\",\n          children: [/*#__PURE__*/_jsxDEV(GridItem, {\n            rowSpan: 1,\n            colSpan: 2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 535,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n            rowSpan: 1,\n            colSpan: 4,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              textAlign: \"center\",\n              alignItems: \"center\",\n              children: /*#__PURE__*/_jsxDEV(Heading, {\n                pl: \"10\",\n                pt: 2,\n                children: \"Payroll\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 538,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 537,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 536,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n            rowSpan: 1,\n            colSpan: 4,\n            pt: 0,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              pt: \"2\",\n              pr: 5,\n              alignItems: \"right\",\n              align: \"right\",\n              children: /*#__PURE__*/_jsxDEV(Stack, {\n                spacing: 4,\n                direction: \"row\",\n                align: \"center\",\n                pl: 150,\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  width: \"800px\",\n                  colorScheme: \"blue\",\n                  isDisabled: payrundata.status === \"Verified\" || payrundata.status === \"Approved\" || !isShow ? true : false,\n                  onClick: e => handleSavePayslips(e),\n                  leftIcon: /*#__PURE__*/_jsxDEV(FiSave, {\n                    color: \"white\",\n                    fontSize: \"1.5em\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 557,\n                    columnNumber: 31\n                  }, this),\n                  children: \"Save/Exit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 546,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  isDisabled: !isShow,\n                  width: \"500px\",\n                  colorScheme: \"blue\",\n                  onClick: e => handlePrintSummary(e),\n                  leftIcon: /*#__PURE__*/_jsxDEV(FiSave, {\n                    color: \"white\",\n                    fontSize: \"1.5em\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 566,\n                    columnNumber: 31\n                  }, this),\n                  children: \"Print\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 561,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  width: \"500px\",\n                  colorScheme: \"blue\",\n                  isDisabled: payrundata.status === \"Verified\" || payrundata.status === \"Approved\" || payrundata.status === \"New\" || !isShow ? true : false,\n                  onClick: e => handleVerifyPayslips(e),\n                  leftIcon: /*#__PURE__*/_jsxDEV(FiCheckCircle, {\n                    color: \"white\",\n                    fontSize: \"1.5em\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 583,\n                    columnNumber: 31\n                  }, this),\n                  children: \"Verify\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 571,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  width: \"500px\",\n                  colorScheme: \"blue\",\n                  isDisabled: payrundata.status !== \"Approved\" ? true : false,\n                  onClick: onOpen,\n                  leftIcon: /*#__PURE__*/_jsxDEV(FiMail, {\n                    color: \"white\",\n                    fontSize: \"1.5em\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 592,\n                    columnNumber: 31\n                  }, this),\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 587,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 545,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 544,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 543,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 534,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          style: {\n            border: \"1px solid lightgrey\"\n          },\n          orientation: \"horizontal\",\n          colorScheme: \"red\",\n          variant: \"solid\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 600,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 533,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n        rowSpan: 1,\n        colSpan: 1,\n        children: /*#__PURE__*/_jsxDEV(Tabs, {\n          defaultIndex: 0,\n          onChange: index => handleTabChange(index),\n          children: [/*#__PURE__*/_jsxDEV(TabList, {\n            marginLeft: 4,\n            children: [/*#__PURE__*/_jsxDEV(Tab, {\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                children: /*#__PURE__*/_jsxDEV(Heading, {\n                  size: \"sm\",\n                  children: \"Details\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 612,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 611,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 610,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tab, {\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                children: /*#__PURE__*/_jsxDEV(Heading, {\n                  size: \"sm\",\n                  children: \"Summary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 617,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 616,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 615,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 609,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TabPanels, {\n            children: [/*#__PURE__*/_jsxDEV(TabPanel, {\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                templateRows: \"repeat(1,1fr)\",\n                templateColumns: \"repeat(10,1fr)\",\n                children: [/*#__PURE__*/_jsxDEV(GridItem, {\n                  colSpan: 2,\n                  children: [/*#__PURE__*/_jsxDEV(Box, {\n                    textAlign: \"center\",\n                    p: 4,\n                    children: /*#__PURE__*/_jsxDEV(Heading, {\n                      size: \"sm\",\n                      alignItems: \"center\",\n                      children: \"Employees\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 629,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 628,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                    backgroundColor: \"white\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 633,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Box, {\n                    h: \"550\",\n                    border: \"2px solid white\",\n                    backgroundColor: \"cyan.100\",\n                    overflow: \"scroll\",\n                    children: /*#__PURE__*/_jsxDEV(Table, {\n                      variant: \"simple\",\n                      children: /*#__PURE__*/_jsxDEV(Tbody, {\n                        children: payslipsbatch.map((item, index) => {\n                          return /*#__PURE__*/_jsxDEV(\"div\", {\n                            children: [/*#__PURE__*/_jsxDEV(Button //className={classes.empbtn}\n                            , {\n                              fontSize: {\n                                base: \"10px\",\n                                md: \"10px\",\n                                lg: \"12px\",\n                                xl: \"16px\"\n                              },\n                              variant: \"outlined\",\n                              height: [`${item.name.length > 30 ? \"60px\" : \"40px\"}`, \"40px\"],\n                              style: {\n                                whiteSpace: \"normal\",\n                                wordWrap: \"break-word\"\n                              } // ${index === value && \"activebtn\"}\n                              ,\n                              onClick: e => {\n                                setRowIndex(index);\n                                setIsStart(false);\n                                handleEmpButtonClick(index);\n                              },\n                              children: /*#__PURE__*/_jsxDEV(Text, {\n                                align: \"left\",\n                                children: item.name\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 698,\n                                columnNumber: 35\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 672,\n                              columnNumber: 33\n                            }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                              backgroundColor: \"white\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 700,\n                              columnNumber: 33\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 671,\n                            columnNumber: 31\n                          }, this);\n                        })\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 668,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 662,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 634,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 627,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n                  colSpan: 8,\n                  children: /*#__PURE__*/_jsxDEV(PayForm, {\n                    formdata: formdata,\n                    setFormdata: setFormdata,\n                    loadFormdata: loadFormdata,\n                    setLoadFormdata: setLoadFormdata,\n                    payitems: payitems,\n                    setLoadUpdatedata: setLoadUpdatedata,\n                    singlebatchpayslip: singlebatchpayslip,\n                    rowindex: rowindex,\n                    isCalc: isCalc,\n                    isStart: isStart,\n                    setIsStart: setIsStart,\n                    setIsCalc: setIsCalc\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 709,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 708,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 623,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 622,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n              children: /*#__PURE__*/_jsxDEV(PaySummary, {\n                payrundata: payrundata,\n                singlebatchpayslip: singlebatchpayslip\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 727,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 726,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 621,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 608,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 607,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 532,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isOpen,\n      onClose: onClose,\n      children: [/*#__PURE__*/_jsxDEV(ModalOverlay, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 737,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalContent, {\n        children: [/*#__PURE__*/_jsxDEV(ModalCloseButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 740,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          children: /*#__PURE__*/_jsxDEV(SentEmailModal, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 742,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 741,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            colorScheme: \"blue\",\n            mr: 3,\n            onClick: onClose,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 746,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 745,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 738,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 736,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 525,\n    columnNumber: 5\n  }, this);\n}; // const useStyles = makeStyles((theme) => ({\n//   root: {\n//     flexGrow: 1,\n//   },\n//   button: {\n//     margin: theme.spacing(1),\n//   },\n//   container: {\n//     margin: 0,\n//     padding: 0,\n//     width: \"80vw\",\n//     display: \"grid\",\n//     gridTemplateColumns: \"repeat(auto-fill,250px)\",\n//     gridAutoRows: \"10px\",\n//     position: \"absolute\",\n//     left: \"50%\",\n//     transform: \"translateX(-50%)\",\n//     justifyContent: \"center\",\n//     backgroundColor: \"primary\",\n//   },\n//   fixedHeight: {\n//     height: 800,\n//   },\n//   paper: {\n//     paddingTop: theme.spacing(10),\n//     // display: \"flex\",\n//     display: \"flex\",\n//     overflow: \"auto\",\n//     flexDirection: \"column\",\n//     border: \"1px solid\",\n//     width: \"100%\",\n//     color: \"primary\",\n//     bcakgroundColor: \"white\",\n//   },\n//   card: {\n//     backgroundColor: \"white\",\n//   },\n//   section: {\n//     width: \"80vw\",\n//     margin: \"1rem auto\",\n//     maxWidth: \"var(--max-width)\",\n//   },\n//   underline: {\n//     width: \"5rem\",\n//     height: \"0.25rem\",\n//     marginBottom: \"1.25rem\",\n//     background: \"var(--clr-primary-5)\",\n//     marginLeft: \"auto\",\n//     marginRight: \"auto\",\n//   },\n//   title: {\n//     marginbottom: \"4rem\",\n//     textAlign: \"center\",\n//   },\n//   empscenter: {\n//     width: \"80vw\",\n//     margin: \"0 auto\",\n//     maxWidth: \"var(--max-width)\",\n//     flexDirection: \"row\",\n//   },\n//   empcontainer: {\n//     display: \"flex\",\n//     flexDirection: \"row\",\n//     justifyContent: \"center\",\n//     marginBottom: \"4rem\",\n//     flexWrap: \"wrap\",\n//   },\n//   empbtn: {\n//     background: \"transparent\",\n//     borderColor: \"transparent\",\n//     textTransform: \"capitalize\",\n//     fontSize: \"1rem\",\n//     letterSpacing: \"var(--spacing)\",\n//     margin: \"0 0.5rem\",\n//     transition: \"var(--transition)\",\n//     cursor: \"pointer\",\n//     padding: \"0.25rem 0\",\n//     lineHeight: \"1\",\n//     outlineColor: \"var(--clr-primary-10)\",\n//     \"&:hover\": {\n//       color: \"var(--clr-primary-5)\",\n//       boxShadow: \"0 2px var(--clr-primary-5)\",\n//     },\n//   },\n//   activebtn: {\n//     color: \"var(--clr-primary-5)\",\n//     boxShadow: \"0 2px var(--clr-primary-5)\",\n//   },\n//   empinfo: {\n//     fontWeight: \"400\",\n//   },\n//   divider: {\n//     // Theme Color, or use css color in quote\n//     background: \"white\",\n//   },\n//   textField: {\n//     marginLeft: theme.spacing(1),\n//     marginRight: theme.spacing(1),\n//     width: 350,\n//   },\n// }));\n\n\n_s(Payrunbatch, \"4vZnHUBwEJUvXV0FPe9xAq4GFT8=\", false, function () {\n  return [useNavigate, useCustomToast, usePayslipsContext, usePayslipsBatch, useEmployees, usePayrun, useUpdatePayslips, useUpdatePayrun, useTablesContext, useRecoilState, useRecoilState, useRecoilState, useDisclosure];\n});\n\n_c = Payrunbatch;\nexport default Payrunbatch;\n\nvar _c;\n\n$RefreshReg$(_c, \"Payrunbatch\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-demo/src/components/Payrunbatch.js"],"names":["React","useState","useEffect","useNavigate","emailjs","MaterialTable","MTableToolbar","FiSave","FiCheckCircle","FiMail","useCustomToast","Box","Button","Divider","Grid","GridItem","Flex","Heading","Stack","Tabs","TabList","TabPanels","Tab","TabPanel","Table","Tbody","Text","Modal","ModalOverlay","ModalContent","ModalFooter","ModalBody","ModalCloseButton","useDisclosure","PayForm","PaySummary","PrintPaySummary","useEmployees","usePayrun","useUpdatePayrun","usePayslipsBatch","useUpdatePayslips","usePayslipsContext","useTablesContext","useRecoilState","payrunState","payrunIdState","payrunStatusState","SERVICE_ID","process","env","REACT_APP_EMAILJS_SERVICEID","TEMPLATE_ID","USER_ID","REACT_APP_EMAILJS_USERID","initial_formdata","name","period","pay_date","payrun","bank_name","bank_acno","salary_currency","currency_rate","tap_acno","scp_acno","tap_checkbox","empid","status","allows_type1","allows_type1amt","allows_type2","allows_type2amt","allows_type3","allows_type3amt","allows_type4","allows_type4amt","allows_type5","allows_type5amt","allows_type6","allows_type6amt","allows_type7","allows_type7amt","allows_type8","allows_type8amt","deducts_type1","deducts_type1amt","deducts_type2","deducts_type2amt","deducts_type3","deducts_type3amt","deducts_type4","deducts_type4amt","deducts_type5","deducts_type5amt","deducts_type6","deducts_type6amt","deducts_type7","deducts_type7amt","deducts_type8","deducts_type8amt","wages","tap_amount","scp_amount","total_allowances","total_deductions","site_allows","expenses_claims","nett_pay","wages_bnd","site_allows_bnd","expenses_claims_bnd","total_allowances_bnd","total_deductions_bnd","tap_amount_bnd","scp_amount_bnd","nett_pay_bnd","months","columns","title","field","editable","cellStyle","width","maxWidth","Payrunbatch","navigate","toast","payslip_period","payslipsbatch","psbpayrunId","setPSBPayrunId","employees","updatePayslip","updatePayrun","loadPayitems","payitems","payrundata","setPayrundata","payrunId","payrunstatus","setPayrunStatus","loadFormdata","setLoadFormdata","loadUpdatedata","setLoadUpdatedata","formdata","setFormdata","rowindex","setRowIndex","emponclick","setEmponclick","isCalc","setIsCalc","isStart","setIsStart","isShow","setIsShow","tabno","setTabno","isOpen","onOpen","onClose","singlebatchpayslip","calcPayrunTotals","handlePrintSummary","e","preventDefault","exportPdfTable","saveIndividualPayslips","id","totalpayroll","totalwages","totaltap","totalscp","totalallows","totaldeducts","totalsitesallows","totalsiteallows","totalexpensesclaims","handleSavePayslips","handleSavePayrun","forEach","rec","rec_id","tableData","fields","tmpbatch","filter","r","map","reduce","acc","item","value","isNaN","Math","round","Number","EPSILON","index","prev","tmppayrun","handleVerifyPayslips","handleEmpButtonClick","paydata","handleTabChange","SentEmailModal","filtering","search","toolbar","selection","pageSize","headerStyle","backgroundColor","color","showTitle","Toolbar","props","padding","handleSentEmail","data","mth","substring","yr","pay","checked","emp","emaildata","to_name","to_email","email","message","send","then","response","console","log","text","err","border","base","md","lg","xl","length","whiteSpace","wordWrap"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n//import { makeStyles } from \"@material-ui/core/styles\";\r\n//import clsx from \"clsx\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport * as emailjs from \"emailjs-com\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { FiSave, FiCheckCircle, FiMail } from \"react-icons/fi\";\r\nimport { useCustomToast } from \"../helpers/useCustomToast\";\r\n//import { Button} from \"@material-ui/core\"\r\nimport {\r\n  Box,\r\n  Button,\r\n  Divider,\r\n  Grid,\r\n  GridItem,\r\n  Flex,\r\n  Heading,\r\n  Stack,\r\n  //Spacer,\r\n  Tabs,\r\n  TabList,\r\n  TabPanels,\r\n  Tab,\r\n  TabPanel,\r\n  Table,\r\n  //Thead,\r\n  Tbody,\r\n  //Tfoot,\r\n  //Tr,\r\n  //Th,\r\n  //Td,\r\n  //TableCaption,\r\n  Text,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  //ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  //Wrap,\r\n  //WrapItem,\r\n  useDisclosure,\r\n} from \"@chakra-ui/react\";\r\nimport PayForm from \"./PayForm\";\r\nimport PaySummary from \"./PaySummary\";\r\nimport PrintPaySummary from \"./PrintPaySummary\";\r\nimport { useEmployees } from \"./employees/useEmployees\";\r\nimport { usePayrun } from \"./payrun/usePayrun\";\r\nimport { useUpdatePayrun } from \"./payrun/useUpdatePayrun\";\r\nimport { usePayslipsBatch } from \"./payslips/usePayslipsBatch\";\r\nimport { useUpdatePayslips } from \"./payslips/useUpdatePayslips\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\nimport { useTablesContext } from \"../context/tables_context\";\r\nimport {  useRecoilState } from \"recoil\";\r\nimport {\r\n  payrunState,\r\n  //paydataState,\r\n  payrunIdState,\r\n  payrunStatusState,\r\n} from \"./data/atomdata\";\r\n//import { useRecoilValue } from \"recoil\";\r\n\r\n//const drawerWidth = 240;\r\nconst SERVICE_ID = process.env.REACT_APP_EMAILJS_SERVICEID;\r\nconst TEMPLATE_ID = \"template_1y8odlq\";\r\nconst USER_ID = process.env.REACT_APP_EMAILJS_USERID;\r\n\r\nconst initial_formdata = {\r\n  name: \"\",\r\n  period: \"\",\r\n  pay_date: null,\r\n  payrun: \"\",\r\n  bank_name: \"\",\r\n  bank_acno: \"\",\r\n  salary_currency: \"BND\",\r\n  currency_rate: 1,\r\n  tap_acno: \"\",\r\n  scp_acno: \"\",\r\n  tap_checkbox: false,\r\n  empid: \"\",\r\n  status: \"\",\r\n  allows_type1: \"\",\r\n  allows_type1amt: \"\",\r\n  allows_type2: \"\",\r\n  allows_type2amt: \"\",\r\n  allows_type3: \" \",\r\n  allows_type3amt: 0,\r\n  allows_type4: \"\",\r\n  allows_type4amt: 0,\r\n  allows_type5: \" \",\r\n  allows_type5amt: 0,\r\n  allows_type6: \" \",\r\n  allows_type6amt: 0,\r\n  allows_type7: \" \",\r\n  allows_type7amt: 0,\r\n  allows_type8: \" \",\r\n  allows_type8amt: 0,\r\n  deducts_type1: \" \",\r\n  deducts_type1amt: 0,\r\n  deducts_type2: \" \",\r\n  deducts_type2amt: 0,\r\n  deducts_type3: \" \",\r\n  deducts_type3amt: 0,\r\n  deducts_type4: \" \",\r\n  deducts_type4amt: 0,\r\n  deducts_type5: \" \",\r\n  deducts_type5amt: 0,\r\n  deducts_type6: \" \",\r\n  deducts_type6amt: 0,\r\n  deducts_type7: \" \",\r\n  deducts_type7amt: 0,\r\n  deducts_type8: \" \",\r\n  deducts_type8amt: 0,\r\n\r\n  wages: 0,\r\n  tap_amount: 0,\r\n  scp_amount: 0,\r\n  total_allowances: 0,\r\n  total_deductions: 0,\r\n  site_allows: 0,\r\n  expenses_claims: 0,\r\n  nett_pay: 0,\r\n\r\n  wages_bnd: 0,\r\n  site_allows_bnd: 0,\r\n  expenses_claims_bnd: 0,\r\n  total_allowances_bnd: 0,\r\n  total_deductions_bnd: 0,\r\n  tap_amount_bnd: 0,\r\n  scp_amount_bnd: 0,\r\n  nett_pay_bnd: 0,\r\n};\r\n\r\nconst months = [\r\n  \"January\",\r\n  \"February\",\r\n  \"March\",\r\n  \"April\",\r\n  \"May\",\r\n  \"June\",\r\n  \"July\",\r\n  \"August\",\r\n  \"September\",\r\n  \"October\",\r\n  \"November\",\r\n  \"December\",\r\n];\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n    editable: \"never\",\r\n    cellStyle: {\r\n      width: 280,\r\n      maxWidth: 280,\r\n    },\r\n  },\r\n];\r\n\r\nconst Payrunbatch = () => {\r\n  let navigate = useNavigate();\r\n  //const classes = useStyles();\r\n  const toast = useCustomToast();\r\n  //const componentRef = useRef();\r\n  //const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n  //const { register, handleSubmit, control, setValue, reset, watch } = useForm();\r\n\r\n  const {\r\n    //payrun,\r\n    //getSingleBatchPayslip,\r\n    //singlebatchpayslip,\r\n    payslip_period,\r\n    //updatePayslip,\r\n    //updatePayrun,\r\n    //singlebatch_payslip_loading,\r\n    //singlebatch_payslip_error,\r\n  } = usePayslipsContext();\r\n  const { payslipsbatch, psbpayrunId, setPSBPayrunId } = usePayslipsBatch();\r\n  const { employees } = useEmployees();\r\n  const { payrun } = usePayrun();\r\n  const updatePayslip = useUpdatePayslips();\r\n  const updatePayrun = useUpdatePayrun();\r\n  const { loadPayitems, payitems } = useTablesContext();\r\n  const [payrundata, setPayrundata] = useRecoilState(payrunState);\r\n  const [payrunId] = useRecoilState(payrunIdState);\r\n  const  [payrunstatus, setPayrunStatus] = useRecoilState(payrunStatusState);\r\n  const [loadFormdata, setLoadFormdata] = useState(false);\r\n  const [loadUpdatedata, setLoadUpdatedata] = useState(false);\r\n  const [formdata, setFormdata] = useState(initial_formdata);\r\n  const [rowindex, setRowIndex] = useState(0);\r\n  const [emponclick, setEmponclick] = useState(false);\r\n  //const [showSumm, setShowSumm] = useState(false);\r\n  const [isCalc, setIsCalc] = useState(false);\r\n  const [isStart, setIsStart] = useState(true);\r\n  const [isShow, setIsShow] = useState(false);\r\n  const [tabno, setTabno] = useState(0);\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const singlebatchpayslip = payslipsbatch;\r\n\r\n  useEffect(() => {\r\n    loadPayitems();\r\n    setEmponclick(true);\r\n    // getSingleBatchPayslip(payslip_period);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setRowIndex(0);\r\n    // handleEmpButtonClick(0);\r\n    setEmponclick(false);\r\n  }, [emponclick]);\r\n\r\n  useEffect(() => {\r\n    setLoadFormdata(false);\r\n  }, [loadUpdatedata]);\r\n\r\n  useEffect(() => {\r\n    setPSBPayrunId(payslip_period);\r\n    //setIsCalc(true);\r\n  }, [psbpayrunId]);\r\n\r\n  useEffect(() => {\r\n    calcPayrunTotals();\r\n    setIsCalc(false);\r\n  }, [isCalc]);\r\n\r\n  // useEffect(() => {\r\n  //   handleEmpButtonClick(0);\r\n  //   setIsLoad(false);\r\n  // }, [isLoad]);\r\n\r\n  // const handleShowSumm = (e) => {\r\n  //   e.preventDefault();\r\n  //   setShowSumm(!showSumm);\r\n  // };\r\n\r\n  const handlePrintSummary = (e) => {\r\n    e.preventDefault();\r\n    if (payrundata.status === \"Verified\" || payrundata.status === \"Approved\") {\r\n      exportPdfTable(singlebatchpayslip);\r\n    } else {\r\n      // save individual payslips\r\n      saveIndividualPayslips();\r\n      // save payrun\r\n      updatePayrun({\r\n        id: payrunId,\r\n        totalpayroll: payrundata.totalpayroll,\r\n        totalwages: payrundata.totalwages,\r\n        totaltap: payrundata.totaltap,\r\n        totalscp: payrundata.totalscp,\r\n        totalallows: payrundata.totalallows,\r\n        totaldeducts: payrundata.totaldeducts,\r\n        totalsitesallows: payrundata.totalsiteallows,\r\n        totalexpensesclaims: payrundata.totalexpensesclaims,\r\n      });\r\n      exportPdfTable(singlebatchpayslip);\r\n    }\r\n  };\r\n\r\n  const exportPdfTable = (singlebatchpayslip) => {\r\n    PrintPaySummary((singlebatchpayslip = { singlebatchpayslip }));\r\n  };\r\n\r\n  const handleSavePayslips = (e) => {\r\n    e.preventDefault();\r\n\r\n    //calcPayrunTotals();\r\n    // eslint-disable-next-line no-lone-blocks\r\n    // {\r\n    //   singlebatchpayslip.forEach((rec) => {\r\n    //     const { id, rec_id, tableData, ...fields } = rec;\r\n    //     updatePayslip({ id, ...fields });\r\n    //   });\r\n    // }\r\n    // save individual payslips\r\n    saveIndividualPayslips();\r\n\r\n    //update payrun\r\n    handleSavePayrun();\r\n    toast({\r\n      title: \"Changes have been saved!\",\r\n      status: \"success\",\r\n    });\r\n    navigate(\"/payslip\");\r\n  };\r\n\r\n  const saveIndividualPayslips = () => {\r\n    singlebatchpayslip.forEach((rec) => {\r\n      const { id, rec_id, tableData, ...fields } = rec;\r\n      //console.log(\"updatepayslip\", rec);\r\n      updatePayslip({ id, ...fields });\r\n    });\r\n  };\r\n\r\n  const calcPayrunTotals = () => {\r\n    // if (!psbpayrunId) {\r\n    //   return null;\r\n    // }\r\n    const tmpbatch = singlebatchpayslip\r\n      .filter((r) => r.payrun === payslip_period)\r\n      .map((rec) => {\r\n        return { ...rec };\r\n      });\r\n    //console.log(\"recalc\", tmpbatch);\r\n\r\n    const totalpayroll = tmpbatch.reduce((acc, item) => {\r\n      const value = isNaN(item.nett_pay_bnd) ? 0 : item.nett_pay_bnd;\r\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\r\n    }, 0);\r\n    const totalwages = tmpbatch.reduce((acc, item, index) => {\r\n      const value = isNaN(item.wages_bnd) ? 0 : item.wages_bnd;\r\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\r\n    }, 0);\r\n    const totaltap = tmpbatch.reduce((acc, item) => {\r\n      const value = isNaN(item.tap_amount_bnd) ? 0 : item.tap_amount_bnd;\r\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\r\n    }, 0);\r\n\r\n    const totalscp = tmpbatch.reduce((acc, item) => {\r\n      const value = isNaN(item.scp_amount_bnd) ? 0 : item.scp_amount_bnd;\r\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\r\n    }, 0);\r\n\r\n    const totalallows = tmpbatch.reduce((acc, item) => {\r\n      const value = isNaN(item.total_allowances_bnd)\r\n        ? 0\r\n        : item.total_allowances_bnd;\r\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\r\n    }, 0);\r\n\r\n    const totaldeducts = tmpbatch.reduce((acc, item) => {\r\n      const value = isNaN(item.total_deductions_bnd)\r\n        ? 0\r\n        : item.total_deductions_bnd;\r\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\r\n    }, 0);\r\n\r\n    const totalsiteallows = tmpbatch.reduce((acc, item) => {\r\n      const value = isNaN(item.site_allows_bnd) ? 0 : item.site_allows_bnd;\r\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\r\n    }, 0);\r\n\r\n    const totalexpensesclaims = tmpbatch.reduce((acc, item) => {\r\n      const value = isNaN(item.expenses_claims_bnd)\r\n        ? 0\r\n        : item.expenses_claims_bnd;\r\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\r\n    }, 0);\r\n\r\n    setPayrundata(\r\n      (prev) =>\r\n        (prev = {\r\n          ...payrundata,\r\n          totalpayroll: totalpayroll,\r\n          totalwages: totalwages,\r\n          totaltap: totaltap,\r\n          totalscp: totalscp,\r\n          totalallows: totalallows,\r\n          totaldeducts: totaldeducts,\r\n          totalsiteallows: totalsiteallows,\r\n          totalexpensesclaims: totalexpensesclaims,\r\n        })\r\n    );\r\n  };\r\n\r\n  const handleSavePayrun = () => {\r\n    if (payrundata.status === \"Verified\" || payrundata.status === \"Approved\") {\r\n      toast({\r\n        title: `This payroll batch has been ${payrundata.status}! No changes can be made!`,\r\n        status: \"warning\",\r\n      });\r\n      return <div></div>;\r\n    }\r\n\r\n    const tmppayrun = payrun.filter((r) => r.payrun === payslip_period);\r\n    //console.log(\"paysave\", tmppayrun[0].id);\r\n    // eslint-disable-next-line no-lone-blocks\r\n    //console.log(\"paybatch\", payslip_period, payrundata);\r\n    updatePayrun({\r\n      id: tmppayrun[0].id,\r\n      totalpayroll: payrundata.totalpayroll,\r\n      totalwages: payrundata.totalwages,\r\n      totaltap: payrundata.totaltap,\r\n      totalscp: payrundata.totalscp,\r\n      totalallows: payrundata.totalallows,\r\n      totaldeducts: payrundata.totaldeducts,\r\n      totalsitesallows: payrundata.totalsiteallows,\r\n      totalexpensesclaims: payrundata.totalexpensesclaims,\r\n    });\r\n    navigate(\"/payslip\");\r\n  };\r\n\r\n  const handleVerifyPayslips = (e) => {\r\n    e.preventDefault();\r\n    setPayrundata((prev) => (prev = { ...payrundata, status: \"Verified\" }));\r\n    setPayrunStatus(\"Verified\");\r\n    // save individual payslips\r\n    saveIndividualPayslips();\r\n    // save payrun\r\n    updatePayrun({\r\n      id: payrunId,\r\n      status: \"Verified\",\r\n      totalpayroll: payrundata.totalpayroll,\r\n      totalwages: payrundata.totalwages,\r\n      totaltap: payrundata.totaltap,\r\n      totalscp: payrundata.totalscp,\r\n      totalallows: payrundata.totalallows,\r\n      totaldeducts: payrundata.totaldeducts,\r\n      totalsitesallows: payrundata.totalsiteallows,\r\n      totalexpensesclaims: payrundata.totalexpensesclaims,\r\n    });\r\n    toast({\r\n      title: \"Batch has been verified!\",\r\n      status: \"success\",\r\n    });\r\n  };\r\n\r\n  const handleEmpButtonClick = (index) => {\r\n    const paydata = singlebatchpayslip[index];\r\n    //setFormdata(prev => prev = initial_formdata);\r\n    setFormdata((prev) => (prev = { ...initial_formdata, ...paydata }));\r\n    //setFormdata({ ...initial_formdata, ...paydata });\r\n    setLoadFormdata(true);\r\n  };\r\n\r\n  const handleTabChange = (index) => {\r\n    setTabno(index);\r\n    if (index === 1) {\r\n      calcPayrunTotals();\r\n    }\r\n    setIsShow(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (tabno === 1) {\r\n      setIsShow(true);\r\n    } else {\r\n      setIsShow(false);\r\n    }\r\n  }, [tabno]);\r\n\r\n  const SentEmailModal = () => {\r\n    return (\r\n      <Box>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={payslipsbatch}\r\n          title=\"Employees\"\r\n          options={{\r\n            filtering: false,\r\n            search: false,\r\n            toolbar: true,\r\n            selection: true,\r\n            pageSize: 10,\r\n            headerStyle: {\r\n              backgroundColor: \"#daad86\",\r\n              color: \"primary\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n                <div style={{ padding: \"5px 10px\" }}>\r\n                  <Button\r\n                    colorScheme=\"blue\"\r\n                    isDisabled={payrundata.status !== \"Approve\" ? true : false}\r\n                    onClick={() => handleSentEmail()}\r\n                    leftIcon={<FiMail color=\"white\" fontSize=\"1.5em\" />}\r\n                  >\r\n                    Email\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  const handleSentEmail = (data) => {\r\n    const mth = months[payslip_period.substring(6, 7)];\r\n    const yr = payslip_period.substring(0, 4);\r\n\r\n    payslipsbatch.forEach((pay) => {\r\n      if (pay.tableData.checked) {\r\n        const { name, empid } = pay;\r\n        const emp = employees\r\n          .filter((r) => r.id === empid)\r\n          .map((rec) => {\r\n            return { ...rec };\r\n          });\r\n\r\n        var emaildata = {\r\n          to_name: name,\r\n          to_email: emp[0].email,\r\n          message: `Your payroll for the month of ${mth} ${yr} has been transfered. Please login in to view your payslip!`,\r\n        };\r\n\r\n        emailjs.send(SERVICE_ID, TEMPLATE_ID, emaildata, USER_ID).then(\r\n          function (response) {\r\n            console.log(response.status, response.text);\r\n            toast({\r\n              title: `Email has sent successfully to ${emaildata.to_email}!`,\r\n              status: \"success\",\r\n            });\r\n          },\r\n          function (err) {\r\n            console.log(err);\r\n            toast({\r\n              title: `Email has fail to send to ${emaildata.to_email}!`,\r\n              status: \"warning\",\r\n            });\r\n          }\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Flex\r\n      marginLeft={4}\r\n      marginTop={70}\r\n      w=\"98%\"\r\n      h=\"100%\"\r\n      style={{ backgroundColor: \"lightcyan\" }}\r\n    >\r\n      <Grid templateRows=\"repeat(1,1fr)\" templateColumns=\"repeat(1,1fr)\">\r\n        <GridItem rowSpan={1} colSpan={1}>\r\n          <Grid templateRows=\"repeat(1,1fr)\" templateColumns=\"repeat(10,1fr)\">\r\n            <GridItem rowSpan={1} colSpan={2}></GridItem>\r\n            <GridItem rowSpan={1} colSpan={4}>\r\n              <Box textAlign=\"center\" alignItems=\"center\">\r\n                <Heading pl=\"10\" pt={2}>\r\n                  Payroll\r\n                </Heading>\r\n              </Box>\r\n            </GridItem>\r\n            <GridItem rowSpan={1} colSpan={4} pt={0}>\r\n              <Box pt=\"2\" pr={5} alignItems=\"right\" align=\"right\">\r\n                <Stack spacing={4} direction=\"row\" align=\"center\" pl={150}>\r\n                  <Button\r\n                    width=\"800px\"\r\n                    colorScheme=\"blue\"\r\n                    isDisabled={\r\n                      payrundata.status === \"Verified\" ||\r\n                      payrundata.status === \"Approved\" ||\r\n                      !isShow\r\n                        ? true\r\n                        : false\r\n                    }\r\n                    onClick={(e) => handleSavePayslips(e)}\r\n                    leftIcon={<FiSave color=\"white\" fontSize=\"1.5em\" />}\r\n                  >\r\n                    Save/Exit\r\n                  </Button>\r\n                  <Button\r\n                    isDisabled={!isShow}\r\n                    width=\"500px\"\r\n                    colorScheme=\"blue\"\r\n                    onClick={(e) => handlePrintSummary(e)}\r\n                    leftIcon={<FiSave color=\"white\" fontSize=\"1.5em\" />}\r\n                  >\r\n                    Print\r\n                  </Button>\r\n\r\n                  <Button\r\n                    width=\"500px\"\r\n                    colorScheme=\"blue\"\r\n                    isDisabled={\r\n                      payrundata.status === \"Verified\" ||\r\n                      payrundata.status === \"Approved\" ||\r\n                      payrundata.status === \"New\" ||\r\n                      !isShow\r\n                        ? true\r\n                        : false\r\n                    }\r\n                    onClick={(e) => handleVerifyPayslips(e)}\r\n                    leftIcon={<FiCheckCircle color=\"white\" fontSize=\"1.5em\" />}\r\n                  >\r\n                    Verify\r\n                  </Button>\r\n                  <Button\r\n                    width=\"500px\"\r\n                    colorScheme=\"blue\"\r\n                    isDisabled={payrundata.status !== \"Approved\" ? true : false}\r\n                    onClick={onOpen}\r\n                    leftIcon={<FiMail color=\"white\" fontSize=\"1.5em\" />}\r\n                  >\r\n                    Email\r\n                  </Button>\r\n                </Stack>\r\n              </Box>\r\n            </GridItem>\r\n          </Grid>\r\n          <Divider\r\n            style={{ border: \"1px solid lightgrey\" }}\r\n            orientation=\"horizontal\"\r\n            colorScheme=\"red\"\r\n            variant=\"solid\"\r\n          />\r\n        </GridItem>\r\n        <GridItem rowSpan={1} colSpan={1}>\r\n          <Tabs defaultIndex={0} onChange={(index) => handleTabChange(index)}>\r\n            <TabList marginLeft={4}>\r\n              <Tab>\r\n                <Box>\r\n                  <Heading size=\"sm\">Details</Heading>\r\n                </Box>\r\n              </Tab>\r\n              <Tab>\r\n                <Box>\r\n                  <Heading size=\"sm\">Summary</Heading>\r\n                </Box>\r\n              </Tab>\r\n            </TabList>\r\n            <TabPanels>\r\n              <TabPanel>\r\n                <Grid\r\n                  templateRows=\"repeat(1,1fr)\"\r\n                  templateColumns=\"repeat(10,1fr)\"\r\n                >\r\n                  <GridItem colSpan={2}>\r\n                    <Box textAlign=\"center\" p={4}>\r\n                      <Heading size=\"sm\" alignItems=\"center\">\r\n                        Employees\r\n                      </Heading>\r\n                    </Box>\r\n                    <Divider backgroundColor=\"white\" />\r\n                    <Box\r\n                      h=\"550\"\r\n                      border=\"2px solid white\"\r\n                      backgroundColor=\"cyan.100\"\r\n                      overflow=\"scroll\"\r\n                    >\r\n                      {/* {payslipsbatch &&\r\n                      payslipsbatch.map((item, index) => {\r\n                        return (\r\n                          <div>\r\n                            <Button\r\n                              className={classes.empbtn}\r\n                              variant=\"outlined\"\r\n                              // ${index === value && \"activebtn\"}\r\n                              onClick={(e) => {\r\n                                setRowIndex(index);\r\n                                handleEmpButtonClick(index);\r\n                              }}\r\n                            >\r\n                              <div key={item.id}> {item.name}</div>\r\n                            </Button>\r\n                            <Divider\r\n                              variant=\"fullWidth\"\r\n                              className={classes.divider}\r\n                            />\r\n                          </div>\r\n                        );\r\n                      })} */}\r\n                      <Table variant=\"simple\">\r\n                        {/* <Thead>\r\n                        <Tr>\r\n                          <Th>Employees</Th>\r\n                        </Tr>\r\n                      </Thead> */}\r\n                        <Tbody>\r\n                          {payslipsbatch.map((item, index) => {\r\n                            return (\r\n                              <div>\r\n                                <Button\r\n                                  //className={classes.empbtn}\r\n                                  fontSize={{\r\n                                    base: \"10px\",\r\n                                    md: \"10px\",\r\n                                    lg: \"12px\",\r\n                                    xl: \"16px\",\r\n                                  }}\r\n                                  variant=\"outlined\"\r\n                                  height={[\r\n                                    `${\r\n                                      item.name.length > 30 ? \"60px\" : \"40px\"\r\n                                    }`,\r\n                                    \"40px\",\r\n                                  ]}\r\n                                  style={{\r\n                                    whiteSpace: \"normal\",\r\n                                    wordWrap: \"break-word\",\r\n                                  }}\r\n                                  // ${index === value && \"activebtn\"}\r\n                                  onClick={(e) => {\r\n                                    setRowIndex(index);\r\n                                    setIsStart(false);\r\n                                    handleEmpButtonClick(index);\r\n                                  }}\r\n                                >\r\n                                  <Text align=\"left\">{item.name}</Text>\r\n                                </Button>\r\n                                <Divider backgroundColor=\"white\" />\r\n                              </div>\r\n                            );\r\n                          })}\r\n                        </Tbody>\r\n                      </Table>\r\n                    </Box>\r\n                  </GridItem>\r\n                  <GridItem colSpan={8}>\r\n                    <PayForm\r\n                      formdata={formdata}\r\n                      setFormdata={setFormdata}\r\n                      loadFormdata={loadFormdata}\r\n                      setLoadFormdata={setLoadFormdata}\r\n                      payitems={payitems}\r\n                      setLoadUpdatedata={setLoadUpdatedata}\r\n                      singlebatchpayslip={singlebatchpayslip}\r\n                      rowindex={rowindex}\r\n                      isCalc={isCalc}\r\n                      isStart={isStart}\r\n                      setIsStart={setIsStart}\r\n                      setIsCalc={setIsCalc}\r\n                    />\r\n                  </GridItem>\r\n                </Grid>\r\n              </TabPanel>\r\n              <TabPanel>\r\n                <PaySummary\r\n                  payrundata={payrundata}\r\n                  singlebatchpayslip={singlebatchpayslip}\r\n                />\r\n              </TabPanel>\r\n            </TabPanels>\r\n          </Tabs>\r\n        </GridItem>\r\n      </Grid>\r\n      <Modal isOpen={isOpen} onClose={onClose}>\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          {/* <ModalHeader>Sending EMail Notifications</ModalHeader> */}\r\n          <ModalCloseButton />\r\n          <ModalBody>\r\n            <SentEmailModal />\r\n          </ModalBody>\r\n\r\n          <ModalFooter>\r\n            <Button colorScheme=\"blue\" mr={3} onClick={onClose}>\r\n              Close\r\n            </Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </Flex>\r\n  );\r\n};\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//   root: {\r\n//     flexGrow: 1,\r\n//   },\r\n//   button: {\r\n//     margin: theme.spacing(1),\r\n//   },\r\n//   container: {\r\n//     margin: 0,\r\n//     padding: 0,\r\n//     width: \"80vw\",\r\n//     display: \"grid\",\r\n//     gridTemplateColumns: \"repeat(auto-fill,250px)\",\r\n//     gridAutoRows: \"10px\",\r\n//     position: \"absolute\",\r\n//     left: \"50%\",\r\n//     transform: \"translateX(-50%)\",\r\n//     justifyContent: \"center\",\r\n//     backgroundColor: \"primary\",\r\n//   },\r\n//   fixedHeight: {\r\n//     height: 800,\r\n//   },\r\n//   paper: {\r\n//     paddingTop: theme.spacing(10),\r\n//     // display: \"flex\",\r\n//     display: \"flex\",\r\n//     overflow: \"auto\",\r\n//     flexDirection: \"column\",\r\n//     border: \"1px solid\",\r\n//     width: \"100%\",\r\n//     color: \"primary\",\r\n//     bcakgroundColor: \"white\",\r\n//   },\r\n//   card: {\r\n//     backgroundColor: \"white\",\r\n//   },\r\n//   section: {\r\n//     width: \"80vw\",\r\n//     margin: \"1rem auto\",\r\n//     maxWidth: \"var(--max-width)\",\r\n//   },\r\n//   underline: {\r\n//     width: \"5rem\",\r\n//     height: \"0.25rem\",\r\n//     marginBottom: \"1.25rem\",\r\n//     background: \"var(--clr-primary-5)\",\r\n//     marginLeft: \"auto\",\r\n//     marginRight: \"auto\",\r\n//   },\r\n//   title: {\r\n//     marginbottom: \"4rem\",\r\n//     textAlign: \"center\",\r\n//   },\r\n//   empscenter: {\r\n//     width: \"80vw\",\r\n//     margin: \"0 auto\",\r\n//     maxWidth: \"var(--max-width)\",\r\n//     flexDirection: \"row\",\r\n//   },\r\n//   empcontainer: {\r\n//     display: \"flex\",\r\n//     flexDirection: \"row\",\r\n//     justifyContent: \"center\",\r\n//     marginBottom: \"4rem\",\r\n//     flexWrap: \"wrap\",\r\n//   },\r\n//   empbtn: {\r\n//     background: \"transparent\",\r\n//     borderColor: \"transparent\",\r\n//     textTransform: \"capitalize\",\r\n//     fontSize: \"1rem\",\r\n//     letterSpacing: \"var(--spacing)\",\r\n//     margin: \"0 0.5rem\",\r\n//     transition: \"var(--transition)\",\r\n//     cursor: \"pointer\",\r\n//     padding: \"0.25rem 0\",\r\n//     lineHeight: \"1\",\r\n//     outlineColor: \"var(--clr-primary-10)\",\r\n//     \"&:hover\": {\r\n//       color: \"var(--clr-primary-5)\",\r\n//       boxShadow: \"0 2px var(--clr-primary-5)\",\r\n//     },\r\n//   },\r\n//   activebtn: {\r\n//     color: \"var(--clr-primary-5)\",\r\n//     boxShadow: \"0 2px var(--clr-primary-5)\",\r\n//   },\r\n//   empinfo: {\r\n//     fontWeight: \"400\",\r\n//   },\r\n//   divider: {\r\n//     // Theme Color, or use css color in quote\r\n//     background: \"white\",\r\n//   },\r\n//   textField: {\r\n//     marginLeft: theme.spacing(1),\r\n//     marginRight: theme.spacing(1),\r\n//     width: 350,\r\n//   },\r\n// }));\r\n\r\nexport default Payrunbatch;\r\n"]},"metadata":{},"sourceType":"module"}
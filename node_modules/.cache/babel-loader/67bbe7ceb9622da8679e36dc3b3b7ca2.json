{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-demo\\\\src\\\\components\\\\Payslip_ViewDeductions.js\";\nimport React, { useEffect, useMemo } from \"react\";\nimport MaterialTable from \"material-table\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useRecoilValue } from \"recoil\";\nimport { payPeriodState,\n//payPeriodEndMonthState,\npayPeriodEmpIdState } from \"./data/atomdata\";\nimport { usePayslipsContext } from \"../context/payslips_context\";\n//import { useTablesContext } from \"../context/tables_context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PayslipViewDeductions() {\n  const classes = useStyles();\n  const payPeriodEmpId = useRecoilValue(payPeriodEmpIdState);\n  const payPeriod = useRecoilValue(payPeriodState);\n  const {\n    payslipdeductions,\n    //payslip_deduction_amount,\n    //setPayslipDeductionAmount,\n    //loadPayslipDeductions,\n    //addPayslipDeduction,\n    payslipdeductions_loading,\n    //updatePayslipDeduction,\n    //deletePayslipDeduction,\n    //updatePayslip,\n    //editPayslipID,\n    //single_payslip,\n    //payslip_period,\n    getSingleBatchPayslipDeductions\n  } = usePayslipsContext();\n  //const { name, amount } = payslipdeductions;\n  //const { deductions } = useTablesContext();\n\n  // const calc_Deduction = (data) => {\n  //   const sum = data.reduce((a, v) => (a = a + v.amount), 0);\n  //   setPayslipDeductionAmount(sum);\n  // };\n\n  const columns = useMemo(() => [{\n    title: \"Name\",\n    field: \"description\"\n  }, {\n    title: \"Amount\",\n    field: \"amount\",\n    type: \"currency\"\n  }], []);\n  useEffect(() => {\n    getSingleBatchPayslipDeductions(payPeriodEmpId, payPeriod);\n  }, []);\n\n  // const update_Payslip = () => {\n  //   const { rec_id, id, total_deductions, ...paydata } = single_payslip;\n  //   updatePayslip({\n  //     id: editPayslipID,\n  //     total_deductions: payslip_deduction_amount,\n  //     ...paydata,\n  //   });\n  // };\n\n  // const update_PayslipDeduction = async (data) => {\n  //   const { id, rec_id, empid, ...fields } = data;\n  //   updatePayslipDeduction({ id: data.id, empid: empid, ...fields });\n  //   update_Payslip();\n  //   getSingleBatchPayslipDeductions(single_payslip.empid, payslip_period);\n  // };\n\n  // const add_PayslipDeduction = (data) => {\n  //   const { description, amount } = data;\n  //   addPayslipDeduction({\n  //     description: description,\n  //     amount: amount,\n  //     name: single_payslip.name,\n  //     empid: single_payslip.empid,\n  //     period: single_payslip.period,\n  //   });\n  //   getSingleBatchPayslipDeductions(single_payslip.empid, payslip_period);\n  // };\n\n  // const delete_PayslipDeduction = (data) => {\n  //   const { id } = data;\n  //   deletePayslipDeduction(id);\n  //   getSingleBatchPayslipDeductions(single_payslip.empid, payslip_period);\n  // };\n\n  if (payslipdeductions_loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Loading... Expenses.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: \"100%\",\n        paddingTop: \"5px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n        columns: columns,\n        data: payslipdeductions,\n        title: \"Expense\",\n        options: {\n          search: false,\n          toolbar: false\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: 0\n  }\n}));","map":{"version":3,"names":["React","useEffect","useMemo","MaterialTable","makeStyles","useRecoilValue","payPeriodState","payPeriodEmpIdState","usePayslipsContext","PayslipViewDeductions","classes","useStyles","payPeriodEmpId","payPeriod","payslipdeductions","payslipdeductions_loading","getSingleBatchPayslipDeductions","columns","title","field","type","root","maxWidth","paddingTop","search","toolbar","theme","padding"],"sources":["D:/react-myprojects/hrms-demo/src/components/Payslip_ViewDeductions.js"],"sourcesContent":["import React, { useEffect, useMemo } from \"react\";\r\n\r\nimport MaterialTable from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport {\r\n  payPeriodState,\r\n  //payPeriodEndMonthState,\r\n  payPeriodEmpIdState,\r\n} from \"./data/atomdata\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\n//import { useTablesContext } from \"../context/tables_context\";\r\n\r\nexport default function PayslipViewDeductions() {\r\n  const classes = useStyles();\r\n  const payPeriodEmpId = useRecoilValue(payPeriodEmpIdState);\r\n  const payPeriod = useRecoilValue(payPeriodState);\r\n\r\n  const {\r\n    payslipdeductions,\r\n    //payslip_deduction_amount,\r\n    //setPayslipDeductionAmount,\r\n    //loadPayslipDeductions,\r\n    //addPayslipDeduction,\r\n    payslipdeductions_loading,\r\n    //updatePayslipDeduction,\r\n    //deletePayslipDeduction,\r\n    //updatePayslip,\r\n    //editPayslipID,\r\n    //single_payslip,\r\n    //payslip_period,\r\n    getSingleBatchPayslipDeductions,\r\n  } = usePayslipsContext();\r\n  //const { name, amount } = payslipdeductions;\r\n  //const { deductions } = useTablesContext();\r\n\r\n  // const calc_Deduction = (data) => {\r\n  //   const sum = data.reduce((a, v) => (a = a + v.amount), 0);\r\n  //   setPayslipDeductionAmount(sum);\r\n  // };\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        title: \"Name\",\r\n        field: \"description\",\r\n      },\r\n      { title: \"Amount\", field: \"amount\", type: \"currency\" },\r\n    ],\r\n    []\r\n  );\r\n\r\n  useEffect(() => {\r\n    getSingleBatchPayslipDeductions(payPeriodEmpId, payPeriod);\r\n  }, []);\r\n\r\n  // const update_Payslip = () => {\r\n  //   const { rec_id, id, total_deductions, ...paydata } = single_payslip;\r\n  //   updatePayslip({\r\n  //     id: editPayslipID,\r\n  //     total_deductions: payslip_deduction_amount,\r\n  //     ...paydata,\r\n  //   });\r\n  // };\r\n\r\n  // const update_PayslipDeduction = async (data) => {\r\n  //   const { id, rec_id, empid, ...fields } = data;\r\n  //   updatePayslipDeduction({ id: data.id, empid: empid, ...fields });\r\n  //   update_Payslip();\r\n  //   getSingleBatchPayslipDeductions(single_payslip.empid, payslip_period);\r\n  // };\r\n\r\n  // const add_PayslipDeduction = (data) => {\r\n  //   const { description, amount } = data;\r\n  //   addPayslipDeduction({\r\n  //     description: description,\r\n  //     amount: amount,\r\n  //     name: single_payslip.name,\r\n  //     empid: single_payslip.empid,\r\n  //     period: single_payslip.period,\r\n  //   });\r\n  //   getSingleBatchPayslipDeductions(single_payslip.empid, payslip_period);\r\n  // };\r\n\r\n  // const delete_PayslipDeduction = (data) => {\r\n  //   const { id } = data;\r\n  //   deletePayslipDeduction(id);\r\n  //   getSingleBatchPayslipDeductions(single_payslip.empid, payslip_period);\r\n  // };\r\n\r\n  if (payslipdeductions_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading... Expenses.</h2>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <h1>Expenses Claims Application</h1> */}\r\n\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={payslipdeductions}\r\n          title=\"Expense\"\r\n          options={{\r\n            search: false,\r\n            toolbar: false,\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,OAAO,QAAQ,OAAO;AAEjD,OAAOC,aAAa,MAAM,gBAAgB;AAC1C,SAASC,UAAU,QAAQ,0BAA0B;AACrD,SAASC,cAAc,QAAQ,QAAQ;AACvC,SACEC,cAAc;AACd;AACAC,mBAAmB,QACd,iBAAiB;AACxB,SAASC,kBAAkB,QAAQ,6BAA6B;AAChE;AAAA;AAEA,eAAe,SAASC,qBAAqB,GAAG;EAC9C,MAAMC,OAAO,GAAGC,SAAS,EAAE;EAC3B,MAAMC,cAAc,GAAGP,cAAc,CAACE,mBAAmB,CAAC;EAC1D,MAAMM,SAAS,GAAGR,cAAc,CAACC,cAAc,CAAC;EAEhD,MAAM;IACJQ,iBAAiB;IACjB;IACA;IACA;IACA;IACAC,yBAAyB;IACzB;IACA;IACA;IACA;IACA;IACA;IACAC;EACF,CAAC,GAAGR,kBAAkB,EAAE;EACxB;EACA;;EAEA;EACA;EACA;EACA;;EAEA,MAAMS,OAAO,GAAGf,OAAO,CACrB,MAAM,CACJ;IACEgB,KAAK,EAAE,MAAM;IACbC,KAAK,EAAE;EACT,CAAC,EACD;IAAED,KAAK,EAAE,QAAQ;IAAEC,KAAK,EAAE,QAAQ;IAAEC,IAAI,EAAE;EAAW,CAAC,CACvD,EACD,EAAE,CACH;EAEDnB,SAAS,CAAC,MAAM;IACde,+BAA+B,CAACJ,cAAc,EAAEC,SAAS,CAAC;EAC5D,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA,IAAIE,yBAAyB,EAAE;IAC7B,oBACE;MAAA,uBACE;QAAA,UAAI;MAAoB;QAAA;QAAA;QAAA;MAAA;IAAK;MAAA;MAAA;MAAA;IAAA,QACzB;EAEV;EAEA,oBACE;IAAK,SAAS,EAAEL,OAAO,CAACW,IAAK;IAAA,uBAG3B;MAAK,KAAK,EAAE;QAAEC,QAAQ,EAAE,MAAM;QAAEC,UAAU,EAAE;MAAM,CAAE;MAAA,uBAClD,QAAC,aAAa;QACZ,OAAO,EAAEN,OAAQ;QACjB,IAAI,EAAEH,iBAAkB;QACxB,KAAK,EAAC,SAAS;QACf,OAAO,EAAE;UACPU,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;QACX;MAAE;QAAA;QAAA;QAAA;MAAA;IACF;MAAA;MAAA;MAAA;IAAA;EACE;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAEA,MAAMd,SAAS,GAAGP,UAAU,CAAEsB,KAAK,KAAM;EACvCL,IAAI,EAAE;IACJM,OAAO,EAAE;EACX;AACF,CAAC,CAAC,CAAC"},"metadata":{},"sourceType":"module"}
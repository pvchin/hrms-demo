{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-demo\\\\src\\\\components\\\\LeaveTableManager.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useMemo } from \"react\";\nimport MaterialTable, { MTableToolbar } from \"material-table\";\nimport { TextField, MenuItem, Button } from \"@material-ui/core\";\nimport * as emailjs from \"emailjs-com\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useRecoilState } from \"recoil\";\nimport { loginLevelState } from \"./data/atomdata\";\nimport { useCustomToast } from \"../helpers/useCustomToast\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport LeaveForm from \"./LeaveForm\";\nimport { CustomDialog } from \"../helpers/CustomDialog\";\nimport { AlertDialogBox } from \"../helpers/AlertDialogBox\";\nimport { useLeavesContext } from \"../context/leaves_context\";\nimport { useEmployeesContext } from \"../context/employees_context\";\nimport { useEmployees } from \"./employees/useEmployees\";\nimport { useLeaves } from \"./leaves/useLeaves\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SERVICE_ID = process.env.REACT_APP_EMAILJS_SERVICEID;\nconst TEMPLATE_ID = \"template_1y8odlq\";\nconst USER_ID = process.env.REACT_APP_EMAILJS_USERID;\nconst ADMINMANAGER_EMAIL = process.env.ADMINMANAGER_EMAIL;\nexport default function LeaveTable({\n  //leavesdata,\n  //setLeavesdata,\n  handleDialogClose\n}) {\n  _s();\n\n  const classes = useStyles();\n  const toast = useCustomToast();\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\n  const {\n    employees\n  } = useEmployees();\n  const {\n    leaves\n  } = useLeaves();\n  const {\n    editLeaveID,\n    updateLeave,\n    deleteLeave,\n    loadLeaves,\n    update_leave_error\n  } = useLeavesContext();\n  const leavesdata = leaves.filter(r => r.status === \"Pending\");\n  const {\n    updateEmployee\n  } = useEmployeesContext();\n  const columns = useMemo(() => [{\n    title: \"Name\",\n    field: \"name\",\n    editable: \"never\"\n  }, {\n    title: \"From Date\",\n    field: \"from_date\",\n    type: \"date\",\n    dateSetting: {\n      locale: \"en-GB\"\n    },\n    editable: \"never\"\n  }, {\n    title: \"To Date\",\n    field: \"to_date\",\n    type: \"date\",\n    dateSetting: {\n      locale: \"en-GB\"\n    },\n    editable: \"never\"\n  }, {\n    title: \"Leave Balance\",\n    field: \"leave_bal\",\n    editable: \"never\",\n    cellStyle: {\n      width: 10,\n      maxWidth: 10\n    }\n  }, {\n    title: \"Days\",\n    field: \"no_of_days\",\n    editable: \"never\",\n    cellStyle: {\n      width: 10,\n      maxWidth: 10\n    }\n  }, {\n    title: \"Reason\",\n    field: \"reason\",\n    editable: \"never\",\n    cellStyle: {\n      width: 10,\n      maxWidth: 10\n    }\n  }, {\n    title: \"Status\",\n    field: \"status\",\n    editable: \"never\",\n    cellStyle: {\n      width: 50,\n      maxWidth: 50\n    },\n    editComponent: props => /*#__PURE__*/_jsxDEV(TextField //defaultValue={props.value || null}\n    , {\n      onChange: e => props.onChange(e.target.value),\n      style: {\n        width: 100\n      },\n      value: props.value,\n      select: true,\n      children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n        value: \"Pending\",\n        children: \"Pending\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        value: \"Approve\",\n        children: \"Approve\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        value: \"Reject\",\n        children: \"Reject\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        value: \"Cancel\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }, this)\n  }], []); // useEffect(() => {\n  //   loadLeaves();\n  // }, []);\n  // const handleLeaveFormDialogOpen = () => {\n  //   setIsDialogOpen(true);\n  // };\n\n  const handleLeaveFormDialogClose = () => {\n    setIsDialogOpen(false);\n    loadLeaves();\n  }; // const handleLeaveFormAlertOpen = () => {\n  //   setIsAlertOpen(true);\n  // };\n\n\n  const handleLeaveFormAlertClose = () => {\n    setIsAlertOpen(false);\n  };\n\n  const handleLeaveFormOnDeleteConfirm = () => {\n    const id = editLeaveID;\n    deleteLeave(id);\n    loadLeaves();\n  };\n\n  const handleSentEmail = (data, result) => {\n    const {\n      from_date,\n      to_date,\n      name,\n      empid\n    } = data;\n    const emp = employees.filter(f => f.id === empid).map(r => {\n      return { ...r\n      };\n    }); //console.log(\"leave form\", data, emp);\n\n    var emaildata = {\n      to_name: name,\n      to_email: emp[0].email,\n      message: `Your leave application from ${from_date} to ${to_date} has been ${result}!`,\n      cc_to: ADMINMANAGER_EMAIL\n    };\n    emailjs.send(SERVICE_ID, TEMPLATE_ID, emaildata, USER_ID).then(function (response) {\n      console.log(response.status, response.text);\n      toast({\n        title: `Email has sent successfully to ${emaildata.to_email}!`,\n        status: \"success\"\n      });\n    }, function (err) {\n      console.log(err);\n      toast({\n        title: `Email has fail to send to ${emaildata.to_email}!`,\n        status: \"warning\"\n      });\n    });\n  };\n\n  const Approve_LeaveData = () => {\n    leavesdata.forEach(rec => {\n      if (rec.tableData.checked) {\n        updateLeave({\n          id: rec.id,\n          status: \"Approved\"\n        }); //update leavesdata\n\n        if (!update_leave_error) {\n          const recdata = leavesdata.filter(r => r.id === rec.id);\n          recdata[0].status = \"Approved\"; // update leave bal\n          //console.log(\"leave\", rec.empid, employees);\n\n          const empleavebal = employees.filter(r => r.id === rec.empid).map(item => {\n            return item.leave_bal;\n          });\n          const leavebal = empleavebal - rec.no_of_days;\n          updateEmployee({\n            id: rec.empid,\n            leave_bal: leavebal\n          });\n        } //sent email\n\n\n        handleSentEmail(rec, \"Approved\");\n      }\n    });\n    leavesdata.forEach(d => {\n      if (d.tableData) d.tableData.checked = false;\n    });\n  };\n\n  const Reject_LeaveData = () => {\n    leavesdata.forEach(rec => {\n      if (rec.tableData.checked) {\n        updateLeave({\n          id: rec.id,\n          status: \"Rejected\"\n        }); //update leavesdata\n\n        if (!update_leave_error) {\n          const recdata = leavesdata.filter(r => r.id === rec.id);\n          recdata[0].status = \"Rejected\";\n        } //sent email\n\n\n        handleSentEmail(rec, \"Rejected\");\n      }\n    });\n    leavesdata.forEach(d => {\n      if (d.tableData) d.tableData.checked = false;\n    });\n  }; // const Save_LeaveData = () => {\n  //   leavesdata.forEach((data) => {\n  //     const { id } = data;\n  //     if (id) {\n  //       const { id, rec_id, tableData, ...fields } = data;\n  //       updateLeave({ id, ...fields });\n  //     }\n  //   });\n  //   handleDialogClose();\n  //};\n  // if (expenses_loading) {\n  //   return (\n  // if (leaves_loading) {\n  //   return (\n  //     <div>\n  //       <h2>Loading...Leaves</h2>\n  //     </div>\n  //   );\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: \"100%\",\n        paddingTop: \"5px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(MaterialTable, {\n        columns: columns // data={leavesdata.filter(\n        //   (r) => r.reporting_email === loginLevel.loginEmail\n        // )}\n        ,\n        data: leavesdata,\n        title: \"Leave Application\",\n        icons: {\n          Add: props => /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 29\n          }, this),\n          Edit: props => /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 30\n          }, this),\n          Delete: props => /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 32\n          }, this),\n          Clear: props => /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 31\n          }, this),\n          Check: props => /*#__PURE__*/_jsxDEV(CheckIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 31\n          }, this),\n          Search: props => /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 32\n          }, this),\n          ResetSearch: props => /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 37\n          }, this)\n        } // editable={{\n        //   onRowUpdate: (newData, oldData) =>\n        //     new Promise((resolve, reject) => {\n        //       setTimeout(() => {\n        //         const dataUpdate = [...leavesdata];\n        //         const index = oldData.tableData.id;\n        //         dataUpdate[index] = newData;\n        //         setLeavesdata([...dataUpdate]);\n        //         //approve_Expense(newData);\n        //         resolve();\n        //       }, 1000);\n        //     }),\n        // }}\n        ,\n        options: {\n          filtering: true,\n          selection: true,\n          headerStyle: {\n            backgroundColor: \"#90CDF4\",\n            color: \"primary\"\n          },\n          showTitle: true\n        },\n        components: {\n          Toolbar: props => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(MTableToolbar, { ...props\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                padding: \"5px 10px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                variant: \"contained\",\n                color: \"secondary\",\n                className: classes.button,\n                onClick: Approve_LeaveData,\n                children: \"Approve\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                variant: \"contained\",\n                color: \"secondary\",\n                className: classes.button,\n                onClick: Reject_LeaveData,\n                children: \"Reject\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 15\n          }, this)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CustomDialog, {\n        isOpen: isDialogOpen,\n        handleClose: handleLeaveFormDialogClose,\n        title: \"\",\n        showButton: true,\n        isFullscree: false,\n        children: /*#__PURE__*/_jsxDEV(LeaveForm, {\n          handleDialogClose: handleLeaveFormDialogClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AlertDialogBox, {\n        onClose: handleLeaveFormAlertClose,\n        onConfirm: handleLeaveFormOnDeleteConfirm,\n        isOpen: isAlertOpen,\n        title: \"Delete Expenses\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Are you sure you want to delete ?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 255,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LeaveTable, \"ONVhdJQec//80EJRUUiABNsay9s=\", false, function () {\n  return [useStyles, useCustomToast, useRecoilState, useEmployees, useLeaves, useLeavesContext, useEmployeesContext];\n});\n\n_c = LeaveTable;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: 0\n  },\n  button: {\n    margin: theme.spacing(1)\n  }\n}));\n\nvar _c;\n\n$RefreshReg$(_c, \"LeaveTable\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-demo/src/components/LeaveTableManager.js"],"names":["React","useState","useMemo","MaterialTable","MTableToolbar","TextField","MenuItem","Button","emailjs","makeStyles","useRecoilState","loginLevelState","useCustomToast","AddIcon","EditIcon","DeleteIcon","CheckIcon","SearchIcon","LeaveForm","CustomDialog","AlertDialogBox","useLeavesContext","useEmployeesContext","useEmployees","useLeaves","SERVICE_ID","process","env","REACT_APP_EMAILJS_SERVICEID","TEMPLATE_ID","USER_ID","REACT_APP_EMAILJS_USERID","ADMINMANAGER_EMAIL","LeaveTable","handleDialogClose","classes","useStyles","toast","loginLevel","setLoginLevel","isDialogOpen","setIsDialogOpen","isAlertOpen","setIsAlertOpen","employees","leaves","editLeaveID","updateLeave","deleteLeave","loadLeaves","update_leave_error","leavesdata","filter","r","status","updateEmployee","columns","title","field","editable","type","dateSetting","locale","cellStyle","width","maxWidth","editComponent","props","e","onChange","target","value","handleLeaveFormDialogClose","handleLeaveFormAlertClose","handleLeaveFormOnDeleteConfirm","id","handleSentEmail","data","result","from_date","to_date","name","empid","emp","f","map","emaildata","to_name","to_email","email","message","cc_to","send","then","response","console","log","text","err","Approve_LeaveData","forEach","rec","tableData","checked","recdata","empleavebal","item","leave_bal","leavebal","no_of_days","d","Reject_LeaveData","root","paddingTop","Add","Edit","Delete","Clear","Check","Search","ResetSearch","filtering","selection","headerStyle","backgroundColor","color","showTitle","Toolbar","padding","button","theme","margin","spacing"],"mappings":"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","sourcesContent":["import React, { useState, useMemo } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { TextField, MenuItem, Button } from \"@material-ui/core\";\r\nimport * as emailjs from \"emailjs-com\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport { useCustomToast } from \"../helpers/useCustomToast\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport LeaveForm from \"./LeaveForm\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { AlertDialogBox } from \"../helpers/AlertDialogBox\";\r\nimport { useLeavesContext } from \"../context/leaves_context\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useEmployees } from \"./employees/useEmployees\";\r\nimport { useLeaves } from \"./leaves/useLeaves\";\r\n\r\nconst SERVICE_ID = process.env.REACT_APP_EMAILJS_SERVICEID;\r\nconst TEMPLATE_ID = \"template_1y8odlq\";\r\nconst USER_ID = process.env.REACT_APP_EMAILJS_USERID;\r\nconst ADMINMANAGER_EMAIL = process.env.ADMINMANAGER_EMAIL;\r\n\r\nexport default function LeaveTable({\r\n  //leavesdata,\r\n  //setLeavesdata,\r\n  handleDialogClose,\r\n}) {\r\n  const classes = useStyles();\r\n  const toast = useCustomToast();\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\r\n  const { employees } = useEmployees();\r\n  const { leaves } = useLeaves();\r\n  const {\r\n    editLeaveID,\r\n    updateLeave,\r\n    deleteLeave,\r\n    loadLeaves,\r\n    update_leave_error,\r\n  } = useLeavesContext();\r\n\r\n  const leavesdata = leaves.filter((r)=>r.status === \"Pending\")\r\n  const { updateEmployee } = useEmployeesContext();\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        title: \"Name\",\r\n        field: \"name\",\r\n        editable: \"never\",\r\n      },\r\n      {\r\n        title: \"From Date\",\r\n        field: \"from_date\",\r\n        type: \"date\",\r\n        dateSetting: { locale: \"en-GB\" },\r\n        editable: \"never\",\r\n      },\r\n      {\r\n        title: \"To Date\",\r\n        field: \"to_date\",\r\n        type: \"date\",\r\n        dateSetting: { locale: \"en-GB\" },\r\n        editable: \"never\",\r\n      },\r\n      {\r\n        title: \"Leave Balance\",\r\n        field: \"leave_bal\",\r\n        editable: \"never\",\r\n        cellStyle: {\r\n          width: 10,\r\n          maxWidth: 10,\r\n        },\r\n      },\r\n      {\r\n        title: \"Days\",\r\n        field: \"no_of_days\",\r\n        editable: \"never\",\r\n        cellStyle: {\r\n          width: 10,\r\n          maxWidth: 10,\r\n        },\r\n      },\r\n      {\r\n        title: \"Reason\",\r\n        field: \"reason\",\r\n        editable: \"never\",\r\n        cellStyle: {\r\n          width: 10,\r\n          maxWidth: 10,\r\n        },\r\n      },\r\n      {\r\n        title: \"Status\",\r\n        field: \"status\",\r\n        editable: \"never\",\r\n        cellStyle: {\r\n          width: 50,\r\n          maxWidth: 50,\r\n        },\r\n        editComponent: (props) => (\r\n          <TextField\r\n            //defaultValue={props.value || null}\r\n            onChange={(e) => props.onChange(e.target.value)}\r\n            style={{ width: 100 }}\r\n            value={props.value}\r\n            select\r\n          >\r\n            <MenuItem value=\"Pending\">Pending</MenuItem>\r\n            <MenuItem value=\"Approve\">Approve</MenuItem>\r\n            <MenuItem value=\"Reject\">Reject</MenuItem>\r\n            <MenuItem value=\"Cancel\">Cancel</MenuItem>\r\n          </TextField>\r\n        ),\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  // useEffect(() => {\r\n  //   loadLeaves();\r\n  // }, []);\r\n\r\n  // const handleLeaveFormDialogOpen = () => {\r\n  //   setIsDialogOpen(true);\r\n  // };\r\n\r\n  const handleLeaveFormDialogClose = () => {\r\n    setIsDialogOpen(false);\r\n    loadLeaves();\r\n  };\r\n\r\n  // const handleLeaveFormAlertOpen = () => {\r\n  //   setIsAlertOpen(true);\r\n  // };\r\n\r\n  const handleLeaveFormAlertClose = () => {\r\n    setIsAlertOpen(false);\r\n  };\r\n\r\n  const handleLeaveFormOnDeleteConfirm = () => {\r\n    const id = editLeaveID;\r\n    deleteLeave(id);\r\n    loadLeaves();\r\n  };\r\n\r\n  const handleSentEmail = (data, result) => {\r\n    const { from_date, to_date, name, empid } = data;\r\n    const emp = employees\r\n      .filter((f) => f.id === empid)\r\n      .map((r) => {\r\n        return { ...r };\r\n      });\r\n    //console.log(\"leave form\", data, emp);\r\n\r\n    var emaildata = {\r\n      to_name: name,\r\n      to_email: emp[0].email,\r\n      message: `Your leave application from ${from_date} to ${to_date} has been ${result}!`,\r\n      cc_to: ADMINMANAGER_EMAIL,\r\n    };\r\n\r\n    emailjs.send(SERVICE_ID, TEMPLATE_ID, emaildata, USER_ID).then(\r\n      function (response) {\r\n        console.log(response.status, response.text);\r\n        toast({\r\n          title: `Email has sent successfully to ${emaildata.to_email}!`,\r\n          status: \"success\",\r\n        });\r\n      },\r\n      function (err) {\r\n        console.log(err);\r\n        toast({\r\n          title: `Email has fail to send to ${emaildata.to_email}!`,\r\n          status: \"warning\",\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  const Approve_LeaveData = () => {\r\n    leavesdata.forEach((rec) => {\r\n      if (rec.tableData.checked) {\r\n        updateLeave({ id: rec.id, status: \"Approved\" });\r\n        //update leavesdata\r\n        if (!update_leave_error) {\r\n          const recdata = leavesdata.filter((r) => r.id === rec.id);\r\n          recdata[0].status = \"Approved\";\r\n\r\n          // update leave bal\r\n          //console.log(\"leave\", rec.empid, employees);\r\n          const empleavebal = employees\r\n            .filter((r) => r.id === rec.empid)\r\n            .map((item) => {\r\n              return item.leave_bal;\r\n            });\r\n          const leavebal = empleavebal - rec.no_of_days;\r\n          updateEmployee({ id: rec.empid, leave_bal: leavebal });\r\n        }\r\n        //sent email\r\n        handleSentEmail(rec, \"Approved\");\r\n      }\r\n    });\r\n    leavesdata.forEach((d) => {\r\n      if (d.tableData) d.tableData.checked = false;\r\n    });\r\n  };\r\n\r\n  const Reject_LeaveData = () => {\r\n    leavesdata.forEach((rec) => {\r\n      if (rec.tableData.checked) {\r\n        updateLeave({ id: rec.id, status: \"Rejected\" });\r\n        //update leavesdata\r\n        if (!update_leave_error) {\r\n          const recdata = leavesdata.filter((r) => r.id === rec.id);\r\n          recdata[0].status = \"Rejected\";\r\n        }\r\n        //sent email\r\n        handleSentEmail(rec, \"Rejected\");\r\n      }\r\n    });\r\n    leavesdata.forEach((d) => {\r\n      if (d.tableData) d.tableData.checked = false;\r\n    });\r\n  };\r\n\r\n  // const Save_LeaveData = () => {\r\n  //   leavesdata.forEach((data) => {\r\n  //     const { id } = data;\r\n  //     if (id) {\r\n  //       const { id, rec_id, tableData, ...fields } = data;\r\n  //       updateLeave({ id, ...fields });\r\n  //     }\r\n  //   });\r\n\r\n  //   handleDialogClose();\r\n  //};\r\n\r\n  // if (expenses_loading) {\r\n  //   return (\r\n\r\n  // if (leaves_loading) {\r\n  //   return (\r\n  //     <div>\r\n  //       <h2>Loading...Leaves</h2>\r\n  //     </div>\r\n  //   );\r\n  // }\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <h1>Expenses Claims Application</h1> */}\r\n\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          // data={leavesdata.filter(\r\n          //   (r) => r.reporting_email === loginLevel.loginEmail\r\n          // )}\r\n          data={leavesdata}\r\n          title=\"Leave Application\"\r\n          icons={{\r\n            Add: (props) => <AddIcon />,\r\n            Edit: (props) => <EditIcon />,\r\n            Delete: (props) => <DeleteIcon />,\r\n            Clear: (props) => <DeleteIcon />,\r\n            Check: (props) => <CheckIcon />,\r\n            Search: (props) => <SearchIcon />,\r\n            ResetSearch: (props) => <DeleteIcon />,\r\n          }}\r\n          // editable={{\r\n          //   onRowUpdate: (newData, oldData) =>\r\n          //     new Promise((resolve, reject) => {\r\n          //       setTimeout(() => {\r\n          //         const dataUpdate = [...leavesdata];\r\n          //         const index = oldData.tableData.id;\r\n          //         dataUpdate[index] = newData;\r\n          //         setLeavesdata([...dataUpdate]);\r\n          //         //approve_Expense(newData);\r\n\r\n          //         resolve();\r\n          //       }, 1000);\r\n          //     }),\r\n          // }}\r\n          options={{\r\n            filtering: true,\r\n            selection: true,\r\n            headerStyle: {\r\n              backgroundColor: \"#90CDF4\",\r\n              color: \"primary\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n                <div style={{ padding: \"5px 10px\" }}>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    onClick={Approve_LeaveData}\r\n                  >\r\n                    Approve\r\n                  </Button>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    onClick={Reject_LeaveData}\r\n                  >\r\n                    Reject\r\n                  </Button>\r\n                  {/* <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    onClick={Save_LeaveData}\r\n                  >\r\n                    Update <Icon className={classes.rightIcon}>send</Icon>\r\n                  </Button> */}\r\n                </div>\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n        <CustomDialog\r\n          isOpen={isDialogOpen}\r\n          handleClose={handleLeaveFormDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscree={false}\r\n        >\r\n          <LeaveForm handleDialogClose={handleLeaveFormDialogClose} />\r\n        </CustomDialog>\r\n\r\n        <AlertDialogBox\r\n          onClose={handleLeaveFormAlertClose}\r\n          onConfirm={handleLeaveFormOnDeleteConfirm}\r\n          isOpen={isAlertOpen}\r\n          title=\"Delete Expenses\"\r\n        >\r\n          <h2>Are you sure you want to delete ?</h2>\r\n        </AlertDialogBox>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n"]},"metadata":{},"sourceType":"module"}
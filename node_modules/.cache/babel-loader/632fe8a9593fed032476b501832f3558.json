{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useCallback } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { hoc_url } from \"../../utils/constants\";\nimport { filterByEmpId } from \"./utils\";\nimport axios from \"axios\";\nimport { queryKeys } from \"../react-query/constants\";\n\nasync function getHocPeriod(hocperiodMthId, hocperiodYrId) {\n  const {\n    data\n  } = await axios.get(`${hoc_url}?m=${hocperiodMthId}&y=${hocperiodYrId}`); //const { data } = await axios.get(`${expenses_url}`);\n\n  return data;\n}\n\nexport function useHocPeriod(payrun) {\n  _s();\n\n  const [hocperiodfilter, setHocPeriodFilter] = useState(\"all\");\n  const [hocperiodYrId, setHocPeriodYrId] = useState(\"\");\n  const [hocperiodMthId, setHocPeriodMthId] = useState(\"\");\n  const selectFn = useCallback(unfiltered => filterByEmpId(unfiltered, hocperiodfilter), [hocperiodfilter]);\n  const fallback = [];\n  const {\n    data: hocperiod = fallback\n  } = useQuery([queryKeys.hocperiod, hocperiodMthId, hocperiodYrId], //queryKeys.expenses_payrun,\n  () => getHocPeriod(hocperiodMthId, hocperiodYrId), {\n    select: hocperiodfilter !== \"all\" ? selectFn : undefined\n  });\n  return {\n    hocperiod,\n    hocperiodfilter,\n    setHocPeriodFilter,\n    setHocPeriodYrId,\n    setHocPeriodMthId\n  };\n}\n\n_s(useHocPeriod, \"ZMVV8FxoEAaCHALEppmmm4MiSNI=\", false, function () {\n  return [useQuery];\n});","map":{"version":3,"sources":["D:/react-myprojects/hrms-demo/src/components/hoc/useHocPeriod.js"],"names":["useState","useCallback","useQuery","hoc_url","filterByEmpId","axios","queryKeys","getHocPeriod","hocperiodMthId","hocperiodYrId","data","get","useHocPeriod","payrun","hocperiodfilter","setHocPeriodFilter","setHocPeriodYrId","setHocPeriodMthId","selectFn","unfiltered","fallback","hocperiod","select","undefined"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,OAAtC;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,OAAT,QAAwB,uBAAxB;AACA,SAASC,aAAT,QAA8B,SAA9B;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,0BAA1B;;AAEA,eAAeC,YAAf,CAA4BC,cAA5B,EAA4CC,aAA5C,EAA2D;AACzD,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAML,KAAK,CAACM,GAAN,CACpB,GAAER,OAAQ,MAAKK,cAAe,MAAKC,aAAc,EAD7B,CAAvB,CADyD,CAIzD;;AACA,SAAOC,IAAP;AACD;;AAED,OAAO,SAASE,YAAT,CAAsBC,MAAtB,EAA8B;AAAA;;AACnC,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCf,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAM,CAACS,aAAD,EAAgBO,gBAAhB,IAAoChB,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACQ,cAAD,EAAiBS,iBAAjB,IAAsCjB,QAAQ,CAAC,EAAD,CAApD;AAEA,QAAMkB,QAAQ,GAAGjB,WAAW,CACzBkB,UAAD,IAAgBf,aAAa,CAACe,UAAD,EAAaL,eAAb,CADH,EAE1B,CAACA,eAAD,CAF0B,CAA5B;AAKA,QAAMM,QAAQ,GAAG,EAAjB;AACA,QAAM;AAAEV,IAAAA,IAAI,EAAEW,SAAS,GAAGD;AAApB,MAAiClB,QAAQ,CAC7C,CAACI,SAAS,CAACe,SAAX,EAAsBb,cAAtB,EAAsCC,aAAtC,CAD6C,EAE7C;AACA,QAAMF,YAAY,CAACC,cAAD,EAAiBC,aAAjB,CAH2B,EAI7C;AACEa,IAAAA,MAAM,EAAER,eAAe,KAAK,KAApB,GAA4BI,QAA5B,GAAuCK;AADjD,GAJ6C,CAA/C;AASA,SAAO;AACLF,IAAAA,SADK;AAELP,IAAAA,eAFK;AAGLC,IAAAA,kBAHK;AAILC,IAAAA,gBAJK;AAKLC,IAAAA;AALK,GAAP;AAOD;;GA3BeL,Y;UAWyBV,Q","sourcesContent":["import { useState, useCallback } from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport { hoc_url } from \"../../utils/constants\";\r\nimport { filterByEmpId } from \"./utils\";\r\n\r\nimport axios from \"axios\";\r\nimport { queryKeys } from \"../react-query/constants\";\r\n\r\nasync function getHocPeriod(hocperiodMthId, hocperiodYrId) {\r\n  const { data } = await axios.get(\r\n    `${hoc_url}?m=${hocperiodMthId}&y=${hocperiodYrId}`\r\n  );\r\n  //const { data } = await axios.get(`${expenses_url}`);\r\n  return data;\r\n}\r\n\r\nexport function useHocPeriod(payrun) {\r\n  const [hocperiodfilter, setHocPeriodFilter] = useState(\"all\");\r\n  const [hocperiodYrId, setHocPeriodYrId] = useState(\"\");\r\n  const [hocperiodMthId, setHocPeriodMthId] = useState(\"\");\r\n\r\n  const selectFn = useCallback(\r\n    (unfiltered) => filterByEmpId(unfiltered, hocperiodfilter),\r\n    [hocperiodfilter]\r\n  );\r\n\r\n  const fallback = [];\r\n  const { data: hocperiod = fallback } = useQuery(\r\n    [queryKeys.hocperiod, hocperiodMthId, hocperiodYrId],\r\n    //queryKeys.expenses_payrun,\r\n    () => getHocPeriod(hocperiodMthId, hocperiodYrId),\r\n    {\r\n      select: hocperiodfilter !== \"all\" ? selectFn : undefined,\r\n    }\r\n  );\r\n\r\n  return {\r\n    hocperiod,\r\n    hocperiodfilter,\r\n    setHocPeriodFilter,\r\n    setHocPeriodYrId,\r\n    setHocPeriodMthId,\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useMutation, useQueryClient } from \"react-query\";\nimport { hoc_url } from \"../../utils/constants\";\nimport { useCustomToast } from \"../../helpers/useCustomToast\";\n\nasync function addHoc(data) {\n  await fetch(hoc_url, {\n    method: \"POST\",\n    body: JSON.stringify({ ...data\n    })\n  });\n}\n\nexport function useAddHoc(data) {\n  _s();\n\n  const queryClient = useQueryClient();\n  const toast = useCustomToast();\n  const {\n    mutate\n  } = useMutation(data => addHoc(data), {\n    onSuccess: () => {\n      queryClient.invalidateQueries(\"hoc\");\n      toast({\n        title: \"HOC record being added!\",\n        status: \"success\"\n      });\n    },\n    onError: () => {\n      toast({\n        title: \"Network Error! Please check your internet connection!\",\n        status: \"warning\"\n      });\n    }\n  });\n  return mutate;\n}\n\n_s(useAddHoc, \"hoUwZA1xHrROpctkoAMiT28Sz2U=\", false, function () {\n  return [useQueryClient, useCustomToast, useMutation];\n});","map":{"version":3,"sources":["D:/react-myprojects/hrms-demo/src/components/hoc/useAddHoc.js"],"names":["useMutation","useQueryClient","hoc_url","useCustomToast","addHoc","data","fetch","method","body","JSON","stringify","useAddHoc","queryClient","toast","mutate","onSuccess","invalidateQueries","title","status","onError"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,cAAtB,QAA4C,aAA5C;AACA,SAASC,OAAT,QAAwB,uBAAxB;AACA,SAASC,cAAT,QAA+B,8BAA/B;;AAEA,eAAeC,MAAf,CAAsBC,IAAtB,EAA4B;AAC1B,QAAMC,KAAK,CAACJ,OAAD,EAAU;AACnBK,IAAAA,MAAM,EAAE,MADW;AAEnBC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe,EAAE,GAAGL;AAAL,KAAf;AAFa,GAAV,CAAX;AAID;;AAED,OAAO,SAASM,SAAT,CAAmBN,IAAnB,EAAyB;AAAA;;AAC9B,QAAMO,WAAW,GAAGX,cAAc,EAAlC;AACA,QAAMY,KAAK,GAAGV,cAAc,EAA5B;AAEA,QAAM;AAAEW,IAAAA;AAAF,MAAad,WAAW,CAAEK,IAAD,IAAUD,MAAM,CAACC,IAAD,CAAjB,EAAyB;AACrDU,IAAAA,SAAS,EAAE,MAAM;AACfH,MAAAA,WAAW,CAACI,iBAAZ,CAA8B,KAA9B;AACAH,MAAAA,KAAK,CAAC;AACJI,QAAAA,KAAK,EAAE,yBADH;AAEJC,QAAAA,MAAM,EAAE;AAFJ,OAAD,CAAL;AAID,KAPoD;AAQrDC,IAAAA,OAAO,EAAE,MAAM;AACbN,MAAAA,KAAK,CAAC;AACJI,QAAAA,KAAK,EAAE,uDADH;AAEJC,QAAAA,MAAM,EAAE;AAFJ,OAAD,CAAL;AAID;AAboD,GAAzB,CAA9B;AAgBA,SAAOJ,MAAP;AACD;;GArBeH,S;UACMV,c,EACNE,c,EAEKH,W","sourcesContent":["import { useMutation, useQueryClient } from \"react-query\";\r\nimport { hoc_url } from \"../../utils/constants\";\r\nimport { useCustomToast } from \"../../helpers/useCustomToast\";\r\n\r\nasync function addHoc(data) {\r\n  await fetch(hoc_url, {\r\n    method: \"POST\",\r\n    body: JSON.stringify({ ...data }),\r\n  });\r\n}\r\n\r\nexport function useAddHoc(data) {\r\n  const queryClient = useQueryClient();\r\n  const toast = useCustomToast();\r\n\r\n  const { mutate } = useMutation((data) => addHoc(data), {\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries(\"hoc\");\r\n      toast({\r\n        title: \"HOC record being added!\",\r\n        status: \"success\",\r\n      });\r\n    },\r\n    onError: () => {\r\n      toast({\r\n        title: \"Network Error! Please check your internet connection!\",\r\n        status: \"warning\",\r\n      });\r\n    },\r\n  });\r\n\r\n  return mutate;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
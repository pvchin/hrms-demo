{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-demo\\\\src\\\\components\\\\LeaveForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button, Icon, TextField, Paper, Typography, Divider } from \"@material-ui/core\";\nimport * as emailjs from \"emailjs-com\";\nimport { useRecoilState } from \"recoil\";\nimport { loginLevelState } from \"./data/atomdata\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useCustomToast } from \"../helpers/useCustomToast\"; //import { useEmployees } from \"./employees/useEmployees\";\n\nimport { useLeavesContext } from \"../context/leaves_context\";\nimport { Controller, useForm } from \"react-hook-form\"; //import { useLeaves } from \"./leaves/useLeaves\";\n\nimport { useAddLeaves } from \"./leaves/useAddLeaves\"; //import { useDeleteLeaves } from \"./leaves/useDeleteLeaves\";\n\nimport { useUpdateLeaves } from \"./leaves/useUpdateLeaves\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SERVICE_ID = process.env.REACT_APP_EMAILJS_SERVICEID;\nconst TEMPLATE_ID = \"template_1y8odlq\";\nconst USER_ID = process.env.REACT_APP_EMAILJS_USERID; // const initial_state = {\n//   name: \"\",\n//   to_date: \"\",\n//   from_date: \"\",\n//   reason: \"\",\n//   status: \"Pending\",\n//   no_of_days: 0,\n//   leave_bal: 0,\n//   reporting_email: \"\",\n// };\n\nconst LeaveForm = ({\n  formdata,\n  leavestate,\n  setFormdata,\n  handleDialogClose\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const toast = useCustomToast(); //const { employees } = useEmployees();\n  //const { leaves, filter, setFilter, setLeaveId } = useLeaves();\n\n  const updateLeaves = useUpdateLeaves();\n  const addLeaves = useAddLeaves(); //const [state, setState] = useState(initial_state);\n\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\n  const {\n    handleSubmit,\n    control\n  } = useForm(); //const initialValues = Object.values(initial_state).join(\"\");\n\n  const {\n    isLeaveEditing,\n    editLeaveID\n  } = useLeavesContext();\n\n  const handleSentEmail = data => {\n    const {\n      from_date,\n      to_date\n    } = data; //console.log(\"leave form\", loginLevel);\n\n    var emaildata = {\n      to_name: loginLevel.loginUser,\n      to_email: loginLevel.loginEmail,\n      message: `Your leave application from ${from_date} to ${to_date} has been successfully submitted for approval`,\n      cc_to: loginLevel.reporting_email\n    };\n    emailjs.send(SERVICE_ID, TEMPLATE_ID, emaildata, USER_ID).then(function (response) {\n      console.log(response.status, response.text);\n      toast({\n        title: `Email has sent successfully to ${emaildata.to_email}!`,\n        status: \"success\"\n      });\n    }, function (err) {\n      console.log(err);\n      toast({\n        title: `Email has fail to send to ${emaildata.to_email}!`,\n        status: \"warning\"\n      });\n    });\n  };\n\n  const onSubmit = data => {\n    console.log(\"leave\", data);\n\n    if (isLeaveEditing) {\n      updateLeaves({\n        id: editLeaveID,\n        ...data\n      });\n      toast({\n        title: \"Your leave has been updated!\",\n        status: \"success\"\n      });\n    } else {\n      addLeaves({ ...data,\n        empid: loginLevel.loginUserId,\n        reporting_email: loginLevel.reporting_email\n      });\n      handleSentEmail(data);\n    } //history.push(\"/leave\");\n\n\n    handleDialogClose();\n  }; // useEffect(() => {\n  //   setState(initial_state);\n  //   setState({ ...formdata });\n  //   setState({ ...formdata });\n  //   console.log(\"laeve form\",state)\n  // }, [initialValues]);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        component: \"h3\",\n        children: \"LEAVE FORM\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        component: \"p\",\n        children: \"Leave Application\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"name\",\n            control: control,\n            defaultValue: loginLevel.loginUser,\n            render: ({\n              field: {\n                onChange,\n                value\n              },\n              fieldState: {\n                error\n              }\n            }) => {\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Name\",\n                id: \"margin-normal\",\n                name: \"name\" //value={value}\n                ,\n                defaultValue: loginLevel.loginUser,\n                className: classes.textField,\n                onChange: e => {\n                  console.log(e.target.value);\n                  onChange(e.target.value);\n                },\n                InputProps: {\n                  readOnly: true\n                },\n                error: !!error,\n                helperText: error ? error.message : null //select\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 19\n              }, this);\n            } // rules={{ required: \"Name required\" }}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"from_date\",\n            control: control,\n            defaultValue: formdata.from_date,\n            render: ({\n              field: {\n                onChange,\n                value\n              },\n              fieldState: {\n                error\n              }\n            }) => {\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"From Date\",\n                type: \"date\",\n                id: \"margin-normal\",\n                name: \"from_date\",\n                defaultValue: formdata.from_date,\n                className: classes.textField,\n                onChange: onChange,\n                error: !!error,\n                helperText: error ? error.message : null,\n                InputLabelProps: {\n                  shrink: true\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 19\n              }, this);\n            },\n            rules: {\n              required: \"From Date is required\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"to_date\",\n            control: control,\n            defaultValue: formdata.to_date,\n            render: ({\n              field: {\n                onChange,\n                value\n              },\n              fieldState: {\n                error\n              }\n            }) => {\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"To Date\",\n                id: \"margin-normal\",\n                type: \"date\",\n                name: \"to_date\",\n                defaultValue: formdata.to_date,\n                className: classes.textField,\n                onChange: onChange,\n                error: !!error,\n                helperText: error ? error.message : null,\n                InputLabelProps: {\n                  shrink: true\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 19\n              }, this);\n            },\n            rules: {\n              required: \"To Date is required\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"leave_bal\",\n            control: control,\n            defaultValue: leavestate.leave_bal,\n            render: ({\n              field: {\n                onChange,\n                value\n              },\n              fieldState: {\n                error\n              }\n            }) => {\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                disable: true,\n                label: \"Leave Balance\",\n                type: \"number\",\n                id: \"standard-number\",\n                name: \"leave_bal\",\n                defaultValue: leavestate.leave_bal,\n                className: classes.textField //onChange={onChange}\n                ,\n                onChange: e => {\n                  onChange(parseInt(e.target.value, 10));\n                },\n                error: !!error,\n                helperText: error ? error.message : null,\n                InputProps: {\n                  readOnly: true\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 19\n              }, this);\n            } //rules={{ required: \"IC No required\" }}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"no_of_days\",\n            control: control,\n            defaultValue: formdata.no_of_days,\n            render: ({\n              field: {\n                onChange,\n                value\n              },\n              fieldState: {\n                error\n              }\n            }) => {\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"No Of Days\",\n                type: \"number\",\n                id: \"standard-number\",\n                name: \"no_of_days\",\n                defaultValue: formdata.no_of_days,\n                className: classes.textField //onChange={onChange}\n                ,\n                onChange: e => {\n                  onChange(parseInt(e.target.value, 10));\n                },\n                error: !!error,\n                helperText: error ? error.message : null\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 19\n              }, this);\n            } //rules={{ required: \"IC No required\" }}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"reason\",\n            control: control,\n            defaultValue: formdata.reason,\n            render: ({\n              field: {\n                onChange,\n                value\n              },\n              fieldState: {\n                error\n              }\n            }) => {\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Reason\",\n                id: \"margin-normal\",\n                name: \"reason\",\n                defaultValue: formdata.reason,\n                className: classes.textField,\n                onChange: onChange,\n                error: !!error,\n                helperText: error ? error.message : null\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 19\n              }, this);\n            } // rules={{ required: \"Reason is required\" }}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"status\",\n            control: control,\n            defaultValue: formdata.status,\n            render: ({\n              field: {\n                onChange,\n                value\n              },\n              fieldState: {\n                error\n              }\n            }) => {\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Status\",\n                id: \"margin-normal\",\n                name: \"status\",\n                defaultValue: formdata.status,\n                className: classes.textField,\n                onChange: onChange,\n                error: !!error,\n                helperText: error ? error.message : null,\n                InputProps: {\n                  readOnly: true\n                } // select\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 19\n              }, this);\n            } //rules={{ required: \"Status is required\" }}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            color: \"primary\",\n            className: classes.button,\n            onClick: handleSubmit(onSubmit),\n            children: [\"Submit \", /*#__PURE__*/_jsxDEV(Icon, {\n              className: classes.rightIcon,\n              children: \"send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 22\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LeaveForm, \"ndaIZRyeMnnEiV7mIZgz2zvn14A=\", false, function () {\n  return [useStyles, useCustomToast, useUpdateLeaves, useAddLeaves, useRecoilState, useForm, useLeavesContext];\n});\n\n_c = LeaveForm;\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(1)\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1)\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1)\n  },\n  iconSmall: {\n    fontSize: 20\n  },\n  root: {\n    padding: theme.spacing(3, 2)\n  },\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 400\n  }\n}));\nexport default LeaveForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LeaveForm\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-demo/src/components/LeaveForm.js"],"names":["React","useState","Button","Icon","TextField","Paper","Typography","Divider","emailjs","useRecoilState","loginLevelState","makeStyles","useCustomToast","useLeavesContext","Controller","useForm","useAddLeaves","useUpdateLeaves","SERVICE_ID","process","env","REACT_APP_EMAILJS_SERVICEID","TEMPLATE_ID","USER_ID","REACT_APP_EMAILJS_USERID","LeaveForm","formdata","leavestate","setFormdata","handleDialogClose","classes","useStyles","toast","updateLeaves","addLeaves","loginLevel","setLoginLevel","handleSubmit","control","isLeaveEditing","editLeaveID","handleSentEmail","data","from_date","to_date","emaildata","to_name","loginUser","to_email","loginEmail","message","cc_to","reporting_email","send","then","response","console","log","status","text","title","err","onSubmit","id","empid","loginUserId","root","field","onChange","value","fieldState","error","textField","e","target","readOnly","shrink","required","leave_bal","parseInt","no_of_days","reason","button","rightIcon","theme","margin","spacing","leftIcon","marginRight","marginLeft","iconSmall","fontSize","padding","container","display","flexWrap","width"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Icon,\r\n  TextField,\r\n  Paper,\r\n  Typography,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\nimport * as emailjs from \"emailjs-com\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useCustomToast } from \"../helpers/useCustomToast\";\r\n//import { useEmployees } from \"./employees/useEmployees\";\r\nimport { useLeavesContext } from \"../context/leaves_context\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\n//import { useLeaves } from \"./leaves/useLeaves\";\r\nimport { useAddLeaves } from \"./leaves/useAddLeaves\";\r\n//import { useDeleteLeaves } from \"./leaves/useDeleteLeaves\";\r\nimport { useUpdateLeaves } from \"./leaves/useUpdateLeaves\";\r\n\r\nconst SERVICE_ID = process.env.REACT_APP_EMAILJS_SERVICEID;\r\nconst TEMPLATE_ID = \"template_1y8odlq\";\r\nconst USER_ID = process.env.REACT_APP_EMAILJS_USERID;\r\n\r\n// const initial_state = {\r\n//   name: \"\",\r\n//   to_date: \"\",\r\n//   from_date: \"\",\r\n//   reason: \"\",\r\n//   status: \"Pending\",\r\n//   no_of_days: 0,\r\n//   leave_bal: 0,\r\n//   reporting_email: \"\",\r\n// };\r\n\r\nconst LeaveForm = ({\r\n  formdata,\r\n  leavestate,\r\n  setFormdata,\r\n  handleDialogClose,\r\n}) => {\r\n  const classes = useStyles();\r\n  const toast = useCustomToast();\r\n  //const { employees } = useEmployees();\r\n  //const { leaves, filter, setFilter, setLeaveId } = useLeaves();\r\n  const updateLeaves = useUpdateLeaves();\r\n  const addLeaves = useAddLeaves();\r\n  //const [state, setState] = useState(initial_state);\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const { handleSubmit, control } = useForm();\r\n  //const initialValues = Object.values(initial_state).join(\"\");\r\n  const { isLeaveEditing, editLeaveID } = useLeavesContext();\r\n\r\n  const handleSentEmail = (data) => {\r\n    const { from_date, to_date } = data;\r\n    //console.log(\"leave form\", loginLevel);\r\n    var emaildata = {\r\n      to_name: loginLevel.loginUser,\r\n      to_email: loginLevel.loginEmail,\r\n      message: `Your leave application from ${from_date} to ${to_date} has been successfully submitted for approval`,\r\n      cc_to: loginLevel.reporting_email,\r\n    };\r\n\r\n    emailjs.send(SERVICE_ID, TEMPLATE_ID, emaildata, USER_ID).then(\r\n      function (response) {\r\n        console.log(response.status, response.text);\r\n        toast({\r\n          title: `Email has sent successfully to ${emaildata.to_email}!`,\r\n          status: \"success\",\r\n        });\r\n      },\r\n      function (err) {\r\n        console.log(err);\r\n        toast({\r\n          title: `Email has fail to send to ${emaildata.to_email}!`,\r\n          status: \"warning\",\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n    console.log(\"leave\", data);\r\n    if (isLeaveEditing) {\r\n      updateLeaves({ id: editLeaveID, ...data });\r\n      toast({\r\n        title: \"Your leave has been updated!\",\r\n        status: \"success\",\r\n      });\r\n    } else {\r\n      addLeaves({\r\n        ...data,\r\n        empid: loginLevel.loginUserId,\r\n        reporting_email: loginLevel.reporting_email,\r\n      });\r\n      handleSentEmail(data);\r\n    }\r\n\r\n    //history.push(\"/leave\");\r\n    handleDialogClose();\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   setState(initial_state);\r\n  //   setState({ ...formdata });\r\n  //   setState({ ...formdata });\r\n  //   console.log(\"laeve form\",state)\r\n  // }, [initialValues]);\r\n\r\n  return (\r\n    <div>\r\n      <Paper className={classes.root}>\r\n        <Typography variant=\"h5\" component=\"h3\">\r\n          LEAVE FORM\r\n        </Typography>\r\n        <Typography component=\"p\">Leave Application</Typography>\r\n        <Divider />\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <div>\r\n            <Controller\r\n              name=\"name\"\r\n              control={control}\r\n              defaultValue={loginLevel.loginUser}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Name\"\r\n                    id=\"margin-normal\"\r\n                    name=\"name\"\r\n                    //value={value}\r\n                    defaultValue={loginLevel.loginUser}\r\n                    className={classes.textField}\r\n                    onChange={(e) => {\r\n                      console.log(e.target.value);\r\n                      onChange(e.target.value);\r\n                    }}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    //select\r\n                  >\r\n                    {/* {employees.map((e) => {\r\n                      return (\r\n                        <MenuItem key={e.name} value={e.name}>\r\n                          {e.name}\r\n                        </MenuItem>\r\n                      );\r\n                    })} */}\r\n                  </TextField>\r\n                );\r\n              }}\r\n              // rules={{ required: \"Name required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"from_date\"\r\n              control={control}\r\n              defaultValue={formdata.from_date}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"From Date\"\r\n                    type=\"date\"\r\n                    id=\"margin-normal\"\r\n                    name=\"from_date\"\r\n                    defaultValue={formdata.from_date}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                  />\r\n                );\r\n              }}\r\n              rules={{ required: \"From Date is required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"to_date\"\r\n              control={control}\r\n              defaultValue={formdata.to_date}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"To Date\"\r\n                    id=\"margin-normal\"\r\n                    type=\"date\"\r\n                    name=\"to_date\"\r\n                    defaultValue={formdata.to_date}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                  />\r\n                );\r\n              }}\r\n              rules={{ required: \"To Date is required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"leave_bal\"\r\n              control={control}\r\n              defaultValue={leavestate.leave_bal}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    disable\r\n                    label=\"Leave Balance\"\r\n                    type=\"number\"\r\n                    id=\"standard-number\"\r\n                    name=\"leave_bal\"\r\n                    defaultValue={leavestate.leave_bal}\r\n                    className={classes.textField}\r\n                    //onChange={onChange}\r\n                    onChange={(e) => {\r\n                      onChange(parseInt(e.target.value, 10));\r\n                    }}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                  />\r\n                );\r\n              }}\r\n              //rules={{ required: \"IC No required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"no_of_days\"\r\n              control={control}\r\n              defaultValue={formdata.no_of_days}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"No Of Days\"\r\n                    type=\"number\"\r\n                    id=\"standard-number\"\r\n                    name=\"no_of_days\"\r\n                    defaultValue={formdata.no_of_days}\r\n                    className={classes.textField}\r\n                    //onChange={onChange}\r\n                    onChange={(e) => {\r\n                      onChange(parseInt(e.target.value, 10));\r\n                    }}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                  />\r\n                );\r\n              }}\r\n              //rules={{ required: \"IC No required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"reason\"\r\n              control={control}\r\n              defaultValue={formdata.reason}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Reason\"\r\n                    id=\"margin-normal\"\r\n                    name=\"reason\"\r\n                    defaultValue={formdata.reason}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                  />\r\n                );\r\n              }}\r\n              // rules={{ required: \"Reason is required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"status\"\r\n              control={control}\r\n              defaultValue={formdata.status}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Status\"\r\n                    id=\"margin-normal\"\r\n                    name=\"status\"\r\n                    defaultValue={formdata.status}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                    // select\r\n                  >\r\n                    {/* <MenuItem value=\"Pending\">Pending</MenuItem>\r\n                    <MenuItem value=\"Cancel\">Cancel</MenuItem>\r\n                    <MenuItem value=\"Approve\">Approve</MenuItem>\r\n                    <MenuItem value=\"Reject\">Reject</MenuItem> */}\r\n                  </TextField>\r\n                );\r\n              }}\r\n              //rules={{ required: \"Status is required\" }}\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              onClick={handleSubmit(onSubmit)}\r\n            >\r\n              Submit <Icon className={classes.rightIcon}>send</Icon>\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  leftIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  iconSmall: {\r\n    fontSize: 20,\r\n  },\r\n  root: {\r\n    padding: theme.spacing(3, 2),\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 400,\r\n  },\r\n}));\r\n\r\nexport default LeaveForm;\r\n"]},"metadata":{},"sourceType":"module"}
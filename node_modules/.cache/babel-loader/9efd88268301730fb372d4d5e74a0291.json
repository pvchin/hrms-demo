{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-demo\\\\src\\\\components\\\\PaySummary.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport currency from \"currency.js\"; //import PrintPaySummary from \"./PrintPaySummary\";\n\nimport { Box //Heading,\n//Text,\n//Table,\n//Thead,\n//Tbody,\n//Tr,\n//Th,\n//Td,\n//chakra,\n} from \"@chakra-ui/react\"; //import { TriangleDownIcon, TriangleUpIcon } from \"@chakra-ui/icons\";\n\nimport MaterialTable from \"material-table\";\nimport { Grid, TextField } from \"@material-ui/core\"; //import { makeStyles } from \"@material-ui/core/styles\";\n\nimport { useRecoilState } from \"recoil\"; //import { formatPriceZero } from \"../helpers/Utils\";\n\nimport { payrunState } from \"./data/atomdata\"; //import { usePayslipsContext } from \"../context/payslips_context\";\n//import { ComponentToPrint } from \"./ComponentToPrint\";\n//import PaySummaryTable from \"./PaySummaryTable\";\n// const initial_state = [\n//   {\n//     totalwages: 0,\n//     totaltap: 0,\n//     totalscp: 0,\n//     totalallows: 0,\n//     totaldeducts: 0,\n//     totalpayroll: 0,\n//   },\n// ];\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PaySummary = ({\n  singlebatchpayslip\n}) => {\n  _s();\n\n  //const classes = useStyles();\n  //const componentRef = useRef();\n  //const [state, setState] = useState(initial_state);\n  const [payrundata, setPayrundata] = useRecoilState(payrunState); //const [payrunstatus, setPayrunStatus] = useRecoilState(payrunStatusState);\n\n  const [isCalc, setIsCalc] = useState(true); //const { payrun, updatePayrun, payslip_period } = usePayslipsContext();\n\n  const columns = [{\n    title: \"Name\",\n    field: \"name\",\n    editable: \"never\"\n  }, {\n    title: \"Wages\",\n    field: \"wages_bnd\",\n    editable: \"never\",\n    type: \"currency\"\n  }, {\n    title: \"TAP Amount\",\n    field: \"tap_amount_bnd\",\n    editable: \"never\",\n    type: \"currency\"\n  }, {\n    title: \"SCP Amount\",\n    field: \"scp_amount_bnd\",\n    editable: \"never\",\n    type: \"currency\"\n  }, {\n    title: \"Site Allows\",\n    field: \"site_allows_bnd\",\n    editable: \"never\",\n    type: \"currency\"\n  }, {\n    title: \"Exps Claims\",\n    field: \"expenses_claims_bnd\",\n    editable: \"never\",\n    type: \"currency\"\n  }, {\n    title: \"Allowances\",\n    field: \"total_allowances_bnd\",\n    editable: \"never\",\n    type: \"currency\"\n  }, {\n    title: \"Deductions\",\n    field: \"total_deductions_bnd\",\n    editable: \"never\",\n    type: \"currency\"\n  }, {\n    title: \"Nett Pay\",\n    field: \"nett_pay_bnd\",\n    editable: \"never\",\n    type: \"currency\"\n  }]; // const columns1 = [\n  //   {\n  //     Header: \"Name\",\n  //     accessor: \"name\",\n  //   },\n  //   {\n  //     Header: \"Wages\",\n  //     accessor: \"wages_bnd\",\n  //     isNumeric: true,\n  //     Cell: (props) => formatPriceZero(props.value),\n  //   },\n  //   {\n  //     Header: \"TAP Amount\",\n  //     accessor: \"tap_amount_bnd\",\n  //     isNumeric: true,\n  //     Cell: (props) => formatPriceZero(props.value),\n  //   },\n  //   {\n  //     Header: \"SCP Amount\",\n  //     accessor: \"scp_amount_bnd\",\n  //     isNumeric: true,\n  //     Cell: (props) => formatPriceZero(props.value),\n  //   },\n  //   {\n  //     Header: \"Site Allows\",\n  //     accessor: \"site_allows_bnd\",\n  //     isNumeric: true,\n  //     Cell: (props) => formatPriceZero(props.value),\n  //   },\n  //   {\n  //     Header: \"Exps Claims\",\n  //     accessor: \"expenses_claims_bnd\",\n  //     isNumeric: true,\n  //     Cell: (props) => formatPriceZero(props.value),\n  //   },\n  //   {\n  //     Header: \"Allowances\",\n  //     accessor: \"total_allowances_bnd\",\n  //     isNumeric: true,\n  //     Cell: (props) => formatPriceZero(props.value),\n  //   },\n  //   {\n  //     Header: \"Deductions\",\n  //     accessor: \"total_deductions_bnd\",\n  //     isNumeric: true,\n  //     Cell: (props) => formatPriceZero(props.value),\n  //   },\n  //   {\n  //     Header: \"Nett Pay\",\n  //     accessor: \"nett_pay_bnd\",\n  //     isNumeric: true,\n  //     Cell: (props) => formatPriceZero(props.value),\n  //   },\n  // ];\n  // const exportPdfTable = () => {\n  //   PrintPaySummary((singlebatchpayslip = { singlebatchpayslip }));\n  // };\n\n  const handleCalcTotals = () => {\n    const data = singlebatchpayslip;\n    const totalwages = data.reduce((acc, item) => {\n      return acc + item.wages_bnd;\n    }, 0);\n    const totalsitesallows = data.reduce((acc, item) => {\n      return acc + item.site_allows_bnd;\n    }, 0);\n    const totalexpclaims = data.reduce((acc, item) => {\n      return acc + item.expenses_claims_bnd;\n    }, 0);\n    const totalallows = data.reduce((acc, item) => {\n      return acc + item.total_allowances_bnd;\n    }, 0);\n    const totaldeducts = data.reduce((acc, item) => {\n      return acc + item.total_deductions_bnd;\n    }, 0);\n    const totaltap = data.reduce((acc, item) => {\n      return acc + item.tap_amount_bnd;\n    }, 0);\n    const totalscp = data.reduce((acc, item) => {\n      return acc + item.scp_amount_bnd;\n    }, 0);\n    const totalpayroll = data.reduce((acc, item) => {\n      return acc + item.nett_pay_bnd;\n    }, 0);\n    setPayrundata({ ...payrundata,\n      totalpayroll: totalpayroll,\n      totalwages: totalwages,\n      totaltap: totaltap,\n      totalscp: totalscp,\n      totalallows: totalallows,\n      totaldeducts: totaldeducts,\n      totalsitesallows: totalsitesallows,\n      totalexpensesclaims: totalexpclaims\n    }); // payrun\n    //   .filter((r) => r.payrun === payslip_period)\n    //   .map((rec) => {\n    //     //update payrun\n    //     return updatePayrun({\n    //       id: rec.id,\n    //       totalpayroll: totalpayroll,\n    //       totalwages: totalwages,\n    //       totaltap: totaltap,\n    //       totalscp: totalscp,\n    //       totalallows: totalallows,\n    //       totaldeducts: totaldeducts,\n    //       totalsitesallows: totalsitesallows,\n    //       totalexpensesclaims: totalexpclaims,\n    //     });\n    //   });\n    // console.log(\"payrundata\", payrundata);\n    // console.log(\n    //   \"totals\",\n    //   totalpayroll,\n    //   totalwages,\n    //   totaltap,\n    //   totalscp,\n    //   totalallows,\n    //   totaldeducts\n    // );\n  }; // const handleSaveCalcTotals = (e) => {\n  //   e.preventDefault();\n  //   handleCalcTotals();\n  //};\n\n\n  useEffect(() => {\n    handleCalcTotals();\n    setIsCalc(false);\n  }, [isCalc]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        style: {\n          border: \"1px solid black\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid // item\n        // sm={12}\n        // align=\"center\"\n        // style={{ border: \"1px solid black\" }}\n        , {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        style: {\n          border: \"1px solid white\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sm: 3,\n          align: \"center\",\n          style: {\n            border: \"1px solid white\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Period\",\n              name: \"period\",\n              variant: \"filled\",\n              type: \"text\",\n              value: payrundata.period,\n              style: {\n                width: \"100%\"\n              },\n              InputLabelProps: {\n                shrink: true\n              },\n              InputProps: {\n                readOnly: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sm: 3,\n          align: \"center\",\n          style: {\n            border: \"1px solid white\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Pay Run Batch\",\n              name: \"payrun\",\n              variant: \"filled\",\n              type: \"text\",\n              value: payrundata.payrun,\n              style: {\n                width: \"100%\"\n              },\n              InputLabelProps: {\n                shrink: true\n              },\n              InputProps: {\n                readOnly: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sm: 3,\n          align: \"center\",\n          style: {\n            border: \"1px solid white\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Status\",\n              name: \"status\",\n              variant: \"filled\",\n              value: payrundata.status,\n              style: {\n                width: \"100%\"\n              },\n              InputLabelProps: {\n                shrink: true\n              },\n              InputProps: {\n                readOnly: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sm: 3,\n          align: \"center\",\n          style: {\n            border: \"1px solid white\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Payroll Total\",\n              name: \"paytotal\",\n              variant: \"filled\",\n              type: \"number\",\n              value: currency(payrundata.totalpayroll),\n              style: {\n                width: \"100%\"\n              },\n              InputLabelProps: {\n                shrink: true\n              },\n              InputProps: {\n                readOnly: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        style: {\n          border: \"1px solid white\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sm: 12,\n          align: \"center\",\n          style: {\n            border: \"1px solid white\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            h: \"400\",\n            w: \"full\",\n            overflow: \"scroll\",\n            children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n              columns: columns,\n              data: singlebatchpayslip,\n              title: \"Payroll\",\n              options: {\n                filtering: false,\n                search: false,\n                toolbar: false,\n                paging: false,\n                headerStyle: {\n                  backgroundColor: \"lightblue\",\n                  color: \"primary\"\n                },\n                showTitle: false\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        style: {\n          border: \"1px solid white\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sm: 3,\n          align: \"center\",\n          style: {\n            border: \"1px solid white\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Total Wages\",\n              name: \"totalwages\",\n              variant: \"filled\",\n              type: \"currency\",\n              value: currency(payrundata.totalwages),\n              style: {\n                width: \"100%\"\n              },\n              InputLabelProps: {\n                shrink: true\n              },\n              InputProps: {\n                readOnly: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 429,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sm: 3,\n          align: \"center\",\n          style: {\n            border: \"1px solid white\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Total TAP\",\n              name: \"totaltap\",\n              variant: \"filled\",\n              type: \"currency\",\n              value: currency(payrundata.totaltap),\n              style: {\n                width: \"100%\"\n              },\n              InputLabelProps: {\n                shrink: true\n              },\n              InputProps: {\n                readOnly: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 452,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sm: 3,\n          align: \"center\",\n          style: {\n            border: \"1px solid white\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Total SCP\",\n              name: \"totalscp\",\n              variant: \"filled\",\n              type: \"currency\",\n              value: currency(payrundata.totalscp),\n              style: {\n                width: \"100%\"\n              },\n              InputLabelProps: {\n                shrink: true\n              },\n              InputProps: {\n                readOnly: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 475,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sm: 3,\n          align: \"center\",\n          style: {\n            border: \"1px solid white\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Total Sites Allows\",\n              name: \"totalsitesallows\",\n              variant: \"filled\",\n              type: \"currency\",\n              value: currency(payrundata.totalsiteallows),\n              style: {\n                width: \"100%\"\n              },\n              InputLabelProps: {\n                shrink: true\n              },\n              InputProps: {\n                readOnly: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 498,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 497,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sm: 3,\n          align: \"center\",\n          style: {\n            border: \"1px solid white\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Total Expenses Claims\",\n              name: \"totalsitesallows\",\n              variant: \"filled\",\n              type: \"currency\",\n              value: currency(payrundata.totalexpensesclaims),\n              style: {\n                width: \"100%\"\n              },\n              InputLabelProps: {\n                shrink: true\n              },\n              InputProps: {\n                readOnly: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 521,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 520,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sm: 3,\n          align: \"center\",\n          style: {\n            border: \"1px solid white\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Total Allowances\",\n              name: \"totalallows\",\n              variant: \"filled\",\n              type: \"currency\",\n              value: currency(payrundata.totalallows),\n              style: {\n                width: \"100%\"\n              },\n              InputLabelProps: {\n                shrink: true\n              },\n              InputProps: {\n                readOnly: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 544,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 543,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 537,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sm: 3,\n          align: \"center\",\n          style: {\n            border: \"1px solid white\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Total Deductions\",\n              name: \"totaldeducts\",\n              variant: \"filled\",\n              type: \"currency\",\n              value: currency(payrundata.totaldeducts),\n              style: {\n                width: \"100%\"\n              },\n              InputLabelProps: {\n                shrink: true\n              },\n              InputProps: {\n                readOnly: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 567,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 566,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 560,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sm: 3,\n          align: \"center\",\n          style: {\n            border: \"1px solid white\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Total Payroll\",\n              name: \"totalpayroll\",\n              variant: \"filled\",\n              type: \"currency\",\n              value: currency(payrundata.totalpayroll),\n              style: {\n                width: \"100%\"\n              },\n              InputLabelProps: {\n                shrink: true\n              },\n              InputProps: {\n                readOnly: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 590,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 589,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 583,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 240,\n    columnNumber: 5\n  }, this);\n}; // const useStyles = makeStyles((theme) => ({\n//   root: {\n//     flexGrow: 1,\n//   },\n//   button: {\n//     margin: theme.spacing(1),\n//   },\n//   container: {\n//     margin: 0,\n//     padding: 0,\n//     width: \"80vw\",\n//     display: \"grid\",\n//     gridTemplateColumns: \"repeat(auto-fill,250px)\",\n//     gridAutoRows: \"10px\",\n//     position: \"absolute\",\n//     left: \"50%\",\n//     transform: \"translateX(-50%)\",\n//     justifyContent: \"center\",\n//     backgroundColor: \"primary\",\n//   },\n//   fixedHeight: {\n//     height: 800,\n//   },\n//   paper: {\n//     padding: theme.spacing(10),\n//     // display: \"flex\",\n//     display: \"flex\",\n//     overflow: \"auto\",\n//     flexDirection: \"column\",\n//     border: \"1px solid\",\n//     width: \"100%\",\n//     color: \"primary\",\n//     bcakgroundColor: \"black\",\n//   },\n//   card: {\n//     backgroundColor: \"black\",\n//   },\n//   section: {\n//     width: \"80vw\",\n//     margin: \"1rem auto\",\n//     maxWidth: \"var(--max-width)\",\n//   },\n//   underline: {\n//     width: \"5rem\",\n//     height: \"0.25rem\",\n//     marginBottom: \"1.25rem\",\n//     background: \"var(--clr-primary-5)\",\n//     marginLeft: \"auto\",\n//     marginRight: \"auto\",\n//   },\n//   title: {\n//     marginbottom: \"4rem\",\n//     textAlign: \"center\",\n//   },\n//   jobscenter: {\n//     width: \"80vw\",\n//     margin: \"0 auto\",\n//     maxWidth: \"var(--max-width)\",\n//     flexDirection: \"row\",\n//   },\n//   btncontainer: {\n//     display: \"flex\",\n//     flexDirection: \"row\",\n//     justifyContent: \"center\",\n//     marginBottom: \"4rem\",\n//     flexWrap: \"wrap\",\n//   },\n//   jobbtn: {\n//     background: \"transparent\",\n//     borderColor: \"transparent\",\n//     textTransform: \"capitalize\",\n//     fontSize: \"1.25rem\",\n//     letterSpacing: \"var(--spacing)\",\n//     margin: \"0 0.5rem\",\n//     transition: \"var(--transition)\",\n//     cursor: \"pointer\",\n//     padding: \"0.25rem 0\",\n//     lineHeight: \"1\",\n//     outlineColor: \"var(--clr-primary-10)\",\n//     \"&:hover\": {\n//       color: \"var(--clr-primary-5)\",\n//       boxShadow: \"0 2px var(--clr-primary-5)\",\n//     },\n//   },\n//   activebtn: {\n//     color: \"var(--clr-primary-5)\",\n//     boxShadow: \"0 2px var(--clr-primary-5)\",\n//   },\n//   jobinfo: {\n//     fontWeight: \"400\",\n//   },\n//   divider: {\n//     // Theme Color, or use css color in quote\n//     background: \"white\",\n//   },\n//   textField: {\n//     marginLeft: theme.spacing(1),\n//     marginRight: theme.spacing(1),\n//     width: 350,\n//   },\n//   divContainer: {\n//     display: \"flex\",\n//     flexDirection: \"row\",\n//   },\n// }));\n\n\n_s(PaySummary, \"1lXfVuRPmPpviMOodnhgjvEwuq8=\", false, function () {\n  return [useRecoilState];\n});\n\n_c = PaySummary;\nexport default PaySummary;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaySummary\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-demo/src/components/PaySummary.js"],"names":["React","useState","useEffect","currency","Box","MaterialTable","Grid","TextField","useRecoilState","payrunState","PaySummary","singlebatchpayslip","payrundata","setPayrundata","isCalc","setIsCalc","columns","title","field","editable","type","handleCalcTotals","data","totalwages","reduce","acc","item","wages_bnd","totalsitesallows","site_allows_bnd","totalexpclaims","expenses_claims_bnd","totalallows","total_allowances_bnd","totaldeducts","total_deductions_bnd","totaltap","tap_amount_bnd","totalscp","scp_amount_bnd","totalpayroll","nett_pay_bnd","totalexpensesclaims","border","period","width","shrink","readOnly","payrun","status","filtering","search","toolbar","paging","headerStyle","backgroundColor","color","showTitle","totalsiteallows"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport currency from \"currency.js\";\r\n//import PrintPaySummary from \"./PrintPaySummary\";\r\nimport {\r\n  Box,\r\n  //Heading,\r\n  //Text,\r\n  //Table,\r\n  //Thead,\r\n  //Tbody,\r\n  //Tr,\r\n  //Th,\r\n  //Td,\r\n  //chakra,\r\n} from \"@chakra-ui/react\";\r\n//import { TriangleDownIcon, TriangleUpIcon } from \"@chakra-ui/icons\";\r\nimport MaterialTable from \"material-table\";\r\nimport {  Grid, TextField } from \"@material-ui/core\";\r\n//import { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useRecoilState } from \"recoil\";\r\n//import { formatPriceZero } from \"../helpers/Utils\";\r\nimport { payrunState } from \"./data/atomdata\";\r\n//import { usePayslipsContext } from \"../context/payslips_context\";\r\n//import { ComponentToPrint } from \"./ComponentToPrint\";\r\n//import PaySummaryTable from \"./PaySummaryTable\";\r\n\r\n// const initial_state = [\r\n//   {\r\n//     totalwages: 0,\r\n//     totaltap: 0,\r\n//     totalscp: 0,\r\n//     totalallows: 0,\r\n//     totaldeducts: 0,\r\n//     totalpayroll: 0,\r\n//   },\r\n// ];\r\n\r\nconst PaySummary = ({ singlebatchpayslip }) => {\r\n  //const classes = useStyles();\r\n  //const componentRef = useRef();\r\n  //const [state, setState] = useState(initial_state);\r\n  const [payrundata, setPayrundata] = useRecoilState(payrunState);\r\n  //const [payrunstatus, setPayrunStatus] = useRecoilState(payrunStatusState);\r\n  const [isCalc, setIsCalc] = useState(true);\r\n  //const { payrun, updatePayrun, payslip_period } = usePayslipsContext();\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Name\",\r\n      field: \"name\",\r\n      editable: \"never\",\r\n    },\r\n    {\r\n      title: \"Wages\",\r\n      field: \"wages_bnd\",\r\n      editable: \"never\",\r\n      type: \"currency\",\r\n    },\r\n    {\r\n      title: \"TAP Amount\",\r\n      field: \"tap_amount_bnd\",\r\n      editable: \"never\",\r\n      type: \"currency\",\r\n    },\r\n    {\r\n      title: \"SCP Amount\",\r\n      field: \"scp_amount_bnd\",\r\n      editable: \"never\",\r\n      type: \"currency\",\r\n    },\r\n    {\r\n      title: \"Site Allows\",\r\n      field: \"site_allows_bnd\",\r\n      editable: \"never\",\r\n      type: \"currency\",\r\n    },\r\n    {\r\n      title: \"Exps Claims\",\r\n      field: \"expenses_claims_bnd\",\r\n      editable: \"never\",\r\n      type: \"currency\",\r\n    },\r\n    {\r\n      title: \"Allowances\",\r\n      field: \"total_allowances_bnd\",\r\n      editable: \"never\",\r\n      type: \"currency\",\r\n    },\r\n    {\r\n      title: \"Deductions\",\r\n      field: \"total_deductions_bnd\",\r\n      editable: \"never\",\r\n      type: \"currency\",\r\n    },\r\n    {\r\n      title: \"Nett Pay\",\r\n      field: \"nett_pay_bnd\",\r\n      editable: \"never\",\r\n      type: \"currency\",\r\n    },\r\n  ];\r\n\r\n  // const columns1 = [\r\n  //   {\r\n  //     Header: \"Name\",\r\n  //     accessor: \"name\",\r\n  //   },\r\n  //   {\r\n  //     Header: \"Wages\",\r\n  //     accessor: \"wages_bnd\",\r\n  //     isNumeric: true,\r\n  //     Cell: (props) => formatPriceZero(props.value),\r\n  //   },\r\n\r\n  //   {\r\n  //     Header: \"TAP Amount\",\r\n  //     accessor: \"tap_amount_bnd\",\r\n  //     isNumeric: true,\r\n  //     Cell: (props) => formatPriceZero(props.value),\r\n  //   },\r\n  //   {\r\n  //     Header: \"SCP Amount\",\r\n  //     accessor: \"scp_amount_bnd\",\r\n  //     isNumeric: true,\r\n  //     Cell: (props) => formatPriceZero(props.value),\r\n  //   },\r\n  //   {\r\n  //     Header: \"Site Allows\",\r\n  //     accessor: \"site_allows_bnd\",\r\n  //     isNumeric: true,\r\n  //     Cell: (props) => formatPriceZero(props.value),\r\n  //   },\r\n  //   {\r\n  //     Header: \"Exps Claims\",\r\n  //     accessor: \"expenses_claims_bnd\",\r\n  //     isNumeric: true,\r\n  //     Cell: (props) => formatPriceZero(props.value),\r\n  //   },\r\n  //   {\r\n  //     Header: \"Allowances\",\r\n  //     accessor: \"total_allowances_bnd\",\r\n  //     isNumeric: true,\r\n  //     Cell: (props) => formatPriceZero(props.value),\r\n  //   },\r\n  //   {\r\n  //     Header: \"Deductions\",\r\n  //     accessor: \"total_deductions_bnd\",\r\n  //     isNumeric: true,\r\n  //     Cell: (props) => formatPriceZero(props.value),\r\n  //   },\r\n  //   {\r\n  //     Header: \"Nett Pay\",\r\n  //     accessor: \"nett_pay_bnd\",\r\n  //     isNumeric: true,\r\n  //     Cell: (props) => formatPriceZero(props.value),\r\n  //   },\r\n  // ];\r\n\r\n  // const exportPdfTable = () => {\r\n  //   PrintPaySummary((singlebatchpayslip = { singlebatchpayslip }));\r\n  // };\r\n\r\n  const handleCalcTotals = () => {\r\n    const data = singlebatchpayslip;\r\n    const totalwages = data.reduce((acc, item) => {\r\n      return acc + item.wages_bnd;\r\n    }, 0);\r\n    const totalsitesallows = data.reduce((acc, item) => {\r\n      return acc + item.site_allows_bnd;\r\n    }, 0);\r\n    const totalexpclaims = data.reduce((acc, item) => {\r\n      return acc + item.expenses_claims_bnd;\r\n    }, 0);\r\n    const totalallows = data.reduce((acc, item) => {\r\n      return acc + item.total_allowances_bnd;\r\n    }, 0);\r\n    const totaldeducts = data.reduce((acc, item) => {\r\n      return acc + item.total_deductions_bnd;\r\n    }, 0);\r\n    const totaltap = data.reduce((acc, item) => {\r\n      return acc + item.tap_amount_bnd;\r\n    }, 0);\r\n    const totalscp = data.reduce((acc, item) => {\r\n      return acc + item.scp_amount_bnd;\r\n    }, 0);\r\n    const totalpayroll = data.reduce((acc, item) => {\r\n      return acc + item.nett_pay_bnd;\r\n    }, 0);\r\n\r\n    setPayrundata({\r\n      ...payrundata,\r\n      totalpayroll: totalpayroll,\r\n      totalwages: totalwages,\r\n      totaltap: totaltap,\r\n      totalscp: totalscp,\r\n      totalallows: totalallows,\r\n      totaldeducts: totaldeducts,\r\n      totalsitesallows: totalsitesallows,\r\n      totalexpensesclaims: totalexpclaims,\r\n    });\r\n    // payrun\r\n    //   .filter((r) => r.payrun === payslip_period)\r\n    //   .map((rec) => {\r\n    //     //update payrun\r\n    //     return updatePayrun({\r\n    //       id: rec.id,\r\n    //       totalpayroll: totalpayroll,\r\n    //       totalwages: totalwages,\r\n    //       totaltap: totaltap,\r\n    //       totalscp: totalscp,\r\n    //       totalallows: totalallows,\r\n    //       totaldeducts: totaldeducts,\r\n    //       totalsitesallows: totalsitesallows,\r\n    //       totalexpensesclaims: totalexpclaims,\r\n    //     });\r\n    //   });\r\n    // console.log(\"payrundata\", payrundata);\r\n    // console.log(\r\n    //   \"totals\",\r\n    //   totalpayroll,\r\n    //   totalwages,\r\n    //   totaltap,\r\n    //   totalscp,\r\n    //   totalallows,\r\n    //   totaldeducts\r\n    // );\r\n  };\r\n\r\n  // const handleSaveCalcTotals = (e) => {\r\n  //   e.preventDefault();\r\n  //   handleCalcTotals();\r\n  //};\r\n\r\n  useEffect(() => {\r\n    handleCalcTotals();\r\n    setIsCalc(false);\r\n  }, [isCalc]);\r\n\r\n  return (\r\n    <div>\r\n      {/* <div style={{ display: \"none\" }}> */}\r\n      <div>\r\n        {/* <div style={{ border: \"1px solid black\" }} align=\"center\">\r\n          <button onClick={() => exportPdfTable()}>\r\n            <Heading size=\"sm\">Print Payroll Summary Report!</Heading>\r\n          </button>\r\n        </div> */}\r\n        {/* <div>\r\n          <div style={{ display: \"none\" }}>\r\n            <ComponentToPrint ref={componentRef} />\r\n          </div>\r\n          <button onClick={handlePrint}>Print this out!</button>\r\n        </div> */}\r\n      </div>\r\n      <form>\r\n        <Grid container direction=\"row\" style={{ border: \"1px solid black\" }}>\r\n          <Grid\r\n          // item\r\n          // sm={12}\r\n          // align=\"center\"\r\n          // style={{ border: \"1px solid black\" }}\r\n          >\r\n            <div>\r\n              {/* <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              style={{ marginLeft: 5 }}\r\n              onClick={(e) => handleSaveCalcTotals(e)}\r\n            >\r\n              Save <Icon className={classes.rightIcon}>send</Icon>\r\n            </Button> */}\r\n              {/* <Heading size=\"sm\">Summary</Heading> */}\r\n              {/* <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n                style={{ marginLeft: 5 }}\r\n                onClick={(e) => handle_Print(e)}\r\n              >\r\n                Print <Icon className={classes.rightIcon}>send</Icon>\r\n              </Button> */}\r\n              {/* <div>\r\n                <ReactToPrint\r\n                  trigger={(e) => {\r\n                    handle_Print(e);\r\n                  }}\r\n                  content={() => this.componentRef}\r\n                />\r\n                <ComponentToPrint ref={(el) => (this.componentRef = el)} />\r\n              </div> */}\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container direction=\"row\" style={{ border: \"1px solid white\" }}>\r\n          <Grid\r\n            item\r\n            sm={3}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <div>\r\n              <TextField\r\n                label=\"Period\"\r\n                name=\"period\"\r\n                variant=\"filled\"\r\n                type=\"text\"\r\n                value={payrundata.period}\r\n                style={{ width: \"100%\" }}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            sm={3}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <div>\r\n              <TextField\r\n                label=\"Pay Run Batch\"\r\n                name=\"payrun\"\r\n                variant=\"filled\"\r\n                type=\"text\"\r\n                value={payrundata.payrun}\r\n                style={{ width: \"100%\" }}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            sm={3}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <div>\r\n              <TextField\r\n                label=\"Status\"\r\n                name=\"status\"\r\n                variant=\"filled\"\r\n                value={payrundata.status}\r\n                style={{ width: \"100%\" }}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            sm={3}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <div>\r\n              <TextField\r\n                label=\"Payroll Total\"\r\n                name=\"paytotal\"\r\n                variant=\"filled\"\r\n                type=\"number\"\r\n                value={currency(payrundata.totalpayroll)}\r\n                style={{ width: \"100%\" }}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container direction=\"row\" style={{ border: \"1px solid white\" }}>\r\n          <Grid\r\n            item\r\n            sm={12}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            {/* <Box h=\"400\" overflow=\"scroll\">\r\n              <PaySummaryTable columns={columns} data={singlebatchpayslip} />\r\n            </Box> */}\r\n            <Box h=\"400\" w=\"full\" overflow=\"scroll\">\r\n              <MaterialTable\r\n                columns={columns}\r\n                data={singlebatchpayslip}\r\n                title=\"Payroll\"\r\n                options={{\r\n                  filtering: false,\r\n                  search: false,\r\n                  toolbar: false,\r\n                  paging: false,\r\n                  headerStyle: {\r\n                    backgroundColor: \"lightblue\",\r\n                    color: \"primary\",\r\n                  },\r\n                  showTitle: false,\r\n                }}\r\n              />\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container direction=\"row\" style={{ border: \"1px solid white\" }}>\r\n          <Grid\r\n            item\r\n            sm={3}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <div>\r\n              <TextField\r\n                label=\"Total Wages\"\r\n                name=\"totalwages\"\r\n                variant=\"filled\"\r\n                type=\"currency\"\r\n                value={currency(payrundata.totalwages)}\r\n                style={{ width: \"100%\" }}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            sm={3}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <div>\r\n              <TextField\r\n                label=\"Total TAP\"\r\n                name=\"totaltap\"\r\n                variant=\"filled\"\r\n                type=\"currency\"\r\n                value={currency(payrundata.totaltap)}\r\n                style={{ width: \"100%\" }}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            sm={3}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <div>\r\n              <TextField\r\n                label=\"Total SCP\"\r\n                name=\"totalscp\"\r\n                variant=\"filled\"\r\n                type=\"currency\"\r\n                value={currency(payrundata.totalscp)}\r\n                style={{ width: \"100%\" }}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            sm={3}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <div>\r\n              <TextField\r\n                label=\"Total Sites Allows\"\r\n                name=\"totalsitesallows\"\r\n                variant=\"filled\"\r\n                type=\"currency\"\r\n                value={currency(payrundata.totalsiteallows)}\r\n                style={{ width: \"100%\" }}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            sm={3}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <div>\r\n              <TextField\r\n                label=\"Total Expenses Claims\"\r\n                name=\"totalsitesallows\"\r\n                variant=\"filled\"\r\n                type=\"currency\"\r\n                value={currency(payrundata.totalexpensesclaims)}\r\n                style={{ width: \"100%\" }}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            sm={3}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <div>\r\n              <TextField\r\n                label=\"Total Allowances\"\r\n                name=\"totalallows\"\r\n                variant=\"filled\"\r\n                type=\"currency\"\r\n                value={currency(payrundata.totalallows)}\r\n                style={{ width: \"100%\" }}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            sm={3}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <div>\r\n              <TextField\r\n                label=\"Total Deductions\"\r\n                name=\"totaldeducts\"\r\n                variant=\"filled\"\r\n                type=\"currency\"\r\n                value={currency(payrundata.totaldeducts)}\r\n                style={{ width: \"100%\" }}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            sm={3}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <div>\r\n              <TextField\r\n                label=\"Total Payroll\"\r\n                name=\"totalpayroll\"\r\n                variant=\"filled\"\r\n                type=\"currency\"\r\n                value={currency(payrundata.totalpayroll)}\r\n                style={{ width: \"100%\" }}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//   root: {\r\n//     flexGrow: 1,\r\n//   },\r\n//   button: {\r\n//     margin: theme.spacing(1),\r\n//   },\r\n//   container: {\r\n//     margin: 0,\r\n//     padding: 0,\r\n//     width: \"80vw\",\r\n//     display: \"grid\",\r\n//     gridTemplateColumns: \"repeat(auto-fill,250px)\",\r\n//     gridAutoRows: \"10px\",\r\n//     position: \"absolute\",\r\n//     left: \"50%\",\r\n//     transform: \"translateX(-50%)\",\r\n//     justifyContent: \"center\",\r\n//     backgroundColor: \"primary\",\r\n//   },\r\n//   fixedHeight: {\r\n//     height: 800,\r\n//   },\r\n//   paper: {\r\n//     padding: theme.spacing(10),\r\n//     // display: \"flex\",\r\n//     display: \"flex\",\r\n//     overflow: \"auto\",\r\n//     flexDirection: \"column\",\r\n//     border: \"1px solid\",\r\n//     width: \"100%\",\r\n//     color: \"primary\",\r\n//     bcakgroundColor: \"black\",\r\n//   },\r\n//   card: {\r\n//     backgroundColor: \"black\",\r\n//   },\r\n//   section: {\r\n//     width: \"80vw\",\r\n//     margin: \"1rem auto\",\r\n//     maxWidth: \"var(--max-width)\",\r\n//   },\r\n//   underline: {\r\n//     width: \"5rem\",\r\n//     height: \"0.25rem\",\r\n//     marginBottom: \"1.25rem\",\r\n//     background: \"var(--clr-primary-5)\",\r\n//     marginLeft: \"auto\",\r\n//     marginRight: \"auto\",\r\n//   },\r\n//   title: {\r\n//     marginbottom: \"4rem\",\r\n//     textAlign: \"center\",\r\n//   },\r\n//   jobscenter: {\r\n//     width: \"80vw\",\r\n//     margin: \"0 auto\",\r\n//     maxWidth: \"var(--max-width)\",\r\n//     flexDirection: \"row\",\r\n//   },\r\n//   btncontainer: {\r\n//     display: \"flex\",\r\n//     flexDirection: \"row\",\r\n//     justifyContent: \"center\",\r\n//     marginBottom: \"4rem\",\r\n//     flexWrap: \"wrap\",\r\n//   },\r\n//   jobbtn: {\r\n//     background: \"transparent\",\r\n//     borderColor: \"transparent\",\r\n//     textTransform: \"capitalize\",\r\n//     fontSize: \"1.25rem\",\r\n//     letterSpacing: \"var(--spacing)\",\r\n//     margin: \"0 0.5rem\",\r\n//     transition: \"var(--transition)\",\r\n//     cursor: \"pointer\",\r\n//     padding: \"0.25rem 0\",\r\n//     lineHeight: \"1\",\r\n//     outlineColor: \"var(--clr-primary-10)\",\r\n//     \"&:hover\": {\r\n//       color: \"var(--clr-primary-5)\",\r\n//       boxShadow: \"0 2px var(--clr-primary-5)\",\r\n//     },\r\n//   },\r\n//   activebtn: {\r\n//     color: \"var(--clr-primary-5)\",\r\n//     boxShadow: \"0 2px var(--clr-primary-5)\",\r\n//   },\r\n//   jobinfo: {\r\n//     fontWeight: \"400\",\r\n//   },\r\n//   divider: {\r\n//     // Theme Color, or use css color in quote\r\n//     background: \"white\",\r\n//   },\r\n//   textField: {\r\n//     marginLeft: theme.spacing(1),\r\n//     marginRight: theme.spacing(1),\r\n//     width: 350,\r\n//   },\r\n//   divContainer: {\r\n//     display: \"flex\",\r\n//     flexDirection: \"row\",\r\n//   },\r\n// }));\r\n\r\nexport default PaySummary;\r\n"]},"metadata":{},"sourceType":"module"}
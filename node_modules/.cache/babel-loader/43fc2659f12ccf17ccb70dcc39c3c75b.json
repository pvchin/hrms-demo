{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-demo\\\\src\\\\components\\\\DailyAllowancesTableManager.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useMemo } from \"react\";\nimport MaterialTable, { MTableToolbar } from \"material-table\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { TextField, Button, MenuItem } from \"@material-ui/core\";\nimport { //useSetRecoilState,\nuseRecoilValue, useRecoilState //useRecoilValueLoadable,\n} from \"recoil\";\nimport { allowsPeriodState, allowsDataState //empidState,\n} from \"./data/atomdata\"; //import { fetchDailyAllowancesSelector } from \"./data/selectordata\";\n\nimport AddIcon from \"@material-ui/icons/Add\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport SearchIcon from \"@material-ui/icons/Search\"; //import ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\n\nimport { CustomDialog } from \"../helpers/CustomDialog\";\nimport { useDailyAllowancesContext } from \"../context/dailyallowances_context\"; //import { useEmployeesContext } from \"../context/employees_context\";\n\nimport DailyAllowsDetlsTable from \"./DailyAllowsDetlsTable\"; //const FILTERSTRING = \"Submitted\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DailyAllowancesTable({\n  dailyallowancesdata,\n  setDailyAllowancesdata,\n  update_dailyallowance_error,\n  handleDialogClose\n}) {\n  _s();\n\n  //let history = useHistory();\n  const classes = useStyles();\n  const [isDialogOpen, setIsDialogOpen] = useState(false); //const [tmpallowsdata, setTmpallowsdata] = useState([]);\n\n  const allows_period = useRecoilValue(allowsPeriodState); //const allows_empid = useRecoilValue(empidState);\n\n  const [allowsdata, setAllowsdata] = useRecoilState(allowsDataState); //const setEmpID = useSetRecoilState(empidState);\n\n  const title = `Site Allowances (${allows_period})`;\n  const {\n    //dailyallowances_loading,\n    //singlebatch_dailyallowance,\n    //singlebatch_dailyallowance_loading,\n    //deleteDailyAllowance,\n    updateDailyAllowance //setEditDailyAllowanceID,\n    //setIsDailyAllowanceEditingOn,\n    //setIsDailyAllowanceEditingOff,\n    //resetSingleDailyAllowance,\n    //dailyallowance_period,\n    //getSingleBatchDailyAllowance,\n\n  } = useDailyAllowancesContext();\n  const columns = useMemo(() => [{\n    title: \"Name\",\n    field: \"name\",\n    editable: \"never\"\n  }, {\n    title: \"Period\",\n    field: \"period\",\n    editable: \"never\"\n  }, {\n    title: \"Location\",\n    field: \"location\",\n    editable: \"never\"\n  }, {\n    title: \"Manager Name\",\n    field: \"manager\",\n    editable: \"never\"\n  }, {\n    title: \"No Of Days\",\n    field: \"no_of_days\",\n    type: \"numeric\",\n    editable: \"never\"\n  }, {\n    title: \"Amount\",\n    field: \"amount\",\n    type: \"currency\",\n    editable: \"never\"\n  }, {\n    title: \"Status\",\n    field: \"status\",\n    editComponent: props => /*#__PURE__*/_jsxDEV(TextField //defaultValue={props.value || null}\n    , {\n      onChange: e => props.onChange(e.target.value),\n      style: {\n        width: 100\n      },\n      value: props.value,\n      select: true,\n      children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n        value: \"Pending\",\n        children: \"Pending\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        value: \"Approved\",\n        children: \"Approved\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        value: \"Rejected\",\n        children: \"Rejected\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        value: \"Cancel\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }, this)\n  }], []); // const Save_DailyAllowancesData = () => {\n  //   dailyallowancesdata.forEach((data) => {\n  //     const { id } = data;\n  //     if (id) {\n  //       const { id, rec_id, tableData, ...fields } = data;\n  //       updateDailyAllowance({ id, ...fields });\n  //     }\n  //   });\n  //   handleDialogClose();\n  // };\n\n  const Approve_DailyAllowancesData = () => {\n    dailyallowancesdata.forEach(rec => {\n      if (rec.tableData.checked) {\n        updateDailyAllowance({\n          id: rec.id,\n          status: \"Approved\"\n        }); //update leavesdata\n\n        if (!update_dailyallowance_error) {\n          const recdata = dailyallowancesdata.filter(r => r.id === rec.id);\n          recdata[0].status = \"Approved\";\n        }\n      }\n    });\n    dailyallowancesdata.forEach(d => {\n      if (d.tableData) d.tableData.checked = false;\n    });\n  };\n\n  const Reject_DailyAllowancesData = () => {\n    dailyallowancesdata.forEach(rec => {\n      if (rec.tableData.checked) {\n        updateDailyAllowance({\n          id: rec.id,\n          status: \"Rejected\"\n        }); //update leavesdata\n\n        if (!update_dailyallowance_error) {\n          const recdata = dailyallowancesdata.filter(r => r.id === rec.id);\n          recdata[0].status = \"Rejected\";\n        }\n      }\n    });\n    dailyallowancesdata.forEach(d => {\n      if (d.tableData) d.tableData.checked = false;\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: \"100%\",\n        paddingTop: \"5px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(MaterialTable, {\n        columns: columns,\n        data: dailyallowancesdata,\n        title: title,\n        icons: {\n          Add: props => /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 29\n          }, this),\n          Edit: props => /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 30\n          }, this),\n          Delete: props => /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 32\n          }, this),\n          Clear: props => /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 31\n          }, this),\n          Check: props => /*#__PURE__*/_jsxDEV(CheckIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 31\n          }, this),\n          Search: props => /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 32\n          }, this),\n          ResetSearch: props => /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 37\n          }, this)\n        } // editable={{\n        //   onRowUpdate: (newData, oldData) =>\n        //     new Promise((resolve, reject) => {\n        //       setTimeout(() => {\n        //         const dataUpdate = [...dailyallowancesdata];\n        //         const index = oldData.tableData.id;\n        //         dataUpdate[index] = newData;\n        //         setDailyAllowancesdata([...dataUpdate]);\n        //         //approve_Expense(newData);\n        //         resolve();\n        //       }, 1000);\n        //     }),\n        // }}\n        ,\n        options: {\n          filtering: true,\n          selection: true,\n          headerStyle: {\n            backgroundColor: \"orange\",\n            color: \"#FFF\"\n          },\n          showTitle: true\n        },\n        components: {\n          Toolbar: props => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(MTableToolbar, { ...props\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                padding: \"5px 10px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                variant: \"contained\",\n                color: \"secondary\",\n                className: classes.button,\n                onClick: Approve_DailyAllowancesData,\n                children: \"Approve\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                variant: \"contained\",\n                color: \"secondary\",\n                className: classes.button,\n                onClick: Reject_DailyAllowancesData,\n                children: \"Reject\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 15\n          }, this)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.dialog,\n        children: /*#__PURE__*/_jsxDEV(CustomDialog, {\n          isOpen: isDialogOpen,\n          handleClose: handleDialogClose,\n          title: \"\",\n          showButton: true,\n          isFullscreen: true,\n          isFullwidth: true,\n          children: /*#__PURE__*/_jsxDEV(DailyAllowsDetlsTable, {\n            setAllowsdata: setAllowsdata,\n            allowsdata: allowsdata,\n            handleDialogClose: handleDialogClose\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DailyAllowancesTable, \"qTN6VLPU0yW0WF/Icuu7/A3hYxM=\", false, function () {\n  return [useStyles, useRecoilValue, useRecoilState, useDailyAllowancesContext];\n});\n\n_c = DailyAllowancesTable;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: 0\n  },\n  button: {\n    margin: theme.spacing(1)\n  },\n  dialog: {\n    width: 1000\n  }\n}));\n\nvar _c;\n\n$RefreshReg$(_c, \"DailyAllowancesTable\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-demo/src/components/DailyAllowancesTableManager.js"],"names":["React","useState","useMemo","MaterialTable","MTableToolbar","makeStyles","TextField","Button","MenuItem","useRecoilValue","useRecoilState","allowsPeriodState","allowsDataState","AddIcon","EditIcon","DeleteIcon","CheckIcon","SearchIcon","CustomDialog","useDailyAllowancesContext","DailyAllowsDetlsTable","DailyAllowancesTable","dailyallowancesdata","setDailyAllowancesdata","update_dailyallowance_error","handleDialogClose","classes","useStyles","isDialogOpen","setIsDialogOpen","allows_period","allowsdata","setAllowsdata","title","updateDailyAllowance","columns","field","editable","type","editComponent","props","e","onChange","target","value","width","Approve_DailyAllowancesData","forEach","rec","tableData","checked","id","status","recdata","filter","r","d","Reject_DailyAllowancesData","root","maxWidth","paddingTop","Add","Edit","Delete","Clear","Check","Search","ResetSearch","filtering","selection","headerStyle","backgroundColor","color","showTitle","Toolbar","padding","button","dialog","theme","margin","spacing"],"mappings":"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","sourcesContent":["import React, { useState, useMemo } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { TextField, Button, MenuItem } from \"@material-ui/core\";\r\nimport {\r\n  //useSetRecoilState,\r\n  useRecoilValue,\r\n  useRecoilState,\r\n  //useRecoilValueLoadable,\r\n} from \"recoil\";\r\nimport {\r\n  allowsPeriodState,\r\n  allowsDataState,\r\n  //empidState,\r\n} from \"./data/atomdata\";\r\n//import { fetchDailyAllowancesSelector } from \"./data/selectordata\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n//import ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { useDailyAllowancesContext } from \"../context/dailyallowances_context\";\r\n//import { useEmployeesContext } from \"../context/employees_context\";\r\nimport DailyAllowsDetlsTable from \"./DailyAllowsDetlsTable\";\r\n\r\n//const FILTERSTRING = \"Submitted\";\r\n\r\nexport default function DailyAllowancesTable({\r\n  dailyallowancesdata,\r\n  setDailyAllowancesdata,\r\n  update_dailyallowance_error,\r\n  handleDialogClose,\r\n}) {\r\n  //let history = useHistory();\r\n  const classes = useStyles();\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  //const [tmpallowsdata, setTmpallowsdata] = useState([]);\r\n  const allows_period = useRecoilValue(allowsPeriodState);\r\n  //const allows_empid = useRecoilValue(empidState);\r\n  const [allowsdata, setAllowsdata] = useRecoilState(allowsDataState);\r\n  //const setEmpID = useSetRecoilState(empidState);\r\n  const title = `Site Allowances (${allows_period})`;\r\n  const {\r\n    //dailyallowances_loading,\r\n    //singlebatch_dailyallowance,\r\n    //singlebatch_dailyallowance_loading,\r\n    //deleteDailyAllowance,\r\n    updateDailyAllowance,\r\n    //setEditDailyAllowanceID,\r\n    //setIsDailyAllowanceEditingOn,\r\n    //setIsDailyAllowanceEditingOff,\r\n    //resetSingleDailyAllowance,\r\n    //dailyallowance_period,\r\n    //getSingleBatchDailyAllowance,\r\n  } = useDailyAllowancesContext();\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        title: \"Name\",\r\n        field: \"name\",\r\n        editable: \"never\",\r\n      },\r\n      { title: \"Period\", field: \"period\", editable: \"never\" },\r\n      { title: \"Location\", field: \"location\", editable: \"never\" },\r\n      { title: \"Manager Name\", field: \"manager\", editable: \"never\" },\r\n      {\r\n        title: \"No Of Days\",\r\n        field: \"no_of_days\",\r\n        type: \"numeric\",\r\n        editable: \"never\",\r\n      },\r\n      { title: \"Amount\", field: \"amount\", type: \"currency\", editable: \"never\" },\r\n      {\r\n        title: \"Status\",\r\n        field: \"status\",\r\n        editComponent: (props) => (\r\n          <TextField\r\n            //defaultValue={props.value || null}\r\n            onChange={(e) => props.onChange(e.target.value)}\r\n            style={{ width: 100 }}\r\n            value={props.value}\r\n            select\r\n          >\r\n            <MenuItem value=\"Pending\">Pending</MenuItem>\r\n            <MenuItem value=\"Approved\">Approved</MenuItem>\r\n            <MenuItem value=\"Rejected\">Rejected</MenuItem>\r\n            <MenuItem value=\"Cancel\">Cancel</MenuItem>\r\n          </TextField>\r\n        ),\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  // const Save_DailyAllowancesData = () => {\r\n  //   dailyallowancesdata.forEach((data) => {\r\n  //     const { id } = data;\r\n  //     if (id) {\r\n  //       const { id, rec_id, tableData, ...fields } = data;\r\n  //       updateDailyAllowance({ id, ...fields });\r\n  //     }\r\n  //   });\r\n\r\n  //   handleDialogClose();\r\n  // };\r\n\r\n  const Approve_DailyAllowancesData = () => {\r\n    dailyallowancesdata.forEach((rec) => {\r\n      if (rec.tableData.checked) {\r\n        updateDailyAllowance({ id: rec.id, status: \"Approved\" });\r\n        //update leavesdata\r\n        if (!update_dailyallowance_error) {\r\n          const recdata = dailyallowancesdata.filter((r) => r.id === rec.id);\r\n          recdata[0].status = \"Approved\";\r\n        }\r\n      }\r\n    });\r\n    dailyallowancesdata.forEach((d) => {\r\n      if (d.tableData) d.tableData.checked = false;\r\n    });\r\n  };\r\n\r\n  const Reject_DailyAllowancesData = () => {\r\n    dailyallowancesdata.forEach((rec) => {\r\n      if (rec.tableData.checked) {\r\n        updateDailyAllowance({ id: rec.id, status: \"Rejected\" });\r\n        //update leavesdata\r\n        if (!update_dailyallowance_error) {\r\n          const recdata = dailyallowancesdata.filter((r) => r.id === rec.id);\r\n          recdata[0].status = \"Rejected\";\r\n        }\r\n      }\r\n    });\r\n    dailyallowancesdata.forEach((d) => {\r\n      if (d.tableData) d.tableData.checked = false;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={dailyallowancesdata}\r\n          title={title}\r\n          icons={{\r\n            Add: (props) => <AddIcon />,\r\n            Edit: (props) => <EditIcon />,\r\n            Delete: (props) => <DeleteIcon />,\r\n            Clear: (props) => <DeleteIcon />,\r\n            Check: (props) => <CheckIcon />,\r\n            Search: (props) => <SearchIcon />,\r\n            ResetSearch: (props) => <DeleteIcon />,\r\n          }}\r\n          // editable={{\r\n          //   onRowUpdate: (newData, oldData) =>\r\n          //     new Promise((resolve, reject) => {\r\n          //       setTimeout(() => {\r\n          //         const dataUpdate = [...dailyallowancesdata];\r\n          //         const index = oldData.tableData.id;\r\n          //         dataUpdate[index] = newData;\r\n          //         setDailyAllowancesdata([...dataUpdate]);\r\n          //         //approve_Expense(newData);\r\n\r\n          //         resolve();\r\n          //       }, 1000);\r\n          //     }),\r\n          // }}\r\n          options={{\r\n            filtering: true,\r\n            selection: true,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"#FFF\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n                <div style={{ padding: \"5px 10px\" }}>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    onClick={Approve_DailyAllowancesData}\r\n                  >\r\n                    Approve\r\n                  </Button>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    onClick={Reject_DailyAllowancesData}\r\n                  >\r\n                    Reject\r\n                  </Button>\r\n                  {/* <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    onClick={Save_DailyAllowancesData}\r\n                  >\r\n                    Update <Icon className={classes.rightIcon}>send</Icon>\r\n                  </Button> */}\r\n                </div>\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n        <div className={classes.dialog}>\r\n          <CustomDialog\r\n            isOpen={isDialogOpen}\r\n            handleClose={handleDialogClose}\r\n            title=\"\"\r\n            showButton={true}\r\n            isFullscreen={true}\r\n            isFullwidth={true}\r\n          >\r\n            <DailyAllowsDetlsTable\r\n              setAllowsdata={setAllowsdata}\r\n              allowsdata={allowsdata}\r\n              handleDialogClose={handleDialogClose}\r\n            />\r\n          </CustomDialog>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  dialog: {\r\n    width: 1000,\r\n  },\r\n}));\r\n"]},"metadata":{},"sourceType":"module"}
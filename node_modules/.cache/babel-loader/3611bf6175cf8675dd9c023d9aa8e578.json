{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-demo\\\\src\\\\components\\\\EmployeeForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Icon, TextField, Paper, Typography, Grid, Divider, FormControlLabel, Checkbox, MenuItem } from \"@material-ui/core\";\nimport currency from \"currency.js\";\nimport CurrencyTextField from \"@unicef/material-ui-currency-textfield\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useEmployeesContext } from \"../context/employees_context\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport { useRecoilState } from \"recoil\";\nimport { loginLevelState } from \"./data/atomdata\"; //import { editEmployeeIdState } from \"./data/atomdata\";\n//import { useAllEmployees } from \"./employees/useAllEmployees\";\n\nimport { useEmployees } from \"./employees/useEmployees\";\nimport { useAddEmployees } from \"./employees/useAddEmployees\";\nimport { useUpdateEmployees } from \"./employees/useUpdateEmployees\";\nimport { useDepartments } from \"./departments/useDepartments\";\nimport { useDesignations } from \"./designations/useDesignations\"; //import { useCurrency } from \"./currency/useCurrency\";\n\nimport EmpFamily from \"./EmpFamily\";\nimport EmpEducations from \"./EmpEducations\";\nimport EmpExperiences from \"./EmpExperiences\";\nimport EmpTrainings from \"./EmpTrainings\";\nimport EmpJobhistory from \"./EmpJobhistory\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initial_values = {\n  name: \"\",\n  gender: \"\",\n  ic_no: \"\",\n  email: \"\",\n  birthdate: null,\n  age: 0,\n  nationality: \"\",\n  address: \"\",\n  leave_bal: 0,\n  leave_bf: 0,\n  leave_entitled: 0,\n  basic_salary: 0,\n  salary_currency: \"BND\",\n  bank_name: \"\",\n  bank_acno: \"\",\n  tap_checkbox: true,\n  tap_acno: \"\",\n  scp_acno: \"\",\n  date_of_join: null,\n  date_of_resign: null,\n  hasresigned: false,\n  designation: \"\",\n  department: \"\",\n  passportno: \"\",\n  passport_expirydate: null,\n  workpermitno: \"\",\n  workpermit_expirydate: null,\n  siteallows_fee: 0,\n  perdiem_fee: 0,\n  empno: \"\",\n  reporting_to: \"\",\n  reporting_email: \"\"\n};\n\nconst EmployeeForm = () => {\n  _s();\n\n  const classes = useStyles();\n  const {\n    employees,\n    employeeId,\n    setEmployeeId\n  } = useEmployees(); //const { allemployees, setAllEmpId } = useAllEmployees();\n\n  const addEmployees = useAddEmployees();\n  const updateEmployees = useUpdateEmployees(); //const currencyRate = useCurrency()\n\n  const {\n    designations\n  } = useDesignations();\n  const {\n    departments\n  } = useDepartments();\n  const [reportemail, setReportEmail] = useState(\"\");\n  const [empage, setEmpage] = useState(0);\n  const [checktap, setCheckTap] = useState(false);\n  const [isresigned, setIsresigned] = useState(false); //const [empId, setEmpId] = useRecoilState(editEmployeeIdState);\n\n  const {\n    handleSubmit,\n    control,\n    setValue,\n    register\n  } = useForm();\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\n  const {\n    isEditing,\n    editEmployeeID\n  } = useEmployeesContext();\n  const single_employee = employees.filter(r => r.id === editEmployeeID).map(r => {\n    return { ...r\n    };\n  });\n  const {\n    name,\n    ic_no,\n    gender,\n    birthdate,\n    age,\n    email,\n    nationality,\n    address,\n    leave_bal,\n    leave_entitled,\n    leave_bf,\n    basic_salary,\n    salary_currency,\n    bank_name,\n    bank_acno,\n    tap_checkbox,\n    tap_acno,\n    scp_acno,\n    date_of_join,\n    date_of_resign,\n    hasresigned,\n    designation,\n    department,\n    passportno,\n    passport_expirydate,\n    workpermitno,\n    workpermit_expirydate,\n    siteallows_fee,\n    perdiem_fee,\n    empno,\n    reporting_to,\n    reporting_email\n  } = single_employee[0] || initial_values;\n\n  const calculateAge = dob => {\n    var today = new Date();\n    var birthDate = new Date(dob);\n    var age = today.getFullYear() - birthDate.getFullYear();\n    var m = today.getMonth() - birthDate.getMonth();\n\n    if (m < 0 || m === 0 && today.getDate() < birthDate.getDate()) {\n      age--;\n    }\n\n    return age;\n  };\n\n  const handleReportingTo = name => {\n    const emp = employees.filter(f => f.name === name).map(r => {\n      return { ...r\n      };\n    });\n    setReportEmail(emp[0].email);\n  };\n\n  const onSubmit = data => {\n    if (isEditing) {\n      updateEmployees({\n        id: editEmployeeID,\n        ...data,\n        reporting_email: reportemail\n      });\n    } else {\n      addEmployees({ ...data,\n        reporting_email: reportemail\n      });\n    }\n  };\n\n  useEffect(() => {\n    let age = calculateAge(birthdate);\n    setEmpage(age);\n    setCheckTap(tap_checkbox);\n    setIsresigned(hasresigned);\n    setReportEmail(reporting_email);\n  }, []); // useEffect(() => {\n  //   setAllEmpId(\"111\");\n  // }, []);\n\n  if (!employees) {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Loading ...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        className: classes.root,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          className: classes.root,\n          spacing: 15,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              component: \"h3\",\n              children: \"EMPLOYEE FORM\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              variant: \"contained\",\n              color: \"primary\",\n              className: classes.button,\n              children: [\"Submit \", /*#__PURE__*/_jsxDEV(Icon, {\n                className: classes.rightIcon,\n                children: \"send\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 24\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          className: classes.divider\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Controller, {\n                name: \"name\",\n                control: control,\n                defaultValue: name,\n                render: ({\n                  field: {\n                    onChange,\n                    value\n                  },\n                  fieldState: {\n                    error\n                  }\n                }) => {\n                  return /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Name\",\n                    id: \"standard-name\",\n                    name: \"name\",\n                    defaultValue: name,\n                    className: classes.textField,\n                    onChange: onChange,\n                    error: !!error,\n                    helperText: error ? error.message : null\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 207,\n                    columnNumber: 23\n                  }, this);\n                },\n                rules: {\n                  required: \"Name required\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Controller, {\n                name: \"empno\",\n                control: control,\n                defaultValue: empno,\n                render: ({\n                  field: {\n                    onChange,\n                    value\n                  },\n                  fieldState: {\n                    error\n                  }\n                }) => {\n                  return /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Emp No\",\n                    id: \"standard-empno\",\n                    defaultValue: empno,\n                    name: \"empno\",\n                    className: classes.textField,\n                    onChange: onChange,\n                    error: !!error,\n                    helperText: error ? error.message : null\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 230,\n                    columnNumber: 23\n                  }, this);\n                } //rules={{ required: \"Name required\" }}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Controller, {\n                name: \"email\",\n                control: control,\n                defaultValue: email,\n                render: ({\n                  field: {\n                    onChange,\n                    value\n                  },\n                  fieldState: {\n                    error\n                  }\n                }) => {\n                  return /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Email\",\n                    id: \"standard-email\",\n                    name: \"email\",\n                    defaultValue: email,\n                    className: classes.textField,\n                    onChange: onChange,\n                    inputProps: {\n                      readOnly: true\n                    },\n                    error: !!error,\n                    helperText: error ? error.message : null\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 255,\n                    columnNumber: 23\n                  }, this);\n                },\n                rules: {\n                  required: \"Email is required\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Controller, {\n                name: \"ic_no\",\n                control: control,\n                defaultValue: ic_no,\n                render: ({\n                  field: {\n                    onChange,\n                    value\n                  },\n                  fieldState: {\n                    error\n                  }\n                }) => {\n                  return /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"IC No\",\n                    id: \"standard-icno\",\n                    defaultValue: ic_no,\n                    name: \"ic_no\",\n                    className: classes.textField,\n                    onChange: onChange,\n                    error: !!error,\n                    helperText: error ? error.message : null\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 280,\n                    columnNumber: 23\n                  }, this);\n                } //rules={{ required: \"IC No required\" }}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Controller, {\n                name: \"birthdate\",\n                control: control,\n                defaultValue: birthdate,\n                render: ({\n                  field: {\n                    onChange,\n                    value\n                  },\n                  fieldState: {\n                    error\n                  }\n                }) => {\n                  return /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Birth Date\",\n                    id: \"standard-birthdate\",\n                    name: \"birthdate\",\n                    type: \"date\",\n                    defaultValue: birthdate,\n                    className: classes.textField //onChange={onChange}\n                    ,\n                    onChange: e => {\n                      onChange(e.target.value);\n                      let age = calculateAge(e.target.value);\n                      console.log(\"emp\", birthdate, age);\n                      setEmpage(age);\n                    },\n                    error: !!error,\n                    helperText: error ? error.message : null,\n                    InputLabelProps: {\n                      shrink: true\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 305,\n                    columnNumber: 23\n                  }, this);\n                } //rules={{ required: \"IC No required\" }}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Controller, {\n                name: \"age\",\n                control: control,\n                defaultValue: empage,\n                render: ({\n                  field: {\n                    onChange,\n                    value\n                  },\n                  fieldState: {\n                    error\n                  }\n                }) => {\n                  return /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Age\",\n                    type: \"number\",\n                    id: \"standard-age\",\n                    name: \"empage\" //defaultValue={age}\n                    ,\n                    value: empage,\n                    className: classes.textField //onChange={onChange}\n                    ,\n                    onChange: e => {\n                      onChange(parseInt(e.target.value, 10));\n                    },\n                    error: !!error,\n                    helperText: error ? error.message : null,\n                    inputProps: {\n                      readOnly: true\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 339,\n                    columnNumber: 23\n                  }, this);\n                } //rules={{ required: \"IC No required\" }}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Controller, {\n                name: \"passportno\",\n                control: control,\n                defaultValue: passportno,\n                render: ({\n                  field: {\n                    onChange,\n                    value\n                  },\n                  fieldState: {\n                    error\n                  }\n                }) => {\n                  return /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Passport No\",\n                    id: \"standard-passportno\",\n                    name: \"passportno\",\n                    defaultValue: passportno,\n                    className: classes.textField,\n                    onChange: onChange,\n                    error: !!error,\n                    helperText: error ? error.message : null\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 370,\n                    columnNumber: 23\n                  }, this);\n                } //rules={{ required: \"Name required\" }}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Controller, {\n                name: \"passport_expirydate\",\n                control: control,\n                defaultValue: passport_expirydate,\n                render: ({\n                  field: {\n                    onChange,\n                    value\n                  },\n                  fieldState: {\n                    error\n                  }\n                }) => {\n                  return /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Passport Expiry Date\",\n                    id: \"standard-ppexpiry\",\n                    name: \"passport_expirydate\",\n                    type: \"date\",\n                    defaultValue: passport_expirydate,\n                    className: classes.textField,\n                    onChange: onChange,\n                    error: !!error,\n                    helperText: error ? error.message : null,\n                    InputLabelProps: {\n                      shrink: true\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 393,\n                    columnNumber: 23\n                  }, this);\n                } //rules={{ required: \"Name required\" }}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 384,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Controller, {\n                name: \"nationality\",\n                control: control,\n                defaultValue: nationality,\n                render: ({\n                  field: {\n                    onChange,\n                    value\n                  },\n                  fieldState: {\n                    error\n                  }\n                }) => {\n                  return /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Nationality\",\n                    id: \"standard-nationality\",\n                    name: \"nationality\",\n                    defaultValue: nationality,\n                    className: classes.textField,\n                    onChange: onChange,\n                    error: !!error,\n                    helperText: error ? error.message : null\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 422,\n                    columnNumber: 23\n                  }, this);\n                } //rules={{ required: \"IC No required\" }}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 413,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Controller, {\n                name: \"gender\",\n                control: control,\n                defaultValue: gender,\n                render: ({\n                  field: {\n                    onChange,\n                    value\n                  },\n                  fieldState: {\n                    error\n                  }\n                }) => {\n                  return /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Gender\",\n                    id: \"standard-gender\",\n                    name: \"gender\",\n                    defaultValue: gender,\n                    className: classes.textField,\n                    onChange: onChange,\n                    error: !!error,\n                    helperText: error ? error.message : null,\n                    select: true,\n                    children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: \"Male\",\n                      children: \"Male\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 456,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: \"Female\",\n                      children: \"Female\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 457,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 445,\n                    columnNumber: 23\n                  }, this);\n                } //rules={{ required: \"IC No required\" }}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 436,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Controller, {\n                name: \"address\",\n                control: control,\n                defaultValue: address,\n                render: ({\n                  field: {\n                    onChange,\n                    value\n                  },\n                  fieldState: {\n                    error\n                  }\n                }) => {\n                  return /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Address\",\n                    id: \"standard-address\",\n                    name: \"address\",\n                    defaultValue: address,\n                    className: classes.textField,\n                    onChange: onChange,\n                    error: !!error,\n                    helperText: error ? error.message : null\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 474,\n                    columnNumber: 23\n                  }, this);\n                } //rules={{ required: \"IC No required\" }}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 465,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {\n            className: classes.divider\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [loginLevel.loginLevel !== \"Admin\" && /*#__PURE__*/_jsxDEV(Controller, {\n                name: \"basic_salary\",\n                control: control,\n                defaultValue: basic_salary,\n                render: ({\n                  field: {\n                    onChange,\n                    value\n                  },\n                  fieldState: {\n                    error\n                  }\n                }) => {\n                  return /*#__PURE__*/_jsxDEV(CurrencyTextField, {\n                    label: \"Basic Salary\",\n                    variant: \"standard\",\n                    value: basic_salary,\n                    currencySymbol: \"$\",\n                    outputFormat: \"string\",\n                    decimalCharacter: \".\",\n                    digitGroupSeparator: \",\",\n                    decimalPlaces: \"2\",\n                    className: classes.textField,\n                    id: \"standard-basicsalary\",\n                    name: \"basic_salary\" //onChange={onChange}\n                    ,\n                    onChange: e => {\n                      onChange(parseFloat(currency(e.target.value), 10));\n                    },\n                    error: !!error,\n                    helperText: error ? error.message : null\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 503,\n                    columnNumber: 25\n                  }, this);\n                } //rules={{ required: \"IC No required\" }}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 494,\n                columnNumber: 19\n              }, this), loginLevel.loginLevel !== \"Admin\" && /*#__PURE__*/_jsxDEV(Controller, {\n                name: \"salary_currency\",\n                control: control,\n                defaultValue: salary_currency,\n                render: ({\n                  field: {\n                    onChange,\n                    value\n                  },\n                  fieldState: {\n                    error\n                  }\n                }) => {\n                  return /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Currency\",\n                    id: \"standard-currency\",\n                    name: \"salary_currency\",\n                    defaultValue: salary_currency,\n                    className: classes.textField,\n                    onChange: onChange,\n                    error: !!error,\n                    helperText: error ? error.message : null,\n                    select: true,\n                    children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: \"BND\",\n                      children: \"BND\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 548,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: \"USD\",\n                      children: \"USD\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 549,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: \"MYR\",\n                      children: \"MYR\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 550,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 537,\n                    columnNumber: 25\n                  }, this);\n                } //rules={{ required: \"IC No required\" }}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 528,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 492,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [loginLevel.loginLevel !== \"Admin\" && /*#__PURE__*/_jsxDEV(Controller, {\n                name: \"siteallows_fee\",\n                control: control,\n                defaultValue: siteallows_fee,\n                render: ({\n                  field: {\n                    onChange,\n                    value\n                  },\n                  fieldState: {\n                    error\n                  }\n                }) => {\n                  return /*#__PURE__*/_jsxDEV(CurrencyTextField, {\n                    label: \"Site Allowances Fee\",\n                    variant: \"standard\",\n                    value: siteallows_fee,\n                    currencySymbol: \"$\",\n                    outputFormat: \"number\",\n                    decimalCharacter: \".\",\n                    digitGroupSeparator: \",\",\n                    decimalPlaces: \"2\",\n                    className: classes.textField,\n                    id: \"standard-siteallowances\",\n                    name: \"siteallows_fee\" //onChange={onChange}\n                    ,\n                    onChange: e => {\n                      onChange(parseFloat(currency(e.target.value), 10));\n                    },\n                    error: !!error,\n                    helperText: error ? error.message : null\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 569,\n                    columnNumber: 25\n                  }, this);\n                } //rules={{ required: \"IC No required\" }}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 560,\n                columnNumber: 19\n              }, this), loginLevel.loginLevel !== \"Admin\" && /*#__PURE__*/_jsxDEV(Controller, {\n                name: \"perdiem_fee\",\n                control: control,\n                defaultValue: perdiem_fee,\n                render: ({\n                  field: {\n                    onChange,\n                    value\n                  },\n                  fieldState: {\n                    error\n                  }\n                }) => {\n                  return /*#__PURE__*/_jsxDEV(CurrencyTextField, {\n                    label: \"Per Diem Fee\",\n                    variant: \"standard\",\n                    value: perdiem_fee,\n                    currencySymbol: \"$\",\n                    outputFormat: \"number\",\n                    decimalCharacter: \".\",\n                    digitGroupSeparator: \",\",\n                    decimalPlaces: \"2\",\n                    className: classes.textField,\n                    id: \"standard-perdiem\",\n                    name: \"perdiem_fee\" //onChange={onChange}\n                    ,\n                    onChange: e => {\n                      onChange(parseFloat(currency(e.target.value), 10));\n                    },\n                    error: !!error,\n                    helperText: error ? error.message : null\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 603,\n                    columnNumber: 25\n                  }, this);\n                } //rules={{ required: \"IC No required\" }}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 594,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 558,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Controller, {\n                name: \"tap_checkbox\",\n                control: control,\n                render: ({\n                  field: {\n                    onChange,\n                    value\n                  },\n                  fieldState: {\n                    error\n                  }\n                }) => {\n                  return /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                    control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                      name: \"tap_checkbox\",\n                      defaultValue: tap_checkbox,\n                      checked: checktap,\n                      type: \"checkbox\",\n                      onChange: e => {\n                        onChange(e.target.checked);\n                        setCheckTap(e.target.checked);\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 639,\n                      columnNumber: 27\n                    }, this),\n                    label: \"TAP/SCP Contribution\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 637,\n                    columnNumber: 23\n                  }, this);\n                } //rules={{ required: \"IC No required\" }}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 629,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 628,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Controller, {\n                name: \"tap_acno\",\n                control: control,\n                defaultValue: tap_acno,\n                render: ({\n                  field: {\n                    onChange,\n                    value\n                  },\n                  fieldState: {\n                    error\n                  }\n                }) => {\n                  return /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"TAP Ac No\",\n                    id: \"standard-tapno\",\n                    name: \"tap_acno\",\n                    defaultValue: tap_acno,\n                    className: classes.textField,\n                    onChange: onChange,\n                    error: !!error,\n                    helperText: error ? error.message : null\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 667,\n                    columnNumber: 23\n                  }, this);\n                } //rules={{ required: \"Email is required\" }}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 658,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Controller, {\n                name: \"scp_acno\",\n                control: control,\n                defaultValue: scp_acno,\n                render: ({\n                  field: {\n                    onChange,\n                    value\n                  },\n                  fieldState: {\n                    error\n                  }\n                }) => {\n                  return /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"SCP Ac No\",\n                    id: \"standard-scpno\",\n                    name: \"scp_acno\",\n                    defaultValue: scp_acno,\n                    className: classes.textField,\n                    onChange: onChange,\n                    error: !!error,\n                    helperText: error ? error.message : null\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 691,\n                    columnNumber: 23\n                  }, this);\n                } //rules={{ required: \"Email is required\" }}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 682,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 657,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Controller, {\n                name: \"bank_name\",\n                control: control,\n                defaultValue: bank_name,\n                render: ({\n                  field: {\n                    onChange,\n                    value\n                  },\n                  fieldState: {\n                    error\n                  }\n                }) => {\n                  return /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Bank Name\",\n                    id: \"standard-bankname\",\n                    name: \"bank_name\",\n                    defaultValue: bank_name,\n                    className: classes.textField,\n                    onChange: onChange,\n                    error: !!error,\n                    helperText: error ? error.message : null\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 716,\n                    columnNumber: 23\n                  }, this);\n                } //rules={{ required: \"Email is required\" }}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 707,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Controller, {\n                name: \"bank_acno\",\n                control: control,\n                defaultValue: bank_acno,\n                render: ({\n                  field: {\n                    onChange,\n                    value\n                  },\n                  fieldState: {\n                    error\n                  }\n                }) => {\n                  return /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Bank Ac No\",\n                    id: \"standard-backacno\",\n                    name: \"bank_acno\",\n                    defaultValue: bank_acno,\n                    className: classes.textField,\n                    onChange: onChange,\n                    error: !!error,\n                    helperText: error ? error.message : null\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 740,\n                    columnNumber: 23\n                  }, this);\n                } // rules={{ required: \"Email is required\" }}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 731,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 706,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Controller, {\n                name: \"workpermitno\",\n                control: control,\n                defaultValue: workpermitno,\n                render: ({\n                  field: {\n                    onChange,\n                    value\n                  },\n                  fieldState: {\n                    error\n                  }\n                }) => {\n                  return /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Work Permit No\",\n                    id: \"standard-workpermitno\",\n                    name: \"workpermitno\",\n                    defaultValue: workpermitno,\n                    className: classes.textField,\n                    onChange: onChange,\n                    error: !!error,\n                    helperText: error ? error.message : null\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 765,\n                    columnNumber: 23\n                  }, this);\n                } //rules={{ required: \"Name required\" }}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 756,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Controller, {\n                name: \"workpermit_expirydate\",\n                control: control,\n                defaultValue: workpermit_expirydate,\n                render: ({\n                  field: {\n                    onChange,\n                    value\n                  },\n                  fieldState: {\n                    error\n                  }\n                }) => {\n                  return /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Work Permit Expiry Date\",\n                    id: \"standard-workpermitexpiry\",\n                    name: \"workpermit_expirydate\",\n                    type: \"date\",\n                    defaultValue: workpermit_expirydate,\n                    className: classes.textField,\n                    onChange: onChange,\n                    error: !!error,\n                    helperText: error ? error.message : null,\n                    InputLabelProps: {\n                      shrink: true\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 788,\n                    columnNumber: 23\n                  }, this);\n                } //rules={{ required: \"Name required\" }}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 779,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 755,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {\n              className: classes.divider\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 807,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Controller, {\n                name: \"date_of_join\",\n                control: control,\n                defaultValue: date_of_join,\n                render: ({\n                  field: {\n                    onChange,\n                    value\n                  },\n                  fieldState: {\n                    error\n                  }\n                }) => {\n                  return /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Joining Date\",\n                    id: \"standard-joiningdate\",\n                    name: \"date_of_join\",\n                    type: \"date\",\n                    defaultValue: date_of_join,\n                    className: classes.textField,\n                    onChange: onChange,\n                    error: !!error,\n                    helperText: error ? error.message : null,\n                    InputLabelProps: {\n                      shrink: true\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 818,\n                    columnNumber: 23\n                  }, this);\n                } //rules={{ required: \"Email is required\" }}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 809,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(Controller, {\n                  name: \"date_of_resign\",\n                  control: control,\n                  defaultValue: date_of_resign,\n                  render: ({\n                    field: {\n                      onChange,\n                      value\n                    },\n                    fieldState: {\n                      error\n                    }\n                  }) => {\n                    return /*#__PURE__*/_jsxDEV(TextField, {\n                      label: \"Resign Date\",\n                      id: \"standard-resindate\",\n                      name: \"date_of_resign\",\n                      type: \"date\",\n                      defaultValue: date_of_resign,\n                      className: classes.textField,\n                      onChange: onChange,\n                      error: !!error,\n                      helperText: error ? error.message : null,\n                      InputLabelProps: {\n                        shrink: true\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 846,\n                      columnNumber: 25\n                    }, this);\n                  } //rules={{ required: \"Email is required\" }}\n\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 837,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Controller, {\n                  name: \"hasresigned\",\n                  control: control,\n                  render: ({\n                    field: {\n                      onChange,\n                      value\n                    },\n                    fieldState: {\n                      error\n                    }\n                  }) => {\n                    return /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                      control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                        name: \"hasresigned\",\n                        defaultValue: hasresigned,\n                        checked: isresigned,\n                        type: \"checkbox\",\n                        onChange: e => {\n                          onChange(e.target.checked);\n                          setIsresigned(e.target.checked);\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 875,\n                        columnNumber: 29\n                      }, this),\n                      label: \"Resigned\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 873,\n                      columnNumber: 25\n                    }, this);\n                  } //rules={{ required: \"IC No required\" }}\n\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 865,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 836,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 808,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Controller, {\n                name: \"leave_entitled\",\n                control: control,\n                defaultValue: leave_entitled,\n                render: ({\n                  field: {\n                    onChange,\n                    value\n                  },\n                  fieldState: {\n                    error\n                  }\n                }) => {\n                  return /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Annual Leaves Entitled\",\n                    id: \"standard-annualleave\",\n                    name: \"leave_entitled\",\n                    type: \"numeric\",\n                    defaultValue: leave_entitled,\n                    className: classes.textField,\n                    onChange: e => onChange(parseFloat(e.target.value, 10)),\n                    error: !!error,\n                    helperText: error ? error.message : null,\n                    InputLabelProps: {\n                      shrink: true\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 904,\n                    columnNumber: 23\n                  }, this);\n                } //rules={{ required: \"Email is required\" }}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 895,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Controller, {\n                name: \"leave_bf\",\n                control: control,\n                defaultValue: leave_bf,\n                render: ({\n                  field: {\n                    onChange,\n                    value\n                  },\n                  fieldState: {\n                    error\n                  }\n                }) => {\n                  return /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Leaves B/F\",\n                    id: \"standard-leavebal\",\n                    name: \"leave_bf\",\n                    type: \"numeric\",\n                    defaultValue: leave_bf,\n                    className: classes.textField,\n                    onChange: e => onChange(parseFloat(e.target.value, 10)),\n                    error: !!error,\n                    helperText: error ? error.message : null,\n                    InputLabelProps: {\n                      shrink: true\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 933,\n                    columnNumber: 23\n                  }, this);\n                } //rules={{ required: \"Email is required\" }}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 924,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 894,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Controller, {\n                name: \"designation\",\n                control: control,\n                defaultValue: designation,\n                render: ({\n                  field: {\n                    onChange,\n                    value\n                  },\n                  fieldState: {\n                    error\n                  }\n                }) => {\n                  return /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Designation\",\n                    id: \"standard-designation\",\n                    name: \"designation\",\n                    defaultValue: designation,\n                    className: classes.textField,\n                    onChange: onChange,\n                    error: !!error,\n                    helperText: error ? error.message : null,\n                    select: true,\n                    children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: \"\",\n                      children: \"None\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 975,\n                      columnNumber: 25\n                    }, this), designations && designations.map(r => {\n                      return /*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: r.name,\n                        children: r.name\n                      }, r.id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 979,\n                        columnNumber: 31\n                      }, this);\n                    })]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 964,\n                    columnNumber: 23\n                  }, this);\n                } //rules={{ required: \"Email is required\" }}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 955,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Controller, {\n                name: \"department\",\n                control: control,\n                defaultValue: department,\n                render: ({\n                  field: {\n                    onChange,\n                    value\n                  },\n                  fieldState: {\n                    error\n                  }\n                }) => {\n                  return /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Department\",\n                    id: \"standard-department\",\n                    name: \"department\",\n                    defaultValue: department,\n                    className: classes.textField,\n                    onChange: onChange,\n                    error: !!error,\n                    helperText: error ? error.message : null,\n                    select: true,\n                    children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: \"\",\n                      children: \"None\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1009,\n                      columnNumber: 25\n                    }, this), departments && departments.map(r => {\n                      return /*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: r.name,\n                        children: r.name\n                      }, r.id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1013,\n                        columnNumber: 31\n                      }, this);\n                    })]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 998,\n                    columnNumber: 23\n                  }, this);\n                } //rules={{ required: \"Email is required\" }}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 989,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 954,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Controller, {\n                name: \"reporting_to\",\n                control: control,\n                defaultValue: reporting_to,\n                render: ({\n                  field: {\n                    onChange,\n                    value\n                  },\n                  fieldState: {\n                    error\n                  }\n                }) => {\n                  return /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Reporting To\",\n                    id: \"standard-reportingto\",\n                    name: \"reporting_to\",\n                    defaultValue: reporting_to,\n                    className: classes.textField,\n                    onChange: e => {\n                      onChange(e.target.value);\n                      handleReportingTo(e.target.value);\n                    },\n                    error: !!error,\n                    helperText: error ? error.message : null,\n                    select: true,\n                    children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: \"\",\n                      children: \"None\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1048,\n                      columnNumber: 25\n                    }, this), employees && employees.map(r => {\n                      return /*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: r.name,\n                        children: r.name\n                      }, r.id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1052,\n                        columnNumber: 31\n                      }, this);\n                    })]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1034,\n                    columnNumber: 23\n                  }, this);\n                } //rules={{ required: \"Email is required\" }}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1025,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Controller, {\n                name: \"reporting_email\",\n                control: control,\n                defaultValue: reportemail,\n                render: ({\n                  field: {\n                    onChange,\n                    value\n                  },\n                  fieldState: {\n                    error\n                  }\n                }) => {\n                  return /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Reporting Email\",\n                    id: \"standard-reportingemail\",\n                    name: \"reporting_email\",\n                    value: reportemail,\n                    className: classes.textField,\n                    onChange: onChange,\n                    error: !!error,\n                    helperText: error ? error.message : null,\n                    InputLabelProps: {\n                      shrink: true\n                    },\n                    InputProps: {\n                      readOnly: true\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1071,\n                    columnNumber: 23\n                  }, this);\n                } //rules={{ required: \"Email is required\" }}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1062,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1024,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {\n              className: classes.divider\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1092,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1095,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(EmpFamily, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1111,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(EmpEducations, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1114,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(EmpExperiences, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1117,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(EmpTrainings, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1120,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1099,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EmployeeForm, \"qCAT/WSqFOZL5OlAX8n21/khAQY=\", false, function () {\n  return [useStyles, useEmployees, useAddEmployees, useUpdateEmployees, useDesignations, useDepartments, useForm, useRecoilState, useEmployeesContext];\n});\n\n_c = EmployeeForm;\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(1)\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1)\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1)\n  },\n  iconSmall: {\n    fontSize: 20\n  },\n  root: {\n    padding: theme.spacing(3, 2)\n  },\n  container: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    flexWrap: \"wrap\"\n  },\n  divider: {\n    padding: 4\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 350\n  }\n}));\nexport default EmployeeForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmployeeForm\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-demo/src/components/EmployeeForm.js"],"names":["React","useState","useEffect","Button","Icon","TextField","Paper","Typography","Grid","Divider","FormControlLabel","Checkbox","MenuItem","currency","CurrencyTextField","makeStyles","useEmployeesContext","Controller","useForm","useRecoilState","loginLevelState","useEmployees","useAddEmployees","useUpdateEmployees","useDepartments","useDesignations","EmpFamily","EmpEducations","EmpExperiences","EmpTrainings","EmpJobhistory","initial_values","name","gender","ic_no","email","birthdate","age","nationality","address","leave_bal","leave_bf","leave_entitled","basic_salary","salary_currency","bank_name","bank_acno","tap_checkbox","tap_acno","scp_acno","date_of_join","date_of_resign","hasresigned","designation","department","passportno","passport_expirydate","workpermitno","workpermit_expirydate","siteallows_fee","perdiem_fee","empno","reporting_to","reporting_email","EmployeeForm","classes","useStyles","employees","employeeId","setEmployeeId","addEmployees","updateEmployees","designations","departments","reportemail","setReportEmail","empage","setEmpage","checktap","setCheckTap","isresigned","setIsresigned","handleSubmit","control","setValue","register","loginLevel","setLoginLevel","isEditing","editEmployeeID","single_employee","filter","r","id","map","calculateAge","dob","today","Date","birthDate","getFullYear","m","getMonth","getDate","handleReportingTo","emp","f","onSubmit","data","root","button","rightIcon","divider","field","onChange","value","fieldState","error","textField","message","required","readOnly","e","target","console","log","shrink","parseInt","parseFloat","checked","theme","margin","spacing","leftIcon","marginRight","marginLeft","iconSmall","fontSize","padding","container","display","flexDirection","flexWrap","width"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Button,\r\n  Icon,\r\n  TextField,\r\n  Paper,\r\n  Typography,\r\n  Grid,\r\n  Divider,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport currency from \"currency.js\";\r\nimport CurrencyTextField from \"@unicef/material-ui-currency-textfield\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\n//import { editEmployeeIdState } from \"./data/atomdata\";\r\n//import { useAllEmployees } from \"./employees/useAllEmployees\";\r\nimport { useEmployees } from \"./employees/useEmployees\";\r\nimport { useAddEmployees } from \"./employees/useAddEmployees\";\r\nimport { useUpdateEmployees } from \"./employees/useUpdateEmployees\";\r\nimport { useDepartments } from \"./departments/useDepartments\";\r\nimport { useDesignations } from \"./designations/useDesignations\";\r\n//import { useCurrency } from \"./currency/useCurrency\";\r\nimport EmpFamily from \"./EmpFamily\";\r\nimport EmpEducations from \"./EmpEducations\";\r\nimport EmpExperiences from \"./EmpExperiences\";\r\nimport EmpTrainings from \"./EmpTrainings\";\r\nimport EmpJobhistory from \"./EmpJobhistory\";\r\n\r\nconst initial_values = {\r\n  name: \"\",\r\n  gender: \"\",\r\n  ic_no: \"\",\r\n  email: \"\",\r\n  birthdate: null,\r\n  age: 0,\r\n  nationality: \"\",\r\n  address: \"\",\r\n  leave_bal: 0,\r\n  leave_bf: 0,\r\n  leave_entitled: 0,\r\n  basic_salary: 0,\r\n  salary_currency: \"BND\",\r\n  bank_name: \"\",\r\n  bank_acno: \"\",\r\n  tap_checkbox: true,\r\n  tap_acno: \"\",\r\n  scp_acno: \"\",\r\n  date_of_join: null,\r\n  date_of_resign: null,\r\n  hasresigned: false,\r\n  designation: \"\",\r\n  department: \"\",\r\n  passportno: \"\",\r\n  passport_expirydate: null,\r\n  workpermitno: \"\",\r\n  workpermit_expirydate: null,\r\n  siteallows_fee: 0,\r\n  perdiem_fee: 0,\r\n  empno: \"\",\r\n  reporting_to: \"\",\r\n  reporting_email: \"\",\r\n};\r\n\r\nconst EmployeeForm = () => {\r\n  const classes = useStyles();\r\n  const { employees, employeeId, setEmployeeId } = useEmployees();\r\n  //const { allemployees, setAllEmpId } = useAllEmployees();\r\n  const addEmployees = useAddEmployees();\r\n  const updateEmployees = useUpdateEmployees();\r\n  //const currencyRate = useCurrency()\r\n  const { designations } = useDesignations();\r\n  const { departments } = useDepartments();\r\n  const [reportemail, setReportEmail] = useState(\"\");\r\n  const [empage, setEmpage] = useState(0);\r\n  const [checktap, setCheckTap] = useState(false);\r\n  const [isresigned, setIsresigned] = useState(false);\r\n  //const [empId, setEmpId] = useRecoilState(editEmployeeIdState);\r\n  const { handleSubmit, control, setValue, register } = useForm();\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const { isEditing, editEmployeeID } = useEmployeesContext();\r\n  const single_employee = employees\r\n    .filter((r) => r.id === editEmployeeID)\r\n    .map((r) => {\r\n      return { ...r };\r\n    });\r\n  const {\r\n    name,\r\n    ic_no,\r\n    gender,\r\n    birthdate,\r\n    age,\r\n    email,\r\n    nationality,\r\n    address,\r\n    leave_bal,\r\n    leave_entitled,\r\n    leave_bf,\r\n    basic_salary,\r\n    salary_currency,\r\n    bank_name,\r\n    bank_acno,\r\n    tap_checkbox,\r\n    tap_acno,\r\n    scp_acno,\r\n    date_of_join,\r\n    date_of_resign,\r\n    hasresigned,\r\n    designation,\r\n    department,\r\n    passportno,\r\n    passport_expirydate,\r\n    workpermitno,\r\n    workpermit_expirydate,\r\n    siteallows_fee,\r\n    perdiem_fee,\r\n    empno,\r\n    reporting_to,\r\n    reporting_email,\r\n  } = single_employee[0] || initial_values;\r\n\r\n  const calculateAge = (dob) => {\r\n    var today = new Date();\r\n    var birthDate = new Date(dob);\r\n    var age = today.getFullYear() - birthDate.getFullYear();\r\n    var m = today.getMonth() - birthDate.getMonth();\r\n    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n      age--;\r\n    }\r\n    return age;\r\n  };\r\n\r\n  const handleReportingTo = (name) => {\r\n    const emp = employees\r\n      .filter((f) => f.name === name)\r\n      .map((r) => {\r\n        return { ...r };\r\n      });\r\n    setReportEmail(emp[0].email);\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n    if (isEditing) {\r\n      updateEmployees({\r\n        id: editEmployeeID,\r\n        ...data,\r\n        reporting_email: reportemail,\r\n      });\r\n    } else {\r\n      addEmployees({ ...data, reporting_email: reportemail });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    let age = calculateAge(birthdate);\r\n    setEmpage(age);\r\n    setCheckTap(tap_checkbox);\r\n    setIsresigned(hasresigned);\r\n    setReportEmail(reporting_email);\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   setAllEmpId(\"111\");\r\n  // }, []);\r\n\r\n  if (!employees) {\r\n    return <h2>Loading ...</h2>;\r\n  }\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <Paper className={classes.root}>\r\n          <Grid container className={classes.root} spacing={15}>\r\n            <div>\r\n              <Typography variant=\"h5\" component=\"h3\">\r\n                EMPLOYEE FORM\r\n              </Typography>\r\n\r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n              >\r\n                Submit <Icon className={classes.rightIcon}>send</Icon>\r\n              </Button>\r\n            </div>\r\n          </Grid>\r\n          <Divider className={classes.divider} />\r\n          <Grid item xs={12}>\r\n            <div>\r\n              <div>\r\n                <Controller\r\n                  name=\"name\"\r\n                  control={control}\r\n                  defaultValue={name}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Name\"\r\n                        id=\"standard-name\"\r\n                        name=\"name\"\r\n                        defaultValue={name}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  rules={{ required: \"Name required\" }}\r\n                />\r\n                <Controller\r\n                  name=\"empno\"\r\n                  control={control}\r\n                  defaultValue={empno}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Emp No\"\r\n                        id=\"standard-empno\"\r\n                        defaultValue={empno}\r\n                        name=\"empno\"\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Name required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"email\"\r\n                  control={control}\r\n                  defaultValue={email}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Email\"\r\n                        id=\"standard-email\"\r\n                        name=\"email\"\r\n                        defaultValue={email}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        inputProps={{ readOnly: true }}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  rules={{ required: \"Email is required\" }}\r\n                />\r\n\r\n                <Controller\r\n                  name=\"ic_no\"\r\n                  control={control}\r\n                  defaultValue={ic_no}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"IC No\"\r\n                        id=\"standard-icno\"\r\n                        defaultValue={ic_no}\r\n                        name=\"ic_no\"\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"IC No required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"birthdate\"\r\n                  control={control}\r\n                  defaultValue={birthdate}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Birth Date\"\r\n                        id=\"standard-birthdate\"\r\n                        name=\"birthdate\"\r\n                        type=\"date\"\r\n                        defaultValue={birthdate}\r\n                        className={classes.textField}\r\n                        //onChange={onChange}\r\n                        onChange={(e) => {\r\n                          onChange(e.target.value);\r\n                          let age = calculateAge(e.target.value);\r\n                          console.log(\"emp\", birthdate, age);\r\n                          setEmpage(age);\r\n                        }}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                      ></TextField>\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"IC No required\" }}\r\n                />\r\n\r\n                <Controller\r\n                  name=\"age\"\r\n                  control={control}\r\n                  defaultValue={empage}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Age\"\r\n                        type=\"number\"\r\n                        id=\"standard-age\"\r\n                        name=\"empage\"\r\n                        //defaultValue={age}\r\n                        value={empage}\r\n                        className={classes.textField}\r\n                        //onChange={onChange}\r\n                        onChange={(e) => {\r\n                          onChange(parseInt(e.target.value, 10));\r\n                        }}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        inputProps={{ readOnly: true }}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"IC No required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"passportno\"\r\n                  control={control}\r\n                  defaultValue={passportno}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Passport No\"\r\n                        id=\"standard-passportno\"\r\n                        name=\"passportno\"\r\n                        defaultValue={passportno}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Name required\" }}\r\n                />\r\n                <Controller\r\n                  name=\"passport_expirydate\"\r\n                  control={control}\r\n                  defaultValue={passport_expirydate}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Passport Expiry Date\"\r\n                        id=\"standard-ppexpiry\"\r\n                        name=\"passport_expirydate\"\r\n                        type=\"date\"\r\n                        defaultValue={passport_expirydate}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Name required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"nationality\"\r\n                  control={control}\r\n                  defaultValue={nationality}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Nationality\"\r\n                        id=\"standard-nationality\"\r\n                        name=\"nationality\"\r\n                        defaultValue={nationality}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"IC No required\" }}\r\n                />\r\n                <Controller\r\n                  name=\"gender\"\r\n                  control={control}\r\n                  defaultValue={gender}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Gender\"\r\n                        id=\"standard-gender\"\r\n                        name=\"gender\"\r\n                        defaultValue={gender}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        select\r\n                      >\r\n                        <MenuItem value=\"Male\">Male</MenuItem>\r\n                        <MenuItem value=\"Female\">Female</MenuItem>\r\n                      </TextField>\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"IC No required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"address\"\r\n                  control={control}\r\n                  defaultValue={address}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Address\"\r\n                        id=\"standard-address\"\r\n                        name=\"address\"\r\n                        defaultValue={address}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"IC No required\" }}\r\n                />\r\n              </div>\r\n            </div>\r\n            <Divider className={classes.divider} />\r\n            <div>\r\n              <div>\r\n                {loginLevel.loginLevel !== \"Admin\" && (\r\n                  <Controller\r\n                    name=\"basic_salary\"\r\n                    control={control}\r\n                    defaultValue={basic_salary}\r\n                    render={({\r\n                      field: { onChange, value },\r\n                      fieldState: { error },\r\n                    }) => {\r\n                      return (\r\n                        <CurrencyTextField\r\n                          label=\"Basic Salary\"\r\n                          variant=\"standard\"\r\n                          value={basic_salary}\r\n                          currencySymbol=\"$\"\r\n                          outputFormat=\"string\"\r\n                          decimalCharacter=\".\"\r\n                          digitGroupSeparator=\",\"\r\n                          decimalPlaces=\"2\"\r\n                          className={classes.textField}\r\n                          id=\"standard-basicsalary\"\r\n                          name=\"basic_salary\"\r\n                          //onChange={onChange}\r\n                          onChange={(e) => {\r\n                            onChange(parseFloat(currency(e.target.value), 10));\r\n                          }}\r\n                          error={!!error}\r\n                          helperText={error ? error.message : null}\r\n                        />\r\n                      );\r\n                    }}\r\n                    //rules={{ required: \"IC No required\" }}\r\n                  />\r\n                )}\r\n                {loginLevel.loginLevel !== \"Admin\" && (\r\n                  <Controller\r\n                    name=\"salary_currency\"\r\n                    control={control}\r\n                    defaultValue={salary_currency}\r\n                    render={({\r\n                      field: { onChange, value },\r\n                      fieldState: { error },\r\n                    }) => {\r\n                      return (\r\n                        <TextField\r\n                          label=\"Currency\"\r\n                          id=\"standard-currency\"\r\n                          name=\"salary_currency\"\r\n                          defaultValue={salary_currency}\r\n                          className={classes.textField}\r\n                          onChange={onChange}\r\n                          error={!!error}\r\n                          helperText={error ? error.message : null}\r\n                          select\r\n                        >\r\n                          <MenuItem value=\"BND\">BND</MenuItem>\r\n                          <MenuItem value=\"USD\">USD</MenuItem>\r\n                          <MenuItem value=\"MYR\">MYR</MenuItem>\r\n                        </TextField>\r\n                      );\r\n                    }}\r\n                    //rules={{ required: \"IC No required\" }}\r\n                  />\r\n                )}\r\n              </div>\r\n              <div>\r\n                {loginLevel.loginLevel !== \"Admin\" && (\r\n                  <Controller\r\n                    name=\"siteallows_fee\"\r\n                    control={control}\r\n                    defaultValue={siteallows_fee}\r\n                    render={({\r\n                      field: { onChange, value },\r\n                      fieldState: { error },\r\n                    }) => {\r\n                      return (\r\n                        <CurrencyTextField\r\n                          label=\"Site Allowances Fee\"\r\n                          variant=\"standard\"\r\n                          value={siteallows_fee}\r\n                          currencySymbol=\"$\"\r\n                          outputFormat=\"number\"\r\n                          decimalCharacter=\".\"\r\n                          digitGroupSeparator=\",\"\r\n                          decimalPlaces=\"2\"\r\n                          className={classes.textField}\r\n                          id=\"standard-siteallowances\"\r\n                          name=\"siteallows_fee\"\r\n                          //onChange={onChange}\r\n                          onChange={(e) => {\r\n                            onChange(parseFloat(currency(e.target.value), 10));\r\n                          }}\r\n                          error={!!error}\r\n                          helperText={error ? error.message : null}\r\n                        />\r\n                      );\r\n                    }}\r\n                    //rules={{ required: \"IC No required\" }}\r\n                  />\r\n                )}\r\n                {loginLevel.loginLevel !== \"Admin\" && (\r\n                  <Controller\r\n                    name=\"perdiem_fee\"\r\n                    control={control}\r\n                    defaultValue={perdiem_fee}\r\n                    render={({\r\n                      field: { onChange, value },\r\n                      fieldState: { error },\r\n                    }) => {\r\n                      return (\r\n                        <CurrencyTextField\r\n                          label=\"Per Diem Fee\"\r\n                          variant=\"standard\"\r\n                          value={perdiem_fee}\r\n                          currencySymbol=\"$\"\r\n                          outputFormat=\"number\"\r\n                          decimalCharacter=\".\"\r\n                          digitGroupSeparator=\",\"\r\n                          decimalPlaces=\"2\"\r\n                          className={classes.textField}\r\n                          id=\"standard-perdiem\"\r\n                          name=\"perdiem_fee\"\r\n                          //onChange={onChange}\r\n                          onChange={(e) => {\r\n                            onChange(parseFloat(currency(e.target.value), 10));\r\n                          }}\r\n                          error={!!error}\r\n                          helperText={error ? error.message : null}\r\n                        />\r\n                      );\r\n                    }}\r\n                    //rules={{ required: \"IC No required\" }}\r\n                  />\r\n                )}\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"tap_checkbox\"\r\n                  control={control}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox\r\n                            name=\"tap_checkbox\"\r\n                            defaultValue={tap_checkbox}\r\n                            checked={checktap}\r\n                            type=\"checkbox\"\r\n                            onChange={(e) => {\r\n                              onChange(e.target.checked);\r\n                              setCheckTap(e.target.checked);\r\n                            }}\r\n                          />\r\n                        }\r\n                        label=\"TAP/SCP Contribution\"\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"IC No required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"tap_acno\"\r\n                  control={control}\r\n                  defaultValue={tap_acno}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"TAP Ac No\"\r\n                        id=\"standard-tapno\"\r\n                        name=\"tap_acno\"\r\n                        defaultValue={tap_acno}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Email is required\" }}\r\n                />\r\n\r\n                <Controller\r\n                  name=\"scp_acno\"\r\n                  control={control}\r\n                  defaultValue={scp_acno}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"SCP Ac No\"\r\n                        id=\"standard-scpno\"\r\n                        name=\"scp_acno\"\r\n                        defaultValue={scp_acno}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Email is required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"bank_name\"\r\n                  control={control}\r\n                  defaultValue={bank_name}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Bank Name\"\r\n                        id=\"standard-bankname\"\r\n                        name=\"bank_name\"\r\n                        defaultValue={bank_name}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Email is required\" }}\r\n                />\r\n\r\n                <Controller\r\n                  name=\"bank_acno\"\r\n                  control={control}\r\n                  defaultValue={bank_acno}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Bank Ac No\"\r\n                        id=\"standard-backacno\"\r\n                        name=\"bank_acno\"\r\n                        defaultValue={bank_acno}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  // rules={{ required: \"Email is required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"workpermitno\"\r\n                  control={control}\r\n                  defaultValue={workpermitno}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Work Permit No\"\r\n                        id=\"standard-workpermitno\"\r\n                        name=\"workpermitno\"\r\n                        defaultValue={workpermitno}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Name required\" }}\r\n                />\r\n                <Controller\r\n                  name=\"workpermit_expirydate\"\r\n                  control={control}\r\n                  defaultValue={workpermit_expirydate}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Work Permit Expiry Date\"\r\n                        id=\"standard-workpermitexpiry\"\r\n                        name=\"workpermit_expirydate\"\r\n                        type=\"date\"\r\n                        defaultValue={workpermit_expirydate}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Name required\" }}\r\n                />\r\n              </div>\r\n              <Divider className={classes.divider} />\r\n              <div>\r\n                <Controller\r\n                  name=\"date_of_join\"\r\n                  control={control}\r\n                  defaultValue={date_of_join}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Joining Date\"\r\n                        id=\"standard-joiningdate\"\r\n                        name=\"date_of_join\"\r\n                        type=\"date\"\r\n                        defaultValue={date_of_join}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Email is required\" }}\r\n                />\r\n                <div>\r\n                  <Controller\r\n                    name=\"date_of_resign\"\r\n                    control={control}\r\n                    defaultValue={date_of_resign}\r\n                    render={({\r\n                      field: { onChange, value },\r\n                      fieldState: { error },\r\n                    }) => {\r\n                      return (\r\n                        <TextField\r\n                          label=\"Resign Date\"\r\n                          id=\"standard-resindate\"\r\n                          name=\"date_of_resign\"\r\n                          type=\"date\"\r\n                          defaultValue={date_of_resign}\r\n                          className={classes.textField}\r\n                          onChange={onChange}\r\n                          error={!!error}\r\n                          helperText={error ? error.message : null}\r\n                          InputLabelProps={{\r\n                            shrink: true,\r\n                          }}\r\n                        />\r\n                      );\r\n                    }}\r\n                    //rules={{ required: \"Email is required\" }}\r\n                  />\r\n\r\n                  <Controller\r\n                    name=\"hasresigned\"\r\n                    control={control}\r\n                    render={({\r\n                      field: { onChange, value },\r\n                      fieldState: { error },\r\n                    }) => {\r\n                      return (\r\n                        <FormControlLabel\r\n                          control={\r\n                            <Checkbox\r\n                              name=\"hasresigned\"\r\n                              defaultValue={hasresigned}\r\n                              checked={isresigned}\r\n                              type=\"checkbox\"\r\n                              onChange={(e) => {\r\n                                onChange(e.target.checked);\r\n                                setIsresigned(e.target.checked);\r\n                              }}\r\n                            />\r\n                          }\r\n                          label=\"Resigned\"\r\n                        />\r\n                      );\r\n                    }}\r\n                    //rules={{ required: \"IC No required\" }}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"leave_entitled\"\r\n                  control={control}\r\n                  defaultValue={leave_entitled}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Annual Leaves Entitled\"\r\n                        id=\"standard-annualleave\"\r\n                        name=\"leave_entitled\"\r\n                        type=\"numeric\"\r\n                        defaultValue={leave_entitled}\r\n                        className={classes.textField}\r\n                        onChange={(e) =>\r\n                          onChange(parseFloat(e.target.value, 10))\r\n                        }\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Email is required\" }}\r\n                />\r\n                <Controller\r\n                  name=\"leave_bf\"\r\n                  control={control}\r\n                  defaultValue={leave_bf}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Leaves B/F\"\r\n                        id=\"standard-leavebal\"\r\n                        name=\"leave_bf\"\r\n                        type=\"numeric\"\r\n                        defaultValue={leave_bf}\r\n                        className={classes.textField}\r\n                        onChange={(e) =>\r\n                          onChange(parseFloat(e.target.value, 10))\r\n                        }\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Email is required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"designation\"\r\n                  control={control}\r\n                  defaultValue={designation}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Designation\"\r\n                        id=\"standard-designation\"\r\n                        name=\"designation\"\r\n                        defaultValue={designation}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        select\r\n                      >\r\n                        <MenuItem value=\"\">None</MenuItem>\r\n                        {designations &&\r\n                          designations.map((r) => {\r\n                            return (\r\n                              <MenuItem key={r.id} value={r.name}>\r\n                                {r.name}\r\n                              </MenuItem>\r\n                            );\r\n                          })}\r\n                      </TextField>\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Email is required\" }}\r\n                />\r\n                <Controller\r\n                  name=\"department\"\r\n                  control={control}\r\n                  defaultValue={department}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Department\"\r\n                        id=\"standard-department\"\r\n                        name=\"department\"\r\n                        defaultValue={department}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        select\r\n                      >\r\n                        <MenuItem value=\"\">None</MenuItem>\r\n                        {departments &&\r\n                          departments.map((r) => {\r\n                            return (\r\n                              <MenuItem key={r.id} value={r.name}>\r\n                                {r.name}\r\n                              </MenuItem>\r\n                            );\r\n                          })}\r\n                      </TextField>\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Email is required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"reporting_to\"\r\n                  control={control}\r\n                  defaultValue={reporting_to}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Reporting To\"\r\n                        id=\"standard-reportingto\"\r\n                        name=\"reporting_to\"\r\n                        defaultValue={reporting_to}\r\n                        className={classes.textField}\r\n                        onChange={(e) => {\r\n                          onChange(e.target.value);\r\n                          handleReportingTo(e.target.value);\r\n                        }}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        select\r\n                      >\r\n                        <MenuItem value=\"\">None</MenuItem>\r\n                        {employees &&\r\n                          employees.map((r) => {\r\n                            return (\r\n                              <MenuItem key={r.id} value={r.name}>\r\n                                {r.name}\r\n                              </MenuItem>\r\n                            );\r\n                          })}\r\n                      </TextField>\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Email is required\" }}\r\n                />\r\n                <Controller\r\n                  name=\"reporting_email\"\r\n                  control={control}\r\n                  defaultValue={reportemail}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Reporting Email\"\r\n                        id=\"standard-reportingemail\"\r\n                        name=\"reporting_email\"\r\n                        value={reportemail}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                        InputProps={{\r\n                          readOnly: true,\r\n                        }}\r\n                      ></TextField>\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Email is required\" }}\r\n                />\r\n              </div>\r\n              <Divider className={classes.divider} />\r\n            </div>\r\n          </Grid>\r\n          <Divider />\r\n        </Paper>\r\n      </form>\r\n\r\n      <div>\r\n        {/* <Grid xs={12}>\r\n          <EmpJobhistory\r\n            staffname={name}\r\n            empid={editEmployeeID}\r\n            basicsalary={basic_salary}\r\n            siteallows={siteallows_fee}\r\n            department={department}\r\n            designaton={designation}\r\n          />\r\n        </Grid> */}\r\n        <Grid xs={12}>\r\n          <EmpFamily />\r\n        </Grid>\r\n        <Grid xs={12}>\r\n          <EmpEducations />\r\n        </Grid>\r\n        <Grid xs={12}>\r\n          <EmpExperiences />\r\n        </Grid>\r\n        <Grid xs={12}>\r\n          <EmpTrainings />\r\n        </Grid>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  leftIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  iconSmall: {\r\n    fontSize: 20,\r\n  },\r\n  root: {\r\n    padding: theme.spacing(3, 2),\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  divider: {\r\n    padding: 4,\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 350,\r\n  },\r\n}));\r\n\r\nexport default EmployeeForm;\r\n"]},"metadata":{},"sourceType":"module"}
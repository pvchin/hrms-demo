{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-demo\\\\src\\\\components\\\\Payrunbatch.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from \"react\";\n//import { makeStyles } from \"@material-ui/core/styles\";\n//import clsx from \"clsx\";\nimport { useNavigate } from \"react-router-dom\";\nimport * as emailjs from \"emailjs-com\";\nimport MaterialTable, { MTableToolbar } from \"material-table\";\nimport { FiSave, FiCheckCircle, FiMail } from \"react-icons/fi\";\nimport { useCustomToast } from \"../helpers/useCustomToast\";\n//import { Button} from \"@material-ui/core\"\nimport { Box, Button, Divider, Grid, GridItem, Flex, Heading, Stack, VStack,\n//Spacer,\nTabs, TabList, TabPanels, Tab, TabPanel, Table,\n//Thead,\nTbody,\n//Tfoot,\n//Tr,\n//Th,\n//Td,\n//TableCaption,\nText, Modal, ModalOverlay, ModalContent,\n//ModalHeader,\nModalFooter, ModalBody, ModalCloseButton,\n//Wrap,\n//WrapItem,\nuseDisclosure } from \"@chakra-ui/react\";\nimport PayForm from \"./PayForm\";\nimport PaySummary from \"./PaySummary\";\nimport PrintPaySummary from \"./PrintPaySummary\";\nimport { useEmployees } from \"./employees/useEmployees\";\nimport { usePayrun } from \"./payrun/usePayrun\";\nimport { useUpdatePayrun } from \"./payrun/useUpdatePayrun\";\nimport { usePayslipsBatch } from \"./payslips/usePayslipsBatch\";\nimport { useUpdatePayslips } from \"./payslips/useUpdatePayslips\";\nimport { usePayslipsContext } from \"../context/payslips_context\";\nimport { useTablesContext } from \"../context/tables_context\";\nimport { useRecoilState } from \"recoil\";\nimport { payrunState,\n//paydataState,\npayrunIdState, payrunStatusState } from \"./data/atomdata\";\n//import { useRecoilValue } from \"recoil\";\n\n//const drawerWidth = 240;\n//const PayForm = React.lazy(() => import(\"./PayForm\"));\n//const PaySummary = React.lazy(() => import(\"./PaySummary\"));\n//const module = await import(\"./PrintPaySummary\"));\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SERVICE_ID = process.env.REACT_APP_EMAILJS_SERVICEID;\nconst TEMPLATE_ID = \"template_1y8odlq\";\nconst USER_ID = process.env.REACT_APP_EMAILJS_USERID;\nconst initial_formdata = {\n  name: \"\",\n  period: \"\",\n  pay_date: null,\n  payrun: \"\",\n  bank_name: \"\",\n  bank_acno: \"\",\n  salary_currency: \"BND\",\n  currency_rate: 1,\n  tap_acno: \"\",\n  scp_acno: \"\",\n  tap_checkbox: false,\n  empid: \"\",\n  status: \"\",\n  allows_type1: \"\",\n  allows_type1amt: \"\",\n  allows_type2: \"\",\n  allows_type2amt: \"\",\n  allows_type3: \" \",\n  allows_type3amt: 0,\n  allows_type4: \"\",\n  allows_type4amt: 0,\n  allows_type5: \" \",\n  allows_type5amt: 0,\n  allows_type6: \" \",\n  allows_type6amt: 0,\n  allows_type7: \" \",\n  allows_type7amt: 0,\n  allows_type8: \" \",\n  allows_type8amt: 0,\n  deducts_type1: \" \",\n  deducts_type1amt: 0,\n  deducts_type2: \" \",\n  deducts_type2amt: 0,\n  deducts_type3: \" \",\n  deducts_type3amt: 0,\n  deducts_type4: \" \",\n  deducts_type4amt: 0,\n  deducts_type5: \" \",\n  deducts_type5amt: 0,\n  deducts_type6: \" \",\n  deducts_type6amt: 0,\n  deducts_type7: \" \",\n  deducts_type7amt: 0,\n  deducts_type8: \" \",\n  deducts_type8amt: 0,\n  wages: 0,\n  tap_amount: 0,\n  scp_amount: 0,\n  total_allowances: 0,\n  total_deductions: 0,\n  site_allows: 0,\n  expenses_claims: 0,\n  nett_pay: 0,\n  wages_bnd: 0,\n  site_allows_bnd: 0,\n  expenses_claims_bnd: 0,\n  total_allowances_bnd: 0,\n  total_deductions_bnd: 0,\n  tap_amount_bnd: 0,\n  scp_amount_bnd: 0,\n  nett_pay_bnd: 0\n};\nconst months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\nconst Payrunbatch = () => {\n  _s();\n  let navigate = useNavigate();\n  //const classes = useStyles();\n  const toast = useCustomToast();\n  //const componentRef = useRef();\n  //const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  //const { register, handleSubmit, control, setValue, reset, watch } = useForm();\n\n  const {\n    //payrun,\n    //getSingleBatchPayslip,\n    //singlebatchpayslip,\n    payslip_period\n    //updatePayslip,\n    //updatePayrun,\n    //singlebatch_payslip_loading,\n    //singlebatch_payslip_error,\n  } = usePayslipsContext();\n  const {\n    payslipsbatch,\n    psbpayrunId,\n    setPSBPayrunId\n  } = usePayslipsBatch();\n  const {\n    employees\n  } = useEmployees();\n  const {\n    payrun\n  } = usePayrun();\n  const updatePayslip = useUpdatePayslips();\n  const updatePayrun = useUpdatePayrun();\n  const {\n    loadPayitems,\n    payitems\n  } = useTablesContext();\n  const [payrundata, setPayrundata] = useRecoilState(payrunState);\n  const [payrunId] = useRecoilState(payrunIdState);\n  const [payrunstatus, setPayrunStatus] = useRecoilState(payrunStatusState);\n  const [loadFormdata, setLoadFormdata] = useState(false);\n  const [loadUpdatedata, setLoadUpdatedata] = useState(false);\n  const [formdata, setFormdata] = useState(initial_formdata);\n  const [rowindex, setRowIndex] = useState(0);\n  const [emponclick, setEmponclick] = useState(false);\n  //const [showSumm, setShowSumm] = useState(false);\n  const [isCalc, setIsCalc] = useState(false);\n  const [isStart, setIsStart] = useState(true);\n  const [isShow, setIsShow] = useState(false);\n  const [isUpdPayslip, setIsUpdPayslip] = useState(false);\n  const [tabno, setTabno] = useState(0);\n  const {\n    isOpen,\n    onOpen,\n    onClose\n  } = useDisclosure();\n  const singlebatchpayslip = payslipsbatch;\n  const columns = useMemo(() => [{\n    title: \"Name\",\n    field: \"name\",\n    editable: \"never\",\n    cellStyle: {\n      width: 280,\n      maxWidth: 280\n    }\n  }], []);\n  useEffect(() => {\n    loadPayitems();\n    setEmponclick(true);\n    // getSingleBatchPayslip(payslip_period);\n  }, []);\n  useEffect(() => {\n    setRowIndex(0);\n    // handleEmpButtonClick(0);\n    setEmponclick(false);\n  }, [emponclick]);\n  useEffect(() => {\n    setLoadFormdata(false);\n  }, [loadUpdatedata]);\n  useEffect(() => {\n    setPSBPayrunId(payslip_period);\n    setIsCalc(true);\n  }, [psbpayrunId]);\n  useEffect(() => {\n    calcPayrunTotals();\n    setIsCalc(false);\n  }, [isCalc]);\n  useEffect(() => {\n    saveIndividualPayslips();\n    setIsUpdPayslip(false);\n  }, [isUpdPayslip]);\n  useEffect(() => {\n    if (tabno === 1) {\n      setIsShow(true);\n    } else {\n      setIsShow(false);\n    }\n  }, [tabno]);\n\n  // useEffect(() => {\n  //   handleEmpButtonClick(0);\n  //   setIsLoad(false);\n  // }, [isLoad]);\n\n  // const handleShowSumm = (e) => {\n  //   e.preventDefault();\n  //   setShowSumm(!showSumm);\n  // };\n\n  const sleep = time => {\n    return new Promise(resolve => setTimeout(resolve, time));\n  };\n  const handlePrintSummary = e => {\n    e.preventDefault();\n    if (payrundata.status === \"Verified\" || payrundata.status === \"Approved\") {\n      exportPdfTable(singlebatchpayslip);\n    } else {\n      //**\n      // save individual payslips\n      //saveIndividualPayslips();\n\n      // save payrun\n      updatePayrun({\n        id: payrunId,\n        totalpayroll: payrundata.totalpayroll,\n        totalwages: payrundata.totalwages,\n        totaltap: payrundata.totaltap,\n        totalscp: payrundata.totalscp,\n        totalallows: payrundata.totalallows,\n        totaldeducts: payrundata.totaldeducts,\n        totalsitesallows: payrundata.totalsiteallows,\n        totalexpensesclaims: payrundata.totalexpensesclaims\n      });\n      exportPdfTable(singlebatchpayslip);\n    }\n  };\n  const exportPdfTable = singlebatchpayslip => {\n    PrintPaySummary(singlebatchpayslip = {\n      singlebatchpayslip\n    });\n  };\n  const handleSavePayslips = e => {\n    e.preventDefault();\n\n    //calcPayrunTotals();\n    // eslint-disable-next-line no-lone-blocks\n    // {\n    //   singlebatchpayslip.forEach((rec) => {\n    //     const { id, rec_id, tableData, ...fields } = rec;\n    //     updatePayslip({ id, ...fields });\n    //   });\n    // }\n\n    //**\n    // save individual payslips\n    saveIndividualPayslips();\n\n    //update payrun\n    handleSavePayrun();\n    // toast({\n    //   title: \"Changes have been saved!\",\n    //   status: \"success\",\n    // });\n    navigate(\"/payslip\");\n  };\n  const saveIndividualPayslips = () => {\n    if (payrundata.status === \"Pending\") {\n      singlebatchpayslip.forEach(rec => {\n        //const { id, rec_id, tableData, ...fields } = rec;\n        // const timer = setTimeout(() => {\n        //   console.log(\"This will run after 1 second!\");\n        //   updatePayslip({ id, ...fields });\n        // }, 300);\n        if (rec.tableData.checked) {\n          const {\n            id,\n            rec_id,\n            tableData,\n            ...fields\n          } = rec;\n          console.log(\"updatepayslip\", rec);\n          updatePayslip({\n            id,\n            ...fields\n          });\n          //uncheck\n          const data = rec;\n          data.tableData.checked = false;\n        }\n      });\n    }\n  };\n  const calcPayrunTotals = () => {\n    // if (!psbpayrunId) {\n    //   return null;\n    // }\n    const tmpbatch = singlebatchpayslip.filter(r => r.payrun === payslip_period).map(rec => {\n      return {\n        ...rec\n      };\n    });\n    //console.log(\"recalc\", tmpbatch);\n\n    const totalpayroll = tmpbatch.reduce((acc, item) => {\n      const value = isNaN(item.nett_pay_bnd) ? 0 : item.nett_pay_bnd;\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\n    }, 0);\n    const totalwages = tmpbatch.reduce((acc, item, index) => {\n      const value = isNaN(item.wages_bnd) ? 0 : item.wages_bnd;\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\n    }, 0);\n    const totaltap = tmpbatch.reduce((acc, item) => {\n      const value = isNaN(item.tap_amount_bnd) ? 0 : item.tap_amount_bnd;\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\n    }, 0);\n    const totalscp = tmpbatch.reduce((acc, item) => {\n      const value = isNaN(item.scp_amount_bnd) ? 0 : item.scp_amount_bnd;\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\n    }, 0);\n    const totalallows = tmpbatch.reduce((acc, item) => {\n      const value = isNaN(item.total_allowances_bnd) ? 0 : item.total_allowances_bnd;\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\n    }, 0);\n    const totaldeducts = tmpbatch.reduce((acc, item) => {\n      const value = isNaN(item.total_deductions_bnd) ? 0 : item.total_deductions_bnd;\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\n    }, 0);\n    const totalsiteallows = tmpbatch.reduce((acc, item) => {\n      const value = isNaN(item.site_allows_bnd) ? 0 : item.site_allows_bnd;\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\n    }, 0);\n    const totalexpensesclaims = tmpbatch.reduce((acc, item) => {\n      const value = isNaN(item.expenses_claims_bnd) ? 0 : item.expenses_claims_bnd;\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\n    }, 0);\n    setPayrundata(prev => prev = {\n      ...payrundata,\n      totalpayroll: totalpayroll,\n      totalwages: totalwages,\n      totaltap: totaltap,\n      totalscp: totalscp,\n      totalallows: totalallows,\n      totaldeducts: totaldeducts,\n      totalsiteallows: totalsiteallows,\n      totalexpensesclaims: totalexpensesclaims\n    });\n  };\n  const handleSavePayrun = () => {\n    if (payrundata.status === \"Verified\" || payrundata.status === \"Approved\") {\n      toast({\n        title: `This payroll batch has been ${payrundata.status}! No changes can be made!`,\n        status: \"warning\"\n      });\n      return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 14\n      }, this);\n    }\n    const tmppayrun = payrun.filter(r => r.payrun === payslip_period);\n    //console.log(\"paysave\", tmppayrun[0].id);\n    // eslint-disable-next-line no-lone-blocks\n    //console.log(\"paybatch\", payslip_period, payrundata);\n    updatePayrun({\n      id: tmppayrun[0].id,\n      totalpayroll: payrundata.totalpayroll,\n      totalwages: payrundata.totalwages,\n      totaltap: payrundata.totaltap,\n      totalscp: payrundata.totalscp,\n      totalallows: payrundata.totalallows,\n      totaldeducts: payrundata.totaldeducts,\n      totalsitesallows: payrundata.totalsiteallows,\n      totalexpensesclaims: payrundata.totalexpensesclaims\n    });\n    navigate(\"/payslip\");\n  };\n  const handleVerifyPayslips = e => {\n    e.preventDefault();\n    setPayrundata(prev => prev = {\n      ...payrundata,\n      status: \"Verified\"\n    });\n    setPayrunStatus(\"Verified\");\n    console.log(\"Verify\", payrundata);\n    //**\n    // save individual payslips\n    //saveIndividualPayslips();\n\n    // save payrun\n    updatePayrun({\n      id: payrunId,\n      status: \"Verified\",\n      totalpayroll: payrundata.totalpayroll,\n      totalwages: payrundata.totalwages,\n      totaltap: payrundata.totaltap,\n      totalscp: payrundata.totalscp,\n      totalallows: payrundata.totalallows,\n      totaldeducts: payrundata.totaldeducts,\n      totalsitesallows: payrundata.totalsiteallows,\n      totalexpensesclaims: payrundata.totalexpensesclaims\n    });\n    toast({\n      title: \"Batch has been verified!\",\n      status: \"success\"\n    });\n  };\n  const handleEmpButtonClick = index => {\n    const paydata = singlebatchpayslip[index];\n    //setFormdata(prev => prev = initial_formdata);\n    setFormdata(prev => prev = {\n      ...initial_formdata,\n      ...paydata\n    });\n    //setFormdata({ ...initial_formdata, ...paydata });\n    setLoadFormdata(true);\n    //**\n    setIsUpdPayslip(true);\n  };\n  const handleTabChange = index => {\n    setTabno(index);\n    if (index === 1) {\n      calcPayrunTotals();\n      setIsUpdPayslip(true);\n    }\n    setIsShow(false);\n  };\n  const SentEmailModal = () => {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n        columns: columns,\n        data: payslipsbatch,\n        title: \"Employees\",\n        options: {\n          filtering: false,\n          search: false,\n          toolbar: true,\n          selection: true,\n          pageSize: 10,\n          headerStyle: {\n            backgroundColor: \"#daad86\",\n            color: \"primary\"\n          },\n          showTitle: true\n        },\n        components: {\n          Toolbar: props => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(MTableToolbar, {\n              ...props\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 506,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                padding: \"5px 10px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                colorScheme: \"blue\",\n                isDisabled: payrundata.status !== \"Approve\" ? true : false,\n                onClick: () => handleSentEmail(),\n                leftIcon: /*#__PURE__*/_jsxDEV(FiMail, {\n                  color: \"white\",\n                  fontSize: \"1.5em\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 512,\n                  columnNumber: 31\n                }, this),\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 508,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 507,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 505,\n            columnNumber: 15\n          }, this)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 7\n    }, this);\n  };\n  const handleSentEmail = data => {\n    const mth = months[payslip_period.substring(6, 7)];\n    const yr = payslip_period.substring(0, 4);\n    payslipsbatch.forEach(pay => {\n      if (pay.tableData.checked) {\n        const {\n          name,\n          empid\n        } = pay;\n        const emp = employees.filter(r => r.id === empid).map(rec => {\n          return {\n            ...rec\n          };\n        });\n        var emaildata = {\n          to_name: name,\n          to_email: emp[0].email,\n          message: `Your payroll for the month of ${mth} ${yr} has been transfered. Please login in to view your payslip!`\n        };\n        emailjs.send(SERVICE_ID, TEMPLATE_ID, emaildata, USER_ID).then(function (response) {\n          console.log(response.status, response.text);\n          toast({\n            title: `Email has sent successfully to ${emaildata.to_email}!`,\n            status: \"success\"\n          });\n        }, function (err) {\n          console.log(err);\n          toast({\n            title: `Email has fail to send to ${emaildata.to_email}!`,\n            status: \"warning\"\n          });\n        });\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    marginLeft: 4,\n    marginTop: 70,\n    w: \"98%\",\n    h: \"100%\",\n    style: {\n      backgroundColor: \"lightcyan\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(VStack, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        templateRows: \"repeat(1,1fr)\",\n        templateColumns: \"repeat(1,1fr)\",\n        children: [/*#__PURE__*/_jsxDEV(GridItem, {\n          rowSpan: 1,\n          colSpan: 1,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            templateRows: \"repeat(1,1fr)\",\n            templateColumns: \"repeat(10,1fr)\",\n            children: [/*#__PURE__*/_jsxDEV(GridItem, {\n              rowSpan: 1,\n              colSpan: 2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 576,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n              rowSpan: 1,\n              colSpan: 4,\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                textAlign: \"center\",\n                alignItems: \"center\",\n                children: /*#__PURE__*/_jsxDEV(Heading, {\n                  pl: \"10\",\n                  pt: 2,\n                  children: \"Payroll\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 579,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 578,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 577,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n              rowSpan: 1,\n              colSpan: 4,\n              pt: 0,\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                pt: \"2\",\n                pr: 5,\n                alignItems: \"right\",\n                align: \"right\",\n                children: /*#__PURE__*/_jsxDEV(Stack, {\n                  spacing: 4,\n                  direction: \"row\",\n                  align: \"center\",\n                  pl: 150,\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    width: \"800px\",\n                    colorScheme: \"blue\",\n                    isDisabled: payrundata.status === \"Verified\" || payrundata.status === \"Approved\" || !isShow ? true : false,\n                    onClick: e => handleSavePayslips(e),\n                    leftIcon: /*#__PURE__*/_jsxDEV(FiSave, {\n                      color: \"white\",\n                      fontSize: \"1.5em\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 598,\n                      columnNumber: 33\n                    }, this),\n                    children: \"Save/Exit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 587,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    isDisabled: !isShow,\n                    width: \"500px\",\n                    colorScheme: \"blue\",\n                    onClick: e => handlePrintSummary(e),\n                    leftIcon: /*#__PURE__*/_jsxDEV(FiSave, {\n                      color: \"white\",\n                      fontSize: \"1.5em\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 607,\n                      columnNumber: 33\n                    }, this),\n                    children: \"Print\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 602,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    width: \"500px\",\n                    colorScheme: \"blue\",\n                    isDisabled: payrundata.status === \"Verified\" || payrundata.status === \"Approved\" || payrundata.status === \"New\" || !isShow ? true : false,\n                    onClick: e => handleVerifyPayslips(e),\n                    leftIcon: /*#__PURE__*/_jsxDEV(FiCheckCircle, {\n                      color: \"white\",\n                      fontSize: \"1.5em\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 625,\n                      columnNumber: 25\n                    }, this),\n                    children: \"Verify\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 612,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    width: \"500px\",\n                    colorScheme: \"blue\",\n                    isDisabled: payrundata.status !== \"Approved\" ? true : false,\n                    onClick: onOpen,\n                    leftIcon: /*#__PURE__*/_jsxDEV(FiMail, {\n                      color: \"white\",\n                      fontSize: \"1.5em\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 637,\n                      columnNumber: 33\n                    }, this),\n                    children: \"Email\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 630,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 586,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 585,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 584,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 575,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {\n            style: {\n              border: \"1px solid lightgrey\"\n            },\n            orientation: \"horizontal\",\n            colorScheme: \"red\",\n            variant: \"solid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 645,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 574,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n          rowSpan: 1,\n          colSpan: 1,\n          children: /*#__PURE__*/_jsxDEV(Tabs, {\n            defaultIndex: 0,\n            onChange: index => handleTabChange(index),\n            children: [/*#__PURE__*/_jsxDEV(TabList, {\n              marginLeft: 4,\n              children: [/*#__PURE__*/_jsxDEV(Tab, {\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  children: /*#__PURE__*/_jsxDEV(Heading, {\n                    size: \"sm\",\n                    children: \"Details\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 657,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 656,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 655,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tab, {\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  children: /*#__PURE__*/_jsxDEV(Heading, {\n                    size: \"sm\",\n                    children: \"Summary\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 662,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 661,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 660,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 654,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TabPanels, {\n              children: [/*#__PURE__*/_jsxDEV(TabPanel, {\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  templateRows: \"repeat(1,1fr)\",\n                  templateColumns: \"repeat(10,1fr)\",\n                  children: [/*#__PURE__*/_jsxDEV(GridItem, {\n                    colSpan: 2,\n                    children: [/*#__PURE__*/_jsxDEV(Box, {\n                      textAlign: \"center\",\n                      p: 4,\n                      children: /*#__PURE__*/_jsxDEV(Heading, {\n                        size: \"sm\",\n                        alignItems: \"center\",\n                        children: \"Employees\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 674,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 673,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                      backgroundColor: \"white\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 678,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Box, {\n                      h: \"550\",\n                      border: \"2px solid white\",\n                      backgroundColor: \"cyan.100\",\n                      overflow: \"scroll\",\n                      children: /*#__PURE__*/_jsxDEV(Table, {\n                        variant: \"simple\",\n                        children: /*#__PURE__*/_jsxDEV(Tbody, {\n                          children: payslipsbatch.map((item, index) => {\n                            return /*#__PURE__*/_jsxDEV(\"div\", {\n                              children: [/*#__PURE__*/_jsxDEV(Button\n                              //className={classes.empbtn}\n                              , {\n                                fontSize: {\n                                  base: \"10px\",\n                                  md: \"10px\",\n                                  lg: \"12px\",\n                                  xl: \"16px\"\n                                },\n                                variant: \"outlined\",\n                                height: [`${item.name.length > 30 ? \"60px\" : \"40px\"}`, \"40px\"],\n                                style: {\n                                  whiteSpace: \"normal\",\n                                  wordWrap: \"break-word\"\n                                }\n                                // ${index === value && \"activebtn\"}\n                                ,\n                                onClick: e => {\n                                  setRowIndex(index);\n                                  setIsStart(false);\n                                  handleEmpButtonClick(index);\n                                },\n                                children: /*#__PURE__*/_jsxDEV(Text, {\n                                  align: \"left\",\n                                  children: item.name\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 743,\n                                  columnNumber: 37\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 717,\n                                columnNumber: 35\n                              }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                                backgroundColor: \"white\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 745,\n                                columnNumber: 35\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 716,\n                              columnNumber: 33\n                            }, this);\n                          })\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 713,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 707,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 679,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 672,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n                    colSpan: 8,\n                    children: /*#__PURE__*/_jsxDEV(PayForm, {\n                      formdata: formdata,\n                      setFormdata: setFormdata,\n                      loadFormdata: loadFormdata,\n                      setLoadFormdata: setLoadFormdata,\n                      payitems: payitems,\n                      setLoadUpdatedata: setLoadUpdatedata,\n                      singlebatchpayslip: singlebatchpayslip,\n                      rowindex: rowindex,\n                      isCalc: isCalc,\n                      isStart: isStart,\n                      setIsStart: setIsStart,\n                      setIsCalc: setIsCalc\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 754,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 753,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 668,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 667,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n                children: /*#__PURE__*/_jsxDEV(PaySummary, {\n                  payrundata: payrundata,\n                  singlebatchpayslip: singlebatchpayslip\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 772,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 771,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 666,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 653,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 652,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 573,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 572,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isOpen,\n      onClose: onClose,\n      children: [/*#__PURE__*/_jsxDEV(ModalOverlay, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 783,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalContent, {\n        children: [/*#__PURE__*/_jsxDEV(ModalCloseButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 786,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          children: /*#__PURE__*/_jsxDEV(SentEmailModal, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 788,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 787,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            colorScheme: \"blue\",\n            mr: 3,\n            onClick: onClose,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 792,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 791,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 784,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 782,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 565,\n    columnNumber: 5\n  }, this);\n};\n\n// const useStyles = makeStyles((theme) => ({\n//   root: {\n//     flexGrow: 1,\n//   },\n//   button: {\n//     margin: theme.spacing(1),\n//   },\n//   container: {\n//     margin: 0,\n//     padding: 0,\n//     width: \"80vw\",\n//     display: \"grid\",\n//     gridTemplateColumns: \"repeat(auto-fill,250px)\",\n//     gridAutoRows: \"10px\",\n//     position: \"absolute\",\n//     left: \"50%\",\n//     transform: \"translateX(-50%)\",\n//     justifyContent: \"center\",\n//     backgroundColor: \"primary\",\n//   },\n//   fixedHeight: {\n//     height: 800,\n//   },\n//   paper: {\n//     paddingTop: theme.spacing(10),\n//     // display: \"flex\",\n//     display: \"flex\",\n//     overflow: \"auto\",\n//     flexDirection: \"column\",\n//     border: \"1px solid\",\n//     width: \"100%\",\n//     color: \"primary\",\n//     bcakgroundColor: \"white\",\n//   },\n//   card: {\n//     backgroundColor: \"white\",\n//   },\n//   section: {\n//     width: \"80vw\",\n//     margin: \"1rem auto\",\n//     maxWidth: \"var(--max-width)\",\n//   },\n//   underline: {\n//     width: \"5rem\",\n//     height: \"0.25rem\",\n//     marginBottom: \"1.25rem\",\n//     background: \"var(--clr-primary-5)\",\n//     marginLeft: \"auto\",\n//     marginRight: \"auto\",\n//   },\n//   title: {\n//     marginbottom: \"4rem\",\n//     textAlign: \"center\",\n//   },\n//   empscenter: {\n//     width: \"80vw\",\n//     margin: \"0 auto\",\n//     maxWidth: \"var(--max-width)\",\n//     flexDirection: \"row\",\n//   },\n//   empcontainer: {\n//     display: \"flex\",\n//     flexDirection: \"row\",\n//     justifyContent: \"center\",\n//     marginBottom: \"4rem\",\n//     flexWrap: \"wrap\",\n//   },\n//   empbtn: {\n//     background: \"transparent\",\n//     borderColor: \"transparent\",\n//     textTransform: \"capitalize\",\n//     fontSize: \"1rem\",\n//     letterSpacing: \"var(--spacing)\",\n//     margin: \"0 0.5rem\",\n//     transition: \"var(--transition)\",\n//     cursor: \"pointer\",\n//     padding: \"0.25rem 0\",\n//     lineHeight: \"1\",\n//     outlineColor: \"var(--clr-primary-10)\",\n//     \"&:hover\": {\n//       color: \"var(--clr-primary-5)\",\n//       boxShadow: \"0 2px var(--clr-primary-5)\",\n//     },\n//   },\n//   activebtn: {\n//     color: \"var(--clr-primary-5)\",\n//     boxShadow: \"0 2px var(--clr-primary-5)\",\n//   },\n//   empinfo: {\n//     fontWeight: \"400\",\n//   },\n//   divider: {\n//     // Theme Color, or use css color in quote\n//     background: \"white\",\n//   },\n//   textField: {\n//     marginLeft: theme.spacing(1),\n//     marginRight: theme.spacing(1),\n//     width: 350,\n//   },\n// }));\n_s(Payrunbatch, \"fWDeYslQUXfeoPSWzmNfwsOPTNU=\", false, function () {\n  return [useNavigate, useCustomToast, usePayslipsContext, usePayslipsBatch, useEmployees, usePayrun, useUpdatePayslips, useUpdatePayrun, useTablesContext, useRecoilState, useRecoilState, useRecoilState, useDisclosure];\n});\n_c = Payrunbatch;\nexport default Payrunbatch;\nvar _c;\n$RefreshReg$(_c, \"Payrunbatch\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","useNavigate","emailjs","MaterialTable","MTableToolbar","FiSave","FiCheckCircle","FiMail","useCustomToast","Box","Button","Divider","Grid","GridItem","Flex","Heading","Stack","VStack","Tabs","TabList","TabPanels","Tab","TabPanel","Table","Tbody","Text","Modal","ModalOverlay","ModalContent","ModalFooter","ModalBody","ModalCloseButton","useDisclosure","PayForm","PaySummary","PrintPaySummary","useEmployees","usePayrun","useUpdatePayrun","usePayslipsBatch","useUpdatePayslips","usePayslipsContext","useTablesContext","useRecoilState","payrunState","payrunIdState","payrunStatusState","SERVICE_ID","process","env","REACT_APP_EMAILJS_SERVICEID","TEMPLATE_ID","USER_ID","REACT_APP_EMAILJS_USERID","initial_formdata","name","period","pay_date","payrun","bank_name","bank_acno","salary_currency","currency_rate","tap_acno","scp_acno","tap_checkbox","empid","status","allows_type1","allows_type1amt","allows_type2","allows_type2amt","allows_type3","allows_type3amt","allows_type4","allows_type4amt","allows_type5","allows_type5amt","allows_type6","allows_type6amt","allows_type7","allows_type7amt","allows_type8","allows_type8amt","deducts_type1","deducts_type1amt","deducts_type2","deducts_type2amt","deducts_type3","deducts_type3amt","deducts_type4","deducts_type4amt","deducts_type5","deducts_type5amt","deducts_type6","deducts_type6amt","deducts_type7","deducts_type7amt","deducts_type8","deducts_type8amt","wages","tap_amount","scp_amount","total_allowances","total_deductions","site_allows","expenses_claims","nett_pay","wages_bnd","site_allows_bnd","expenses_claims_bnd","total_allowances_bnd","total_deductions_bnd","tap_amount_bnd","scp_amount_bnd","nett_pay_bnd","months","Payrunbatch","navigate","toast","payslip_period","payslipsbatch","psbpayrunId","setPSBPayrunId","employees","updatePayslip","updatePayrun","loadPayitems","payitems","payrundata","setPayrundata","payrunId","payrunstatus","setPayrunStatus","loadFormdata","setLoadFormdata","loadUpdatedata","setLoadUpdatedata","formdata","setFormdata","rowindex","setRowIndex","emponclick","setEmponclick","isCalc","setIsCalc","isStart","setIsStart","isShow","setIsShow","isUpdPayslip","setIsUpdPayslip","tabno","setTabno","isOpen","onOpen","onClose","singlebatchpayslip","columns","title","field","editable","cellStyle","width","maxWidth","calcPayrunTotals","saveIndividualPayslips","sleep","time","Promise","resolve","setTimeout","handlePrintSummary","e","preventDefault","exportPdfTable","id","totalpayroll","totalwages","totaltap","totalscp","totalallows","totaldeducts","totalsitesallows","totalsiteallows","totalexpensesclaims","handleSavePayslips","handleSavePayrun","forEach","rec","tableData","checked","rec_id","fields","console","log","data","tmpbatch","filter","r","map","reduce","acc","item","value","isNaN","Math","round","Number","EPSILON","index","prev","tmppayrun","handleVerifyPayslips","handleEmpButtonClick","paydata","handleTabChange","SentEmailModal","filtering","search","toolbar","selection","pageSize","headerStyle","backgroundColor","color","showTitle","Toolbar","props","padding","handleSentEmail","mth","substring","yr","pay","emp","emaildata","to_name","to_email","email","message","send","then","response","text","err","border","base","md","lg","xl","length","whiteSpace","wordWrap"],"sources":["D:/react-myprojects/hrms-demo/src/components/Payrunbatch.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\";\r\n//import { makeStyles } from \"@material-ui/core/styles\";\r\n//import clsx from \"clsx\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport * as emailjs from \"emailjs-com\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { FiSave, FiCheckCircle, FiMail } from \"react-icons/fi\";\r\nimport { useCustomToast } from \"../helpers/useCustomToast\";\r\n//import { Button} from \"@material-ui/core\"\r\nimport {\r\n  Box,\r\n  Button,\r\n  Divider,\r\n  Grid,\r\n  GridItem,\r\n  Flex,\r\n  Heading,\r\n  Stack,\r\n  VStack,\r\n  //Spacer,\r\n  Tabs,\r\n  TabList,\r\n  TabPanels,\r\n  Tab,\r\n  TabPanel,\r\n  Table,\r\n  //Thead,\r\n  Tbody,\r\n  //Tfoot,\r\n  //Tr,\r\n  //Th,\r\n  //Td,\r\n  //TableCaption,\r\n  Text,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  //ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  //Wrap,\r\n  //WrapItem,\r\n  useDisclosure,\r\n} from \"@chakra-ui/react\";\r\nimport PayForm from \"./PayForm\";\r\nimport PaySummary from \"./PaySummary\";\r\nimport PrintPaySummary from \"./PrintPaySummary\";\r\nimport { useEmployees } from \"./employees/useEmployees\";\r\nimport { usePayrun } from \"./payrun/usePayrun\";\r\nimport { useUpdatePayrun } from \"./payrun/useUpdatePayrun\";\r\nimport { usePayslipsBatch } from \"./payslips/usePayslipsBatch\";\r\nimport { useUpdatePayslips } from \"./payslips/useUpdatePayslips\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\nimport { useTablesContext } from \"../context/tables_context\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport {\r\n  payrunState,\r\n  //paydataState,\r\n  payrunIdState,\r\n  payrunStatusState,\r\n} from \"./data/atomdata\";\r\n//import { useRecoilValue } from \"recoil\";\r\n\r\n//const drawerWidth = 240;\r\n//const PayForm = React.lazy(() => import(\"./PayForm\"));\r\n//const PaySummary = React.lazy(() => import(\"./PaySummary\"));\r\n//const module = await import(\"./PrintPaySummary\"));\r\n\r\nconst SERVICE_ID = process.env.REACT_APP_EMAILJS_SERVICEID;\r\nconst TEMPLATE_ID = \"template_1y8odlq\";\r\nconst USER_ID = process.env.REACT_APP_EMAILJS_USERID;\r\n\r\nconst initial_formdata = {\r\n  name: \"\",\r\n  period: \"\",\r\n  pay_date: null,\r\n  payrun: \"\",\r\n  bank_name: \"\",\r\n  bank_acno: \"\",\r\n  salary_currency: \"BND\",\r\n  currency_rate: 1,\r\n  tap_acno: \"\",\r\n  scp_acno: \"\",\r\n  tap_checkbox: false,\r\n  empid: \"\",\r\n  status: \"\",\r\n  allows_type1: \"\",\r\n  allows_type1amt: \"\",\r\n  allows_type2: \"\",\r\n  allows_type2amt: \"\",\r\n  allows_type3: \" \",\r\n  allows_type3amt: 0,\r\n  allows_type4: \"\",\r\n  allows_type4amt: 0,\r\n  allows_type5: \" \",\r\n  allows_type5amt: 0,\r\n  allows_type6: \" \",\r\n  allows_type6amt: 0,\r\n  allows_type7: \" \",\r\n  allows_type7amt: 0,\r\n  allows_type8: \" \",\r\n  allows_type8amt: 0,\r\n  deducts_type1: \" \",\r\n  deducts_type1amt: 0,\r\n  deducts_type2: \" \",\r\n  deducts_type2amt: 0,\r\n  deducts_type3: \" \",\r\n  deducts_type3amt: 0,\r\n  deducts_type4: \" \",\r\n  deducts_type4amt: 0,\r\n  deducts_type5: \" \",\r\n  deducts_type5amt: 0,\r\n  deducts_type6: \" \",\r\n  deducts_type6amt: 0,\r\n  deducts_type7: \" \",\r\n  deducts_type7amt: 0,\r\n  deducts_type8: \" \",\r\n  deducts_type8amt: 0,\r\n\r\n  wages: 0,\r\n  tap_amount: 0,\r\n  scp_amount: 0,\r\n  total_allowances: 0,\r\n  total_deductions: 0,\r\n  site_allows: 0,\r\n  expenses_claims: 0,\r\n  nett_pay: 0,\r\n\r\n  wages_bnd: 0,\r\n  site_allows_bnd: 0,\r\n  expenses_claims_bnd: 0,\r\n  total_allowances_bnd: 0,\r\n  total_deductions_bnd: 0,\r\n  tap_amount_bnd: 0,\r\n  scp_amount_bnd: 0,\r\n  nett_pay_bnd: 0,\r\n};\r\n\r\nconst months = [\r\n  \"January\",\r\n  \"February\",\r\n  \"March\",\r\n  \"April\",\r\n  \"May\",\r\n  \"June\",\r\n  \"July\",\r\n  \"August\",\r\n  \"September\",\r\n  \"October\",\r\n  \"November\",\r\n  \"December\",\r\n];\r\n\r\nconst Payrunbatch = () => {\r\n  let navigate = useNavigate();\r\n  //const classes = useStyles();\r\n  const toast = useCustomToast();\r\n  //const componentRef = useRef();\r\n  //const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n  //const { register, handleSubmit, control, setValue, reset, watch } = useForm();\r\n\r\n  const {\r\n    //payrun,\r\n    //getSingleBatchPayslip,\r\n    //singlebatchpayslip,\r\n    payslip_period,\r\n    //updatePayslip,\r\n    //updatePayrun,\r\n    //singlebatch_payslip_loading,\r\n    //singlebatch_payslip_error,\r\n  } = usePayslipsContext();\r\n  const { payslipsbatch, psbpayrunId, setPSBPayrunId } = usePayslipsBatch();\r\n  const { employees } = useEmployees();\r\n  const { payrun } = usePayrun();\r\n  const updatePayslip = useUpdatePayslips();\r\n  const updatePayrun = useUpdatePayrun();\r\n  const { loadPayitems, payitems } = useTablesContext();\r\n  const [payrundata, setPayrundata] = useRecoilState(payrunState);\r\n  const [payrunId] = useRecoilState(payrunIdState);\r\n  const [payrunstatus, setPayrunStatus] = useRecoilState(payrunStatusState);\r\n  const [loadFormdata, setLoadFormdata] = useState(false);\r\n  const [loadUpdatedata, setLoadUpdatedata] = useState(false);\r\n  const [formdata, setFormdata] = useState(initial_formdata);\r\n  const [rowindex, setRowIndex] = useState(0);\r\n  const [emponclick, setEmponclick] = useState(false);\r\n  //const [showSumm, setShowSumm] = useState(false);\r\n  const [isCalc, setIsCalc] = useState(false);\r\n  const [isStart, setIsStart] = useState(true);\r\n  const [isShow, setIsShow] = useState(false);\r\n  const [isUpdPayslip, setIsUpdPayslip] = useState(false);\r\n  const [tabno, setTabno] = useState(0);\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const singlebatchpayslip = payslipsbatch;\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        title: \"Name\",\r\n        field: \"name\",\r\n        editable: \"never\",\r\n        cellStyle: {\r\n          width: 280,\r\n          maxWidth: 280,\r\n        },\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  useEffect(() => {\r\n    loadPayitems();\r\n    setEmponclick(true);\r\n    // getSingleBatchPayslip(payslip_period);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setRowIndex(0);\r\n    // handleEmpButtonClick(0);\r\n    setEmponclick(false);\r\n  }, [emponclick]);\r\n\r\n  useEffect(() => {\r\n    setLoadFormdata(false);\r\n  }, [loadUpdatedata]);\r\n\r\n  useEffect(() => {\r\n    setPSBPayrunId(payslip_period);\r\n    setIsCalc(true);\r\n  }, [psbpayrunId]);\r\n\r\n  useEffect(() => {\r\n    calcPayrunTotals();\r\n    setIsCalc(false);\r\n  }, [isCalc]);\r\n\r\n  useEffect(() => {\r\n    saveIndividualPayslips();\r\n    setIsUpdPayslip(false);\r\n  }, [isUpdPayslip]);\r\n\r\n  useEffect(() => {\r\n    if (tabno === 1) {\r\n      setIsShow(true);\r\n    } else {\r\n      setIsShow(false);\r\n    }\r\n  }, [tabno]);\r\n\r\n  // useEffect(() => {\r\n  //   handleEmpButtonClick(0);\r\n  //   setIsLoad(false);\r\n  // }, [isLoad]);\r\n\r\n  // const handleShowSumm = (e) => {\r\n  //   e.preventDefault();\r\n  //   setShowSumm(!showSumm);\r\n  // };\r\n\r\n  const sleep = (time) => {\r\n    return new Promise((resolve) => setTimeout(resolve, time));\r\n  };\r\n\r\n  const handlePrintSummary = (e) => {\r\n    e.preventDefault();\r\n    if (payrundata.status === \"Verified\" || payrundata.status === \"Approved\") {\r\n      exportPdfTable(singlebatchpayslip);\r\n    } else {\r\n      //**\r\n      // save individual payslips\r\n      //saveIndividualPayslips();\r\n\r\n      // save payrun\r\n      updatePayrun({\r\n        id: payrunId,\r\n        totalpayroll: payrundata.totalpayroll,\r\n        totalwages: payrundata.totalwages,\r\n        totaltap: payrundata.totaltap,\r\n        totalscp: payrundata.totalscp,\r\n        totalallows: payrundata.totalallows,\r\n        totaldeducts: payrundata.totaldeducts,\r\n        totalsitesallows: payrundata.totalsiteallows,\r\n        totalexpensesclaims: payrundata.totalexpensesclaims,\r\n      });\r\n      exportPdfTable(singlebatchpayslip);\r\n    }\r\n  };\r\n\r\n  const exportPdfTable = (singlebatchpayslip) => {\r\n    PrintPaySummary((singlebatchpayslip = { singlebatchpayslip }));\r\n  };\r\n\r\n  const handleSavePayslips = (e) => {\r\n    e.preventDefault();\r\n\r\n    //calcPayrunTotals();\r\n    // eslint-disable-next-line no-lone-blocks\r\n    // {\r\n    //   singlebatchpayslip.forEach((rec) => {\r\n    //     const { id, rec_id, tableData, ...fields } = rec;\r\n    //     updatePayslip({ id, ...fields });\r\n    //   });\r\n    // }\r\n\r\n    //**\r\n    // save individual payslips\r\n    saveIndividualPayslips();\r\n\r\n    //update payrun\r\n    handleSavePayrun();\r\n    // toast({\r\n    //   title: \"Changes have been saved!\",\r\n    //   status: \"success\",\r\n    // });\r\n    navigate(\"/payslip\");\r\n  };\r\n\r\n  const saveIndividualPayslips = () => {\r\n    if (payrundata.status === \"Pending\") {\r\n      singlebatchpayslip.forEach((rec) => {\r\n        //const { id, rec_id, tableData, ...fields } = rec;\r\n        // const timer = setTimeout(() => {\r\n        //   console.log(\"This will run after 1 second!\");\r\n        //   updatePayslip({ id, ...fields });\r\n        // }, 300);\r\n        if (rec.tableData.checked) {\r\n          const { id, rec_id, tableData, ...fields } = rec;\r\n          console.log(\"updatepayslip\", rec);\r\n          updatePayslip({ id, ...fields });\r\n          //uncheck\r\n          const data = rec;\r\n          data.tableData.checked = false;\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const calcPayrunTotals = () => {\r\n    // if (!psbpayrunId) {\r\n    //   return null;\r\n    // }\r\n    const tmpbatch = singlebatchpayslip\r\n      .filter((r) => r.payrun === payslip_period)\r\n      .map((rec) => {\r\n        return { ...rec };\r\n      });\r\n    //console.log(\"recalc\", tmpbatch);\r\n\r\n    const totalpayroll = tmpbatch.reduce((acc, item) => {\r\n      const value = isNaN(item.nett_pay_bnd) ? 0 : item.nett_pay_bnd;\r\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\r\n    }, 0);\r\n    const totalwages = tmpbatch.reduce((acc, item, index) => {\r\n      const value = isNaN(item.wages_bnd) ? 0 : item.wages_bnd;\r\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\r\n    }, 0);\r\n    const totaltap = tmpbatch.reduce((acc, item) => {\r\n      const value = isNaN(item.tap_amount_bnd) ? 0 : item.tap_amount_bnd;\r\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\r\n    }, 0);\r\n\r\n    const totalscp = tmpbatch.reduce((acc, item) => {\r\n      const value = isNaN(item.scp_amount_bnd) ? 0 : item.scp_amount_bnd;\r\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\r\n    }, 0);\r\n\r\n    const totalallows = tmpbatch.reduce((acc, item) => {\r\n      const value = isNaN(item.total_allowances_bnd)\r\n        ? 0\r\n        : item.total_allowances_bnd;\r\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\r\n    }, 0);\r\n\r\n    const totaldeducts = tmpbatch.reduce((acc, item) => {\r\n      const value = isNaN(item.total_deductions_bnd)\r\n        ? 0\r\n        : item.total_deductions_bnd;\r\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\r\n    }, 0);\r\n\r\n    const totalsiteallows = tmpbatch.reduce((acc, item) => {\r\n      const value = isNaN(item.site_allows_bnd) ? 0 : item.site_allows_bnd;\r\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\r\n    }, 0);\r\n\r\n    const totalexpensesclaims = tmpbatch.reduce((acc, item) => {\r\n      const value = isNaN(item.expenses_claims_bnd)\r\n        ? 0\r\n        : item.expenses_claims_bnd;\r\n      return acc + Math.round((value + Number.EPSILON) * 100) / 100;\r\n    }, 0);\r\n\r\n    setPayrundata(\r\n      (prev) =>\r\n        (prev = {\r\n          ...payrundata,\r\n          totalpayroll: totalpayroll,\r\n          totalwages: totalwages,\r\n          totaltap: totaltap,\r\n          totalscp: totalscp,\r\n          totalallows: totalallows,\r\n          totaldeducts: totaldeducts,\r\n          totalsiteallows: totalsiteallows,\r\n          totalexpensesclaims: totalexpensesclaims,\r\n        })\r\n    );\r\n  };\r\n\r\n  const handleSavePayrun = () => {\r\n    if (payrundata.status === \"Verified\" || payrundata.status === \"Approved\") {\r\n      toast({\r\n        title: `This payroll batch has been ${payrundata.status}! No changes can be made!`,\r\n        status: \"warning\",\r\n      });\r\n      return <div></div>;\r\n    }\r\n\r\n    const tmppayrun = payrun.filter((r) => r.payrun === payslip_period);\r\n    //console.log(\"paysave\", tmppayrun[0].id);\r\n    // eslint-disable-next-line no-lone-blocks\r\n    //console.log(\"paybatch\", payslip_period, payrundata);\r\n    updatePayrun({\r\n      id: tmppayrun[0].id,\r\n      totalpayroll: payrundata.totalpayroll,\r\n      totalwages: payrundata.totalwages,\r\n      totaltap: payrundata.totaltap,\r\n      totalscp: payrundata.totalscp,\r\n      totalallows: payrundata.totalallows,\r\n      totaldeducts: payrundata.totaldeducts,\r\n      totalsitesallows: payrundata.totalsiteallows,\r\n      totalexpensesclaims: payrundata.totalexpensesclaims,\r\n    });\r\n    navigate(\"/payslip\");\r\n  };\r\n\r\n  const handleVerifyPayslips = (e) => {\r\n    e.preventDefault();\r\n    setPayrundata((prev) => (prev = { ...payrundata, status: \"Verified\" }));\r\n    setPayrunStatus(\"Verified\");\r\n    console.log(\"Verify\", payrundata);\r\n    //**\r\n    // save individual payslips\r\n    //saveIndividualPayslips();\r\n\r\n    // save payrun\r\n    updatePayrun({\r\n      id: payrunId,\r\n      status: \"Verified\",\r\n      totalpayroll: payrundata.totalpayroll,\r\n      totalwages: payrundata.totalwages,\r\n      totaltap: payrundata.totaltap,\r\n      totalscp: payrundata.totalscp,\r\n      totalallows: payrundata.totalallows,\r\n      totaldeducts: payrundata.totaldeducts,\r\n      totalsitesallows: payrundata.totalsiteallows,\r\n      totalexpensesclaims: payrundata.totalexpensesclaims,\r\n    });\r\n    toast({\r\n      title: \"Batch has been verified!\",\r\n      status: \"success\",\r\n    });\r\n  };\r\n\r\n  const handleEmpButtonClick = (index) => {\r\n    const paydata = singlebatchpayslip[index];\r\n    //setFormdata(prev => prev = initial_formdata);\r\n    setFormdata((prev) => (prev = { ...initial_formdata, ...paydata }));\r\n    //setFormdata({ ...initial_formdata, ...paydata });\r\n    setLoadFormdata(true);\r\n    //**\r\n    setIsUpdPayslip(true);\r\n  };\r\n\r\n  const handleTabChange = (index) => {\r\n    setTabno(index);\r\n    if (index === 1) {\r\n      calcPayrunTotals();\r\n      setIsUpdPayslip(true);\r\n    }\r\n    setIsShow(false);\r\n  };\r\n\r\n  const SentEmailModal = () => {\r\n    return (\r\n      <Box>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={payslipsbatch}\r\n          title=\"Employees\"\r\n          options={{\r\n            filtering: false,\r\n            search: false,\r\n            toolbar: true,\r\n            selection: true,\r\n            pageSize: 10,\r\n            headerStyle: {\r\n              backgroundColor: \"#daad86\",\r\n              color: \"primary\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n                <div style={{ padding: \"5px 10px\" }}>\r\n                  <Button\r\n                    colorScheme=\"blue\"\r\n                    isDisabled={payrundata.status !== \"Approve\" ? true : false}\r\n                    onClick={() => handleSentEmail()}\r\n                    leftIcon={<FiMail color=\"white\" fontSize=\"1.5em\" />}\r\n                  >\r\n                    Email\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  const handleSentEmail = (data) => {\r\n    const mth = months[payslip_period.substring(6, 7)];\r\n    const yr = payslip_period.substring(0, 4);\r\n\r\n    payslipsbatch.forEach((pay) => {\r\n      if (pay.tableData.checked) {\r\n        const { name, empid } = pay;\r\n        const emp = employees\r\n          .filter((r) => r.id === empid)\r\n          .map((rec) => {\r\n            return { ...rec };\r\n          });\r\n\r\n        var emaildata = {\r\n          to_name: name,\r\n          to_email: emp[0].email,\r\n          message: `Your payroll for the month of ${mth} ${yr} has been transfered. Please login in to view your payslip!`,\r\n        };\r\n\r\n        emailjs.send(SERVICE_ID, TEMPLATE_ID, emaildata, USER_ID).then(\r\n          function (response) {\r\n            console.log(response.status, response.text);\r\n            toast({\r\n              title: `Email has sent successfully to ${emaildata.to_email}!`,\r\n              status: \"success\",\r\n            });\r\n          },\r\n          function (err) {\r\n            console.log(err);\r\n            toast({\r\n              title: `Email has fail to send to ${emaildata.to_email}!`,\r\n              status: \"warning\",\r\n            });\r\n          }\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Flex\r\n      marginLeft={4}\r\n      marginTop={70}\r\n      w=\"98%\"\r\n      h=\"100%\"\r\n      style={{ backgroundColor: \"lightcyan\" }}\r\n    >\r\n      <VStack>\r\n        <Grid templateRows=\"repeat(1,1fr)\" templateColumns=\"repeat(1,1fr)\">\r\n          <GridItem rowSpan={1} colSpan={1}>\r\n            <Grid templateRows=\"repeat(1,1fr)\" templateColumns=\"repeat(10,1fr)\">\r\n              <GridItem rowSpan={1} colSpan={2}></GridItem>\r\n              <GridItem rowSpan={1} colSpan={4}>\r\n                <Box textAlign=\"center\" alignItems=\"center\">\r\n                  <Heading pl=\"10\" pt={2}>\r\n                    Payroll\r\n                  </Heading>\r\n                </Box>\r\n              </GridItem>\r\n              <GridItem rowSpan={1} colSpan={4} pt={0}>\r\n                <Box pt=\"2\" pr={5} alignItems=\"right\" align=\"right\">\r\n                  <Stack spacing={4} direction=\"row\" align=\"center\" pl={150}>\r\n                    <Button\r\n                      width=\"800px\"\r\n                      colorScheme=\"blue\"\r\n                      isDisabled={\r\n                        payrundata.status === \"Verified\" ||\r\n                        payrundata.status === \"Approved\" ||\r\n                        !isShow\r\n                          ? true\r\n                          : false\r\n                      }\r\n                      onClick={(e) => handleSavePayslips(e)}\r\n                      leftIcon={<FiSave color=\"white\" fontSize=\"1.5em\" />}\r\n                    >\r\n                      Save/Exit\r\n                    </Button>\r\n                    <Button\r\n                      isDisabled={!isShow}\r\n                      width=\"500px\"\r\n                      colorScheme=\"blue\"\r\n                      onClick={(e) => handlePrintSummary(e)}\r\n                      leftIcon={<FiSave color=\"white\" fontSize=\"1.5em\" />}\r\n                    >\r\n                      Print\r\n                    </Button>\r\n\r\n                    <Button\r\n                      width=\"500px\"\r\n                      colorScheme=\"blue\"\r\n                      isDisabled={\r\n                        payrundata.status === \"Verified\" ||\r\n                        payrundata.status === \"Approved\" ||\r\n                        payrundata.status === \"New\" ||\r\n                        !isShow\r\n                          ? true\r\n                          : false\r\n                      }\r\n                      onClick={(e) => handleVerifyPayslips(e)}\r\n                      leftIcon={\r\n                        <FiCheckCircle color=\"white\" fontSize=\"1.5em\" />\r\n                      }\r\n                    >\r\n                      Verify\r\n                    </Button>\r\n                    <Button\r\n                      width=\"500px\"\r\n                      colorScheme=\"blue\"\r\n                      isDisabled={\r\n                        payrundata.status !== \"Approved\" ? true : false\r\n                      }\r\n                      onClick={onOpen}\r\n                      leftIcon={<FiMail color=\"white\" fontSize=\"1.5em\" />}\r\n                    >\r\n                      Email\r\n                    </Button>\r\n                  </Stack>\r\n                </Box>\r\n              </GridItem>\r\n            </Grid>\r\n            <Divider\r\n              style={{ border: \"1px solid lightgrey\" }}\r\n              orientation=\"horizontal\"\r\n              colorScheme=\"red\"\r\n              variant=\"solid\"\r\n            />\r\n          </GridItem>\r\n          <GridItem rowSpan={1} colSpan={1}>\r\n            <Tabs defaultIndex={0} onChange={(index) => handleTabChange(index)}>\r\n              <TabList marginLeft={4}>\r\n                <Tab>\r\n                  <Box>\r\n                    <Heading size=\"sm\">Details</Heading>\r\n                  </Box>\r\n                </Tab>\r\n                <Tab>\r\n                  <Box>\r\n                    <Heading size=\"sm\">Summary</Heading>\r\n                  </Box>\r\n                </Tab>\r\n              </TabList>\r\n              <TabPanels>\r\n                <TabPanel>\r\n                  <Grid\r\n                    templateRows=\"repeat(1,1fr)\"\r\n                    templateColumns=\"repeat(10,1fr)\"\r\n                  >\r\n                    <GridItem colSpan={2}>\r\n                      <Box textAlign=\"center\" p={4}>\r\n                        <Heading size=\"sm\" alignItems=\"center\">\r\n                          Employees\r\n                        </Heading>\r\n                      </Box>\r\n                      <Divider backgroundColor=\"white\" />\r\n                      <Box\r\n                        h=\"550\"\r\n                        border=\"2px solid white\"\r\n                        backgroundColor=\"cyan.100\"\r\n                        overflow=\"scroll\"\r\n                      >\r\n                        {/* {payslipsbatch &&\r\n                      payslipsbatch.map((item, index) => {\r\n                        return (\r\n                          <div>\r\n                            <Button\r\n                              className={classes.empbtn}\r\n                              variant=\"outlined\"\r\n                              // ${index === value && \"activebtn\"}\r\n                              onClick={(e) => {\r\n                                setRowIndex(index);\r\n                                handleEmpButtonClick(index);\r\n                              }}\r\n                            >\r\n                              <div key={item.id}> {item.name}</div>\r\n                            </Button>\r\n                            <Divider\r\n                              variant=\"fullWidth\"\r\n                              className={classes.divider}\r\n                            />\r\n                          </div>\r\n                        );\r\n                      })} */}\r\n                        <Table variant=\"simple\">\r\n                          {/* <Thead>\r\n                        <Tr>\r\n                          <Th>Employees</Th>\r\n                        </Tr>\r\n                      </Thead> */}\r\n                          <Tbody>\r\n                            {payslipsbatch.map((item, index) => {\r\n                              return (\r\n                                <div>\r\n                                  <Button\r\n                                    //className={classes.empbtn}\r\n                                    fontSize={{\r\n                                      base: \"10px\",\r\n                                      md: \"10px\",\r\n                                      lg: \"12px\",\r\n                                      xl: \"16px\",\r\n                                    }}\r\n                                    variant=\"outlined\"\r\n                                    height={[\r\n                                      `${\r\n                                        item.name.length > 30 ? \"60px\" : \"40px\"\r\n                                      }`,\r\n                                      \"40px\",\r\n                                    ]}\r\n                                    style={{\r\n                                      whiteSpace: \"normal\",\r\n                                      wordWrap: \"break-word\",\r\n                                    }}\r\n                                    // ${index === value && \"activebtn\"}\r\n                                    onClick={(e) => {\r\n                                      setRowIndex(index);\r\n                                      setIsStart(false);\r\n                                      handleEmpButtonClick(index);\r\n                                    }}\r\n                                  >\r\n                                    <Text align=\"left\">{item.name}</Text>\r\n                                  </Button>\r\n                                  <Divider backgroundColor=\"white\" />\r\n                                </div>\r\n                              );\r\n                            })}\r\n                          </Tbody>\r\n                        </Table>\r\n                      </Box>\r\n                    </GridItem>\r\n                    <GridItem colSpan={8}>\r\n                      <PayForm\r\n                        formdata={formdata}\r\n                        setFormdata={setFormdata}\r\n                        loadFormdata={loadFormdata}\r\n                        setLoadFormdata={setLoadFormdata}\r\n                        payitems={payitems}\r\n                        setLoadUpdatedata={setLoadUpdatedata}\r\n                        singlebatchpayslip={singlebatchpayslip}\r\n                        rowindex={rowindex}\r\n                        isCalc={isCalc}\r\n                        isStart={isStart}\r\n                        setIsStart={setIsStart}\r\n                        setIsCalc={setIsCalc}\r\n                      />\r\n                    </GridItem>\r\n                  </Grid>\r\n                </TabPanel>\r\n                <TabPanel>\r\n                  <PaySummary\r\n                    payrundata={payrundata}\r\n                    singlebatchpayslip={singlebatchpayslip}\r\n                  />\r\n                </TabPanel>\r\n              </TabPanels>\r\n            </Tabs>\r\n          </GridItem>\r\n        </Grid>\r\n      </VStack>\r\n      <Modal isOpen={isOpen} onClose={onClose}>\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          {/* <ModalHeader>Sending EMail Notifications</ModalHeader> */}\r\n          <ModalCloseButton />\r\n          <ModalBody>\r\n            <SentEmailModal />\r\n          </ModalBody>\r\n\r\n          <ModalFooter>\r\n            <Button colorScheme=\"blue\" mr={3} onClick={onClose}>\r\n              Close\r\n            </Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </Flex>\r\n  );\r\n};\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//   root: {\r\n//     flexGrow: 1,\r\n//   },\r\n//   button: {\r\n//     margin: theme.spacing(1),\r\n//   },\r\n//   container: {\r\n//     margin: 0,\r\n//     padding: 0,\r\n//     width: \"80vw\",\r\n//     display: \"grid\",\r\n//     gridTemplateColumns: \"repeat(auto-fill,250px)\",\r\n//     gridAutoRows: \"10px\",\r\n//     position: \"absolute\",\r\n//     left: \"50%\",\r\n//     transform: \"translateX(-50%)\",\r\n//     justifyContent: \"center\",\r\n//     backgroundColor: \"primary\",\r\n//   },\r\n//   fixedHeight: {\r\n//     height: 800,\r\n//   },\r\n//   paper: {\r\n//     paddingTop: theme.spacing(10),\r\n//     // display: \"flex\",\r\n//     display: \"flex\",\r\n//     overflow: \"auto\",\r\n//     flexDirection: \"column\",\r\n//     border: \"1px solid\",\r\n//     width: \"100%\",\r\n//     color: \"primary\",\r\n//     bcakgroundColor: \"white\",\r\n//   },\r\n//   card: {\r\n//     backgroundColor: \"white\",\r\n//   },\r\n//   section: {\r\n//     width: \"80vw\",\r\n//     margin: \"1rem auto\",\r\n//     maxWidth: \"var(--max-width)\",\r\n//   },\r\n//   underline: {\r\n//     width: \"5rem\",\r\n//     height: \"0.25rem\",\r\n//     marginBottom: \"1.25rem\",\r\n//     background: \"var(--clr-primary-5)\",\r\n//     marginLeft: \"auto\",\r\n//     marginRight: \"auto\",\r\n//   },\r\n//   title: {\r\n//     marginbottom: \"4rem\",\r\n//     textAlign: \"center\",\r\n//   },\r\n//   empscenter: {\r\n//     width: \"80vw\",\r\n//     margin: \"0 auto\",\r\n//     maxWidth: \"var(--max-width)\",\r\n//     flexDirection: \"row\",\r\n//   },\r\n//   empcontainer: {\r\n//     display: \"flex\",\r\n//     flexDirection: \"row\",\r\n//     justifyContent: \"center\",\r\n//     marginBottom: \"4rem\",\r\n//     flexWrap: \"wrap\",\r\n//   },\r\n//   empbtn: {\r\n//     background: \"transparent\",\r\n//     borderColor: \"transparent\",\r\n//     textTransform: \"capitalize\",\r\n//     fontSize: \"1rem\",\r\n//     letterSpacing: \"var(--spacing)\",\r\n//     margin: \"0 0.5rem\",\r\n//     transition: \"var(--transition)\",\r\n//     cursor: \"pointer\",\r\n//     padding: \"0.25rem 0\",\r\n//     lineHeight: \"1\",\r\n//     outlineColor: \"var(--clr-primary-10)\",\r\n//     \"&:hover\": {\r\n//       color: \"var(--clr-primary-5)\",\r\n//       boxShadow: \"0 2px var(--clr-primary-5)\",\r\n//     },\r\n//   },\r\n//   activebtn: {\r\n//     color: \"var(--clr-primary-5)\",\r\n//     boxShadow: \"0 2px var(--clr-primary-5)\",\r\n//   },\r\n//   empinfo: {\r\n//     fontWeight: \"400\",\r\n//   },\r\n//   divider: {\r\n//     // Theme Color, or use css color in quote\r\n//     background: \"white\",\r\n//   },\r\n//   textField: {\r\n//     marginLeft: theme.spacing(1),\r\n//     marginRight: theme.spacing(1),\r\n//     width: 350,\r\n//   },\r\n// }));\r\n\r\nexport default Payrunbatch;\r\n"],"mappings":"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R,QAAC,cAAc;YAAA;YAAA;YAAA;UAAA;QAAG;UAAA;UAAA;UAAA;QAAA,QACR,eAEZ,QAAC,WAAW;UAAA,uBACV,QAAC,MAAM;YAAC,WAAW,EAAC,MAAM;YAAC,EAAE,EAAE,CAAE;YAAC,OAAO,EAAEA,OAAQ;YAAA,UAAC;UAEpD;YAAA;YAAA;YAAA;UAAA;QAAS;UAAA;UAAA;UAAA;QAAA,QACG;MAAA;QAAA;QAAA;QAAA;MAAA,QACD;IAAA;MAAA;MAAA;MAAA;IAAA,QACT;EAAA;IAAA;IAAA;IAAA;EAAA,QACH;AAEX,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,GA3uBMvC,WAAW;EAAA,QACApH,WAAW,EAEZO,cAAc,EAexBiC,kBAAkB,EACiCF,gBAAgB,EACjDH,YAAY,EACfC,SAAS,EACNG,iBAAiB,EAClBF,eAAe,EACDI,gBAAgB,EACfC,cAAc,EAC/BA,cAAc,EACOA,cAAc,EAYlBX,aAAa;AAAA;AAAA,KAvC7CqF,WAAW;AA6uBjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module"}
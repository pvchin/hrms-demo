{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-demo\\\\src\\\\components\\\\Payslip_ViewEarnings.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useMemo } from \"react\";\nimport MaterialTable from \"material-table\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useRecoilValue } from \"recoil\";\nimport { payPeriodState //payPeriodEndMonthState,\n, payPeriodEmpIdState } from \"./data/atomdata\";\nimport { usePayslipsContext } from \"../context/payslips_context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Payslip_ViewEarnings({\n  setCalc\n}) {\n  _s();\n\n  //let history = useHistory();\n  //const [load, setLoad] = useState(true);\n  const classes = useStyles();\n  const payPeriodEmpId = useRecoilValue(payPeriodEmpIdState);\n  const payPeriod = useRecoilValue(payPeriodState);\n  const {\n    payslipearnings,\n    //payslip_earning_amount,\n    //setPayslipEarningAmount,\n    //addPayslipEarning,\n    payslipearnings_loading,\n    //updatePayslipEarning,\n    //deletePayslipEarning,\n    //updatePayslip,\n    //editPayslipID,\n    //single_payslip,\n    //payslip_period,\n    getSingleBatchPayslipEarnings\n  } = usePayslipsContext(); //const { description, amount } = payslipearnings;\n  //const { allowances } = useTablesContext();\n  //console.log(\"recoil\", payPeriod, payPeriodEmpId);\n\n  const columns = useMemo(() => [{\n    title: \"Name\",\n    field: \"description\"\n  }, {\n    title: \"Amount\",\n    field: \"amount\",\n    type: \"currency\"\n  }], []);\n  useEffect(() => {\n    getSingleBatchPayslipEarnings(payPeriodEmpId, payPeriod);\n  }, []); // const calc_Earning = (data) => {\n  //   const sum = data.reduce((a, v) => (a = a + v.amount), 0);\n  //   console.log(\"Earning\", data);\n  //   setPayslipEarningAmount(sum);\n  // };\n  // const update_Payslip = () => {\n  //   const { rec_id, id, total_earnings, ...paydata } = single_payslip;\n  //   updatePayslip({\n  //     id: editPayslipID,\n  //     total_earnings: payslip_earning_amount,\n  //     ...paydata,\n  //   });\n  //   setCalc(true);\n  //};\n\n  if (payslipearnings_loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Loading... Incomes.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: \"100%\",\n        paddingTop: \"5px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n        columns: columns,\n        data: payslipearnings,\n        title: \"Income\",\n        options: {\n          search: false,\n          toolbar: false\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Payslip_ViewEarnings, \"a8yvzWjpw8kVKWArtjVf0taGh+s=\", false, function () {\n  return [useStyles, useRecoilValue, useRecoilValue, usePayslipsContext];\n});\n\n_c = Payslip_ViewEarnings;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: 0\n  }\n}));\n\nvar _c;\n\n$RefreshReg$(_c, \"Payslip_ViewEarnings\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-demo/src/components/Payslip_ViewEarnings.js"],"names":["React","useEffect","useMemo","MaterialTable","makeStyles","useRecoilValue","payPeriodState","payPeriodEmpIdState","usePayslipsContext","Payslip_ViewEarnings","setCalc","classes","useStyles","payPeriodEmpId","payPeriod","payslipearnings","payslipearnings_loading","getSingleBatchPayslipEarnings","columns","title","field","type","root","maxWidth","paddingTop","search","toolbar","theme","padding"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,OAA3B,QAA0C,OAA1C;AAEA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,cAAT,QAA+B,QAA/B;AACA,SACEC,cADF,CAEE;AAFF,EAGEC,mBAHF,QAIO,iBAJP;AAKA,SAASC,kBAAT,QAAmC,6BAAnC;;AAEA,eAAe,SAASC,oBAAT,CAA8B;AAAEC,EAAAA;AAAF,CAA9B,EAA2C;AAAA;;AACxD;AACA;AACA,QAAMC,OAAO,GAAGC,SAAS,EAAzB;AACA,QAAMC,cAAc,GAAGR,cAAc,CAACE,mBAAD,CAArC;AACA,QAAMO,SAAS,GAAGT,cAAc,CAACC,cAAD,CAAhC;AACA,QAAM;AACJS,IAAAA,eADI;AAEJ;AACA;AACA;AACAC,IAAAA,uBALI;AAMJ;AACA;AACA;AACA;AACA;AACA;AACAC,IAAAA;AAZI,MAaFT,kBAAkB,EAbtB,CANwD,CAqBxD;AACA;AACA;;AAEA,QAAMU,OAAO,GAAGhB,OAAO,CACrB,MAAM,CACJ;AACEiB,IAAAA,KAAK,EAAE,MADT;AAEEC,IAAAA,KAAK,EAAE;AAFT,GADI,EAKJ;AAAED,IAAAA,KAAK,EAAE,QAAT;AAAmBC,IAAAA,KAAK,EAAE,QAA1B;AAAoCC,IAAAA,IAAI,EAAE;AAA1C,GALI,CADe,EAQrB,EARqB,CAAvB;AAWApB,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,6BAA6B,CAACJ,cAAD,EAAiBC,SAAjB,CAA7B;AACD,GAFQ,EAEN,EAFM,CAAT,CApCwD,CAwCxD;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAIE,uBAAJ,EAA6B;AAC3B,wBACE;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAEL,OAAO,CAACW,IAAxB;AAAA,2BAGE;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,QAAQ,EAAE,MAAZ;AAAoBC,QAAAA,UAAU,EAAE;AAAhC,OAAZ;AAAA,6BACE,QAAC,aAAD;AACE,QAAA,OAAO,EAAEN,OADX;AAEE,QAAA,IAAI,EAAEH,eAFR;AAGE,QAAA,KAAK,EAAC,QAHR;AAIE,QAAA,OAAO,EAAE;AACPU,UAAAA,MAAM,EAAE,KADD;AAEPC,UAAAA,OAAO,EAAE;AAFF;AAJX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GAjFuBjB,oB;UAGNG,S,EACOP,c,EACLA,c,EAcdG,kB;;;KAnBkBC,oB;AAmFxB,MAAMG,SAAS,GAAGR,UAAU,CAAEuB,KAAD,KAAY;AACvCL,EAAAA,IAAI,EAAE;AACJM,IAAAA,OAAO,EAAE;AADL;AADiC,CAAZ,CAAD,CAA5B","sourcesContent":["import React, { useEffect, useMemo } from \"react\";\r\n\r\nimport MaterialTable from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport {\r\n  payPeriodState,\r\n  //payPeriodEndMonthState,\r\n  payPeriodEmpIdState,\r\n} from \"./data/atomdata\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\n\r\nexport default function Payslip_ViewEarnings({ setCalc }) {\r\n  //let history = useHistory();\r\n  //const [load, setLoad] = useState(true);\r\n  const classes = useStyles();\r\n  const payPeriodEmpId = useRecoilValue(payPeriodEmpIdState);\r\n  const payPeriod = useRecoilValue(payPeriodState);\r\n  const {\r\n    payslipearnings,\r\n    //payslip_earning_amount,\r\n    //setPayslipEarningAmount,\r\n    //addPayslipEarning,\r\n    payslipearnings_loading,\r\n    //updatePayslipEarning,\r\n    //deletePayslipEarning,\r\n    //updatePayslip,\r\n    //editPayslipID,\r\n    //single_payslip,\r\n    //payslip_period,\r\n    getSingleBatchPayslipEarnings,\r\n  } = usePayslipsContext();\r\n\r\n  //const { description, amount } = payslipearnings;\r\n  //const { allowances } = useTablesContext();\r\n  //console.log(\"recoil\", payPeriod, payPeriodEmpId);\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        title: \"Name\",\r\n        field: \"description\",\r\n      },\r\n      { title: \"Amount\", field: \"amount\", type: \"currency\" },\r\n    ],\r\n    []\r\n  );\r\n\r\n  useEffect(() => {\r\n    getSingleBatchPayslipEarnings(payPeriodEmpId, payPeriod);\r\n  }, []);\r\n\r\n  // const calc_Earning = (data) => {\r\n  //   const sum = data.reduce((a, v) => (a = a + v.amount), 0);\r\n  //   console.log(\"Earning\", data);\r\n  //   setPayslipEarningAmount(sum);\r\n  // };\r\n\r\n  // const update_Payslip = () => {\r\n  //   const { rec_id, id, total_earnings, ...paydata } = single_payslip;\r\n  //   updatePayslip({\r\n  //     id: editPayslipID,\r\n  //     total_earnings: payslip_earning_amount,\r\n  //     ...paydata,\r\n  //   });\r\n  //   setCalc(true);\r\n  //};\r\n\r\n  if (payslipearnings_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading... Incomes.</h2>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <h1>Expenses Claims Application</h1> */}\r\n\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={payslipearnings}\r\n          title=\"Income\"\r\n          options={{\r\n            search: false,\r\n            toolbar: false,\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-demo\\\\src\\\\components\\\\ExpenseTableManager.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport MaterialTable, { MTableToolbar } from \"material-table\";\nimport { TextField, MenuItem, Button, Icon } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport * as emailjs from \"emailjs-com\"; //import { useRecoilState } from \"recoil\";\n\nimport AddIcon from \"@material-ui/icons/Add\"; //import EditIcon from \"@material-ui/icons/Edit\";\n\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport CheckCircleOutlineOutlinedIcon from \"@material-ui/icons/CheckCircleOutlineOutlined\"; //import { loginLevelState } from \"./data/atomdata\";\n\nimport { useCustomToast } from \"../helpers/useCustomToast\";\nimport ExpenseForm from \"./ExpenseForm\";\nimport { useExpensesContext } from \"../context/expenses_context\"; //import { useEmployeesContext } from \"../context/employees_context\";\n\nimport { CustomDialog } from \"../helpers/CustomDialog\";\nimport { AlertDialogBox } from \"../helpers/AlertDialogBox\";\nimport { useEmployees } from \"./employees/useEmployees\";\nimport { useExpenses } from \"./expenses/useExpenses\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SERVICE_ID = process.env.REACT_APP_EMAILJS_SERVICEID;\nconst TEMPLATE_ID = \"template_1y8odlq\";\nconst USER_ID = process.env.REACT_APP_EMAILJS_USERID;\nconst ADMINMANAGER_EMAIL = process.env.ADMINMANAGER_EMAIL;\nconst FILTERSTRING = \"Pending\";\nexport default function ExpenseTable({\n  setExpensesdata,\n  handleDialogClose\n}) {\n  _s();\n\n  const classes = useStyles();\n  const toast = useCustomToast(); //const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\n  //const [isLoad, setIsLoad] = useState(false);\n\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\n  const {\n    employees\n  } = useEmployees();\n  const {\n    expenses\n  } = useExpenses();\n  const {\n    editExpenseID,\n    updateExpense,\n    update_expense_error,\n    //expenses_loading,\n    deleteExpense,\n    loadPendingExpenses\n  } = useExpensesContext();\n  const expensesdata = expenses.filter(r => r.status === \"Pending\");\n  const columns = useMemo(() => [{\n    title: \"Name\",\n    field: \"name\",\n    editable: \"never\"\n  }, {\n    title: \"Date\",\n    field: \"date\",\n    type: \"date\",\n    dateSetting: {\n      locale: \"en-GB\"\n    },\n    editable: \"never\"\n  }, {\n    title: \"Description\",\n    field: \"description\",\n    editable: \"never\"\n  }, {\n    title: \"Amount\",\n    field: \"amount\",\n    type: \"currency\",\n    editable: \"never\"\n  }, {\n    title: \"Status\",\n    field: \"status\",\n    editComponent: props => /*#__PURE__*/_jsxDEV(TextField //defaultValue={props.value || null}\n    , {\n      onChange: e => props.onChange(e.target.value),\n      style: {\n        width: 100\n      },\n      value: props.value,\n      select: true,\n      children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n        value: \"Pending\",\n        children: \"Pending\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        value: \"Approve\",\n        children: \"Approve\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        value: \"Reject\",\n        children: \"Reject\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        value: \"Cancel\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }, this)\n  }], []); // useEffect(() => {\n  //   setExpensesdata(expenses);\n  //   console.log(expensesdata)\n  // }, []);\n  // useEffect(() => {\n  //   loadEmployees();\n  // }, []);\n  // useEffect(() => {\n  //   if (expenses) {\n  //     setExpensesdata(expenses);\n  //     console.log(\"expenses\", expenses, expensesdata)\n  //   } else {\n  //     setIsLoad(!isLoad);\n  //   }\n  // }, [isLoad]);\n  // const handleExpenseFormDialogOpen = () => {\n  //   setIsDialogOpen(true);\n  // };\n\n  const handleExpenseFormDialogClose = () => {\n    setIsDialogOpen(false);\n    loadPendingExpenses(FILTERSTRING);\n  }; // const handleExpenseFormAlertOpen = () => {\n  //   setIsAlertOpen(true);\n  // };\n\n\n  const handleExpenseFormAlertClose = () => {\n    setIsAlertOpen(false);\n  };\n\n  const handleExpenseFormOnDeleteConfirm = () => {\n    const id = editExpenseID;\n    deleteExpense(id);\n    loadPendingExpenses(FILTERSTRING);\n  };\n\n  const handleSentEmail = (data, result) => {\n    const {\n      date,\n      empid,\n      name\n    } = data;\n    const emp = employees.filter(f => f.id === empid).map(r => {\n      return { ...r\n      };\n    }); // console.log(\"leave form\", emp[0].email, data);\n\n    var emaildata = {\n      to_name: name,\n      to_email: emp[0].email,\n      message: `Your expenses claim application dated on ${date} has been ${result}!`,\n      cc_to: ADMINMANAGER_EMAIL\n    };\n    emailjs.send(SERVICE_ID, TEMPLATE_ID, emaildata, USER_ID).then(function (response) {\n      console.log(response.status, response.text);\n      toast({\n        title: `Email has sent successfully to ${emaildata.to_email}!`,\n        status: \"success\"\n      });\n    }, function (err) {\n      console.log(err);\n      toast({\n        title: `Email has fail to send to ${emaildata.to_email}!`,\n        status: \"warning\"\n      });\n    });\n  }; // const Save_ExpenseData = () => {\n  //   expensesdata.forEach((data) => {\n  //     const { id } = data;\n  //     if (id) {\n  //       const { id, rec_id, tableData, ...fields } = data;\n  //       updateExpense({ id, ...fields });\n  //     }\n  //   });\n  //   handleDialogClose();\n  //};\n\n\n  const Approve_ExpenseData = () => {\n    expensesdata.forEach(rec => {\n      if (rec.tableData.checked) {\n        updateExpense({\n          id: rec.id,\n          status: \"Approved\"\n        }); //update leavesdata\n\n        if (!update_expense_error) {\n          const recdata = expensesdata.filter(r => r.id === rec.id);\n          recdata[0].status = \"Approved\";\n        } //sent email\n\n\n        handleSentEmail(rec, \"Approved\");\n      }\n    });\n    expensesdata.forEach(d => {\n      if (d.tableData) d.tableData.checked = false;\n    });\n  };\n\n  const Reject_ExpenseData = () => {\n    expensesdata.forEach(rec => {\n      if (rec.tableData.checked) {\n        updateExpense({\n          id: rec.id,\n          status: \"Rejected\"\n        }); //update leavesdata\n\n        if (!update_expense_error) {\n          const recdata = expensesdata.filter(r => r.id === rec.id);\n          recdata[0].status = \"Rejected\";\n        } //sent email\n\n\n        handleSentEmail(rec, \"Rejected\");\n      }\n    });\n    expensesdata.forEach(d => {\n      if (d.tableData) d.tableData.checked = false;\n    });\n  };\n\n  if (!expensesdata) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Loading...Expenses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: \"100%\",\n        paddingTop: \"5px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(MaterialTable, {\n        columns: columns,\n        data: expensesdata,\n        title: \"Expenses Claims Application\",\n        icons: {\n          Add: props => /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 29\n          }, this),\n          Edit: props => /*#__PURE__*/_jsxDEV(CheckCircleOutlineOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 30\n          }, this),\n          Delete: props => /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 32\n          }, this),\n          Clear: props => /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 31\n          }, this),\n          Check: props => /*#__PURE__*/_jsxDEV(CheckIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 31\n          }, this),\n          Search: props => /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 32\n          }, this),\n          ResetSearch: props => /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 37\n          }, this)\n        } // editable={{\n        //   onRowUpdate: (newData, oldData) =>\n        //     new Promise((resolve, reject) => {\n        //       setTimeout(() => {\n        //         const dataUpdate = [...expensesdata];\n        //         const index = oldData.tableData.id;\n        //         dataUpdate[index] = newData;\n        //         setExpensesdata([...dataUpdate]);\n        //         //approve_Expense(newData);\n        //         resolve();\n        //       }, 1000);\n        //     }),\n        // }}\n        ,\n        options: {\n          filtering: true,\n          selection: true,\n          headerStyle: {\n            backgroundColor: \"#90CDF4\",\n            color: \"#FFF\"\n          },\n          showTitle: true\n        },\n        components: {\n          Toolbar: props => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(MTableToolbar, { ...props\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                padding: \"5px 10px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                variant: \"contained\",\n                color: \"secondary\",\n                className: classes.button,\n                onClick: Approve_ExpenseData,\n                children: [\"Approve \", /*#__PURE__*/_jsxDEV(Icon, {\n                  className: classes.rightIcon,\n                  children: \"send\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                variant: \"contained\",\n                color: \"secondary\",\n                className: classes.button,\n                onClick: Reject_ExpenseData,\n                children: [\"Reject \", /*#__PURE__*/_jsxDEV(Icon, {\n                  className: classes.rightIcon,\n                  children: \"send\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 28\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 15\n          }, this)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CustomDialog, {\n        isOpen: isDialogOpen,\n        handleClose: handleExpenseFormDialogClose,\n        title: \"\",\n        showButton: true,\n        isFullscree: false,\n        children: /*#__PURE__*/_jsxDEV(ExpenseForm, {\n          handleDialogClose: handleExpenseFormDialogClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AlertDialogBox, {\n        onClose: handleExpenseFormAlertClose,\n        onConfirm: handleExpenseFormOnDeleteConfirm,\n        isOpen: isAlertOpen,\n        title: \"Delete Expenses\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Are you sure you want to delete ?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 220,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ExpenseTable, \"CXWMGvr4fof5+MP4OJxafyUE+to=\", false, function () {\n  return [useStyles, useCustomToast, useEmployees, useExpenses, useExpensesContext];\n});\n\n_c = ExpenseTable;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: 0\n  },\n  button: {\n    margin: theme.spacing(1)\n  }\n}));\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseTable\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-demo/src/components/ExpenseTableManager.js"],"names":["React","useState","useEffect","useMemo","MaterialTable","MTableToolbar","TextField","MenuItem","Button","Icon","makeStyles","emailjs","AddIcon","DeleteIcon","CheckIcon","SearchIcon","CheckCircleOutlineOutlinedIcon","useCustomToast","ExpenseForm","useExpensesContext","CustomDialog","AlertDialogBox","useEmployees","useExpenses","SERVICE_ID","process","env","REACT_APP_EMAILJS_SERVICEID","TEMPLATE_ID","USER_ID","REACT_APP_EMAILJS_USERID","ADMINMANAGER_EMAIL","FILTERSTRING","ExpenseTable","setExpensesdata","handleDialogClose","classes","useStyles","toast","isDialogOpen","setIsDialogOpen","isAlertOpen","setIsAlertOpen","employees","expenses","editExpenseID","updateExpense","update_expense_error","deleteExpense","loadPendingExpenses","expensesdata","filter","r","status","columns","title","field","editable","type","dateSetting","locale","editComponent","props","e","onChange","target","value","width","handleExpenseFormDialogClose","handleExpenseFormAlertClose","handleExpenseFormOnDeleteConfirm","id","handleSentEmail","data","result","date","empid","name","emp","f","map","emaildata","to_name","to_email","email","message","cc_to","send","then","response","console","log","text","err","Approve_ExpenseData","forEach","rec","tableData","checked","recdata","d","Reject_ExpenseData","root","maxWidth","paddingTop","Add","Edit","Delete","Clear","Check","Search","ResetSearch","filtering","selection","headerStyle","backgroundColor","color","showTitle","Toolbar","padding","button","rightIcon","theme","margin","spacing"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { TextField, MenuItem, Button, Icon } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport * as emailjs from \"emailjs-com\";\r\n//import { useRecoilState } from \"recoil\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\n//import EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport CheckCircleOutlineOutlinedIcon from \"@material-ui/icons/CheckCircleOutlineOutlined\";\r\n//import { loginLevelState } from \"./data/atomdata\";\r\nimport { useCustomToast } from \"../helpers/useCustomToast\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport { useExpensesContext } from \"../context/expenses_context\";\r\n//import { useEmployeesContext } from \"../context/employees_context\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { AlertDialogBox } from \"../helpers/AlertDialogBox\";\r\nimport { useEmployees } from \"./employees/useEmployees\";\r\nimport { useExpenses } from \"./expenses/useExpenses\";\r\n\r\nconst SERVICE_ID = process.env.REACT_APP_EMAILJS_SERVICEID;\r\nconst TEMPLATE_ID = \"template_1y8odlq\";\r\nconst USER_ID = process.env.REACT_APP_EMAILJS_USERID;\r\nconst ADMINMANAGER_EMAIL = process.env.ADMINMANAGER_EMAIL;\r\nconst FILTERSTRING = \"Pending\";\r\n\r\nexport default function ExpenseTable({\r\n  setExpensesdata,\r\n  handleDialogClose,\r\n}) {\r\n  const classes = useStyles();\r\n  const toast = useCustomToast();\r\n  //const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  //const [isLoad, setIsLoad] = useState(false);\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\r\n  const { employees } = useEmployees();\r\n  const { expenses } = useExpenses();\r\n  const {\r\n    editExpenseID,\r\n    updateExpense,\r\n    update_expense_error,\r\n    //expenses_loading,\r\n    deleteExpense,\r\n    loadPendingExpenses,\r\n  } = useExpensesContext();\r\n\r\n  const expensesdata = expenses.filter((r)=>r.status === \"Pending\")\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      { title: \"Name\", field: \"name\", editable: \"never\" },\r\n      {\r\n        title: \"Date\",\r\n        field: \"date\",\r\n        type: \"date\",\r\n        dateSetting: { locale: \"en-GB\" },\r\n        editable: \"never\",\r\n      },\r\n      {\r\n        title: \"Description\",\r\n        field: \"description\",\r\n        editable: \"never\",\r\n      },\r\n      { title: \"Amount\", field: \"amount\", type: \"currency\", editable: \"never\" },\r\n      {\r\n        title: \"Status\",\r\n        field: \"status\",\r\n        editComponent: (props) => (\r\n          <TextField\r\n            //defaultValue={props.value || null}\r\n            onChange={(e) => props.onChange(e.target.value)}\r\n            style={{ width: 100 }}\r\n            value={props.value}\r\n            select\r\n          >\r\n            <MenuItem value=\"Pending\">Pending</MenuItem>\r\n            <MenuItem value=\"Approve\">Approve</MenuItem>\r\n            <MenuItem value=\"Reject\">Reject</MenuItem>\r\n            <MenuItem value=\"Cancel\">Cancel</MenuItem>\r\n          </TextField>\r\n        ),\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  // useEffect(() => {\r\n  //   setExpensesdata(expenses);\r\n  //   console.log(expensesdata)\r\n  // }, []);\r\n\r\n  // useEffect(() => {\r\n  //   loadEmployees();\r\n  // }, []);\r\n\r\n  // useEffect(() => {\r\n  //   if (expenses) {\r\n  //     setExpensesdata(expenses);\r\n  //     console.log(\"expenses\", expenses, expensesdata)\r\n  //   } else {\r\n  //     setIsLoad(!isLoad);\r\n  //   }\r\n  // }, [isLoad]);\r\n\r\n  // const handleExpenseFormDialogOpen = () => {\r\n  //   setIsDialogOpen(true);\r\n  // };\r\n\r\n  const handleExpenseFormDialogClose = () => {\r\n    setIsDialogOpen(false);\r\n    loadPendingExpenses(FILTERSTRING);\r\n  };\r\n\r\n  // const handleExpenseFormAlertOpen = () => {\r\n  //   setIsAlertOpen(true);\r\n  // };\r\n\r\n  const handleExpenseFormAlertClose = () => {\r\n    setIsAlertOpen(false);\r\n  };\r\n\r\n  const handleExpenseFormOnDeleteConfirm = () => {\r\n    const id = editExpenseID;\r\n    deleteExpense(id);\r\n    loadPendingExpenses(FILTERSTRING);\r\n  };\r\n\r\n  const handleSentEmail = (data, result) => {\r\n    const { date, empid, name } = data;\r\n    const emp = employees\r\n      .filter((f) => f.id === empid)\r\n      .map((r) => {\r\n        return { ...r };\r\n      });\r\n    // console.log(\"leave form\", emp[0].email, data);\r\n    var emaildata = {\r\n      to_name: name,\r\n      to_email: emp[0].email,\r\n      message: `Your expenses claim application dated on ${date} has been ${result}!`,\r\n      cc_to: ADMINMANAGER_EMAIL,\r\n    };\r\n\r\n    emailjs.send(SERVICE_ID, TEMPLATE_ID, emaildata, USER_ID).then(\r\n      function (response) {\r\n        console.log(response.status, response.text);\r\n        toast({\r\n          title: `Email has sent successfully to ${emaildata.to_email}!`,\r\n          status: \"success\",\r\n        });\r\n      },\r\n      function (err) {\r\n        console.log(err);\r\n        toast({\r\n          title: `Email has fail to send to ${emaildata.to_email}!`,\r\n          status: \"warning\",\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  // const Save_ExpenseData = () => {\r\n  //   expensesdata.forEach((data) => {\r\n  //     const { id } = data;\r\n  //     if (id) {\r\n  //       const { id, rec_id, tableData, ...fields } = data;\r\n  //       updateExpense({ id, ...fields });\r\n  //     }\r\n  //   });\r\n\r\n  //   handleDialogClose();\r\n  //};\r\n\r\n  const Approve_ExpenseData = () => {\r\n    expensesdata.forEach((rec) => {\r\n      if (rec.tableData.checked) {\r\n        updateExpense({ id: rec.id, status: \"Approved\" });\r\n        //update leavesdata\r\n        if (!update_expense_error) {\r\n          const recdata = expensesdata.filter((r) => r.id === rec.id);\r\n          recdata[0].status = \"Approved\";\r\n        }\r\n        //sent email\r\n        handleSentEmail(rec, \"Approved\");\r\n      }\r\n    });\r\n    expensesdata.forEach((d) => {\r\n      if (d.tableData) d.tableData.checked = false;\r\n    });\r\n  };\r\n\r\n  const Reject_ExpenseData = () => {\r\n    expensesdata.forEach((rec) => {\r\n      if (rec.tableData.checked) {\r\n        updateExpense({ id: rec.id, status: \"Rejected\" });\r\n        //update leavesdata\r\n        if (!update_expense_error) {\r\n          const recdata = expensesdata.filter((r) => r.id === rec.id);\r\n          recdata[0].status = \"Rejected\";\r\n        }\r\n        //sent email\r\n        handleSentEmail(rec, \"Rejected\");\r\n      }\r\n    });\r\n    expensesdata.forEach((d) => {\r\n      if (d.tableData) d.tableData.checked = false;\r\n    });\r\n  };\r\n\r\n  if (!expensesdata) {\r\n    return (\r\n      <div>\r\n        <h2>Loading...Expenses</h2>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <h1>Expenses Claims Application</h1> */}\r\n\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={expensesdata}\r\n          title=\"Expenses Claims Application\"\r\n          icons={{\r\n            Add: (props) => <AddIcon />,\r\n            Edit: (props) => <CheckCircleOutlineOutlinedIcon />,\r\n            Delete: (props) => <DeleteIcon />,\r\n            Clear: (props) => <DeleteIcon />,\r\n            Check: (props) => <CheckIcon />,\r\n            Search: (props) => <SearchIcon />,\r\n            ResetSearch: (props) => <DeleteIcon />,\r\n          }}\r\n          // editable={{\r\n          //   onRowUpdate: (newData, oldData) =>\r\n          //     new Promise((resolve, reject) => {\r\n          //       setTimeout(() => {\r\n          //         const dataUpdate = [...expensesdata];\r\n          //         const index = oldData.tableData.id;\r\n          //         dataUpdate[index] = newData;\r\n          //         setExpensesdata([...dataUpdate]);\r\n          //         //approve_Expense(newData);\r\n\r\n          //         resolve();\r\n          //       }, 1000);\r\n          //     }),\r\n          // }}\r\n          options={{\r\n            filtering: true,\r\n            selection: true,\r\n            headerStyle: {\r\n              backgroundColor: \"#90CDF4\",\r\n              color: \"#FFF\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n                <div style={{ padding: \"5px 10px\" }}>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    onClick={Approve_ExpenseData}\r\n                  >\r\n                    Approve <Icon className={classes.rightIcon}>send</Icon>\r\n                  </Button>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    onClick={Reject_ExpenseData}\r\n                  >\r\n                    Reject <Icon className={classes.rightIcon}>send</Icon>\r\n                  </Button>\r\n                  {/* <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    onClick={Save_ExpenseData}\r\n                  >\r\n                    Update <Icon className={classes.rightIcon}>send</Icon>\r\n                  </Button> */}\r\n                </div>\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n        <CustomDialog\r\n          isOpen={isDialogOpen}\r\n          handleClose={handleExpenseFormDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscree={false}\r\n        >\r\n          <ExpenseForm handleDialogClose={handleExpenseFormDialogClose} />\r\n        </CustomDialog>\r\n\r\n        <AlertDialogBox\r\n          onClose={handleExpenseFormAlertClose}\r\n          onConfirm={handleExpenseFormOnDeleteConfirm}\r\n          isOpen={isAlertOpen}\r\n          title=\"Delete Expenses\"\r\n        >\r\n          <h2>Are you sure you want to delete ?</h2>\r\n        </AlertDialogBox>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n"]},"metadata":{},"sourceType":"module"}
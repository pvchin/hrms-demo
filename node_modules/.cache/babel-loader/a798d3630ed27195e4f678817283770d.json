{"ast":null,"code":"import { useState } from \"react\";\nimport { useQuery, useQueryClient } from \"react-query\";\nimport { queryKeys } from \"../react-query/constants\";\nimport { clearStoredUser, getStoredUser, setStoredUser } from \"../user-storage\";\nasync function getUser(user) {\n  return getStoredUser();\n  //if (!user) return null;\n  //return user;\n  //   const data = employees\n  //     .filter((f) => f.email === user)\n  //     .map((r) => {\n  //       return { ...r };\n  //     });\n  //return user;\n  //   if (!user) return null;\n  //   const { data } = await axiosInstance.get(`/user/${user.id}`, {\n  //     headers: getJWTHeader(user),\n  //   });\n\n  //   return data.user;\n}\n\nexport function useUser() {\n  const [user, setUser] = useState(getStoredUser() || null);\n  const queryClient = useQueryClient();\n  useQuery(queryKeys.user, () => getUser(user), {\n    enabled: !!user,\n    onSuccess: data => setUser(data)\n  });\n\n  // meant to be called from useAuth\n  function updateUser(newUser) {\n    // set user in state\n    setUser(newUser);\n\n    // update user in localstorage\n    setStoredUser(newUser);\n\n    // TODO: pre-populate user profile in React Query client\n  }\n\n  // meant to be called from useAuth\n  function clearUser() {\n    // update state\n    setUser(null);\n\n    // remove from localstorage\n    clearStoredUser();\n    queryClient.setQueryData(queryKeys.user, null);\n    queryClient.removeQueries([queryKeys.user]);\n  }\n  return {\n    user,\n    updateUser,\n    clearUser\n  };\n}","map":{"version":3,"names":["useState","useQuery","useQueryClient","queryKeys","clearStoredUser","getStoredUser","setStoredUser","getUser","user","useUser","setUser","queryClient","enabled","onSuccess","data","updateUser","newUser","clearUser","setQueryData","removeQueries"],"sources":["D:/react-myprojects/hrms-demo/src/components/user/useUser.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { useQuery, useQueryClient } from \"react-query\";\r\n\r\nimport { queryKeys } from \"../react-query/constants\";\r\nimport { clearStoredUser, getStoredUser, setStoredUser } from \"../user-storage\";\r\n\r\nasync function getUser(user) {\r\n  return getStoredUser()\r\n  //if (!user) return null;\r\n  //return user;\r\n  //   const data = employees\r\n  //     .filter((f) => f.email === user)\r\n  //     .map((r) => {\r\n  //       return { ...r };\r\n  //     });\r\n  //return user;\r\n  //   if (!user) return null;\r\n  //   const { data } = await axiosInstance.get(`/user/${user.id}`, {\r\n  //     headers: getJWTHeader(user),\r\n  //   });\r\n\r\n  //   return data.user;\r\n}\r\n\r\nexport function useUser() {\r\n  const [user, setUser] = useState(getStoredUser() || null);\r\n  const queryClient = useQueryClient();\r\n\r\n  useQuery(queryKeys.user, () => getUser(user), {\r\n    enabled: !!user,\r\n    onSuccess: (data) => setUser(data),\r\n  });\r\n\r\n  // meant to be called from useAuth\r\n  function updateUser(newUser) {\r\n    // set user in state\r\n    setUser(newUser);\r\n\r\n    // update user in localstorage\r\n    setStoredUser(newUser);\r\n\r\n    // TODO: pre-populate user profile in React Query client\r\n  }\r\n\r\n  // meant to be called from useAuth\r\n  function clearUser() {\r\n    // update state\r\n    setUser(null);\r\n\r\n    // remove from localstorage\r\n    clearStoredUser();\r\n\r\n    queryClient.setQueryData(queryKeys.user, null);\r\n\r\n    queryClient.removeQueries([queryKeys.user]);\r\n  }\r\n\r\n  return { user, updateUser, clearUser };\r\n}\r\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,QAAQ,EAAEC,cAAc,QAAQ,aAAa;AAEtD,SAASC,SAAS,QAAQ,0BAA0B;AACpD,SAASC,eAAe,EAAEC,aAAa,EAAEC,aAAa,QAAQ,iBAAiB;AAE/E,eAAeC,OAAO,CAACC,IAAI,EAAE;EAC3B,OAAOH,aAAa,EAAE;EACtB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;AACF;;AAEA,OAAO,SAASI,OAAO,GAAG;EACxB,MAAM,CAACD,IAAI,EAAEE,OAAO,CAAC,GAAGV,QAAQ,CAACK,aAAa,EAAE,IAAI,IAAI,CAAC;EACzD,MAAMM,WAAW,GAAGT,cAAc,EAAE;EAEpCD,QAAQ,CAACE,SAAS,CAACK,IAAI,EAAE,MAAMD,OAAO,CAACC,IAAI,CAAC,EAAE;IAC5CI,OAAO,EAAE,CAAC,CAACJ,IAAI;IACfK,SAAS,EAAGC,IAAI,IAAKJ,OAAO,CAACI,IAAI;EACnC,CAAC,CAAC;;EAEF;EACA,SAASC,UAAU,CAACC,OAAO,EAAE;IAC3B;IACAN,OAAO,CAACM,OAAO,CAAC;;IAEhB;IACAV,aAAa,CAACU,OAAO,CAAC;;IAEtB;EACF;;EAEA;EACA,SAASC,SAAS,GAAG;IACnB;IACAP,OAAO,CAAC,IAAI,CAAC;;IAEb;IACAN,eAAe,EAAE;IAEjBO,WAAW,CAACO,YAAY,CAACf,SAAS,CAACK,IAAI,EAAE,IAAI,CAAC;IAE9CG,WAAW,CAACQ,aAAa,CAAC,CAAChB,SAAS,CAACK,IAAI,CAAC,CAAC;EAC7C;EAEA,OAAO;IAAEA,IAAI;IAAEO,UAAU;IAAEE;EAAU,CAAC;AACxC"},"metadata":{},"sourceType":"module"}
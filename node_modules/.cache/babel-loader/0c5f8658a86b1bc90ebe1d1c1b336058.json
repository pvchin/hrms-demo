{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-demo\\\\src\\\\components\\\\PayslipTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport MaterialTable, { MTableToolbar } from \"material-table\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport BuildOutlinedIcon from \"@material-ui/icons/BuildOutlined\";\nimport { useCustomToast } from \"../helpers/useCustomToast\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useRecoilState } from \"recoil\";\nimport { payrunState, payrunIdState, payrunStatusState } from \"./data/atomdata\";\nimport { usePayslipsContext } from \"../context/payslips_context\"; //import { useExpensesContext } from \"../context/expenses_context\";\n//import { useDailyAllowancesContext } from \"../context/dailyallowances_context\";\n\nimport { AlertDialogBox } from \"../helpers/AlertDialogBox\";\nimport { usePayrun } from \"./payrun/usePayrun\";\nimport { usePayslipsBatch } from \"./payslips/usePayslipsBatch\";\nimport { useDeletePayrun } from \"./payrun/useDeletePayrun\";\nimport { useExpensesPayrun } from \"./expenses/useExpensesPayrun\";\nimport { useUpdateExpenses } from \"./expenses/useUpdateExpenses\";\nimport { useDailyAllowsPayrun } from \"./dailyallows/useDailyAllowsPayrun\";\nimport { useUpdateDailyAllows } from \"./dailyallows/useUpdateDailyAllows\"; //const FILTERSTRING = \"Pending\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [// { title: \"Period\", field: \"period\" },\n{\n  title: \"Payrun Batch\",\n  field: \"payrun\",\n  type: \"date\",\n  dateSetting: {\n    locale: \"en-GB\"\n  }\n}, // {\n//   title: \"Pay Date\",\n//   field: \"pay_date\",\n//   type: \"date\",\n//   dateSetting: { locale: \"en-GB\" },\n// },\n{\n  title: \"Total Wages\",\n  field: \"totalwages\",\n  type: \"currency\"\n}, {\n  title: \"TAP Amount\",\n  field: \"totaltap\",\n  type: \"currency\"\n}, {\n  title: \"SCP Amount\",\n  field: \"totalscp\",\n  type: \"currency\"\n}, {\n  title: \"Site Allowances\",\n  field: \"totalsitesallows\",\n  type: \"currency\"\n}, {\n  title: \"Expenses Claims\",\n  field: \"totalexpensesclaims\",\n  type: \"currency\"\n}, {\n  title: \"Total Allowances\",\n  field: \"totalallows\",\n  type: \"currency\"\n}, {\n  title: \"Total Deductions\",\n  field: \"totaldeducts\",\n  type: \"currency\"\n}, {\n  title: \"Total Payroll\",\n  field: \"totalpayroll\",\n  type: \"currency\"\n}, {\n  title: \"Status\",\n  field: \"status\"\n}];\nexport default function PayslipTable() {\n  _s();\n\n  let navigate = useNavigate();\n  const toast = useCustomToast();\n  const classes = useStyles();\n  const {\n    payrun\n  } = usePayrun();\n  const {\n    payslipsbatch,\n    setPSBPayrunId\n  } = usePayslipsBatch();\n  const {\n    expensespayrun,\n    setExpPayrunId\n  } = useExpensesPayrun();\n  const {\n    dailyallowspayrun,\n    setDailyAllowsPayrunId\n  } = useDailyAllowsPayrun();\n  const updateExpenses = useUpdateExpenses();\n  const deletePayrun = useDeletePayrun();\n  const updateDailyAllows = useUpdateDailyAllows();\n  const [input, setInput] = useRecoilState(payrunState); //const [isLoadInput, setIsLoadInput] = useState(false);\n\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\n  const [deletestate, setDeletestate] = useState({\n    id: \"\",\n    payrun: \"\"\n  });\n  const [payrunId, setPayrunId] = useRecoilState(payrunIdState);\n  const [payrunstatus, setPayrunStatus] = useRecoilState(payrunStatusState); // const { loadPeriodExpenses, periodexpenses, updateExpense } =\n  //   useExpensesContext();\n  // const {\n  //   getSingleBatchDailyAllowance,\n  //   singlebatchdailyallowance,\n  //   updateDailyAllowance,\n  //   deleteDailyAllowance,\n  // } = useDailyAllowancesContext();\n\n  const {\n    //payrun,\n    //getPayrun,\n    payrun_loading,\n    payrun_error,\n    getSinglePayslip,\n    setEditPayslipID,\n    setIsPayslipEditingOn,\n    //single_payslip,\n    setPayslipPeriod,\n    //deletePayrun,\n    deletePayslip //pending_payslips,\n    //loadPendingPayslips,\n\n  } = usePayslipsContext();\n  useEffect(() => {\n    setPSBPayrunId(\"XXX\");\n    setDailyAllowsPayrunId(\"XXX\");\n  }, []); // useEffect(() => {\n  //   if (single_payslip.payrun) {\n  //     console.log(\"single_payslip\", single_payslip);\n  //   }\n  // }, [single_payslip]);\n\n  const handleAlertOpen = () => {\n    setIsAlertOpen(true);\n  };\n\n  const handleAlertClose = () => {\n    setIsAlertOpen(false);\n  };\n\n  const update_Input = async data => {\n    console.log(\"input\", data);\n    setInput({ ...input,\n      id: data.id,\n      payfreq: data.payfreq,\n      fromdate: data.fromdate,\n      todate: data.todate,\n      paydate: data.paydate,\n      period: data.period,\n      payrun: data.payrun,\n      totalwages: data.totalwages,\n      totaltap: data.totaltap,\n      totalscp: data.totalscp,\n      totalallows: data.totalallows,\n      totaldeducts: data.totaldeducts,\n      totalpayroll: data.totalpayroll,\n      status: data.status\n    });\n    setInput({ ...input,\n      id: data.id,\n      payfreq: data.payfreq,\n      fromdate: data.fromdate,\n      todate: data.todate,\n      paydate: data.paydate,\n      period: data.period,\n      payrun: data.payrun,\n      totalwages: data.totalwages,\n      totaltap: data.totaltap,\n      totalscp: data.totalscp,\n      totalallows: data.totalallows,\n      totaldeducts: data.totaldeducts,\n      totalpayroll: data.totalpayroll,\n      status: data.status\n    });\n    console.log(\"payrun\", input);\n  };\n\n  const update_Payslip = async data => {\n    const {\n      id,\n      payrun\n    } = data;\n    setPayrunId(id);\n    setPayrunStatus(data.status);\n    setPayslipPeriod(payrun); //save to recoil\n\n    setEditPayslipID(id);\n    setIsPayslipEditingOn();\n    getSinglePayslip(id);\n    navigate(\"/payrunbatch\");\n  };\n\n  const delete_Payslip = data => {\n    const {\n      id,\n      payrun\n    } = data;\n    setDeletestate({\n      id: id,\n      payrun: payrun\n    });\n    setPSBPayrunId(payrun);\n    setExpPayrunId(payrun);\n    setDailyAllowsPayrunId(payrun); //loadPeriodExpenses(payrun);\n    //getSingleBatchDailyAllowance(payrun);\n\n    handleAlertOpen();\n  };\n\n  const handleOnDeleteConfirm = data => {\n    console.log(\"payslip delete\", deletestate);\n    const {\n      id,\n      payrun\n    } = deletestate; //load period expenses\n    //loadPeriodExpenses(payrun);\n    //delete allows detls\n\n    payslipsbatch && payslipsbatch.forEach(rec => {\n      if (rec.payrun === payrun) {\n        deletePayslip(rec.id);\n      }\n    }); //unpaid expenses\n\n    expensespayrun && expensespayrun.forEach(rec => {\n      if (rec.payrun === payrun) {\n        updateExpenses({\n          id: rec.id,\n          payrun: \"\"\n        });\n      }\n    }); //delete dailyallows\n\n    dailyallowspayrun && dailyallowspayrun.forEach(rec => {\n      if (rec.payrun === payrun) {\n        updateDailyAllows({\n          id: rec.id,\n          payrun: \"\"\n        });\n      }\n    }); //delete payrun\n\n    deletePayrun(id);\n    toast({\n      title: `Payroll Batch being deleted!`,\n      status: \"warning\"\n    }); //getPayrun();\n  };\n\n  if (payrun_loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Loading.....Payslips\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (payrun_error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Internet connection problem!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: \"100%\",\n        paddingTop: \"5px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(MaterialTable, {\n        columns: columns,\n        data: payrun,\n        title: \"Payroll\",\n        icons: {\n          Add: props => /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 29\n          }, this),\n          Edit: props => /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 30\n          }, this),\n          Delete: props => /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 32\n          }, this),\n          Clear: props => /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 31\n          }, this),\n          Check: props => /*#__PURE__*/_jsxDEV(CheckIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 31\n          }, this),\n          Search: props => /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 32\n          }, this),\n          ResetSearch: props => /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 37\n          }, this),\n          Build: props => /*#__PURE__*/_jsxDEV(BuildOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 31\n          }, this)\n        },\n        actions: [rowData => ({\n          //disabled: rowData.status !== \"Pending\",\n          icon: \"edit\",\n          position: \"row\",\n          tooltip: \"Edit Record\",\n          onClick: (event, rowData) => {\n            update_Input(rowData);\n            update_Payslip(rowData);\n          }\n        }), rowData => ({\n          disabled: rowData.status !== \"Pending\",\n          icon: \"delete\",\n          tooltip: \"Delete Record\",\n          position: \"row\",\n          onClick: (event, rowData) => {\n            //delete_Payslip(rowData);\n            delete_Payslip(rowData);\n          }\n        }) // {\n        //   icon: \"add\",\n        //   tooltip: \"Add Record\",\n        //   isFreeAction: true,\n        //   onClick: (event, rowData) => {\n        //     add_Payslip(rowData);\n        //   },\n        // },\n        ],\n        options: {\n          filtering: true,\n          headerStyle: {\n            backgroundColor: \"#90CDF4\",\n            color: \"black\"\n          },\n          showTitle: true\n        },\n        components: {\n          Toolbar: props => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(MTableToolbar, { ...props\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 15\n          }, this)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AlertDialogBox, {\n        onClose: handleAlertClose,\n        onConfirm: handleOnDeleteConfirm,\n        isOpen: isAlertOpen,\n        title: \"Delete Payslip Batch\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Are you sure you want to delete ?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 230,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PayslipTable, \"A3kuQuUtZ3OG3Ji6bbHsXhoQzl0=\", false, function () {\n  return [useNavigate, useCustomToast, useStyles, usePayrun, usePayslipsBatch, useExpensesPayrun, useDailyAllowsPayrun, useUpdateExpenses, useDeletePayrun, useUpdateDailyAllows, useRecoilState, useRecoilState, useRecoilState, usePayslipsContext];\n});\n\n_c = PayslipTable;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: 0\n  }\n}));\n\nvar _c;\n\n$RefreshReg$(_c, \"PayslipTable\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-demo/src/components/PayslipTable.js"],"names":["React","useState","useEffect","MaterialTable","MTableToolbar","makeStyles","AddIcon","EditIcon","DeleteIcon","CheckIcon","SearchIcon","BuildOutlinedIcon","useCustomToast","useNavigate","useRecoilState","payrunState","payrunIdState","payrunStatusState","usePayslipsContext","AlertDialogBox","usePayrun","usePayslipsBatch","useDeletePayrun","useExpensesPayrun","useUpdateExpenses","useDailyAllowsPayrun","useUpdateDailyAllows","columns","title","field","type","dateSetting","locale","PayslipTable","navigate","toast","classes","useStyles","payrun","payslipsbatch","setPSBPayrunId","expensespayrun","setExpPayrunId","dailyallowspayrun","setDailyAllowsPayrunId","updateExpenses","deletePayrun","updateDailyAllows","input","setInput","isAlertOpen","setIsAlertOpen","deletestate","setDeletestate","id","payrunId","setPayrunId","payrunstatus","setPayrunStatus","payrun_loading","payrun_error","getSinglePayslip","setEditPayslipID","setIsPayslipEditingOn","setPayslipPeriod","deletePayslip","handleAlertOpen","handleAlertClose","update_Input","data","console","log","payfreq","fromdate","todate","paydate","period","totalwages","totaltap","totalscp","totalallows","totaldeducts","totalpayroll","status","update_Payslip","delete_Payslip","handleOnDeleteConfirm","forEach","rec","root","maxWidth","paddingTop","Add","props","Edit","Delete","Clear","Check","Search","ResetSearch","Build","rowData","icon","position","tooltip","onClick","event","disabled","filtering","headerStyle","backgroundColor","color","showTitle","Toolbar","theme","padding"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport BuildOutlinedIcon from \"@material-ui/icons/BuildOutlined\";\r\nimport { useCustomToast } from \"../helpers/useCustomToast\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { payrunState, payrunIdState, payrunStatusState } from \"./data/atomdata\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\n//import { useExpensesContext } from \"../context/expenses_context\";\r\n//import { useDailyAllowancesContext } from \"../context/dailyallowances_context\";\r\nimport { AlertDialogBox } from \"../helpers/AlertDialogBox\";\r\nimport { usePayrun } from \"./payrun/usePayrun\";\r\nimport { usePayslipsBatch } from \"./payslips/usePayslipsBatch\";\r\nimport { useDeletePayrun } from \"./payrun/useDeletePayrun\";\r\nimport { useExpensesPayrun } from \"./expenses/useExpensesPayrun\";\r\nimport { useUpdateExpenses } from \"./expenses/useUpdateExpenses\";\r\nimport { useDailyAllowsPayrun } from \"./dailyallows/useDailyAllowsPayrun\";\r\nimport { useUpdateDailyAllows } from \"./dailyallows/useUpdateDailyAllows\";\r\n\r\n//const FILTERSTRING = \"Pending\";\r\n\r\nconst columns = [\r\n  // { title: \"Period\", field: \"period\" },\r\n  {\r\n    title: \"Payrun Batch\",\r\n    field: \"payrun\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n  },\r\n  // {\r\n  //   title: \"Pay Date\",\r\n  //   field: \"pay_date\",\r\n  //   type: \"date\",\r\n  //   dateSetting: { locale: \"en-GB\" },\r\n  // },\r\n  { title: \"Total Wages\", field: \"totalwages\", type: \"currency\" },\r\n  { title: \"TAP Amount\", field: \"totaltap\", type: \"currency\" },\r\n  { title: \"SCP Amount\", field: \"totalscp\", type: \"currency\" },\r\n  { title: \"Site Allowances\", field: \"totalsitesallows\", type: \"currency\" },\r\n  { title: \"Expenses Claims\", field: \"totalexpensesclaims\", type: \"currency\" },\r\n  { title: \"Total Allowances\", field: \"totalallows\", type: \"currency\" },\r\n  { title: \"Total Deductions\", field: \"totaldeducts\", type: \"currency\" },\r\n  { title: \"Total Payroll\", field: \"totalpayroll\", type: \"currency\" },\r\n  { title: \"Status\", field: \"status\" },\r\n];\r\n\r\nexport default function PayslipTable() {\r\n  let navigate = useNavigate();\r\n  const toast = useCustomToast();\r\n  const classes = useStyles();\r\n  const { payrun } = usePayrun();\r\n  const { payslipsbatch,  setPSBPayrunId } = usePayslipsBatch();\r\n  const { expensespayrun, setExpPayrunId } = useExpensesPayrun();\r\n  const { dailyallowspayrun, setDailyAllowsPayrunId } = useDailyAllowsPayrun();\r\n  const updateExpenses = useUpdateExpenses();\r\n  const deletePayrun = useDeletePayrun();\r\n  const updateDailyAllows = useUpdateDailyAllows();\r\n  const [input, setInput] = useRecoilState(payrunState);\r\n  //const [isLoadInput, setIsLoadInput] = useState(false);\r\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\r\n  const [deletestate, setDeletestate] = useState({ id: \"\", payrun: \"\" });\r\n  const [payrunId, setPayrunId] = useRecoilState(payrunIdState);\r\n  const [payrunstatus, setPayrunStatus] = useRecoilState(payrunStatusState);\r\n  // const { loadPeriodExpenses, periodexpenses, updateExpense } =\r\n  //   useExpensesContext();\r\n  // const {\r\n  //   getSingleBatchDailyAllowance,\r\n  //   singlebatchdailyallowance,\r\n  //   updateDailyAllowance,\r\n  //   deleteDailyAllowance,\r\n  // } = useDailyAllowancesContext();\r\n  const {\r\n    //payrun,\r\n    //getPayrun,\r\n    payrun_loading,\r\n    payrun_error,\r\n    getSinglePayslip,\r\n    setEditPayslipID,\r\n    setIsPayslipEditingOn,\r\n    //single_payslip,\r\n    setPayslipPeriod,\r\n    //deletePayrun,\r\n    deletePayslip,\r\n    //pending_payslips,\r\n    //loadPendingPayslips,\r\n  } = usePayslipsContext();\r\n\r\n  useEffect(() => {\r\n    setPSBPayrunId(\"XXX\");\r\n    setDailyAllowsPayrunId(\"XXX\");\r\n  }, []);\r\n  // useEffect(() => {\r\n  //   if (single_payslip.payrun) {\r\n  //     console.log(\"single_payslip\", single_payslip);\r\n  //   }\r\n  // }, [single_payslip]);\r\n\r\n  const handleAlertOpen = () => {\r\n    setIsAlertOpen(true);\r\n  };\r\n\r\n  const handleAlertClose = () => {\r\n    setIsAlertOpen(false);\r\n  };\r\n\r\n  const update_Input = async (data) => {\r\n    console.log(\"input\", data);\r\n\r\n    setInput({\r\n      ...input,\r\n      id: data.id,\r\n      payfreq: data.payfreq,\r\n      fromdate: data.fromdate,\r\n      todate: data.todate,\r\n      paydate: data.paydate,\r\n      period: data.period,\r\n      payrun: data.payrun,\r\n      totalwages: data.totalwages,\r\n      totaltap: data.totaltap,\r\n      totalscp: data.totalscp,\r\n      totalallows: data.totalallows,\r\n      totaldeducts: data.totaldeducts,\r\n      totalpayroll: data.totalpayroll,\r\n      status: data.status,\r\n    });\r\n\r\n    setInput({\r\n      ...input,\r\n      id: data.id,\r\n      payfreq: data.payfreq,\r\n      fromdate: data.fromdate,\r\n      todate: data.todate,\r\n      paydate: data.paydate,\r\n      period: data.period,\r\n      payrun: data.payrun,\r\n      totalwages: data.totalwages,\r\n      totaltap: data.totaltap,\r\n      totalscp: data.totalscp,\r\n      totalallows: data.totalallows,\r\n      totaldeducts: data.totaldeducts,\r\n      totalpayroll: data.totalpayroll,\r\n      status: data.status,\r\n    });\r\n    console.log(\"payrun\", input);\r\n  };\r\n\r\n  const update_Payslip = async (data) => {\r\n    const { id, payrun } = data;\r\n    setPayrunId(id);\r\n    setPayrunStatus(data.status);\r\n    setPayslipPeriod(payrun); //save to recoil\r\n    setEditPayslipID(id);\r\n    setIsPayslipEditingOn();\r\n    getSinglePayslip(id);\r\n    navigate(\"/payrunbatch\");\r\n  };\r\n\r\n  const delete_Payslip = (data) => {\r\n    const { id, payrun } = data;\r\n    setDeletestate({ id: id, payrun: payrun });\r\n    setPSBPayrunId(payrun);\r\n    setExpPayrunId(payrun);\r\n    setDailyAllowsPayrunId(payrun);\r\n    //loadPeriodExpenses(payrun);\r\n    //getSingleBatchDailyAllowance(payrun);\r\n    handleAlertOpen();\r\n  };\r\n\r\n  const handleOnDeleteConfirm = (data) => {\r\n    console.log(\"payslip delete\", deletestate);\r\n    const { id, payrun } = deletestate;\r\n\r\n    //load period expenses\r\n    //loadPeriodExpenses(payrun);\r\n\r\n    //delete allows detls\r\n    payslipsbatch &&\r\n      payslipsbatch.forEach((rec) => {\r\n        if (rec.payrun === payrun) {\r\n          deletePayslip(rec.id);\r\n        }\r\n      });\r\n\r\n    //unpaid expenses\r\n    expensespayrun &&\r\n      expensespayrun.forEach((rec) => {\r\n        if (rec.payrun === payrun) {\r\n          updateExpenses({ id: rec.id, payrun: \"\" });\r\n        }\r\n      });\r\n\r\n    //delete dailyallows\r\n    dailyallowspayrun &&\r\n      dailyallowspayrun.forEach((rec) => {\r\n        if (rec.payrun === payrun) {\r\n          updateDailyAllows({ id: rec.id, payrun: \"\" });\r\n        }\r\n      });\r\n\r\n    //delete payrun\r\n    deletePayrun(id);\r\n    toast({\r\n      title: `Payroll Batch being deleted!`,\r\n      status: \"warning\",\r\n    });\r\n    //getPayrun();\r\n  };\r\n\r\n  if (payrun_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading.....Payslips</h2>\r\n      </div>\r\n    );\r\n  }\r\n  if (payrun_error) {\r\n    return (\r\n      <div>\r\n        <h2>Internet connection problem!</h2>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={payrun}\r\n          title=\"Payroll\"\r\n          icons={{\r\n            Add: (props) => <AddIcon />,\r\n            Edit: (props) => <EditIcon />,\r\n            Delete: (props) => <DeleteIcon />,\r\n            Clear: (props) => <DeleteIcon />,\r\n            Check: (props) => <CheckIcon />,\r\n            Search: (props) => <SearchIcon />,\r\n            ResetSearch: (props) => <DeleteIcon />,\r\n            Build: (props) => <BuildOutlinedIcon />,\r\n          }}\r\n          actions={[\r\n            (rowData) => ({\r\n              //disabled: rowData.status !== \"Pending\",\r\n              icon: \"edit\",\r\n              position: \"row\",\r\n              tooltip: \"Edit Record\",\r\n              onClick: (event, rowData) => {\r\n                update_Input(rowData);\r\n                update_Payslip(rowData);\r\n              },\r\n            }),\r\n            (rowData) => ({\r\n              disabled: rowData.status !== \"Pending\",\r\n              icon: \"delete\",\r\n              tooltip: \"Delete Record\",\r\n              position: \"row\",\r\n              onClick: (event, rowData) => {\r\n                //delete_Payslip(rowData);\r\n                delete_Payslip(rowData);\r\n              },\r\n            }),\r\n\r\n            // {\r\n            //   icon: \"add\",\r\n            //   tooltip: \"Add Record\",\r\n            //   isFreeAction: true,\r\n            //   onClick: (event, rowData) => {\r\n            //     add_Payslip(rowData);\r\n            //   },\r\n            // },\r\n          ]}\r\n          options={{\r\n            filtering: true,\r\n            headerStyle: {\r\n              backgroundColor: \"#90CDF4\",\r\n              color: \"black\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n                {/* <div style={{ padding: \"5px 10px\" }}>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    onClick={(e) => handleVerifyPayslipData(e)}\r\n                  >\r\n                    Verify <Icon className={classes.rightIcon}>send</Icon>\r\n                  </Button>\r\n                </div> */}\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n        <AlertDialogBox\r\n          onClose={handleAlertClose}\r\n          onConfirm={handleOnDeleteConfirm}\r\n          isOpen={isAlertOpen}\r\n          title=\"Delete Payslip Batch\"\r\n        >\r\n          <h2>Are you sure you want to delete ?</h2>\r\n        </AlertDialogBox>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n"]},"metadata":{},"sourceType":"module"}
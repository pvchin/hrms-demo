{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useMutation, useQueryClient } from \"react-query\";\nimport { leavestypes_url } from \"../../utils/constants\";\nimport { useCustomToast } from \"../../helpers/useCustomToast\";\nasync function updateLeavestype(data) {\n  const {\n    id,\n    ...fields\n  } = data;\n  await fetch(leavestypes_url, {\n    method: \"PUT\",\n    body: JSON.stringify({\n      id,\n      ...fields\n    })\n  });\n}\nexport function useUpdateLeavestype(data) {\n  _s();\n  const queryClient = useQueryClient();\n  const toast = useCustomToast();\n  const {\n    mutate\n  } = useMutation(data => updateLeavestype(data), {\n    onSuccess: () => {\n      queryClient.invalidateQueries(\"leavestypes\");\n      // toast({\n      //   title: \"Leave record being updated!\",\n      //   status: \"success\",\n      // });\n    },\n\n    onError: () => {\n      toast({\n        title: \"Network Error! Please check your internet connection!\",\n        status: \"warning\"\n      });\n    }\n  });\n  return mutate;\n}\n_s(useUpdateLeavestype, \"hoUwZA1xHrROpctkoAMiT28Sz2U=\", false, function () {\n  return [useQueryClient, useCustomToast, useMutation];\n});","map":{"version":3,"names":["useMutation","useQueryClient","leavestypes_url","useCustomToast","updateLeavestype","data","id","fields","fetch","method","body","JSON","stringify","useUpdateLeavestype","queryClient","toast","mutate","onSuccess","invalidateQueries","onError","title","status"],"sources":["D:/react-myprojects/hrms-demo/src/components/leavestypes/useUpdateLeavestype.js"],"sourcesContent":["import { useMutation, useQueryClient } from \"react-query\";\r\nimport { leavestypes_url } from \"../../utils/constants\";\r\nimport { useCustomToast } from \"../../helpers/useCustomToast\";\r\n\r\nasync function updateLeavestype(data) {\r\n  const { id, ...fields } = data;\r\n\r\n  await fetch(leavestypes_url, {\r\n    method: \"PUT\",\r\n    body: JSON.stringify({ id, ...fields }),\r\n  });\r\n}\r\n\r\nexport function useUpdateLeavestype(data) {\r\n  const queryClient = useQueryClient();\r\n  const toast = useCustomToast();\r\n\r\n  const { mutate } = useMutation((data) => updateLeavestype(data), {\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries(\"leavestypes\");\r\n      // toast({\r\n      //   title: \"Leave record being updated!\",\r\n      //   status: \"success\",\r\n      // });\r\n    },\r\n    onError: () => {\r\n      toast({\r\n        title: \"Network Error! Please check your internet connection!\",\r\n        status: \"warning\",\r\n      });\r\n    },\r\n  });\r\n\r\n  return mutate;\r\n}\r\n"],"mappings":";AAAA,SAASA,WAAW,EAAEC,cAAc,QAAQ,aAAa;AACzD,SAASC,eAAe,QAAQ,uBAAuB;AACvD,SAASC,cAAc,QAAQ,8BAA8B;AAE7D,eAAeC,gBAAgB,CAACC,IAAI,EAAE;EACpC,MAAM;IAAEC,EAAE;IAAE,GAAGC;EAAO,CAAC,GAAGF,IAAI;EAE9B,MAAMG,KAAK,CAACN,eAAe,EAAE;IAC3BO,MAAM,EAAE,KAAK;IACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEN,EAAE;MAAE,GAAGC;IAAO,CAAC;EACxC,CAAC,CAAC;AACJ;AAEA,OAAO,SAASM,mBAAmB,CAACR,IAAI,EAAE;EAAA;EACxC,MAAMS,WAAW,GAAGb,cAAc,EAAE;EACpC,MAAMc,KAAK,GAAGZ,cAAc,EAAE;EAE9B,MAAM;IAAEa;EAAO,CAAC,GAAGhB,WAAW,CAAEK,IAAI,IAAKD,gBAAgB,CAACC,IAAI,CAAC,EAAE;IAC/DY,SAAS,EAAE,MAAM;MACfH,WAAW,CAACI,iBAAiB,CAAC,aAAa,CAAC;MAC5C;MACA;MACA;MACA;IACF,CAAC;;IACDC,OAAO,EAAE,MAAM;MACbJ,KAAK,CAAC;QACJK,KAAK,EAAE,uDAAuD;QAC9DC,MAAM,EAAE;MACV,CAAC,CAAC;IACJ;EACF,CAAC,CAAC;EAEF,OAAOL,MAAM;AACf;AAAC,GArBeH,mBAAmB;EAAA,QACbZ,cAAc,EACpBE,cAAc,EAETH,WAAW;AAAA"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-demo\\\\src\\\\components\\\\Payslip_ViewDeductions.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport MaterialTable from \"material-table\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useRecoilValue } from \"recoil\";\nimport { payPeriodState //payPeriodEndMonthState,\n, payPeriodEmpIdState } from \"./data/atomdata\";\nimport { usePayslipsContext } from \"../context/payslips_context\"; //import { useTablesContext } from \"../context/tables_context\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Payslip_ViewDeductions() {\n  _s();\n\n  const classes = useStyles();\n  const payPeriodEmpId = useRecoilValue(payPeriodEmpIdState);\n  const payPeriod = useRecoilValue(payPeriodState);\n  const {\n    payslipdeductions,\n    //payslip_deduction_amount,\n    //setPayslipDeductionAmount,\n    //loadPayslipDeductions,\n    //addPayslipDeduction,\n    payslipdeductions_loading,\n    //updatePayslipDeduction,\n    //deletePayslipDeduction,\n    //updatePayslip,\n    //editPayslipID,\n    //single_payslip,\n    //payslip_period,\n    getSingleBatchPayslipDeductions\n  } = usePayslipsContext(); //const { name, amount } = payslipdeductions;\n  //const { deductions } = useTablesContext();\n  // const calc_Deduction = (data) => {\n  //   const sum = data.reduce((a, v) => (a = a + v.amount), 0);\n  //   setPayslipDeductionAmount(sum);\n  // };\n\n  const columns = [{\n    title: \"Name\",\n    field: \"description\"\n  }, {\n    title: \"Amount\",\n    field: \"amount\",\n    type: \"currency\"\n  }];\n  useEffect(() => {\n    getSingleBatchPayslipDeductions(payPeriodEmpId, payPeriod);\n  }, []); // const update_Payslip = () => {\n  //   const { rec_id, id, total_deductions, ...paydata } = single_payslip;\n  //   updatePayslip({\n  //     id: editPayslipID,\n  //     total_deductions: payslip_deduction_amount,\n  //     ...paydata,\n  //   });\n  // };\n  // const update_PayslipDeduction = async (data) => {\n  //   const { id, rec_id, empid, ...fields } = data;\n  //   updatePayslipDeduction({ id: data.id, empid: empid, ...fields });\n  //   update_Payslip();\n  //   getSingleBatchPayslipDeductions(single_payslip.empid, payslip_period);\n  // };\n  // const add_PayslipDeduction = (data) => {\n  //   const { description, amount } = data;\n  //   addPayslipDeduction({\n  //     description: description,\n  //     amount: amount,\n  //     name: single_payslip.name,\n  //     empid: single_payslip.empid,\n  //     period: single_payslip.period,\n  //   });\n  //   getSingleBatchPayslipDeductions(single_payslip.empid, payslip_period);\n  // };\n  // const delete_PayslipDeduction = (data) => {\n  //   const { id } = data;\n  //   deletePayslipDeduction(id);\n  //   getSingleBatchPayslipDeductions(single_payslip.empid, payslip_period);\n  // };\n\n  if (payslipdeductions_loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Loading... Expenses.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: \"100%\",\n        paddingTop: \"5px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n        columns: columns,\n        data: payslipdeductions,\n        title: \"Expense\",\n        options: {\n          search: false,\n          toolbar: false\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Payslip_ViewDeductions, \"IsE34AlBDCzUmj2Krr+1PIKNfz4=\", false, function () {\n  return [useStyles, useRecoilValue, useRecoilValue, usePayslipsContext];\n});\n\n_c = Payslip_ViewDeductions;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: 0\n  }\n}));\n\nvar _c;\n\n$RefreshReg$(_c, \"Payslip_ViewDeductions\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-demo/src/components/Payslip_ViewDeductions.js"],"names":["React","useEffect","MaterialTable","makeStyles","useRecoilValue","payPeriodState","payPeriodEmpIdState","usePayslipsContext","Payslip_ViewDeductions","classes","useStyles","payPeriodEmpId","payPeriod","payslipdeductions","payslipdeductions_loading","getSingleBatchPayslipDeductions","columns","title","field","type","root","maxWidth","paddingTop","search","toolbar","theme","padding"],"mappings":";;;AAAA,OAAOA,KAAP,IAAiBC,SAAjB,QAAkC,OAAlC;AAEA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAAUC,cAAV,QAAgC,QAAhC;AACA,SACEC,cADF,CAEE;AAFF,EAGEC,mBAHF,QAIO,iBAJP;AAKA,SAASC,kBAAT,QAAmC,6BAAnC,C,CACA;;;AAEA,eAAe,SAASC,sBAAT,GAAkC;AAAA;;AAC/C,QAAMC,OAAO,GAAGC,SAAS,EAAzB;AACA,QAAMC,cAAc,GAAGP,cAAc,CAACE,mBAAD,CAArC;AACA,QAAMM,SAAS,GAAGR,cAAc,CAACC,cAAD,CAAhC;AAEA,QAAM;AACJQ,IAAAA,iBADI;AAEJ;AACA;AACA;AACA;AACAC,IAAAA,yBANI;AAOJ;AACA;AACA;AACA;AACA;AACA;AACAC,IAAAA;AAbI,MAcFR,kBAAkB,EAdtB,CAL+C,CAoB/C;AACA;AAEA;AACA;AACA;AACA;;AAEA,QAAMS,OAAO,GAAG,CACd;AACEC,IAAAA,KAAK,EAAE,MADT;AAEEC,IAAAA,KAAK,EAAE;AAFT,GADc,EAKd;AAAED,IAAAA,KAAK,EAAE,QAAT;AAAmBC,IAAAA,KAAK,EAAE,QAA1B;AAAoCC,IAAAA,IAAI,EAAE;AAA1C,GALc,CAAhB;AAQAlB,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,+BAA+B,CAACJ,cAAD,EAAiBC,SAAjB,CAA/B;AACD,GAFQ,EAEN,EAFM,CAAT,CApC+C,CAyC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAGA,MAAIE,yBAAJ,EAA+B;AAC7B,wBACE;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAEL,OAAO,CAACW,IAAxB;AAAA,2BAGE;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,QAAQ,EAAE,MAAZ;AAAoBC,QAAAA,UAAU,EAAE;AAAhC,OAAZ;AAAA,6BACE,QAAC,aAAD;AACE,QAAA,OAAO,EAAEN,OADX;AAEE,QAAA,IAAI,EAAEH,iBAFR;AAGE,QAAA,KAAK,EAAC,SAHR;AAIE,QAAA,OAAO,EAAE;AACPU,UAAAA,MAAM,EAAE,KADD;AAEPC,UAAAA,OAAO,EAAE;AAFF;AAJX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GArGuBhB,sB;UACNE,S,EACON,c,EACLA,c,EAgBdG,kB;;;KAnBkBC,sB;AAuGxB,MAAME,SAAS,GAAGP,UAAU,CAAEsB,KAAD,KAAY;AACvCL,EAAAA,IAAI,EAAE;AACJM,IAAAA,OAAO,EAAE;AADL;AADiC,CAAZ,CAAD,CAA5B","sourcesContent":["import React, {  useEffect } from \"react\";\r\n\r\nimport MaterialTable from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {  useRecoilValue } from \"recoil\";\r\nimport {\r\n  payPeriodState,\r\n  //payPeriodEndMonthState,\r\n  payPeriodEmpIdState,\r\n} from \"./data/atomdata\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\n//import { useTablesContext } from \"../context/tables_context\";\r\n\r\nexport default function Payslip_ViewDeductions() {\r\n  const classes = useStyles();\r\n  const payPeriodEmpId = useRecoilValue(payPeriodEmpIdState);\r\n  const payPeriod = useRecoilValue(payPeriodState);\r\n  \r\n  const {\r\n    payslipdeductions,\r\n    //payslip_deduction_amount,\r\n    //setPayslipDeductionAmount,\r\n    //loadPayslipDeductions,\r\n    //addPayslipDeduction,\r\n    payslipdeductions_loading,\r\n    //updatePayslipDeduction,\r\n    //deletePayslipDeduction,\r\n    //updatePayslip,\r\n    //editPayslipID,\r\n    //single_payslip,\r\n    //payslip_period,\r\n    getSingleBatchPayslipDeductions,\r\n  } = usePayslipsContext();\r\n  //const { name, amount } = payslipdeductions;\r\n  //const { deductions } = useTablesContext();\r\n\r\n  // const calc_Deduction = (data) => {\r\n  //   const sum = data.reduce((a, v) => (a = a + v.amount), 0);\r\n  //   setPayslipDeductionAmount(sum);\r\n  // };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Name\",\r\n      field: \"description\",\r\n    },\r\n    { title: \"Amount\", field: \"amount\", type: \"currency\" },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    getSingleBatchPayslipDeductions(payPeriodEmpId, payPeriod);\r\n  }, []);\r\n\r\n  \r\n  // const update_Payslip = () => {\r\n  //   const { rec_id, id, total_deductions, ...paydata } = single_payslip;\r\n  //   updatePayslip({\r\n  //     id: editPayslipID,\r\n  //     total_deductions: payslip_deduction_amount,\r\n  //     ...paydata,\r\n  //   });\r\n  // };\r\n\r\n  // const update_PayslipDeduction = async (data) => {\r\n  //   const { id, rec_id, empid, ...fields } = data;\r\n  //   updatePayslipDeduction({ id: data.id, empid: empid, ...fields });\r\n  //   update_Payslip();\r\n  //   getSingleBatchPayslipDeductions(single_payslip.empid, payslip_period);\r\n  // };\r\n\r\n  // const add_PayslipDeduction = (data) => {\r\n  //   const { description, amount } = data;\r\n  //   addPayslipDeduction({\r\n  //     description: description,\r\n  //     amount: amount,\r\n  //     name: single_payslip.name,\r\n  //     empid: single_payslip.empid,\r\n  //     period: single_payslip.period,\r\n  //   });\r\n  //   getSingleBatchPayslipDeductions(single_payslip.empid, payslip_period);\r\n  // };\r\n\r\n  // const delete_PayslipDeduction = (data) => {\r\n  //   const { id } = data;\r\n  //   deletePayslipDeduction(id);\r\n  //   getSingleBatchPayslipDeductions(single_payslip.empid, payslip_period);\r\n  // };\r\n\r\n  \r\n  if (payslipdeductions_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading... Expenses.</h2>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <h1>Expenses Claims Application</h1> */}\r\n\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={payslipdeductions}\r\n          title=\"Expense\"\r\n          options={{\r\n            search: false,\r\n            toolbar: false,\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n"]},"metadata":{},"sourceType":"module"}
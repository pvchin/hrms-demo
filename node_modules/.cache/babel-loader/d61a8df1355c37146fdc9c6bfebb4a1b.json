{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useCallback } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { payrun_url } from \"../../utils/constants\";\nimport { filterByEmpId } from \"./utils\";\nimport axios from \"axios\";\nimport { queryKeys } from \"../react-query/constants\";\n\nasync function getPayrun(empid) {\n  //const { data } = await axios.get(`${leaves_url}?fv=${empid}`);\n  const {\n    data\n  } = await axios.get(`${payrun_url}`);\n  return data;\n}\n\nexport function usePayrun(empid) {\n  _s();\n\n  const [filter, setFilter] = useState(\"all\");\n  const [payrunId, setPayrunId] = useState(\"\");\n  const selectFn = useCallback(unfiltered => filterByEmpId(unfiltered, filter), [filter]);\n  const fallback = [];\n  const {\n    data: payrun = fallback\n  } = useQuery( //[queryKeys.leaves, { leaveId }],\n  queryKeys.payrun, () => getPayrun(payrunId), {\n    select: filter !== \"all\" ? selectFn : undefined\n  });\n  return {\n    payrun,\n    filter,\n    setFilter,\n    setPayrunId\n  };\n}\n\n_s(usePayrun, \"s7OPbkYSDsSfpHcc8a2GfTEWMCc=\", false, function () {\n  return [useQuery];\n});","map":{"version":3,"sources":["D:/react-myprojects/hrms-demo/src/components/payrun/usePayrun.js"],"names":["useState","useCallback","useQuery","payrun_url","filterByEmpId","axios","queryKeys","getPayrun","empid","data","get","usePayrun","filter","setFilter","payrunId","setPayrunId","selectFn","unfiltered","fallback","payrun","select","undefined"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,OAAtC;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,UAAT,QAA2B,uBAA3B;AACA,SAASC,aAAT,QAA8B,SAA9B;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,0BAA1B;;AAEA,eAAeC,SAAf,CAAyBC,KAAzB,EAAgC;AAC9B;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMJ,KAAK,CAACK,GAAN,CAAW,GAAEP,UAAW,EAAxB,CAAvB;AACA,SAAOM,IAAP;AACD;;AAED,OAAO,SAASE,SAAT,CAAmBH,KAAnB,EAA0B;AAAA;;AAC/B,QAAM,CAACI,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACc,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAMgB,QAAQ,GAAGf,WAAW,CACzBgB,UAAD,IAAgBb,aAAa,CAACa,UAAD,EAAaL,MAAb,CADH,EAE1B,CAACA,MAAD,CAF0B,CAA5B;AAKA,QAAMM,QAAQ,GAAG,EAAjB;AACA,QAAM;AAAET,IAAAA,IAAI,EAAEU,MAAM,GAAGD;AAAjB,MAA8BhB,QAAQ,EAC1C;AACAI,EAAAA,SAAS,CAACa,MAFgC,EAG1C,MAAMZ,SAAS,CAACO,QAAD,CAH2B,EAI1C;AACEM,IAAAA,MAAM,EAAER,MAAM,KAAK,KAAX,GAAmBI,QAAnB,GAA8BK;AADxC,GAJ0C,CAA5C;AASA,SAAO;AAAEF,IAAAA,MAAF;AAAUP,IAAAA,MAAV;AAAkBC,IAAAA,SAAlB;AAA6BE,IAAAA;AAA7B,GAAP;AACD;;GApBeJ,S;UAUsBT,Q","sourcesContent":["import { useState, useCallback } from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport { payrun_url } from \"../../utils/constants\";\r\nimport { filterByEmpId } from \"./utils\";\r\n\r\nimport axios from \"axios\";\r\nimport { queryKeys } from \"../react-query/constants\";\r\n\r\nasync function getPayrun(empid) {\r\n  //const { data } = await axios.get(`${leaves_url}?fv=${empid}`);\r\n  const { data } = await axios.get(`${payrun_url}`);\r\n  return data;\r\n}\r\n\r\nexport function usePayrun(empid) {\r\n  const [filter, setFilter] = useState(\"all\");\r\n  const [payrunId, setPayrunId] = useState(\"\");\r\n\r\n  const selectFn = useCallback(\r\n    (unfiltered) => filterByEmpId(unfiltered, filter),\r\n    [filter]\r\n  );\r\n\r\n  const fallback = [];\r\n  const { data: payrun = fallback } = useQuery(\r\n    //[queryKeys.leaves, { leaveId }],\r\n    queryKeys.payrun,\r\n    () => getPayrun(payrunId),\r\n    {\r\n      select: filter !== \"all\" ? selectFn : undefined,\r\n    }\r\n  );\r\n\r\n  return { payrun, filter, setFilter, setPayrunId };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
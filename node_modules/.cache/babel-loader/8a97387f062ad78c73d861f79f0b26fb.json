{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-demo\\\\src\\\\helpers\\\\CustomDialog.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const CustomDialog = ({\n  isOpen,\n  handleClose,\n  title,\n  subtitle,\n  children,\n  showButton,\n  isFullscreen,\n  isFullwidth\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Dialog, {\n      fullWidth: isFullwidth ? true : false,\n      fullScreen: isFullscreen ? true : false,\n      maxWidth: \"md\",\n      open: isOpen,\n      onClose: handleClose,\n      \"aria-labelledby\": \"max-width-dialog-title\",\n      disableBackdropClick: true,\n      disableEscapeKeyDown: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"max-width-dialog-title\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: subtitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), children]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: showButton ? /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          color: \"primary\",\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c = CustomDialog;\nCustomDialog.propTypes = {\n  isOpen: PropTypes.bool.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  title: PropTypes.string.isRequired,\n  subtitle: PropTypes.string,\n  children: PropTypes.element.isRequired,\n  showButton: PropTypes.bool.isRequired,\n  isFullscreen: PropTypes.bool.isRequired,\n  isFullwidth: PropTypes.bool.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomDialog\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-demo/src/helpers/CustomDialog.js"],"names":["React","PropTypes","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","CustomDialog","isOpen","handleClose","title","subtitle","children","showButton","isFullscreen","isFullwidth","propTypes","bool","isRequired","func","string","element"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SACEC,MADF,EAEEC,MAFF,EAGEC,aAHF,EAIEC,aAJF,EAKEC,iBALF,EAMEC,WANF,QAOO,mBAPP;;;AAQA,OAAO,MAAMC,YAAY,GAAG,CAAC;AAC3BC,EAAAA,MAD2B;AAE3BC,EAAAA,WAF2B;AAG3BC,EAAAA,KAH2B;AAI3BC,EAAAA,QAJ2B;AAK3BC,EAAAA,QAL2B;AAM3BC,EAAAA,UAN2B;AAO3BC,EAAAA,YAP2B;AAQ3BC,EAAAA;AAR2B,CAAD,KAStB;AACJ,sBACE;AAAA,2BACE,QAAC,MAAD;AACE,MAAA,SAAS,EAAEA,WAAW,GAAG,IAAH,GAAU,KADlC;AAEE,MAAA,UAAU,EAAED,YAAY,GAAG,IAAH,GAAU,KAFpC;AAGE,MAAA,QAAQ,EAAC,IAHX;AAIE,MAAA,IAAI,EAAEN,MAJR;AAKE,MAAA,OAAO,EAAEC,WALX;AAME,yBAAgB,wBANlB;AAOE,MAAA,oBAAoB,EAAE,IAPxB;AAQE,MAAA,oBAAoB,EAAE,IARxB;AAAA,8BAUE,QAAC,WAAD;AAAa,QAAA,EAAE,EAAC,wBAAhB;AAAA,kBAA0CC;AAA1C;AAAA;AAAA;AAAA;AAAA,cAVF,eAWE,QAAC,aAAD;AAAA,gCACE,QAAC,iBAAD;AAAA,oBAAoBC;AAApB;AAAA;AAAA;AAAA;AAAA,gBADF,EAEGC,QAFH;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF,eAeE,QAAC,aAAD;AAAA,kBACGC,UAAU,gBACT,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAEJ,WAAjB;AAA8B,UAAA,KAAK,EAAC,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADS,GAIP;AALN;AAAA;AAAA;AAAA;AAAA,cAfF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AA2BD,CArCM;KAAMF,Y;AAuCbA,YAAY,CAACS,SAAb,GAAyB;AACvBR,EAAAA,MAAM,EAAER,SAAS,CAACiB,IAAV,CAAeC,UADA;AAEvBT,EAAAA,WAAW,EAAET,SAAS,CAACmB,IAAV,CAAeD,UAFL;AAGvBR,EAAAA,KAAK,EAAEV,SAAS,CAACoB,MAAV,CAAiBF,UAHD;AAIvBP,EAAAA,QAAQ,EAAEX,SAAS,CAACoB,MAJG;AAKvBR,EAAAA,QAAQ,EAAEZ,SAAS,CAACqB,OAAV,CAAkBH,UALL;AAMvBL,EAAAA,UAAU,EAAEb,SAAS,CAACiB,IAAV,CAAeC,UANJ;AAOvBJ,EAAAA,YAAY,EAAEd,SAAS,CAACiB,IAAV,CAAeC,UAPN;AAQvBH,EAAAA,WAAW,EAAEf,SAAS,CAACiB,IAAV,CAAeC;AARL,CAAzB","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n} from \"@material-ui/core\";\r\nexport const CustomDialog = ({\r\n  isOpen,\r\n  handleClose,\r\n  title,\r\n  subtitle,\r\n  children,\r\n  showButton,\r\n  isFullscreen,\r\n  isFullwidth,\r\n}) => {\r\n  return (\r\n    <>\r\n      <Dialog\r\n        fullWidth={isFullwidth ? true : false}\r\n        fullScreen={isFullscreen ? true : false}\r\n        maxWidth=\"md\"\r\n        open={isOpen}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"max-width-dialog-title\"\r\n        disableBackdropClick={true}\r\n        disableEscapeKeyDown={true}\r\n      >\r\n        <DialogTitle id=\"max-width-dialog-title\">{title}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>{subtitle}</DialogContentText>\r\n          {children}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          {showButton ? (\r\n            <Button onClick={handleClose} color=\"primary\">\r\n              Close\r\n            </Button>\r\n          ) : null}\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nCustomDialog.propTypes = {\r\n  isOpen: PropTypes.bool.isRequired,\r\n  handleClose: PropTypes.func.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  subtitle: PropTypes.string,\r\n  children: PropTypes.element.isRequired,\r\n  showButton: PropTypes.bool.isRequired,\r\n  isFullscreen: PropTypes.bool.isRequired,\r\n  isFullwidth: PropTypes.bool.isRequired,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}
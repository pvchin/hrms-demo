{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-demo\\\\src\\\\components\\\\PayslipTableAdmin.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport MaterialTable, { MTableToolbar } from \"material-table\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { TextField, Button, MenuItem, Icon } from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport BuildOutlinedIcon from \"@material-ui/icons/BuildOutlined\"; //import { useHistory } from \"react-router-dom\";\n//import { useSetRecoilState } from \"recoil\";\n//import { payPeriodEmpIdState } from \"./data/atomdata\";\n\nimport { usePayslipsContext } from \"../context/payslips_context\"; //import { useEmployeesContext } from \"../context/employees_context\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  title: \"Batch\",\n  field: \"payrun\",\n  editable: \"never\"\n}, {\n  title: \"Period\",\n  field: \"period\",\n  editable: \"never\"\n}, {\n  title: \"Pay Date\",\n  field: \"pay_date\",\n  type: \"date\",\n  dateSetting: {\n    locale: \"en-GB\"\n  },\n  editable: \"never\"\n}, {\n  title: \"Wages\",\n  field: \"totalwages\",\n  type: \"currency\",\n  editable: \"never\"\n}, {\n  title: \"TAP Amount\",\n  field: \"totaltap\",\n  type: \"currency\",\n  editable: \"never\"\n}, {\n  title: \"SCP Amount\",\n  field: \"totalscp\",\n  type: \"currency\",\n  editable: \"never\"\n}, {\n  title: \"Site Allowances\",\n  field: \"totalsitesallows\",\n  type: \"currency\",\n  editable: \"never\"\n}, {\n  title: \"Expenses Claims\",\n  field: \"totalexpensesclaims\",\n  type: \"currency\",\n  editable: \"never\"\n}, {\n  title: \"Allowances\",\n  field: \"totalallows\",\n  type: \"currency\",\n  editable: \"never\"\n}, {\n  title: \"Deductions\",\n  field: \"totaldeducts\",\n  type: \"currency\",\n  editable: \"never\"\n}, {\n  title: \"Total Payroll\",\n  field: \"totalpayroll\",\n  type: \"currency\",\n  editable: \"never\"\n}, // { title: \"Bank Name\", field: \"bank_name\" },\n// { title: \"Bank AC No\", field: \"bank_accno\" },\n{\n  title: \"Status\",\n  field: \"status\",\n  editable: \"never\",\n  cellStyle: {\n    width: 50,\n    maxWidth: 50\n  },\n  editComponent: props => /*#__PURE__*/_jsxDEV(TextField //defaultValue={props.value || null}\n  , {\n    onChange: e => props.onChange(e.target.value),\n    style: {\n      width: 100\n    },\n    value: props.value,\n    select: true,\n    children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n      value: \"Pending\",\n      children: \"Pending\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n      value: \"Approve\",\n      children: \"Approve\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n      value: \"Reject\",\n      children: \"Reject\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n      value: \"Cancel\",\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 7\n  }, this)\n}];\nexport default function PayslipTableAdmin({\n  payslipsdata,\n  //setPayslipsdata,\n  handleDialogClose\n}) {\n  _s();\n\n  //let history = useHistory();\n  const classes = useStyles(); //const setPayPeriodEmpId = useSetRecoilState(payPeriodEmpIdState);\n\n  const {\n    updatePayrun,\n    batchpayrun,\n    update_payrun_error\n  } = usePayslipsContext(); // const Save_PayslipData = () => {\n  //   payslipsdata.forEach((data) => {\n  //     const { id } = data;\n  //     if (id) {\n  //       const { id, rec_id, tableData, ...fields } = data;\n  //       updatePayrun({ id, ...fields });\n  //     }\n  //   });\n  //   handleDialogClose();\n  // };\n\n  const Approve_PayslipData = () => {\n    batchpayrun.forEach(rec => {\n      if (rec.tableData.checked) {\n        updatePayrun({\n          id: rec.id,\n          status: \"Approved\"\n        });\n\n        if (!update_payrun_error) {\n          const recdata = batchpayrun.filter(r => r.id === rec.id);\n          recdata[0].status = \"Approved\";\n        }\n      }\n    });\n    batchpayrun.forEach(d => {\n      if (d.tableData) d.tableData.checked = false;\n    });\n  };\n\n  const Reject_PayslipData = () => {\n    batchpayrun.forEach(rec => {\n      if (rec.tableData.checked) {\n        updatePayrun({\n          id: rec.id,\n          status: \"Rejected\"\n        }); //update leavesdata\n\n        if (!update_payrun_error) {\n          const recdata = batchpayrun.filter(r => r.id === rec.id);\n          recdata[0].status = \"Rejected\";\n        }\n      }\n    });\n    batchpayrun.forEach(d => {\n      if (d.tableData) d.tableData.checked = false;\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: \"100%\",\n        paddingTop: \"5px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n        columns: columns,\n        data: batchpayrun,\n        title: \"Payslips\",\n        icons: {\n          Add: props => /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 29\n          }, this),\n          Edit: props => /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 30\n          }, this),\n          Delete: props => /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 32\n          }, this),\n          Clear: props => /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 31\n          }, this),\n          Check: props => /*#__PURE__*/_jsxDEV(CheckIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 31\n          }, this),\n          Search: props => /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 32\n          }, this),\n          ResetSearch: props => /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 37\n          }, this),\n          Build: props => /*#__PURE__*/_jsxDEV(BuildOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 31\n          }, this)\n        } // editable={{\n        //   onRowUpdate: (newData, oldData) =>\n        //     new Promise((resolve, reject) => {\n        //       setTimeout(() => {\n        //         const dataUpdate = [...payslipsdata];\n        //         const index = oldData.tableData.id;\n        //         dataUpdate[index] = newData;\n        //         setPayslipsdata([...dataUpdate]);\n        //         //approve_Expense(newData);\n        //         resolve();\n        //       }, 1000);\n        //     }),\n        // }}\n        ,\n        options: {\n          filtering: true,\n          selection: true,\n          exportButton: true,\n          headerStyle: {\n            backgroundColor: \"orange\",\n            color: \"#FFF\"\n          },\n          showTitle: true\n        },\n        components: {\n          Toolbar: props => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(MTableToolbar, { ...props\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                padding: \"5px 10px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                variant: \"contained\",\n                color: \"secondary\",\n                className: classes.button,\n                onClick: Approve_PayslipData,\n                children: [\"Approve \", /*#__PURE__*/_jsxDEV(Icon, {\n                  className: classes.rightIcon,\n                  children: \"send\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                variant: \"contained\",\n                color: \"secondary\",\n                className: classes.button,\n                onClick: Reject_PayslipData,\n                children: [\"Reject \", /*#__PURE__*/_jsxDEV(Icon, {\n                  className: classes.rightIcon,\n                  children: \"send\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 28\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 15\n          }, this)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PayslipTableAdmin, \"3mqFs4IVDZJn40iXifE8fHkUErY=\", false, function () {\n  return [useStyles, usePayslipsContext];\n});\n\n_c = PayslipTableAdmin;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: 0\n  },\n  button: {\n    margin: theme.spacing(1)\n  }\n}));\n\nvar _c;\n\n$RefreshReg$(_c, \"PayslipTableAdmin\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-demo/src/components/PayslipTableAdmin.js"],"names":["React","MaterialTable","MTableToolbar","makeStyles","TextField","Button","MenuItem","Icon","AddIcon","EditIcon","DeleteIcon","CheckIcon","SearchIcon","BuildOutlinedIcon","usePayslipsContext","columns","title","field","editable","type","dateSetting","locale","cellStyle","width","maxWidth","editComponent","props","e","onChange","target","value","PayslipTableAdmin","payslipsdata","handleDialogClose","classes","useStyles","updatePayrun","batchpayrun","update_payrun_error","Approve_PayslipData","forEach","rec","tableData","checked","id","status","recdata","filter","r","d","Reject_PayslipData","root","paddingTop","Add","Edit","Delete","Clear","Check","Search","ResetSearch","Build","filtering","selection","exportButton","headerStyle","backgroundColor","color","showTitle","Toolbar","padding","button","rightIcon","theme","margin","spacing"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,IAAwBC,aAAxB,QAA6C,gBAA7C;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,QAA5B,EAAsCC,IAAtC,QAAkD,mBAAlD;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,iBAAP,MAA8B,kCAA9B,C,CACA;AACA;AACA;;AACA,SAASC,kBAAT,QAAmC,6BAAnC,C,CACA;;;AAEA,MAAMC,OAAO,GAAG,CACd;AACEC,EAAAA,KAAK,EAAE,OADT;AAEEC,EAAAA,KAAK,EAAE,QAFT;AAGEC,EAAAA,QAAQ,EAAE;AAHZ,CADc,EAMd;AAAEF,EAAAA,KAAK,EAAE,QAAT;AAAmBC,EAAAA,KAAK,EAAE,QAA1B;AAAoCC,EAAAA,QAAQ,EAAE;AAA9C,CANc,EAOd;AACEF,EAAAA,KAAK,EAAE,UADT;AAEEC,EAAAA,KAAK,EAAE,UAFT;AAGEE,EAAAA,IAAI,EAAE,MAHR;AAIEC,EAAAA,WAAW,EAAE;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAJf;AAKEH,EAAAA,QAAQ,EAAE;AALZ,CAPc,EAcd;AACEF,EAAAA,KAAK,EAAE,OADT;AAEEC,EAAAA,KAAK,EAAE,YAFT;AAGEE,EAAAA,IAAI,EAAE,UAHR;AAIED,EAAAA,QAAQ,EAAE;AAJZ,CAdc,EAoBd;AACEF,EAAAA,KAAK,EAAE,YADT;AAEEC,EAAAA,KAAK,EAAE,UAFT;AAGEE,EAAAA,IAAI,EAAE,UAHR;AAIED,EAAAA,QAAQ,EAAE;AAJZ,CApBc,EA0Bd;AACEF,EAAAA,KAAK,EAAE,YADT;AAEEC,EAAAA,KAAK,EAAE,UAFT;AAGEE,EAAAA,IAAI,EAAE,UAHR;AAIED,EAAAA,QAAQ,EAAE;AAJZ,CA1Bc,EAgCd;AACEF,EAAAA,KAAK,EAAE,iBADT;AAEEC,EAAAA,KAAK,EAAE,kBAFT;AAGEE,EAAAA,IAAI,EAAE,UAHR;AAIED,EAAAA,QAAQ,EAAE;AAJZ,CAhCc,EAsCd;AACEF,EAAAA,KAAK,EAAE,iBADT;AAEEC,EAAAA,KAAK,EAAE,qBAFT;AAGEE,EAAAA,IAAI,EAAE,UAHR;AAIED,EAAAA,QAAQ,EAAE;AAJZ,CAtCc,EA4Cd;AACEF,EAAAA,KAAK,EAAE,YADT;AAEEC,EAAAA,KAAK,EAAE,aAFT;AAGEE,EAAAA,IAAI,EAAE,UAHR;AAIED,EAAAA,QAAQ,EAAE;AAJZ,CA5Cc,EAkDd;AACEF,EAAAA,KAAK,EAAE,YADT;AAEEC,EAAAA,KAAK,EAAE,cAFT;AAGEE,EAAAA,IAAI,EAAE,UAHR;AAIED,EAAAA,QAAQ,EAAE;AAJZ,CAlDc,EAwDd;AACEF,EAAAA,KAAK,EAAE,eADT;AAEEC,EAAAA,KAAK,EAAE,cAFT;AAGEE,EAAAA,IAAI,EAAE,UAHR;AAIED,EAAAA,QAAQ,EAAE;AAJZ,CAxDc,EA8Dd;AACA;AACA;AACEF,EAAAA,KAAK,EAAE,QADT;AAEEC,EAAAA,KAAK,EAAE,QAFT;AAGEC,EAAAA,QAAQ,EAAE,OAHZ;AAIEI,EAAAA,SAAS,EAAE;AACTC,IAAAA,KAAK,EAAE,EADE;AAETC,IAAAA,QAAQ,EAAE;AAFD,GAJb;AAQEC,EAAAA,aAAa,EAAGC,KAAD,iBACb,QAAC,SAAD,CACE;AADF;AAEE,IAAA,QAAQ,EAAGC,CAAD,IAAOD,KAAK,CAACE,QAAN,CAAeD,CAAC,CAACE,MAAF,CAASC,KAAxB,CAFnB;AAGE,IAAA,KAAK,EAAE;AAAEP,MAAAA,KAAK,EAAE;AAAT,KAHT;AAIE,IAAA,KAAK,EAAEG,KAAK,CAACI,KAJf;AAKE,IAAA,MAAM,MALR;AAAA,4BAOE,QAAC,QAAD;AAAU,MAAA,KAAK,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE,QAAC,QAAD;AAAU,MAAA,KAAK,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,eASE,QAAC,QAAD;AAAU,MAAA,KAAK,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATF,eAUE,QAAC,QAAD;AAAU,MAAA,KAAK,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AATJ,CAhEc,CAAhB;AAyFA,eAAe,SAASC,iBAAT,CAA2B;AACxCC,EAAAA,YADwC;AAExC;AACAC,EAAAA;AAHwC,CAA3B,EAIZ;AAAA;;AACD;AACA,QAAMC,OAAO,GAAGC,SAAS,EAAzB,CAFC,CAGD;;AACA,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA,WAAhB;AAA6BC,IAAAA;AAA7B,MAAqDxB,kBAAkB,EAA7E,CAJC,CAMD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA,QAAMyB,mBAAmB,GAAG,MAAM;AAChCF,IAAAA,WAAW,CAACG,OAAZ,CAAqBC,GAAD,IAAS;AAC3B,UAAIA,GAAG,CAACC,SAAJ,CAAcC,OAAlB,EAA2B;AACzBP,QAAAA,YAAY,CAAC;AAAEQ,UAAAA,EAAE,EAAEH,GAAG,CAACG,EAAV;AAAcC,UAAAA,MAAM,EAAE;AAAtB,SAAD,CAAZ;;AAEA,YAAI,CAACP,mBAAL,EAA0B;AACxB,gBAAMQ,OAAO,GAAGT,WAAW,CAACU,MAAZ,CAAoBC,CAAD,IAAOA,CAAC,CAACJ,EAAF,KAASH,GAAG,CAACG,EAAvC,CAAhB;AACAE,UAAAA,OAAO,CAAC,CAAD,CAAP,CAAWD,MAAX,GAAoB,UAApB;AACD;AACF;AACF,KATD;AAUAR,IAAAA,WAAW,CAACG,OAAZ,CAAqBS,CAAD,IAAO;AACzB,UAAIA,CAAC,CAACP,SAAN,EAAiBO,CAAC,CAACP,SAAF,CAAYC,OAAZ,GAAsB,KAAtB;AAClB,KAFD;AAGD,GAdD;;AAgBA,QAAMO,kBAAkB,GAAG,MAAM;AAC/Bb,IAAAA,WAAW,CAACG,OAAZ,CAAqBC,GAAD,IAAS;AAC3B,UAAIA,GAAG,CAACC,SAAJ,CAAcC,OAAlB,EAA2B;AACzBP,QAAAA,YAAY,CAAC;AAAEQ,UAAAA,EAAE,EAAEH,GAAG,CAACG,EAAV;AAAcC,UAAAA,MAAM,EAAE;AAAtB,SAAD,CAAZ,CADyB,CAEzB;;AACA,YAAI,CAACP,mBAAL,EAA0B;AACxB,gBAAMQ,OAAO,GAAGT,WAAW,CAACU,MAAZ,CAAoBC,CAAD,IAAOA,CAAC,CAACJ,EAAF,KAASH,GAAG,CAACG,EAAvC,CAAhB;AACAE,UAAAA,OAAO,CAAC,CAAD,CAAP,CAAWD,MAAX,GAAoB,UAApB;AACD;AACF;AACF,KATD;AAUAR,IAAAA,WAAW,CAACG,OAAZ,CAAqBS,CAAD,IAAO;AACzB,UAAIA,CAAC,CAACP,SAAN,EAAiBO,CAAC,CAACP,SAAF,CAAYC,OAAZ,GAAsB,KAAtB;AAClB,KAFD;AAGD,GAdD;;AAgBA,sBACE;AAAK,IAAA,SAAS,EAAET,OAAO,CAACiB,IAAxB;AAAA,2BACE;AAAK,MAAA,KAAK,EAAE;AAAE3B,QAAAA,QAAQ,EAAE,MAAZ;AAAoB4B,QAAAA,UAAU,EAAE;AAAhC,OAAZ;AAAA,6BACE,QAAC,aAAD;AACE,QAAA,OAAO,EAAErC,OADX;AAEE,QAAA,IAAI,EAAEsB,WAFR;AAGE,QAAA,KAAK,EAAC,UAHR;AAIE,QAAA,KAAK,EAAE;AACLgB,UAAAA,GAAG,EAAG3B,KAAD,iBAAW,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,kBADX;AAEL4B,UAAAA,IAAI,EAAG5B,KAAD,iBAAW,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,kBAFZ;AAGL6B,UAAAA,MAAM,EAAG7B,KAAD,iBAAW,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,kBAHd;AAIL8B,UAAAA,KAAK,EAAG9B,KAAD,iBAAW,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,kBAJb;AAKL+B,UAAAA,KAAK,EAAG/B,KAAD,iBAAW,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,kBALb;AAMLgC,UAAAA,MAAM,EAAGhC,KAAD,iBAAW,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,kBANd;AAOLiC,UAAAA,WAAW,EAAGjC,KAAD,iBAAW,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,kBAPnB;AAQLkC,UAAAA,KAAK,EAAGlC,KAAD,iBAAW,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AARb,SAJT,CAcE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AA3BF;AA4BE,QAAA,OAAO,EAAE;AACPmC,UAAAA,SAAS,EAAE,IADJ;AAEPC,UAAAA,SAAS,EAAE,IAFJ;AAGPC,UAAAA,YAAY,EAAE,IAHP;AAIPC,UAAAA,WAAW,EAAE;AACXC,YAAAA,eAAe,EAAE,QADN;AAEXC,YAAAA,KAAK,EAAE;AAFI,WAJN;AAQPC,UAAAA,SAAS,EAAE;AARJ,SA5BX;AAsCE,QAAA,UAAU,EAAE;AACVC,UAAAA,OAAO,EAAG1C,KAAD,iBACP;AAAA,oCACE,QAAC,aAAD,OAAmBA;AAAnB;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAK,cAAA,KAAK,EAAE;AAAE2C,gBAAAA,OAAO,EAAE;AAAX,eAAZ;AAAA,sCACE,QAAC,MAAD;AACE,gBAAA,IAAI,EAAC,QADP;AAEE,gBAAA,OAAO,EAAC,WAFV;AAGE,gBAAA,KAAK,EAAC,WAHR;AAIE,gBAAA,SAAS,EAAEnC,OAAO,CAACoC,MAJrB;AAKE,gBAAA,OAAO,EAAE/B,mBALX;AAAA,oDAOU,QAAC,IAAD;AAAM,kBAAA,SAAS,EAAEL,OAAO,CAACqC,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAPV;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAUE,QAAC,MAAD;AACE,gBAAA,IAAI,EAAC,QADP;AAEE,gBAAA,OAAO,EAAC,WAFV;AAGE,gBAAA,KAAK,EAAC,WAHR;AAIE,gBAAA,SAAS,EAAErC,OAAO,CAACoC,MAJrB;AAKE,gBAAA,OAAO,EAAEpB,kBALX;AAAA,mDAOS,QAAC,IAAD;AAAM,kBAAA,SAAS,EAAEhB,OAAO,CAACqC,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAPT;AAAA;AAAA;AAAA;AAAA;AAAA,sBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFQ;AAtCd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAiFD;;GAvIuBxC,iB;UAMNI,S,EAE2CrB,kB;;;KARrCiB,iB;AAyIxB,MAAMI,SAAS,GAAGhC,UAAU,CAAEqE,KAAD,KAAY;AACvCrB,EAAAA,IAAI,EAAE;AACJkB,IAAAA,OAAO,EAAE;AADL,GADiC;AAIvCC,EAAAA,MAAM,EAAE;AACNG,IAAAA,MAAM,EAAED,KAAK,CAACE,OAAN,CAAc,CAAd;AADF;AAJ+B,CAAZ,CAAD,CAA5B","sourcesContent":["import React from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { TextField, Button, MenuItem, Icon } from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport BuildOutlinedIcon from \"@material-ui/icons/BuildOutlined\";\r\n//import { useHistory } from \"react-router-dom\";\r\n//import { useSetRecoilState } from \"recoil\";\r\n//import { payPeriodEmpIdState } from \"./data/atomdata\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\n//import { useEmployeesContext } from \"../context/employees_context\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Batch\",\r\n    field: \"payrun\",\r\n    editable: \"never\",\r\n  },\r\n  { title: \"Period\", field: \"period\", editable: \"never\" },\r\n  {\r\n    title: \"Pay Date\",\r\n    field: \"pay_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Wages\",\r\n    field: \"totalwages\",\r\n    type: \"currency\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"TAP Amount\",\r\n    field: \"totaltap\",\r\n    type: \"currency\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"SCP Amount\",\r\n    field: \"totalscp\",\r\n    type: \"currency\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Site Allowances\",\r\n    field: \"totalsitesallows\",\r\n    type: \"currency\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Expenses Claims\",\r\n    field: \"totalexpensesclaims\",\r\n    type: \"currency\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Allowances\",\r\n    field: \"totalallows\",\r\n    type: \"currency\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Deductions\",\r\n    field: \"totaldeducts\",\r\n    type: \"currency\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Total Payroll\",\r\n    field: \"totalpayroll\",\r\n    type: \"currency\",\r\n    editable: \"never\",\r\n  },\r\n  // { title: \"Bank Name\", field: \"bank_name\" },\r\n  // { title: \"Bank AC No\", field: \"bank_accno\" },\r\n  {\r\n    title: \"Status\",\r\n    field: \"status\",\r\n    editable: \"never\",\r\n    cellStyle: {\r\n      width: 50,\r\n      maxWidth: 50,\r\n    },\r\n    editComponent: (props) => (\r\n      <TextField\r\n        //defaultValue={props.value || null}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        style={{ width: 100 }}\r\n        value={props.value}\r\n        select\r\n      >\r\n        <MenuItem value=\"Pending\">Pending</MenuItem>\r\n        <MenuItem value=\"Approve\">Approve</MenuItem>\r\n        <MenuItem value=\"Reject\">Reject</MenuItem>\r\n        <MenuItem value=\"Cancel\">Cancel</MenuItem>\r\n      </TextField>\r\n    ),\r\n  },\r\n];\r\n\r\nexport default function PayslipTableAdmin({\r\n  payslipsdata,\r\n  //setPayslipsdata,\r\n  handleDialogClose,\r\n}) {\r\n  //let history = useHistory();\r\n  const classes = useStyles();\r\n  //const setPayPeriodEmpId = useSetRecoilState(payPeriodEmpIdState);\r\n  const { updatePayrun, batchpayrun, update_payrun_error } = usePayslipsContext();\r\n\r\n  // const Save_PayslipData = () => {\r\n  //   payslipsdata.forEach((data) => {\r\n  //     const { id } = data;\r\n  //     if (id) {\r\n  //       const { id, rec_id, tableData, ...fields } = data;\r\n  //       updatePayrun({ id, ...fields });\r\n  //     }\r\n  //   });\r\n\r\n  //   handleDialogClose();\r\n  // };\r\n\r\n  const Approve_PayslipData = () => {\r\n    batchpayrun.forEach((rec) => {\r\n      if (rec.tableData.checked) {\r\n        updatePayrun({ id: rec.id, status: \"Approved\" });\r\n\r\n        if (!update_payrun_error) {\r\n          const recdata = batchpayrun.filter((r) => r.id === rec.id);\r\n          recdata[0].status = \"Approved\";\r\n        }\r\n      }\r\n    });\r\n    batchpayrun.forEach((d) => {\r\n      if (d.tableData) d.tableData.checked = false;\r\n    });\r\n  };\r\n\r\n  const Reject_PayslipData = () => {\r\n    batchpayrun.forEach((rec) => {\r\n      if (rec.tableData.checked) {\r\n        updatePayrun({ id: rec.id, status: \"Rejected\" });\r\n        //update leavesdata\r\n        if (!update_payrun_error) {\r\n          const recdata = batchpayrun.filter((r) => r.id === rec.id);\r\n          recdata[0].status = \"Rejected\";\r\n        }\r\n      }\r\n    });\r\n    batchpayrun.forEach((d) => {\r\n      if (d.tableData) d.tableData.checked = false;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={batchpayrun}\r\n          title=\"Payslips\"\r\n          icons={{\r\n            Add: (props) => <AddIcon />,\r\n            Edit: (props) => <EditIcon />,\r\n            Delete: (props) => <DeleteIcon />,\r\n            Clear: (props) => <DeleteIcon />,\r\n            Check: (props) => <CheckIcon />,\r\n            Search: (props) => <SearchIcon />,\r\n            ResetSearch: (props) => <DeleteIcon />,\r\n            Build: (props) => <BuildOutlinedIcon />,\r\n          }}\r\n          // editable={{\r\n          //   onRowUpdate: (newData, oldData) =>\r\n          //     new Promise((resolve, reject) => {\r\n          //       setTimeout(() => {\r\n          //         const dataUpdate = [...payslipsdata];\r\n          //         const index = oldData.tableData.id;\r\n          //         dataUpdate[index] = newData;\r\n          //         setPayslipsdata([...dataUpdate]);\r\n          //         //approve_Expense(newData);\r\n\r\n          //         resolve();\r\n          //       }, 1000);\r\n          //     }),\r\n          // }}\r\n          options={{\r\n            filtering: true,\r\n            selection: true,\r\n            exportButton: true,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"#FFF\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n                <div style={{ padding: \"5px 10px\" }}>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    onClick={Approve_PayslipData}\r\n                  >\r\n                    Approve <Icon className={classes.rightIcon}>send</Icon>\r\n                  </Button>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    onClick={Reject_PayslipData}\r\n                  >\r\n                    Reject <Icon className={classes.rightIcon}>send</Icon>\r\n                  </Button>\r\n                  {/* <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    onClick={Save_PayslipData}\r\n                  >\r\n                    Update <Icon className={classes.rightIcon}>send</Icon>\r\n                  </Button> */}\r\n                </div>\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n"]},"metadata":{},"sourceType":"module"}
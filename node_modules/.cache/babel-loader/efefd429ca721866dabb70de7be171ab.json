{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-demo\\\\src\\\\components\\\\ExpenseTableViewSummary.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport MaterialTable from \"material-table\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Box } from \"@chakra-ui/react\"; //import AddIcon from \"@material-ui/icons/Add\";\n//import { EditIcon } from \"@material-ui/icons\";\n\nimport { GrFormView } from \"react-icons/gr\"; //import DeleteIcon from \"@material-ui/icons/Delete\";\n//import CheckIcon from \"@material-ui/icons/Check\";\n//import SearchIcon from \"@material-ui/icons/Search\";\n//import LeaveForm from \"./LeaveForm\";\n//import { CustomDialog } from \"../helpers/CustomDialog\";\n//import { AlertDialog } from \"../helpers/AlertDialogBox\";\n//import { useExpensesStatus } from \"./expenses/useExpensesStatus\";\n\nimport { useExpensesPeriod } from \"./expenses/useExpensesPeriod\";\nimport { useExpensesContext } from \"../context/expenses_context\";\nimport ExpenseFormView from \"./ExpenseFormView\"; //import { useEmployeesContext } from \"../context/employees_context\";\n//const FILTERSTRING = \"Pending\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  title: \"Name\",\n  field: \"name\"\n}, {\n  title: \"Date\",\n  field: \"date\",\n  type: \"date\",\n  dateSetting: {\n    locale: \"en-GB\"\n  }\n}, {\n  title: \"Description\",\n  field: \"description\"\n}, {\n  title: \"Amount\",\n  field: \"amount\",\n  type: \"currency\"\n}, {\n  title: \"Status\",\n  field: \"status\"\n}];\nconst initial_form = {\n  name: \"\",\n  date: \"\",\n  purchased_from: \"\",\n  description: \"\",\n  status: \"Pending\",\n  amount: 0,\n  attachment1_name: \"\",\n  attachment1_url: \"\",\n  attachment2_name: \"\",\n  attachment2_url: \"\",\n  attachment3_name: \"\",\n  attachment3_url: \"\"\n};\nexport default function ExpenseTableView({\n  year,\n  month\n}) {\n  _s();\n\n  const classes = useStyles(); //const [isDialogOpen, setIsDialogOpen] = useState(false);\n  //const [isAlertOpen, setIsAlertOpen] = useState(false);\n\n  const [totals, setTotals] = useState(0);\n  const [isCalc, setIsCalc] = useState(false);\n  const [isDialogOpen, setIsDialogOpen] = useState(false); //const { loadEmployees } = useEmployeesContext();\n  //const { expensesstatus, setExpStatusId } = useExpensesStatus();\n\n  const [formdata, setFormdata] = useState(initial_form);\n  const {\n    expensesperiod,\n    setExpPeriodYrId,\n    setExpPeriodMthId\n  } = useExpensesPeriod();\n  const {\n    //expenses,\n    editExpenseID,\n    //updateExpense,\n    //addExpense,\n    //deleteExpense,\n    setEditExpenseID,\n    setIsExpenseEditingOn,\n    setIsExpenseEditingOff\n  } = useExpensesContext();\n  useEffect(() => {\n    setExpPeriodYrId(year);\n    setExpPeriodMthId(month);\n    setIsCalc(true);\n  }, []);\n  useEffect(() => {\n    if (expensesperiod) {\n      Calc_Totals();\n      setIsCalc(false);\n    }\n  }, [isCalc]);\n\n  const Calc_Totals = () => {\n    const amount = expensesperiod.reduce((acc, r) => {\n      if (r.status === \"Approved\" || r.status === \"Approve\") {\n        return acc + r.amount;\n      } else {\n        return acc;\n      }\n    }, 0);\n    setTotals(amount);\n  };\n\n  const handleDialogOpen = () => {\n    setIsDialogOpen(true);\n  };\n\n  const handleDialogClose = () => {\n    setIsDialogOpen(false);\n  };\n\n  const View_Expenses = data => {\n    const {\n      id\n    } = data;\n    setFormdata({ ...data\n    });\n    setFormdata({ ...data\n    });\n    setEditExpenseID(id);\n    setIsExpenseEditingOn();\n    handleDialogOpen();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      maxW: \"100%\",\n      pt: \"5px\",\n      overflow: \"scroll\",\n      children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n        columns: columns,\n        data: expensesperiod,\n        title: \"Leave Application\",\n        actions: [rowData => ({\n          icon: () => /*#__PURE__*/_jsxDEV(GrFormView, {\n            size: \"33px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 27\n          }, this),\n          tooltip: \"View\",\n          onClick: (event, rowData) => {\n            View_Expenses(rowData);\n          }\n        })],\n        options: {\n          filtering: false,\n          search: false,\n          toolbar: false,\n          paging: false,\n          headerStyle: {\n            backgroundColor: \"rgba(75, 192, 192, 1)\",\n            color: \"white\"\n          },\n          showTitle: false\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CustomDialog, {\n      isOpen: isDialogOpen,\n      handleClose: handleDialogClose,\n      title: \"\",\n      showButton: true,\n      isFullscreen: false,\n      isFullwidth: false,\n      children: /*#__PURE__*/_jsxDEV(ExpenseFormView, {\n        formdata: formdata,\n        setFormdata: setFormdata,\n        handleDialogClose: handleDialogClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ExpenseTableView, \"Tc3/Y/ioq8Oz0zztnUxvnwqvNfI=\", false, function () {\n  return [useStyles, useExpensesPeriod, useExpensesContext];\n});\n\n_c = ExpenseTableView;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: 0\n  }\n}));\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseTableView\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-demo/src/components/ExpenseTableViewSummary.js"],"names":["React","useState","useEffect","MaterialTable","makeStyles","Box","GrFormView","useExpensesPeriod","useExpensesContext","ExpenseFormView","columns","title","field","type","dateSetting","locale","initial_form","name","date","purchased_from","description","status","amount","attachment1_name","attachment1_url","attachment2_name","attachment2_url","attachment3_name","attachment3_url","ExpenseTableView","year","month","classes","useStyles","totals","setTotals","isCalc","setIsCalc","isDialogOpen","setIsDialogOpen","formdata","setFormdata","expensesperiod","setExpPeriodYrId","setExpPeriodMthId","editExpenseID","setEditExpenseID","setIsExpenseEditingOn","setIsExpenseEditingOff","Calc_Totals","reduce","acc","r","handleDialogOpen","handleDialogClose","View_Expenses","data","id","root","rowData","icon","tooltip","onClick","event","filtering","search","toolbar","paging","headerStyle","backgroundColor","color","showTitle","theme","padding"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Box } from \"@chakra-ui/react\";\r\n//import AddIcon from \"@material-ui/icons/Add\";\r\n//import { EditIcon } from \"@material-ui/icons\";\r\nimport { GrFormView } from \"react-icons/gr\";\r\n//import DeleteIcon from \"@material-ui/icons/Delete\";\r\n//import CheckIcon from \"@material-ui/icons/Check\";\r\n//import SearchIcon from \"@material-ui/icons/Search\";\r\n//import LeaveForm from \"./LeaveForm\";\r\n//import { CustomDialog } from \"../helpers/CustomDialog\";\r\n//import { AlertDialog } from \"../helpers/AlertDialogBox\";\r\n//import { useExpensesStatus } from \"./expenses/useExpensesStatus\";\r\nimport { useExpensesPeriod } from \"./expenses/useExpensesPeriod\";\r\nimport { useExpensesContext } from \"../context/expenses_context\";\r\nimport ExpenseFormView from \"./ExpenseFormView\";\r\n//import { useEmployeesContext } from \"../context/employees_context\";\r\n\r\n//const FILTERSTRING = \"Pending\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n  },\r\n  {\r\n    title: \"Date\",\r\n    field: \"date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n  },\r\n\r\n  { title: \"Description\", field: \"description\" },\r\n  { title: \"Amount\", field: \"amount\", type: \"currency\" },\r\n  { title: \"Status\", field: \"status\" },\r\n];\r\n\r\nconst initial_form = {\r\n  name: \"\",\r\n  date: \"\",\r\n  purchased_from: \"\",\r\n  description: \"\",\r\n  status: \"Pending\",\r\n  amount: 0,\r\n  attachment1_name: \"\",\r\n  attachment1_url: \"\",\r\n  attachment2_name: \"\",\r\n  attachment2_url: \"\",\r\n  attachment3_name: \"\",\r\n  attachment3_url: \"\",\r\n};\r\n\r\nexport default function ExpenseTableView({ year, month }) {\r\n  const classes = useStyles();\r\n  //const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  //const [isAlertOpen, setIsAlertOpen] = useState(false);\r\n  const [totals, setTotals] = useState(0);\r\n  const [isCalc, setIsCalc] = useState(false);\r\n   const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  //const { loadEmployees } = useEmployeesContext();\r\n  //const { expensesstatus, setExpStatusId } = useExpensesStatus();\r\n   const [formdata, setFormdata] = useState(initial_form);\r\n  const { expensesperiod, setExpPeriodYrId, setExpPeriodMthId } =\r\n    useExpensesPeriod();\r\nconst {\r\n  //expenses,\r\n  editExpenseID,\r\n  //updateExpense,\r\n  //addExpense,\r\n  //deleteExpense,\r\n  setEditExpenseID,\r\n  setIsExpenseEditingOn,\r\n  setIsExpenseEditingOff,\r\n  } = useExpensesContext();\r\n  \r\n  useEffect(() => {\r\n    setExpPeriodYrId(year);\r\n    setExpPeriodMthId(month);\r\n    setIsCalc(true);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (expensesperiod) {\r\n      Calc_Totals();\r\n      setIsCalc(false);\r\n    }\r\n  }, [isCalc]);\r\n\r\n  const Calc_Totals = () => {\r\n    const amount = expensesperiod.reduce((acc, r) => {\r\n      if (r.status === \"Approved\" || r.status === \"Approve\") {\r\n        return acc + r.amount;\r\n      } else {\r\n        return acc;\r\n      }\r\n    }, 0);\r\n    setTotals(amount);\r\n  };\r\n\r\n  const handleDialogOpen = () => {\r\n    setIsDialogOpen(true);\r\n  };\r\n\r\n  const handleDialogClose = () => {\r\n    setIsDialogOpen(false);\r\n  };\r\n\r\n  const View_Expenses = (data) => {\r\n     const { id } = data;\r\n     setFormdata({ ...data });\r\n     setFormdata({ ...data });\r\n     setEditExpenseID(id);\r\n     setIsExpenseEditingOn();\r\n     handleDialogOpen();\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <h1>Expenses Claims Application</h1> */}\r\n\r\n      <Box maxW=\"100%\" pt=\"5px\" overflow=\"scroll\">\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={expensesperiod}\r\n          title=\"Leave Application\"\r\n          actions={[\r\n            (rowData) => ({\r\n              icon: () => <GrFormView size=\"33px\" />,\r\n              tooltip: \"View\",\r\n              onClick: (event, rowData) => {\r\n                View_Expenses(rowData);\r\n              },\r\n            }),\r\n          ]}\r\n          options={{\r\n            filtering: false,\r\n            search: false,\r\n            toolbar: false,\r\n            paging: false,\r\n            headerStyle: {\r\n              backgroundColor: \"rgba(75, 192, 192, 1)\",\r\n              color: \"white\",\r\n            },\r\n            showTitle: false,\r\n          }}\r\n        />\r\n      </Box>\r\n      <CustomDialog\r\n        isOpen={isDialogOpen}\r\n        handleClose={handleDialogClose}\r\n        title=\"\"\r\n        showButton={true}\r\n        isFullscreen={false}\r\n        isFullwidth={false}\r\n      >\r\n        <ExpenseFormView\r\n          formdata={formdata}\r\n          setFormdata={setFormdata}\r\n          handleDialogClose={handleDialogClose}\r\n        />\r\n      </CustomDialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n"]},"metadata":{},"sourceType":"module"}
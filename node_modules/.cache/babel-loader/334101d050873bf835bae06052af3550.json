{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-demo\\\\src\\\\components\\\\PayslipTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport MaterialTable, { MTableToolbar } from \"material-table\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport BuildOutlinedIcon from \"@material-ui/icons/BuildOutlined\";\nimport { useCustomToast } from \"../helpers/useCustomToast\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useRecoilState } from \"recoil\";\nimport { payrunState, payrunIdState, payrunStatusState } from \"./data/atomdata\";\nimport { usePayslipsContext } from \"../context/payslips_context\";\n//import { useExpensesContext } from \"../context/expenses_context\";\n//import { useDailyAllowancesContext } from \"../context/dailyallowances_context\";\nimport { AlertDialogBox } from \"../helpers/AlertDialogBox\";\nimport { usePayrun } from \"./payrun/usePayrun\";\nimport { usePayslipsBatch } from \"./payslips/usePayslipsBatch\";\nimport { useDeletePayrun } from \"./payrun/useDeletePayrun\";\nimport { useExpensesPayrun } from \"./expenses/useExpensesPayrun\";\nimport { useUpdateExpenses } from \"./expenses/useUpdateExpenses\";\nimport { useDailyAllowsPayrun } from \"./dailyallows/useDailyAllowsPayrun\";\nimport { useUpdateDailyAllows } from \"./dailyallows/useUpdateDailyAllows\";\n\n//const FILTERSTRING = \"Pending\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PayslipTable() {\n  _s();\n  let navigate = useNavigate();\n  const toast = useCustomToast();\n  const classes = useStyles();\n  const {\n    payrun\n  } = usePayrun();\n  const {\n    payslipsbatch,\n    setPSBPayrunId\n  } = usePayslipsBatch();\n  const {\n    expensespayrun,\n    setExpPayrunId\n  } = useExpensesPayrun();\n  const {\n    dailyallowspayrun,\n    setDailyAllowsPayrunId\n  } = useDailyAllowsPayrun();\n  const updateExpenses = useUpdateExpenses();\n  const deletePayrun = useDeletePayrun();\n  const updateDailyAllows = useUpdateDailyAllows();\n  const [input, setInput] = useRecoilState(payrunState);\n  //const [isLoadInput, setIsLoadInput] = useState(false);\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\n  const [deletestate, setDeletestate] = useState({\n    id: \"\",\n    payrun: \"\"\n  });\n  const [payrunId, setPayrunId] = useRecoilState(payrunIdState);\n  const [payrunstatus, setPayrunStatus] = useRecoilState(payrunStatusState);\n  // const { loadPeriodExpenses, periodexpenses, updateExpense } =\n  //   useExpensesContext();\n  // const {\n  //   getSingleBatchDailyAllowance,\n  //   singlebatchdailyallowance,\n  //   updateDailyAllowance,\n  //   deleteDailyAllowance,\n  // } = useDailyAllowancesContext();\n  const {\n    //payrun,\n    //getPayrun,\n    payrun_loading,\n    payrun_error,\n    getSinglePayslip,\n    setEditPayslipID,\n    setIsPayslipEditingOn,\n    //single_payslip,\n    setPayslipPeriod,\n    //deletePayrun,\n    deletePayslip\n    //pending_payslips,\n    //loadPendingPayslips,\n  } = usePayslipsContext();\n  const columns = useMemo(() => [\n  // { title: \"Period\", field: \"period\" },\n  {\n    title: \"Payrun Batch\",\n    field: \"payrun\",\n    type: \"date\",\n    dateSetting: {\n      locale: \"en-GB\"\n    }\n  },\n  // {\n  //   title: \"Pay Date\",\n  //   field: \"pay_date\",\n  //   type: \"date\",\n  //   dateSetting: { locale: \"en-GB\" },\n  // },\n  {\n    title: \"Total Wages\",\n    field: \"totalwages\",\n    type: \"currency\"\n  }, {\n    title: \"TAP Amount\",\n    field: \"totaltap\",\n    type: \"currency\"\n  }, {\n    title: \"SCP Amount\",\n    field: \"totalscp\",\n    type: \"currency\"\n  }, {\n    title: \"Site Allowances\",\n    field: \"totalsitesallows\",\n    type: \"currency\"\n  }, {\n    title: \"Expenses Claims\",\n    field: \"totalexpensesclaims\",\n    type: \"currency\"\n  }, {\n    title: \"Total Allowances\",\n    field: \"totalallows\",\n    type: \"currency\"\n  }, {\n    title: \"Total Deductions\",\n    field: \"totaldeducts\",\n    type: \"currency\"\n  }, {\n    title: \"Total Payroll\",\n    field: \"totalpayroll\",\n    type: \"currency\"\n  }, {\n    title: \"Status\",\n    field: \"status\"\n  }], []);\n  useEffect(() => {\n    setPSBPayrunId(\"XXX\");\n    setDailyAllowsPayrunId(\"XXX\");\n  }, []);\n  // useEffect(() => {\n  //   if (single_payslip.payrun) {\n  //     console.log(\"single_payslip\", single_payslip);\n  //   }\n  // }, [single_payslip]);\n\n  const handleAlertOpen = () => {\n    setIsAlertOpen(true);\n  };\n  const handleAlertClose = () => {\n    setIsAlertOpen(false);\n  };\n  const update_Input = async data => {\n    console.log(\"input\", data);\n    setInput({\n      ...input,\n      id: data.id,\n      payfreq: data.payfreq,\n      fromdate: data.fromdate,\n      todate: data.todate,\n      paydate: data.paydate,\n      period: data.period,\n      payrun: data.payrun,\n      totalwages: data.totalwages,\n      totaltap: data.totaltap,\n      totalscp: data.totalscp,\n      totalallows: data.totalallows,\n      totaldeducts: data.totaldeducts,\n      totalpayroll: data.totalpayroll,\n      status: data.status\n    });\n    setInput({\n      ...input,\n      id: data.id,\n      payfreq: data.payfreq,\n      fromdate: data.fromdate,\n      todate: data.todate,\n      paydate: data.paydate,\n      period: data.period,\n      payrun: data.payrun,\n      totalwages: data.totalwages,\n      totaltap: data.totaltap,\n      totalscp: data.totalscp,\n      totalallows: data.totalallows,\n      totaldeducts: data.totaldeducts,\n      totalpayroll: data.totalpayroll,\n      status: data.status\n    });\n    console.log(\"payrun\", input);\n  };\n  const update_Payslip = async data => {\n    const {\n      id,\n      payrun\n    } = data;\n    setPayrunId(id);\n    setPayrunStatus(data.status);\n    setPayslipPeriod(payrun); //save to recoil\n    setEditPayslipID(id);\n    setIsPayslipEditingOn();\n    getSinglePayslip(id);\n    navigate(\"/payrunbatch\");\n  };\n  const delete_Payslip = data => {\n    const {\n      id,\n      payrun\n    } = data;\n    setDeletestate({\n      id: id,\n      payrun: payrun\n    });\n    setPSBPayrunId(payrun);\n    setExpPayrunId(payrun);\n    setDailyAllowsPayrunId(payrun);\n    //loadPeriodExpenses(payrun);\n    //getSingleBatchDailyAllowance(payrun);\n    handleAlertOpen();\n  };\n  const handleOnDeleteConfirm = data => {\n    console.log(\"payslip delete\", deletestate);\n    const {\n      id,\n      payrun\n    } = deletestate;\n\n    //load period expenses\n    //loadPeriodExpenses(payrun);\n\n    //delete allows detls\n    payslipsbatch && payslipsbatch.forEach(rec => {\n      if (rec.payrun === payrun) {\n        deletePayslip(rec.id);\n      }\n    });\n\n    //unpaid expenses\n    expensespayrun && expensespayrun.forEach(rec => {\n      if (rec.payrun === payrun) {\n        updateExpenses({\n          id: rec.id,\n          payrun: \"\"\n        });\n      }\n    });\n\n    //delete dailyallows\n    dailyallowspayrun && dailyallowspayrun.forEach(rec => {\n      if (rec.payrun === payrun) {\n        updateDailyAllows({\n          id: rec.id,\n          payrun: \"\"\n        });\n      }\n    });\n\n    //delete payrun\n    deletePayrun(id);\n    toast({\n      title: `Payroll Batch being deleted!`,\n      status: \"warning\"\n    });\n    //getPayrun();\n  };\n\n  if (payrun_loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Loading.....Payslips\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this);\n  }\n  if (payrun_error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Internet connection problem!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: \"100%\",\n        paddingTop: \"5px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(MaterialTable, {\n        columns: columns,\n        data: payrun,\n        title: \"Payroll\",\n        icons: {\n          Add: props => /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 29\n          }, this),\n          Edit: props => /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 30\n          }, this),\n          Delete: props => /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 32\n          }, this),\n          Clear: props => /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 31\n          }, this),\n          Check: props => /*#__PURE__*/_jsxDEV(CheckIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 31\n          }, this),\n          Search: props => /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 32\n          }, this),\n          ResetSearch: props => /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 37\n          }, this),\n          Build: props => /*#__PURE__*/_jsxDEV(BuildOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 31\n          }, this)\n        },\n        actions: [rowData => ({\n          //disabled: rowData.status !== \"Pending\",\n          icon: \"edit\",\n          position: \"row\",\n          tooltip: \"Edit Record\",\n          onClick: (event, rowData) => {\n            update_Input(rowData);\n            update_Payslip(rowData);\n          }\n        }), rowData => ({\n          disabled: rowData.status === \"Approved\",\n          icon: \"delete\",\n          tooltip: \"Delete Record\",\n          position: \"row\",\n          onClick: (event, rowData) => {\n            //delete_Payslip(rowData);\n            delete_Payslip(rowData);\n          }\n        })\n\n        // {\n        //   icon: \"add\",\n        //   tooltip: \"Add Record\",\n        //   isFreeAction: true,\n        //   onClick: (event, rowData) => {\n        //     add_Payslip(rowData);\n        //   },\n        // },\n        ],\n\n        options: {\n          filtering: true,\n          headerStyle: {\n            backgroundColor: \"#90CDF4\",\n            color: \"black\"\n          },\n          showTitle: true\n        },\n        components: {\n          Toolbar: props => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(MTableToolbar, {\n              ...props\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 15\n          }, this)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AlertDialogBox, {\n        onClose: handleAlertClose,\n        onConfirm: handleOnDeleteConfirm,\n        isOpen: isAlertOpen,\n        title: \"Delete Payslip Batch\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Are you sure you want to delete ?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 237,\n    columnNumber: 5\n  }, this);\n}\n_s(PayslipTable, \"qywPHlRX0LJK+GEROfdPRgB+Kcs=\", false, function () {\n  return [useNavigate, useCustomToast, useStyles, usePayrun, usePayslipsBatch, useExpensesPayrun, useDailyAllowsPayrun, useUpdateExpenses, useDeletePayrun, useUpdateDailyAllows, useRecoilState, useRecoilState, useRecoilState, usePayslipsContext];\n});\n_c = PayslipTable;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: 0\n  }\n}));\nvar _c;\n$RefreshReg$(_c, \"PayslipTable\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","MaterialTable","MTableToolbar","makeStyles","AddIcon","EditIcon","DeleteIcon","CheckIcon","SearchIcon","BuildOutlinedIcon","useCustomToast","useNavigate","useRecoilState","payrunState","payrunIdState","payrunStatusState","usePayslipsContext","AlertDialogBox","usePayrun","usePayslipsBatch","useDeletePayrun","useExpensesPayrun","useUpdateExpenses","useDailyAllowsPayrun","useUpdateDailyAllows","PayslipTable","navigate","toast","classes","useStyles","payrun","payslipsbatch","setPSBPayrunId","expensespayrun","setExpPayrunId","dailyallowspayrun","setDailyAllowsPayrunId","updateExpenses","deletePayrun","updateDailyAllows","input","setInput","isAlertOpen","setIsAlertOpen","deletestate","setDeletestate","id","payrunId","setPayrunId","payrunstatus","setPayrunStatus","payrun_loading","payrun_error","getSinglePayslip","setEditPayslipID","setIsPayslipEditingOn","setPayslipPeriod","deletePayslip","columns","title","field","type","dateSetting","locale","handleAlertOpen","handleAlertClose","update_Input","data","console","log","payfreq","fromdate","todate","paydate","period","totalwages","totaltap","totalscp","totalallows","totaldeducts","totalpayroll","status","update_Payslip","delete_Payslip","handleOnDeleteConfirm","forEach","rec","root","maxWidth","paddingTop","Add","props","Edit","Delete","Clear","Check","Search","ResetSearch","Build","rowData","icon","position","tooltip","onClick","event","disabled","filtering","headerStyle","backgroundColor","color","showTitle","Toolbar","theme","padding"],"sources":["D:/react-myprojects/hrms-demo/src/components/PayslipTable.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport BuildOutlinedIcon from \"@material-ui/icons/BuildOutlined\";\r\nimport { useCustomToast } from \"../helpers/useCustomToast\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { payrunState, payrunIdState, payrunStatusState } from \"./data/atomdata\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\n//import { useExpensesContext } from \"../context/expenses_context\";\r\n//import { useDailyAllowancesContext } from \"../context/dailyallowances_context\";\r\nimport { AlertDialogBox } from \"../helpers/AlertDialogBox\";\r\nimport { usePayrun } from \"./payrun/usePayrun\";\r\nimport { usePayslipsBatch } from \"./payslips/usePayslipsBatch\";\r\nimport { useDeletePayrun } from \"./payrun/useDeletePayrun\";\r\nimport { useExpensesPayrun } from \"./expenses/useExpensesPayrun\";\r\nimport { useUpdateExpenses } from \"./expenses/useUpdateExpenses\";\r\nimport { useDailyAllowsPayrun } from \"./dailyallows/useDailyAllowsPayrun\";\r\nimport { useUpdateDailyAllows } from \"./dailyallows/useUpdateDailyAllows\";\r\n\r\n//const FILTERSTRING = \"Pending\";\r\n\r\nexport default function PayslipTable() {\r\n  let navigate = useNavigate();\r\n  const toast = useCustomToast();\r\n  const classes = useStyles();\r\n  const { payrun } = usePayrun();\r\n  const { payslipsbatch, setPSBPayrunId } = usePayslipsBatch();\r\n  const { expensespayrun, setExpPayrunId } = useExpensesPayrun();\r\n  const { dailyallowspayrun, setDailyAllowsPayrunId } = useDailyAllowsPayrun();\r\n  const updateExpenses = useUpdateExpenses();\r\n  const deletePayrun = useDeletePayrun();\r\n  const updateDailyAllows = useUpdateDailyAllows();\r\n  const [input, setInput] = useRecoilState(payrunState);\r\n  //const [isLoadInput, setIsLoadInput] = useState(false);\r\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\r\n  const [deletestate, setDeletestate] = useState({ id: \"\", payrun: \"\" });\r\n  const [payrunId, setPayrunId] = useRecoilState(payrunIdState);\r\n  const [payrunstatus, setPayrunStatus] = useRecoilState(payrunStatusState);\r\n  // const { loadPeriodExpenses, periodexpenses, updateExpense } =\r\n  //   useExpensesContext();\r\n  // const {\r\n  //   getSingleBatchDailyAllowance,\r\n  //   singlebatchdailyallowance,\r\n  //   updateDailyAllowance,\r\n  //   deleteDailyAllowance,\r\n  // } = useDailyAllowancesContext();\r\n  const {\r\n    //payrun,\r\n    //getPayrun,\r\n    payrun_loading,\r\n    payrun_error,\r\n    getSinglePayslip,\r\n    setEditPayslipID,\r\n    setIsPayslipEditingOn,\r\n    //single_payslip,\r\n    setPayslipPeriod,\r\n    //deletePayrun,\r\n    deletePayslip,\r\n    //pending_payslips,\r\n    //loadPendingPayslips,\r\n  } = usePayslipsContext();\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      // { title: \"Period\", field: \"period\" },\r\n      {\r\n        title: \"Payrun Batch\",\r\n        field: \"payrun\",\r\n        type: \"date\",\r\n        dateSetting: { locale: \"en-GB\" },\r\n      },\r\n      // {\r\n      //   title: \"Pay Date\",\r\n      //   field: \"pay_date\",\r\n      //   type: \"date\",\r\n      //   dateSetting: { locale: \"en-GB\" },\r\n      // },\r\n      { title: \"Total Wages\", field: \"totalwages\", type: \"currency\" },\r\n      { title: \"TAP Amount\", field: \"totaltap\", type: \"currency\" },\r\n      { title: \"SCP Amount\", field: \"totalscp\", type: \"currency\" },\r\n      { title: \"Site Allowances\", field: \"totalsitesallows\", type: \"currency\" },\r\n      {\r\n        title: \"Expenses Claims\",\r\n        field: \"totalexpensesclaims\",\r\n        type: \"currency\",\r\n      },\r\n      { title: \"Total Allowances\", field: \"totalallows\", type: \"currency\" },\r\n      { title: \"Total Deductions\", field: \"totaldeducts\", type: \"currency\" },\r\n      { title: \"Total Payroll\", field: \"totalpayroll\", type: \"currency\" },\r\n      { title: \"Status\", field: \"status\" },\r\n    ],\r\n    []\r\n  );\r\n\r\n  useEffect(() => {\r\n    setPSBPayrunId(\"XXX\");\r\n    setDailyAllowsPayrunId(\"XXX\");\r\n  }, []);\r\n  // useEffect(() => {\r\n  //   if (single_payslip.payrun) {\r\n  //     console.log(\"single_payslip\", single_payslip);\r\n  //   }\r\n  // }, [single_payslip]);\r\n\r\n  const handleAlertOpen = () => {\r\n    setIsAlertOpen(true);\r\n  };\r\n\r\n  const handleAlertClose = () => {\r\n    setIsAlertOpen(false);\r\n  };\r\n\r\n  const update_Input = async (data) => {\r\n    console.log(\"input\", data);\r\n\r\n    setInput({\r\n      ...input,\r\n      id: data.id,\r\n      payfreq: data.payfreq,\r\n      fromdate: data.fromdate,\r\n      todate: data.todate,\r\n      paydate: data.paydate,\r\n      period: data.period,\r\n      payrun: data.payrun,\r\n      totalwages: data.totalwages,\r\n      totaltap: data.totaltap,\r\n      totalscp: data.totalscp,\r\n      totalallows: data.totalallows,\r\n      totaldeducts: data.totaldeducts,\r\n      totalpayroll: data.totalpayroll,\r\n      status: data.status,\r\n    });\r\n\r\n    setInput({\r\n      ...input,\r\n      id: data.id,\r\n      payfreq: data.payfreq,\r\n      fromdate: data.fromdate,\r\n      todate: data.todate,\r\n      paydate: data.paydate,\r\n      period: data.period,\r\n      payrun: data.payrun,\r\n      totalwages: data.totalwages,\r\n      totaltap: data.totaltap,\r\n      totalscp: data.totalscp,\r\n      totalallows: data.totalallows,\r\n      totaldeducts: data.totaldeducts,\r\n      totalpayroll: data.totalpayroll,\r\n      status: data.status,\r\n    });\r\n    console.log(\"payrun\", input);\r\n  };\r\n\r\n  const update_Payslip = async (data) => {\r\n    const { id, payrun } = data;\r\n    setPayrunId(id);\r\n    setPayrunStatus(data.status);\r\n    setPayslipPeriod(payrun); //save to recoil\r\n    setEditPayslipID(id);\r\n    setIsPayslipEditingOn();\r\n    getSinglePayslip(id);\r\n    navigate(\"/payrunbatch\");\r\n  };\r\n\r\n  const delete_Payslip = (data) => {\r\n    const { id, payrun } = data;\r\n    setDeletestate({ id: id, payrun: payrun });\r\n    setPSBPayrunId(payrun);\r\n    setExpPayrunId(payrun);\r\n    setDailyAllowsPayrunId(payrun);\r\n    //loadPeriodExpenses(payrun);\r\n    //getSingleBatchDailyAllowance(payrun);\r\n    handleAlertOpen();\r\n  };\r\n\r\n  const handleOnDeleteConfirm = (data) => {\r\n    console.log(\"payslip delete\", deletestate);\r\n    const { id, payrun } = deletestate;\r\n\r\n    //load period expenses\r\n    //loadPeriodExpenses(payrun);\r\n\r\n    //delete allows detls\r\n    payslipsbatch &&\r\n      payslipsbatch.forEach((rec) => {\r\n        if (rec.payrun === payrun) {\r\n          deletePayslip(rec.id);\r\n        }\r\n      });\r\n\r\n    //unpaid expenses\r\n    expensespayrun &&\r\n      expensespayrun.forEach((rec) => {\r\n        if (rec.payrun === payrun) {\r\n          updateExpenses({ id: rec.id, payrun: \"\" });\r\n        }\r\n      });\r\n\r\n    //delete dailyallows\r\n    dailyallowspayrun &&\r\n      dailyallowspayrun.forEach((rec) => {\r\n        if (rec.payrun === payrun) {\r\n          updateDailyAllows({ id: rec.id, payrun: \"\" });\r\n        }\r\n      });\r\n\r\n    //delete payrun\r\n    deletePayrun(id);\r\n    toast({\r\n      title: `Payroll Batch being deleted!`,\r\n      status: \"warning\",\r\n    });\r\n    //getPayrun();\r\n  };\r\n\r\n  if (payrun_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading.....Payslips</h2>\r\n      </div>\r\n    );\r\n  }\r\n  if (payrun_error) {\r\n    return (\r\n      <div>\r\n        <h2>Internet connection problem!</h2>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={payrun}\r\n          title=\"Payroll\"\r\n          icons={{\r\n            Add: (props) => <AddIcon />,\r\n            Edit: (props) => <EditIcon />,\r\n            Delete: (props) => <DeleteIcon />,\r\n            Clear: (props) => <DeleteIcon />,\r\n            Check: (props) => <CheckIcon />,\r\n            Search: (props) => <SearchIcon />,\r\n            ResetSearch: (props) => <DeleteIcon />,\r\n            Build: (props) => <BuildOutlinedIcon />,\r\n          }}\r\n          actions={[\r\n            (rowData) => ({\r\n              //disabled: rowData.status !== \"Pending\",\r\n              icon: \"edit\",\r\n              position: \"row\",\r\n              tooltip: \"Edit Record\",\r\n              onClick: (event, rowData) => {\r\n                update_Input(rowData);\r\n                update_Payslip(rowData);\r\n              },\r\n            }),\r\n            (rowData) => ({\r\n              disabled: rowData.status === \"Approved\",\r\n              icon: \"delete\",\r\n              tooltip: \"Delete Record\",\r\n              position: \"row\",\r\n              onClick: (event, rowData) => {\r\n                //delete_Payslip(rowData);\r\n                delete_Payslip(rowData);\r\n              },\r\n            }),\r\n\r\n            // {\r\n            //   icon: \"add\",\r\n            //   tooltip: \"Add Record\",\r\n            //   isFreeAction: true,\r\n            //   onClick: (event, rowData) => {\r\n            //     add_Payslip(rowData);\r\n            //   },\r\n            // },\r\n          ]}\r\n          options={{\r\n            filtering: true,\r\n            headerStyle: {\r\n              backgroundColor: \"#90CDF4\",\r\n              color: \"black\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n                {/* <div style={{ padding: \"5px 10px\" }}>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    onClick={(e) => handleVerifyPayslipData(e)}\r\n                  >\r\n                    Verify <Icon className={classes.rightIcon}>send</Icon>\r\n                  </Button>\r\n                </div> */}\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n        <AlertDialogBox\r\n          onClose={handleAlertClose}\r\n          onConfirm={handleOnDeleteConfirm}\r\n          isOpen={isAlertOpen}\r\n          title=\"Delete Payslip Batch\"\r\n        >\r\n          <h2>Are you sure you want to delete ?</h2>\r\n        </AlertDialogBox>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-demo\\\\src\\\\components\\\\Export2ExcelDialog.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { //AspectRatio,\nBox, Button //ButtonGroup,\n//Center,\n, Checkbox //Container,\n, Divider //Flex,\n, FormControl //FormLabel,\n//FormErrorMessage,\n//FormHelperText,\n//Grid,\n//GridItem,\n, Heading, HStack //Icon,\n//IconButton,\n//Image,\n, Input, InputGroup, InputLeftAddon //InputLeftElement,\n//Modal,\n//ModalOverlay,\n//ModalContent,\n//ModalHeader,\n//ModalFooter,\n//ModalBody,\n//ModalCloseButton,\n//Radio,\n//RadioGroup,\n, Select //SimpleGrid,\n//Stack,\n//StackDivider,\n//Text,\n//Tabs,\n} from \"@chakra-ui/react\";\nimport { useHocPeriod } from \"./hoc/useHocPeriod\";\nimport Export2Excel from \"./Export2Excel\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst months = [{\n  name: \"January\",\n  value: 1\n}, {\n  name: \"February\",\n  value: 2\n}, {\n  name: \"March\",\n  value: 3\n}, {\n  name: \"April\",\n  value: 4\n}, {\n  name: \"May\",\n  value: 5\n}, {\n  name: \"June\",\n  value: 6\n}, {\n  name: \"July\",\n  value: 7\n}, {\n  name: \"August\",\n  value: 8\n}, {\n  name: \"September\",\n  value: 9\n}, {\n  name: \"October\",\n  value: 10\n}, {\n  name: \"November\",\n  value: 11\n}, {\n  name: \"December\",\n  value: 12\n}];\n\nconst Export2ExcelDialog = ({\n  state,\n  setState,\n  dataset,\n  onClose\n}) => {\n  _s();\n\n  const field_width = \"138\";\n  const [isLoad, setIsload] = useState(true);\n  const {\n    hocperiod,\n    setHocPeriodYrId,\n    setHocPeriodMthId\n  } = useHocPeriod(); //console.log(\"expstate\", state);\n\n  const handleChange = evt => {\n    const value = evt.target.value;\n    setState({ ...state,\n      [evt.target.name]: value\n    });\n\n    if (evt.target.name === \"month\") {\n      setIsload(true);\n    }\n\n    if (evt.target.name === \"year\") {\n      setIsload(true);\n    }\n  };\n\n  const handleClose = () => {\n    onClose();\n  };\n\n  useEffect(() => {\n    setHocPeriodYrId(state.year);\n    setHocPeriodMthId(state.month);\n    setIsload(false);\n  }, [isLoad]); // useEffect(() => {\n  //   setState(initial_state);\n  //   setState({ ...formdata });\n  //   setState({ ...formdata });\n  //   console.log(\"laeve form\",state)\n  // }, [initialValues]);\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      p: 2,\n      children: /*#__PURE__*/_jsxDEV(Heading, {\n        size: \"md\",\n        children: \"EXPORT TO EXCEL DIALOG\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        children: /*#__PURE__*/_jsxDEV(InputGroup, {\n          children: /*#__PURE__*/_jsxDEV(HStack, {\n            w: \"100%\",\n            py: 1,\n            children: [/*#__PURE__*/_jsxDEV(InputLeftAddon, {\n              children: \"Type\",\n              minWidth: field_width\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              name: \"type\",\n              value: state.type,\n              width: \"full\",\n              onChange: handleChange,\n              borderColor: \"gray.400\",\n              isReadOnly: true //textTransform=\"capitalize\"\n              //ref={ref}\n              ,\n              placeholder: \"type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        children: /*#__PURE__*/_jsxDEV(InputGroup, {\n          children: /*#__PURE__*/_jsxDEV(HStack, {\n            w: \"100%\",\n            py: 1,\n            children: [/*#__PURE__*/_jsxDEV(InputLeftAddon, {\n              children: \"Month\",\n              minWidth: field_width\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              name: \"month\",\n              value: state.month,\n              width: \"full\",\n              onChange: handleChange,\n              borderColor: \"gray.400\" //textTransform=\"capitalize\"\n              //ref={ref}\n              //placeholder=\"category\"\n              ,\n              children: months && months.map((rec, index) => {\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: rec.value,\n                  children: rec.name\n                }, rec.index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 23\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        children: /*#__PURE__*/_jsxDEV(InputGroup, {\n          children: /*#__PURE__*/_jsxDEV(HStack, {\n            w: \"100%\",\n            py: 1,\n            children: [/*#__PURE__*/_jsxDEV(InputLeftAddon, {\n              children: \"Year\",\n              minWidth: field_width\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              name: \"year\",\n              value: state.year,\n              width: \"full\",\n              onChange: handleChange,\n              borderColor: \"gray.400\" //textTransform=\"capitalize\"\n              //ref={ref}\n              //placeholder=\"category\"\n              ,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"2021\",\n                children: \"2021\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"2022\",\n                children: \"2022\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        children: /*#__PURE__*/_jsxDEV(InputGroup, {\n          children: /*#__PURE__*/_jsxDEV(HStack, {\n            w: \"100%\",\n            py: 1,\n            children: [/*#__PURE__*/_jsxDEV(InputLeftAddon, {\n              children: \"Title\",\n              minWidth: field_width\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              name: \"title\",\n              value: state.title,\n              width: \"full\",\n              onChange: handleChange,\n              borderColor: \"gray.400\" //ref={ref}\n              ,\n              placeholder: \"title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        children: /*#__PURE__*/_jsxDEV(InputGroup, {\n          children: /*#__PURE__*/_jsxDEV(HStack, {\n            w: \"100%\",\n            py: 1,\n            children: [/*#__PURE__*/_jsxDEV(InputLeftAddon, {\n              children: \"Filename\",\n              minWidth: field_width\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              name: \"filename\",\n              value: state.filename,\n              width: \"full\",\n              onChange: handleChange,\n              borderColor: \"gray.400\" //ref={ref}\n              ,\n              placeholder: \"filename\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      p: 2,\n      children: /*#__PURE__*/_jsxDEV(Export2Excel, {\n        filename: state.filename,\n        dataset: hocperiod,\n        title: state.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Export2ExcelDialog, \"xxHG5HZDTTLaIpj6SmuuemxCwhg=\", false, function () {\n  return [useHocPeriod];\n});\n\n_c = Export2ExcelDialog;\nexport default Export2ExcelDialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"Export2ExcelDialog\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-demo/src/components/Export2ExcelDialog.js"],"names":["React","useState","useEffect","Box","Button","Checkbox","Divider","FormControl","Heading","HStack","Input","InputGroup","InputLeftAddon","Select","useHocPeriod","Export2Excel","months","name","value","Export2ExcelDialog","state","setState","dataset","onClose","field_width","isLoad","setIsload","hocperiod","setHocPeriodYrId","setHocPeriodMthId","handleChange","evt","target","handleClose","year","month","type","map","rec","index","title","filename"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  //AspectRatio,\r\n  Box,\r\n  Button,\r\n  //ButtonGroup,\r\n  //Center,\r\n  Checkbox,\r\n  //Container,\r\n  Divider,\r\n  //Flex,\r\n  FormControl,\r\n  //FormLabel,\r\n  //FormErrorMessage,\r\n  //FormHelperText,\r\n  //Grid,\r\n  //GridItem,\r\n  Heading,\r\n  HStack,\r\n  //Icon,\r\n  //IconButton,\r\n  //Image,\r\n  Input,\r\n  InputGroup,\r\n  InputLeftAddon,\r\n  //InputLeftElement,\r\n  //Modal,\r\n  //ModalOverlay,\r\n  //ModalContent,\r\n  //ModalHeader,\r\n  //ModalFooter,\r\n  //ModalBody,\r\n  //ModalCloseButton,\r\n  //Radio,\r\n  //RadioGroup,\r\n  Select,\r\n  //SimpleGrid,\r\n  //Stack,\r\n  //StackDivider,\r\n  //Text,\r\n  //Tabs,\r\n} from \"@chakra-ui/react\";\r\nimport { useHocPeriod } from \"./hoc/useHocPeriod\";\r\nimport Export2Excel from \"./Export2Excel\";\r\n\r\nconst months = [\r\n  { name: \"January\", value: 1 },\r\n  { name: \"February\", value: 2 },\r\n  { name: \"March\", value: 3 },\r\n  { name: \"April\", value: 4 },\r\n  { name: \"May\", value: 5 },\r\n  { name: \"June\", value: 6 },\r\n  { name: \"July\", value: 7 },\r\n  { name: \"August\", value: 8 },\r\n  { name: \"September\", value: 9 },\r\n  { name: \"October\", value: 10 },\r\n  { name: \"November\", value: 11 },\r\n  { name: \"December\", value: 12 },\r\n];\r\n\r\nconst Export2ExcelDialog = ({ state, setState, dataset, onClose }) => {\r\n  const field_width = \"138\";\r\n  const [isLoad, setIsload] = useState(true);\r\n  const { hocperiod, setHocPeriodYrId, setHocPeriodMthId } = useHocPeriod();\r\n  //console.log(\"expstate\", state);\r\n\r\n  const handleChange = (evt) => {\r\n    const value = evt.target.value;\r\n    setState({\r\n      ...state,\r\n      [evt.target.name]: value,\r\n    });\r\n    if (evt.target.name === \"month\") {\r\n      setIsload(true);\r\n    }\r\n    if (evt.target.name === \"year\") {\r\n      setIsload(true);\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    onClose();\r\n  };\r\n\r\n  useEffect(() => {\r\n    setHocPeriodYrId(state.year);\r\n    setHocPeriodMthId(state.month);\r\n    setIsload(false);\r\n  }, [isLoad]);\r\n\r\n  // useEffect(() => {\r\n  //   setState(initial_state);\r\n  //   setState({ ...formdata });\r\n  //   setState({ ...formdata });\r\n  //   console.log(\"laeve form\",state)\r\n  // }, [initialValues]);\r\n\r\n  return (\r\n    <Box>\r\n      <Box p={2}>\r\n        <Heading size=\"md\">EXPORT TO EXCEL DIALOG</Heading>\r\n      </Box>\r\n      {/* <Box>\r\n        <Export2Excel filename=\"hoc\" dataset={hoc} title=\"Hoc\" />\r\n      </Box> */}\r\n      <Divider />\r\n\r\n      <div>\r\n        <FormControl>\r\n          <InputGroup>\r\n            <HStack w=\"100%\" py={1}>\r\n              <InputLeftAddon children=\"Type\" minWidth={field_width} />\r\n              <Input\r\n                name=\"type\"\r\n                value={state.type}\r\n                width=\"full\"\r\n                onChange={handleChange}\r\n                borderColor=\"gray.400\"\r\n                isReadOnly\r\n                //textTransform=\"capitalize\"\r\n                //ref={ref}\r\n                placeholder=\"type\"\r\n              />\r\n            </HStack>\r\n          </InputGroup>\r\n        </FormControl>\r\n      </div>\r\n      <div>\r\n        <FormControl>\r\n          <InputGroup>\r\n            <HStack w=\"100%\" py={1}>\r\n              <InputLeftAddon children=\"Month\" minWidth={field_width} />\r\n              <Select\r\n                name=\"month\"\r\n                value={state.month}\r\n                width=\"full\"\r\n                onChange={handleChange}\r\n                borderColor=\"gray.400\"\r\n                //textTransform=\"capitalize\"\r\n                //ref={ref}\r\n                //placeholder=\"category\"\r\n              >\r\n                {months &&\r\n                  months.map((rec, index) => {\r\n                    return (\r\n                      <option key={rec.index} value={rec.value}>\r\n                        {rec.name}\r\n                      </option>\r\n                    );\r\n                  })}\r\n              </Select>\r\n            </HStack>\r\n          </InputGroup>\r\n        </FormControl>\r\n      </div>\r\n      <div>\r\n        <FormControl>\r\n          <InputGroup>\r\n            <HStack w=\"100%\" py={1}>\r\n              <InputLeftAddon children=\"Year\" minWidth={field_width} />\r\n              <Select\r\n                name=\"year\"\r\n                value={state.year}\r\n                width=\"full\"\r\n                onChange={handleChange}\r\n                borderColor=\"gray.400\"\r\n                //textTransform=\"capitalize\"\r\n                //ref={ref}\r\n                //placeholder=\"category\"\r\n              >\r\n                <option value=\"2021\">2021</option>\r\n                <option value=\"2022\">2022</option>\r\n              </Select>\r\n            </HStack>\r\n          </InputGroup>\r\n        </FormControl>\r\n      </div>\r\n      <div>\r\n        <FormControl>\r\n          <InputGroup>\r\n            <HStack w=\"100%\" py={1}>\r\n              <InputLeftAddon children=\"Title\" minWidth={field_width} />\r\n              <Input\r\n                name=\"title\"\r\n                value={state.title}\r\n                width=\"full\"\r\n                onChange={handleChange}\r\n                borderColor=\"gray.400\"\r\n                //ref={ref}\r\n                placeholder=\"title\"\r\n              />\r\n            </HStack>\r\n          </InputGroup>\r\n        </FormControl>\r\n      </div>\r\n      <div>\r\n        <FormControl>\r\n          <InputGroup>\r\n            <HStack w=\"100%\" py={1}>\r\n              <InputLeftAddon children=\"Filename\" minWidth={field_width} />\r\n              <Input\r\n                name=\"filename\"\r\n                value={state.filename}\r\n                width=\"full\"\r\n                onChange={handleChange}\r\n                borderColor=\"gray.400\"\r\n                //ref={ref}\r\n                placeholder=\"filename\"\r\n              />\r\n            </HStack>\r\n          </InputGroup>\r\n        </FormControl>\r\n      </div>\r\n      <Divider />\r\n      <Box p={2}>\r\n       \r\n        <Export2Excel\r\n          filename={state.filename}\r\n          dataset={hocperiod}\r\n          title={state.title}\r\n        />\r\n      </Box>\r\n      {/* <div>\r\n          <Button\r\n            type=\"submit\"\r\n            colorScheme=\"teal\"\r\n            variant=\"solid\"\r\n            onClick={handleSubmit(onSubmit)}\r\n          >\r\n            Download\r\n          </Button>\r\n        </div> */}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Export2ExcelDialog;\r\n"]},"metadata":{},"sourceType":"module"}
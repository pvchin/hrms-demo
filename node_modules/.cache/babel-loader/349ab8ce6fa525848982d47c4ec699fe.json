{"ast":null,"code":"export function formatPrice(cents) {\n  if (!cents) return null;\n  return cents.toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\nexport function formatPriceZero(cents) {\n  //if (!cents) return null;\n  if (!cents) cents = 0;\n  return cents.toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\nexport function splitArrayIntoChunksOfLen(arr, len) {\n  var chunks = [],\n      i = 0,\n      n = arr.length;\n\n  while (i < n) {\n    chunks.push(arr.slice(i, i += len));\n  }\n\n  return chunks;\n}","map":{"version":3,"sources":["D:/react-myprojects/hrms-demo/src/helpers/Utils.js"],"names":["formatPrice","cents","toLocaleString","style","currency","formatPriceZero","splitArrayIntoChunksOfLen","arr","len","chunks","i","n","length","push","slice"],"mappings":"AAAA,OAAO,SAASA,WAAT,CAAqBC,KAArB,EAA4B;AACjC,MAAI,CAACA,KAAL,EAAY,OAAO,IAAP;AAEZ,SAAOA,KAAK,CAACC,cAAN,CAAqB,OAArB,EAA8B;AACnCC,IAAAA,KAAK,EAAE,UAD4B;AAEnCC,IAAAA,QAAQ,EAAE;AAFyB,GAA9B,CAAP;AAID;AACD,OAAO,SAASC,eAAT,CAAyBJ,KAAzB,EAAgC;AACrC;AACA,MAAI,CAACA,KAAL,EAAYA,KAAK,GAAG,CAAR;AAEZ,SAAOA,KAAK,CAACC,cAAN,CAAqB,OAArB,EAA8B;AACnCC,IAAAA,KAAK,EAAE,UAD4B;AAEnCC,IAAAA,QAAQ,EAAE;AAFyB,GAA9B,CAAP;AAID;AACD,OAAO,SAASE,yBAAT,CAAmCC,GAAnC,EAAwCC,GAAxC,EAA6C;AAClD,MAAIC,MAAM,GAAG,EAAb;AAAA,MACEC,CAAC,GAAG,CADN;AAAA,MAEEC,CAAC,GAAGJ,GAAG,CAACK,MAFV;;AAGA,SAAOF,CAAC,GAAGC,CAAX,EAAc;AACZF,IAAAA,MAAM,CAACI,IAAP,CAAYN,GAAG,CAACO,KAAJ,CAAUJ,CAAV,EAAcA,CAAC,IAAIF,GAAnB,CAAZ;AACD;;AACD,SAAOC,MAAP;AACD","sourcesContent":["export function formatPrice(cents) {\r\n  if (!cents) return null;\r\n\r\n  return cents.toLocaleString(\"en-US\", {\r\n    style: \"currency\",\r\n    currency: \"USD\",\r\n  });\r\n}\r\nexport function formatPriceZero(cents) {\r\n  //if (!cents) return null;\r\n  if (!cents) cents = 0;\r\n\r\n  return cents.toLocaleString(\"en-US\", {\r\n    style: \"currency\",\r\n    currency: \"USD\",\r\n  });\r\n}\r\nexport function splitArrayIntoChunksOfLen(arr, len) {\r\n  var chunks = [],\r\n    i = 0,\r\n    n = arr.length;\r\n  while (i < n) {\r\n    chunks.push(arr.slice(i, (i += len)));\r\n  }\r\n  return chunks;\r\n}"]},"metadata":{},"sourceType":"module"}
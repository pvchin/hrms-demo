{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-demo\\\\src\\\\components\\\\ApprovalManagerScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport { AspectRatio, Box, Button, ButtonGroup, Center, Container, Divider, FormControl, Grid, GridItem, Heading, Image, Input, InputGroup, NumberInput, NumberInputField, Stack, HStack, VStack, Wrap, Tabs, TabList, TabPanels, Tab, TabPanel, Text, Radio, RadioGroup } from \"@chakra-ui/react\";\nimport { formatPrice } from \"../helpers/Utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ApprovalManagerScreen = ({\n  formdata,\n  handleDialogClose,\n  onConfirm,\n  setFormdata,\n  tabIndex\n}) => {\n  _s();\n\n  const [statustype, setStatustype] = useState(\"\");\n  const {\n    handleSubmit,\n    register,\n    control,\n    reset,\n    setValue,\n    formState: {\n      errors,\n      isSubmitting,\n      id\n    }\n  } = useForm({\n    defaultValues: { ...formdata\n    }\n  });\n\n  const handleSave = data => {\n    const updData = { ...data,\n      status: statustype\n    };\n    onConfirm(updData);\n    handleDialogClose();\n  };\n\n  console.log(\"formdata\", formdata);\n  useEffect(() => {\n    setStatustype(formdata.status);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      size: \"md\",\n      children: \"Approval Screen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n      border: \"1px solid teal\",\n      borderRadius: 10,\n      mt: 5,\n      mb: 5,\n      defaultIndex: tabIndex,\n      children: [/*#__PURE__*/_jsxDEV(TabList, {\n        children: [/*#__PURE__*/_jsxDEV(Tab, {\n          hidden: tabIndex !== 0,\n          children: \"Leaves\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          hidden: tabIndex !== 1,\n          children: \"Expenses\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          hidden: tabIndex !== 2,\n          children: \"Site Allows\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          hidden: tabIndex !== 3,\n          children: \"Payroll\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TabPanels, {\n        children: [/*#__PURE__*/_jsxDEV(TabPanel, {\n          children: tabIndex === 0 && /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit(handleSave),\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              templateColumns: \"repeat(2,1fr)\",\n              columnGap: 2,\n              rowGap: 2,\n              children: [/*#__PURE__*/_jsxDEV(GridItem, {\n                colSpan: 2,\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  children: /*#__PURE__*/_jsxDEV(Controller, {\n                    control: control,\n                    name: \"name\" //defaultValue={invoice.sls_no || ''}\n                    ,\n                    render: ({\n                      field: {\n                        onChange,\n                        value,\n                        ref\n                      }\n                    }) => /*#__PURE__*/_jsxDEV(VStack, {\n                      align: \"left\",\n                      children: [/*#__PURE__*/_jsxDEV(Text, {\n                        as: \"b\",\n                        fontSize: \"sm\",\n                        textAlign: \"left\",\n                        children: \"Name\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 101,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(Input, {\n                        name: \"name\",\n                        value: value,\n                        width: \"full\",\n                        onChange: onChange,\n                        borderColor: \"gray.400\" //textTransform=\"capitalize\"\n                        ,\n                        ref: ref,\n                        placeholder: \"name\",\n                        minWidth: \"100\",\n                        readOnly: true\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 104,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 100,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 95,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n                colSpan: 1,\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  children: /*#__PURE__*/_jsxDEV(Controller, {\n                    control: control,\n                    name: \"from_date\" //defaultValue={invoice.sls_date}\n                    ,\n                    render: ({\n                      field: {\n                        onChange,\n                        value,\n                        ref\n                      }\n                    }) => /*#__PURE__*/_jsxDEV(VStack, {\n                      align: \"left\",\n                      children: [/*#__PURE__*/_jsxDEV(Text, {\n                        as: \"b\",\n                        fontSize: \"sm\",\n                        textAlign: \"left\",\n                        children: \"From Date\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 129,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(Input, {\n                        name: \"from_date\",\n                        value: value,\n                        type: \"date\",\n                        width: \"full\",\n                        onChange: onChange,\n                        borderColor: \"gray.400\" //textTransform=\"capitalize\"\n                        ,\n                        ref: ref,\n                        placeholder: \"from date\",\n                        minWidth: \"100\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 133,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 128,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 123,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n                colSpan: 1,\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  children: /*#__PURE__*/_jsxDEV(Controller, {\n                    control: control,\n                    name: \"to_date\" //defaultValue={invoice.sls_date}\n                    ,\n                    render: ({\n                      field: {\n                        onChange,\n                        value,\n                        ref\n                      }\n                    }) => /*#__PURE__*/_jsxDEV(VStack, {\n                      align: \"left\",\n                      children: [/*#__PURE__*/_jsxDEV(Text, {\n                        as: \"b\",\n                        fontSize: \"sm\",\n                        textAlign: \"left\",\n                        children: \"To Date\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 158,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(Input, {\n                        name: \"to_date\",\n                        value: value,\n                        type: \"date\",\n                        width: \"full\",\n                        onChange: onChange,\n                        borderColor: \"gray.400\" //textTransform=\"capitalize\"\n                        ,\n                        ref: ref,\n                        placeholder: \"to date\",\n                        minWidth: \"100\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 162,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 157,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 152,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n                colSpan: 1,\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  children: /*#__PURE__*/_jsxDEV(Controller, {\n                    control: control,\n                    name: \"no_of_days\" //defaultValue={invoice.sls_no || ''}\n                    ,\n                    render: ({\n                      field: {\n                        onChange,\n                        value,\n                        ref\n                      }\n                    }) => /*#__PURE__*/_jsxDEV(VStack, {\n                      align: \"left\",\n                      children: [/*#__PURE__*/_jsxDEV(Text, {\n                        as: \"b\",\n                        fontSize: \"sm\",\n                        textAlign: \"left\",\n                        children: \"No Of Days\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 187,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(Input, {\n                        name: \"no_of_days\",\n                        value: value,\n                        type: \"number\",\n                        width: \"full\",\n                        onChange: e => onChange(parseFloat(e.target.value)),\n                        borderColor: \"gray.400\" //textTransform=\"capitalize\"\n                        ,\n                        ref: ref,\n                        placeholder: \"no of days\",\n                        minWidth: \"100\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 190,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 186,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 181,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n                colSpan: 1,\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  children: /*#__PURE__*/_jsxDEV(Controller, {\n                    control: control,\n                    name: \"status\" //defaultValue={invoice.sls_no || ''}\n                    ,\n                    render: ({\n                      field: {\n                        onChange,\n                        value,\n                        ref\n                      }\n                    }) => /*#__PURE__*/_jsxDEV(VStack, {\n                      align: \"left\",\n                      children: [/*#__PURE__*/_jsxDEV(Text, {\n                        as: \"b\",\n                        fontSize: \"sm\",\n                        textAlign: \"left\",\n                        children: \"Status\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 217,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(Input, {\n                        name: \"status\",\n                        value: value,\n                        width: \"full\",\n                        onChange: onChange,\n                        borderColor: \"gray.400\" //textTransform=\"capitalize\"\n                        ,\n                        ref: ref,\n                        placeholder: \"status\",\n                        minWidth: \"100\",\n                        readOnly: true\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 220,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 216,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 211,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {\n              borderWidth: 1,\n              borderColor: \"teal\",\n              mt: 5\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n              mt: 5,\n              onChange: setStatustype,\n              value: statustype,\n              border: \"1px solid teal\",\n              borderRadius: 10,\n              py: 5,\n              px: 1,\n              minH: \"10\",\n              children: /*#__PURE__*/_jsxDEV(Stack, {\n                direction: \"row\",\n                children: [/*#__PURE__*/_jsxDEV(Radio, {\n                  value: \"Pending\",\n                  children: \"Pending\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Radio, {\n                  value: \"Rejected\",\n                  children: \"Rejected\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Radio, {\n                  value: \"Approved\",\n                  children: \"Approved\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Radio, {\n                  value: \"Delete\",\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(HStack, {\n              p: 5,\n              children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n                gap: \"20\",\n                pl: \"20\",\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  colorScheme: \"teal\",\n                  variant: \"solid\",\n                  type: \"submit\",\n                  children: \"Save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 258,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  colorScheme: \"teal\",\n                  variant: \"solid\",\n                  onClick: handleDialogClose,\n                  children: \"Exit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n          children: tabIndex === 1 && /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit(handleSave),\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              templateColumns: \"repeat(2,1fr)\",\n              columnGap: 2,\n              rowGap: 2,\n              children: [/*#__PURE__*/_jsxDEV(GridItem, {\n                colSpan: 2,\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  children: /*#__PURE__*/_jsxDEV(Controller, {\n                    control: control,\n                    name: \"name\" //defaultValue={invoice.sls_no || ''}\n                    ,\n                    render: ({\n                      field: {\n                        onChange,\n                        value,\n                        ref\n                      }\n                    }) => /*#__PURE__*/_jsxDEV(VStack, {\n                      align: \"left\",\n                      children: [/*#__PURE__*/_jsxDEV(Text, {\n                        as: \"b\",\n                        fontSize: \"sm\",\n                        textAlign: \"left\",\n                        children: \"Name\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 289,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(Input, {\n                        name: \"name\",\n                        value: value,\n                        width: \"full\",\n                        onChange: onChange,\n                        borderColor: \"gray.400\" //textTransform=\"capitalize\"\n                        ,\n                        ref: ref,\n                        placeholder: \"name\",\n                        minWidth: \"100\",\n                        readOnly: true\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 292,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 288,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 283,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 282,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n                colSpan: 1,\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  children: /*#__PURE__*/_jsxDEV(Controller, {\n                    control: control,\n                    name: \"date\" //defaultValue={invoice.sls_date}\n                    ,\n                    render: ({\n                      field: {\n                        onChange,\n                        value,\n                        ref\n                      }\n                    }) => /*#__PURE__*/_jsxDEV(VStack, {\n                      align: \"left\",\n                      children: [/*#__PURE__*/_jsxDEV(Text, {\n                        as: \"b\",\n                        fontSize: \"sm\",\n                        textAlign: \"left\",\n                        children: \"Date\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 317,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(Input, {\n                        name: \"date\",\n                        value: value,\n                        type: \"date\",\n                        width: \"full\",\n                        onChange: onChange,\n                        borderColor: \"gray.400\" //textTransform=\"capitalize\"\n                        ,\n                        ref: ref,\n                        placeholder: \"date\",\n                        minWidth: \"100\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 321,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 316,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 311,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 310,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n                colSpan: 1,\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  children: /*#__PURE__*/_jsxDEV(Controller, {\n                    control: control,\n                    name: \"amount\" //defaultValue={invoice.sls_no || ''}\n                    ,\n                    render: ({\n                      field: {\n                        onChange,\n                        value,\n                        ref\n                      }\n                    }) => /*#__PURE__*/_jsxDEV(VStack, {\n                      align: \"left\",\n                      children: [/*#__PURE__*/_jsxDEV(Text, {\n                        as: \"b\",\n                        fontSize: \"sm\",\n                        textAlign: \"left\",\n                        children: \"Amount\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 346,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(Input, {\n                        name: \"amount\",\n                        value: value,\n                        type: \"number\",\n                        width: \"full\",\n                        onChange: e => onChange(parseFloat(e.target.value)),\n                        borderColor: \"gray.400\" //textTransform=\"capitalize\"\n                        ,\n                        ref: ref,\n                        placeholder: \"amount\",\n                        minWidth: \"100\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 349,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 345,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 340,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 339,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 338,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n                colSpan: 2,\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  children: /*#__PURE__*/_jsxDEV(Controller, {\n                    control: control,\n                    name: \"description\" //defaultValue={invoice.sls_no || ''}\n                    ,\n                    render: ({\n                      field: {\n                        onChange,\n                        value,\n                        ref\n                      }\n                    }) => /*#__PURE__*/_jsxDEV(VStack, {\n                      align: \"left\",\n                      children: [/*#__PURE__*/_jsxDEV(Text, {\n                        as: \"b\",\n                        fontSize: \"sm\",\n                        textAlign: \"left\",\n                        children: \"Description\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 376,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(Input, {\n                        name: \"description\",\n                        value: value,\n                        width: \"full\",\n                        onChange: onChange,\n                        borderColor: \"gray.400\" //textTransform=\"capitalize\"\n                        ,\n                        ref: ref,\n                        placeholder: \"description\",\n                        minWidth: \"100\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 379,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 375,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 370,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 369,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 368,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n                colSpan: 1,\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  children: /*#__PURE__*/_jsxDEV(Controller, {\n                    control: control,\n                    name: \"status\" //defaultValue={invoice.sls_no || ''}\n                    ,\n                    render: ({\n                      field: {\n                        onChange,\n                        value,\n                        ref\n                      }\n                    }) => /*#__PURE__*/_jsxDEV(VStack, {\n                      align: \"left\",\n                      children: [/*#__PURE__*/_jsxDEV(Text, {\n                        as: \"b\",\n                        fontSize: \"sm\",\n                        textAlign: \"left\",\n                        children: \"Status\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 403,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(Input, {\n                        name: \"status\",\n                        value: value,\n                        width: \"full\",\n                        onChange: onChange,\n                        borderColor: \"gray.400\" //textTransform=\"capitalize\"\n                        ,\n                        ref: ref,\n                        placeholder: \"status\",\n                        minWidth: \"100\",\n                        readOnly: true\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 406,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 402,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 397,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 396,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 395,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {\n              borderWidth: 1,\n              borderColor: \"teal\",\n              mt: 5\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n              mt: 5,\n              onChange: setStatustype,\n              value: statustype,\n              border: \"1px solid teal\",\n              borderRadius: 10,\n              py: 5,\n              px: 1,\n              minH: \"10\",\n              colorScheme: \"teal\",\n              fontWeight: \"bold\",\n              size: \"md\",\n              children: /*#__PURE__*/_jsxDEV(Stack, {\n                direction: \"row\",\n                children: [/*#__PURE__*/_jsxDEV(Radio, {\n                  value: \"Pending\",\n                  children: \"Pending\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 439,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Radio, {\n                  value: \"Rejected\",\n                  children: \"Rejected\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 440,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Radio, {\n                  value: \"Approved\",\n                  children: \"Approved\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 441,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 438,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(HStack, {\n              p: 5,\n              children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n                gap: \"20\",\n                pl: \"20\",\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  colorScheme: \"teal\",\n                  variant: \"solid\",\n                  type: \"submit\",\n                  children: \"Save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 447,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  colorScheme: \"teal\",\n                  variant: \"solid\",\n                  onClick: handleDialogClose,\n                  children: \"Exit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 450,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 446,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n          children: tabIndex === 2 && /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit(handleSave),\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              templateColumns: \"repeat(2,1fr)\",\n              columnGap: 2,\n              rowGap: 2,\n              children: [/*#__PURE__*/_jsxDEV(GridItem, {\n                colSpan: 2,\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  children: /*#__PURE__*/_jsxDEV(Controller, {\n                    control: control,\n                    name: \"name\" //defaultValue={invoice.sls_no || ''}\n                    ,\n                    render: ({\n                      field: {\n                        onChange,\n                        value,\n                        ref\n                      }\n                    }) => /*#__PURE__*/_jsxDEV(VStack, {\n                      align: \"left\",\n                      children: [/*#__PURE__*/_jsxDEV(Text, {\n                        as: \"b\",\n                        fontSize: \"sm\",\n                        textAlign: \"left\",\n                        children: \"Name\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 478,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(Input, {\n                        name: \"name\",\n                        value: value,\n                        width: \"full\",\n                        onChange: onChange,\n                        borderColor: \"gray.400\" //textTransform=\"capitalize\"\n                        ,\n                        ref: ref,\n                        placeholder: \"name\",\n                        minWidth: \"100\",\n                        readOnly: true\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 481,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 477,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 472,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 471,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 470,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n                colSpan: 1,\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  children: /*#__PURE__*/_jsxDEV(Controller, {\n                    control: control,\n                    name: \"period\" //defaultValue={invoice.sls_no || ''}\n                    ,\n                    render: ({\n                      field: {\n                        onChange,\n                        value,\n                        ref\n                      }\n                    }) => /*#__PURE__*/_jsxDEV(VStack, {\n                      align: \"left\",\n                      children: [/*#__PURE__*/_jsxDEV(Text, {\n                        as: \"b\",\n                        fontSize: \"sm\",\n                        textAlign: \"left\",\n                        children: \"Period\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 506,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(Input, {\n                        name: \"period\",\n                        value: value,\n                        width: \"full\",\n                        onChange: onChange,\n                        borderColor: \"gray.400\" //textTransform=\"capitalize\"\n                        ,\n                        ref: ref,\n                        placeholder: \"period\",\n                        minWidth: \"100\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 509,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 505,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 500,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 499,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 498,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n                colSpan: 1,\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  children: /*#__PURE__*/_jsxDEV(Controller, {\n                    control: control,\n                    name: \"no_of_days\" //defaultValue={invoice.sls_no || ''}\n                    ,\n                    render: ({\n                      field: {\n                        onChange,\n                        value,\n                        ref\n                      }\n                    }) => /*#__PURE__*/_jsxDEV(VStack, {\n                      align: \"left\",\n                      children: [/*#__PURE__*/_jsxDEV(Text, {\n                        as: \"b\",\n                        fontSize: \"sm\",\n                        textAlign: \"left\",\n                        children: \"No Of Days\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 533,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(Input, {\n                        name: \"no_of_days\",\n                        value: value,\n                        type: \"number\",\n                        width: \"full\",\n                        onChange: e => onChange(parseFloat(e.target.value)),\n                        borderColor: \"gray.400\" //textTransform=\"capitalize\"\n                        ,\n                        ref: ref,\n                        placeholder: \"no of days\",\n                        minWidth: \"100\",\n                        readOnly: true\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 536,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 532,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 527,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 526,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 525,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n                colSpan: 1,\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  children: /*#__PURE__*/_jsxDEV(Controller, {\n                    control: control,\n                    name: \"amount\" //defaultValue={invoice.sls_no || ''}\n                    ,\n                    render: ({\n                      field: {\n                        onChange,\n                        value,\n                        ref\n                      }\n                    }) => /*#__PURE__*/_jsxDEV(VStack, {\n                      align: \"left\",\n                      children: [/*#__PURE__*/_jsxDEV(Text, {\n                        as: \"b\",\n                        fontSize: \"sm\",\n                        textAlign: \"left\",\n                        children: \"Amount\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 564,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(Input, {\n                        name: \"amount\",\n                        value: value,\n                        type: \"number\",\n                        width: \"full\",\n                        onChange: e => onChange(parseFloat(e.target.value)),\n                        borderColor: \"gray.400\" //textTransform=\"capitalize\"\n                        ,\n                        ref: ref,\n                        placeholder: \"amount\",\n                        minWidth: \"100\",\n                        readOnly: true\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 567,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 563,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 558,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 557,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 556,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n                colSpan: 1,\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  children: /*#__PURE__*/_jsxDEV(Controller, {\n                    control: control,\n                    name: \"status\" //defaultValue={invoice.sls_no || ''}\n                    ,\n                    render: ({\n                      field: {\n                        onChange,\n                        value,\n                        ref\n                      }\n                    }) => /*#__PURE__*/_jsxDEV(VStack, {\n                      align: \"left\",\n                      children: [/*#__PURE__*/_jsxDEV(Text, {\n                        as: \"b\",\n                        fontSize: \"sm\",\n                        textAlign: \"left\",\n                        children: \"Status\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 595,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(Input, {\n                        name: \"status\",\n                        value: value,\n                        width: \"full\",\n                        onChange: onChange,\n                        borderColor: \"gray.400\" //textTransform=\"capitalize\"\n                        ,\n                        ref: ref,\n                        placeholder: \"status\",\n                        minWidth: \"100\",\n                        readOnly: true\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 598,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 594,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 589,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 588,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 587,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 465,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {\n              borderWidth: 1,\n              borderColor: \"teal\",\n              mt: 5\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 616,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n              mt: 5,\n              onChange: setStatustype,\n              value: statustype,\n              border: \"1px solid teal\",\n              borderRadius: 10,\n              py: 5,\n              px: 1,\n              minH: \"10\",\n              children: /*#__PURE__*/_jsxDEV(Stack, {\n                direction: \"row\",\n                children: [/*#__PURE__*/_jsxDEV(Radio, {\n                  value: \"Pending\",\n                  children: \"Pending\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 628,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Radio, {\n                  value: \"Submitted\",\n                  children: \"Submitted\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 629,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Radio, {\n                  value: \"Verified\",\n                  children: \"Verified\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 630,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Radio, {\n                  value: \"Approved\",\n                  children: \"Approved\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 631,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 627,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 617,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(HStack, {\n              p: 5,\n              children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n                gap: \"20\",\n                pl: \"20\",\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  colorScheme: \"teal\",\n                  variant: \"solid\",\n                  type: \"submit\",\n                  children: \"Save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 636,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  colorScheme: \"teal\",\n                  variant: \"solid\",\n                  onClick: handleDialogClose,\n                  children: \"Exit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 639,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 635,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 634,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 464,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n          children: tabIndex === 3 && /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit(handleSave),\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              templateColumns: \"repeat(2,1fr)\",\n              columnGap: 2,\n              rowGap: 2,\n              children: [/*#__PURE__*/_jsxDEV(GridItem, {\n                colSpan: 2,\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  children: /*#__PURE__*/_jsxDEV(Controller, {\n                    control: control,\n                    name: \"period\" //defaultValue={invoice.sls_no || ''}\n                    ,\n                    render: ({\n                      field: {\n                        onChange,\n                        value,\n                        ref\n                      }\n                    }) => /*#__PURE__*/_jsxDEV(VStack, {\n                      align: \"left\",\n                      children: [/*#__PURE__*/_jsxDEV(Text, {\n                        as: \"b\",\n                        fontSize: \"sm\",\n                        textAlign: \"left\",\n                        children: \"Period\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 667,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(Input, {\n                        name: \"period\",\n                        value: value,\n                        width: \"full\",\n                        onChange: onChange,\n                        borderColor: \"gray.400\" //textTransform=\"capitalize\"\n                        ,\n                        ref: ref,\n                        placeholder: \"period\",\n                        minWidth: \"100\",\n                        readOnly: true\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 670,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 666,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 661,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 660,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 659,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n                colSpan: 1,\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  children: /*#__PURE__*/_jsxDEV(Controller, {\n                    control: control,\n                    name: \"totalpayroll\" //defaultValue={invoice.sls_no || ''}\n                    ,\n                    render: ({\n                      field: {\n                        onChange,\n                        value,\n                        ref\n                      }\n                    }) => /*#__PURE__*/_jsxDEV(VStack, {\n                      align: \"left\",\n                      children: [/*#__PURE__*/_jsxDEV(Text, {\n                        as: \"b\",\n                        fontSize: \"sm\",\n                        textAlign: \"left\",\n                        children: \"Total Payroll\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 695,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(Input, {\n                        name: \"totalpayroll\",\n                        value: value,\n                        type: \"number\",\n                        width: \"full\",\n                        onChange: e => onChange(parseFloat(e.target.value)),\n                        borderColor: \"gray.400\" //textTransform=\"capitalize\"\n                        ,\n                        ref: ref,\n                        placeholder: \"total payroll\",\n                        minWidth: \"100\",\n                        readOnly: true\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 698,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 694,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 689,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 688,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 687,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n                colSpan: 1,\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  children: /*#__PURE__*/_jsxDEV(Controller, {\n                    control: control,\n                    name: \"status\" //defaultValue={invoice.sls_no || ''}\n                    ,\n                    render: ({\n                      field: {\n                        onChange,\n                        value,\n                        ref\n                      }\n                    }) => /*#__PURE__*/_jsxDEV(VStack, {\n                      align: \"left\",\n                      children: [/*#__PURE__*/_jsxDEV(Text, {\n                        as: \"b\",\n                        fontSize: \"sm\",\n                        textAlign: \"left\",\n                        children: \"Status\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 726,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(Input, {\n                        name: \"status\",\n                        value: value,\n                        width: \"full\",\n                        onChange: onChange,\n                        borderColor: \"gray.400\" //textTransform=\"capitalize\"\n                        ,\n                        ref: ref,\n                        placeholder: \"status\",\n                        minWidth: \"100\",\n                        readOnly: true\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 729,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 725,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 720,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 719,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 718,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 654,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {\n              borderWidth: 1,\n              borderColor: \"teal\",\n              mt: 5\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 747,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n              mt: 5,\n              onChange: setStatustype,\n              value: statustype,\n              border: \"1px solid teal\",\n              borderRadius: 10,\n              py: 5,\n              px: 1,\n              minH: \"10\",\n              children: /*#__PURE__*/_jsxDEV(Stack, {\n                direction: \"row\",\n                children: [/*#__PURE__*/_jsxDEV(Radio, {\n                  value: \"Pending\",\n                  children: \"Pending\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 759,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Radio, {\n                  value: \"Rejected\",\n                  children: \"Rejected\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 760,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Radio, {\n                  value: \"Verified\",\n                  children: \"Verified\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 761,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Radio, {\n                  value: \"Approved\",\n                  children: \"Approved\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 762,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 758,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 748,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(HStack, {\n              p: 5,\n              children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n                gap: \"20\",\n                pl: \"20\",\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  colorScheme: \"teal\",\n                  variant: \"solid\",\n                  type: \"submit\",\n                  children: \"Save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 768,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  colorScheme: \"teal\",\n                  variant: \"solid\",\n                  onClick: handleDialogClose,\n                  children: \"Exit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 771,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 767,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 766,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 653,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 651,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ApprovalManagerScreen, \"CcEb+CyhYYYAkfwKDaruR3DOBCQ=\", false, function () {\n  return [useForm];\n});\n\n_c = ApprovalManagerScreen;\nexport default ApprovalManagerScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ApprovalManagerScreen\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-demo/src/components/ApprovalManagerScreen.js"],"names":["React","useState","useEffect","Controller","useForm","AspectRatio","Box","Button","ButtonGroup","Center","Container","Divider","FormControl","Grid","GridItem","Heading","Image","Input","InputGroup","NumberInput","NumberInputField","Stack","HStack","VStack","Wrap","Tabs","TabList","TabPanels","Tab","TabPanel","Text","Radio","RadioGroup","formatPrice","ApprovalManagerScreen","formdata","handleDialogClose","onConfirm","setFormdata","tabIndex","statustype","setStatustype","handleSubmit","register","control","reset","setValue","formState","errors","isSubmitting","id","defaultValues","handleSave","data","updData","status","console","log","field","onChange","value","ref","e","parseFloat","target"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,EAAqBC,OAArB,QAAoC,iBAApC;AACA,SACEC,WADF,EAEEC,GAFF,EAGEC,MAHF,EAIEC,WAJF,EAKEC,MALF,EAMEC,SANF,EAOEC,OAPF,EAQEC,WARF,EASEC,IATF,EAUEC,QAVF,EAWEC,OAXF,EAYEC,KAZF,EAaEC,KAbF,EAcEC,UAdF,EAeEC,WAfF,EAgBEC,gBAhBF,EAiBEC,KAjBF,EAkBEC,MAlBF,EAmBEC,MAnBF,EAoBEC,IApBF,EAqBEC,IArBF,EAsBEC,OAtBF,EAuBEC,SAvBF,EAwBEC,GAxBF,EAyBEC,QAzBF,EA0BEC,IA1BF,EA2BEC,KA3BF,EA4BEC,UA5BF,QA6BO,kBA7BP;AA+BA,SAASC,WAAT,QAA4B,kBAA5B;;;AAEA,MAAMC,qBAAqB,GAAG,CAAC;AAC7BC,EAAAA,QAD6B;AAE7BC,EAAAA,iBAF6B;AAG7BC,EAAAA,SAH6B;AAI7BC,EAAAA,WAJ6B;AAK7BC,EAAAA;AAL6B,CAAD,KAMxB;AAAA;;AACJ,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BxC,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM;AACJyC,IAAAA,YADI;AAEJC,IAAAA,QAFI;AAGJC,IAAAA,OAHI;AAIJC,IAAAA,KAJI;AAKJC,IAAAA,QALI;AAMJC,IAAAA,SAAS,EAAE;AAAEC,MAAAA,MAAF;AAAUC,MAAAA,YAAV;AAAwBC,MAAAA;AAAxB;AANP,MAOF9C,OAAO,CAAC;AACV+C,IAAAA,aAAa,EAAE,EACb,GAAGhB;AADU;AADL,GAAD,CAPX;;AAaA,QAAMiB,UAAU,GAAIC,IAAD,IAAU;AAC3B,UAAMC,OAAO,GAAG,EAAE,GAAGD,IAAL;AAAWE,MAAAA,MAAM,EAAEf;AAAnB,KAAhB;AACAH,IAAAA,SAAS,CAACiB,OAAD,CAAT;AACAlB,IAAAA,iBAAiB;AAClB,GAJD;;AAKAoB,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBtB,QAAxB;AAEAjC,EAAAA,SAAS,CAAC,MAAM;AACduC,IAAAA,aAAa,CAACN,QAAQ,CAACoB,MAAV,CAAb;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE,QAAC,SAAD;AAAA,4BACE,QAAC,OAAD;AAAS,MAAA,IAAI,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AACE,MAAA,MAAM,EAAC,gBADT;AAEE,MAAA,YAAY,EAAE,EAFhB;AAGE,MAAA,EAAE,EAAE,CAHN;AAIE,MAAA,EAAE,EAAE,CAJN;AAKE,MAAA,YAAY,EAAEhB,QALhB;AAAA,8BAOE,QAAC,OAAD;AAAA,gCACE,QAAC,GAAD;AAAK,UAAA,MAAM,EAAEA,QAAQ,KAAK,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,GAAD;AAAK,UAAA,MAAM,EAAEA,QAAQ,KAAK,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,GAAD;AAAK,UAAA,MAAM,EAAEA,QAAQ,KAAK,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE,QAAC,GAAD;AAAK,UAAA,MAAM,EAAEA,QAAQ,KAAK,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,eAaE,QAAC,SAAD;AAAA,gCACE,QAAC,QAAD;AAAA,oBACGA,QAAQ,KAAK,CAAb,iBACC;AAAM,YAAA,QAAQ,EAAEG,YAAY,CAACU,UAAD,CAA5B;AAAA,oCACE,QAAC,IAAD;AACE,cAAA,eAAe,EAAE,eADnB;AAEE,cAAA,SAAS,EAAE,CAFb;AAGE,cAAA,MAAM,EAAE,CAHV;AAAA,sCAKE,QAAC,QAAD;AAAU,gBAAA,OAAO,EAAE,CAAnB;AAAA,uCACE,QAAC,WAAD;AAAA,yCACE,QAAC,UAAD;AACE,oBAAA,OAAO,EAAER,OADX;AAEE,oBAAA,IAAI,EAAC,MAFP,CAGE;AAHF;AAIE,oBAAA,MAAM,EAAE,CAAC;AAAEc,sBAAAA,KAAK,EAAE;AAAEC,wBAAAA,QAAF;AAAYC,wBAAAA,KAAZ;AAAmBC,wBAAAA;AAAnB;AAAT,qBAAD,kBACN,QAAC,MAAD;AAAQ,sBAAA,KAAK,EAAC,MAAd;AAAA,8CACE,QAAC,IAAD;AAAM,wBAAA,EAAE,EAAC,GAAT;AAAa,wBAAA,QAAQ,EAAC,IAAtB;AAA2B,wBAAA,SAAS,EAAC,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,eAIE,QAAC,KAAD;AACE,wBAAA,IAAI,EAAC,MADP;AAEE,wBAAA,KAAK,EAAED,KAFT;AAGE,wBAAA,KAAK,EAAC,MAHR;AAIE,wBAAA,QAAQ,EAAED,QAJZ;AAKE,wBAAA,WAAW,EAAC,UALd,CAME;AANF;AAOE,wBAAA,GAAG,EAAEE,GAPP;AAQE,wBAAA,WAAW,EAAC,MARd;AASE,wBAAA,QAAQ,EAAC,KATX;AAUE,wBAAA,QAAQ;AAVV;AAAA;AAAA;AAAA;AAAA,8BAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBALF,eAiCE,QAAC,QAAD;AAAU,gBAAA,OAAO,EAAE,CAAnB;AAAA,uCACE,QAAC,WAAD;AAAA,yCACE,QAAC,UAAD;AACE,oBAAA,OAAO,EAAEjB,OADX;AAEE,oBAAA,IAAI,EAAC,WAFP,CAGE;AAHF;AAIE,oBAAA,MAAM,EAAE,CAAC;AAAEc,sBAAAA,KAAK,EAAE;AAAEC,wBAAAA,QAAF;AAAYC,wBAAAA,KAAZ;AAAmBC,wBAAAA;AAAnB;AAAT,qBAAD,kBACN,QAAC,MAAD;AAAQ,sBAAA,KAAK,EAAC,MAAd;AAAA,8CACE,QAAC,IAAD;AAAM,wBAAA,EAAE,EAAC,GAAT;AAAa,wBAAA,QAAQ,EAAC,IAAtB;AAA2B,wBAAA,SAAS,EAAC,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,eAKE,QAAC,KAAD;AACE,wBAAA,IAAI,EAAC,WADP;AAEE,wBAAA,KAAK,EAAED,KAFT;AAGE,wBAAA,IAAI,EAAC,MAHP;AAIE,wBAAA,KAAK,EAAC,MAJR;AAKE,wBAAA,QAAQ,EAAED,QALZ;AAME,wBAAA,WAAW,EAAC,UANd,CAOE;AAPF;AAQE,wBAAA,GAAG,EAAEE,GARP;AASE,wBAAA,WAAW,EAAC,WATd;AAUE,wBAAA,QAAQ,EAAC;AAVX;AAAA;AAAA;AAAA;AAAA,8BALF;AAAA;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAjCF,eA8DE,QAAC,QAAD;AAAU,gBAAA,OAAO,EAAE,CAAnB;AAAA,uCACE,QAAC,WAAD;AAAA,yCACE,QAAC,UAAD;AACE,oBAAA,OAAO,EAAEjB,OADX;AAEE,oBAAA,IAAI,EAAC,SAFP,CAGE;AAHF;AAIE,oBAAA,MAAM,EAAE,CAAC;AAAEc,sBAAAA,KAAK,EAAE;AAAEC,wBAAAA,QAAF;AAAYC,wBAAAA,KAAZ;AAAmBC,wBAAAA;AAAnB;AAAT,qBAAD,kBACN,QAAC,MAAD;AAAQ,sBAAA,KAAK,EAAC,MAAd;AAAA,8CACE,QAAC,IAAD;AAAM,wBAAA,EAAE,EAAC,GAAT;AAAa,wBAAA,QAAQ,EAAC,IAAtB;AAA2B,wBAAA,SAAS,EAAC,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,eAKE,QAAC,KAAD;AACE,wBAAA,IAAI,EAAC,SADP;AAEE,wBAAA,KAAK,EAAED,KAFT;AAGE,wBAAA,IAAI,EAAC,MAHP;AAIE,wBAAA,KAAK,EAAC,MAJR;AAKE,wBAAA,QAAQ,EAAED,QALZ;AAME,wBAAA,WAAW,EAAC,UANd,CAOE;AAPF;AAQE,wBAAA,GAAG,EAAEE,GARP;AASE,wBAAA,WAAW,EAAC,SATd;AAUE,wBAAA,QAAQ,EAAC;AAVX;AAAA;AAAA;AAAA;AAAA,8BALF;AAAA;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBA9DF,eA2FE,QAAC,QAAD;AAAU,gBAAA,OAAO,EAAE,CAAnB;AAAA,uCACE,QAAC,WAAD;AAAA,yCACE,QAAC,UAAD;AACE,oBAAA,OAAO,EAAEjB,OADX;AAEE,oBAAA,IAAI,EAAC,YAFP,CAGE;AAHF;AAIE,oBAAA,MAAM,EAAE,CAAC;AAAEc,sBAAAA,KAAK,EAAE;AAAEC,wBAAAA,QAAF;AAAYC,wBAAAA,KAAZ;AAAmBC,wBAAAA;AAAnB;AAAT,qBAAD,kBACN,QAAC,MAAD;AAAQ,sBAAA,KAAK,EAAC,MAAd;AAAA,8CACE,QAAC,IAAD;AAAM,wBAAA,EAAE,EAAC,GAAT;AAAa,wBAAA,QAAQ,EAAC,IAAtB;AAA2B,wBAAA,SAAS,EAAC,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,eAIE,QAAC,KAAD;AACE,wBAAA,IAAI,EAAC,YADP;AAEE,wBAAA,KAAK,EAAED,KAFT;AAGE,wBAAA,IAAI,EAAC,QAHP;AAIE,wBAAA,KAAK,EAAC,MAJR;AAKE,wBAAA,QAAQ,EAAGE,CAAD,IACRH,QAAQ,CAACI,UAAU,CAACD,CAAC,CAACE,MAAF,CAASJ,KAAV,CAAX,CANZ;AAQE,wBAAA,WAAW,EAAC,UARd,CASE;AATF;AAUE,wBAAA,GAAG,EAAEC,GAVP;AAWE,wBAAA,WAAW,EAAC,YAXd;AAYE,wBAAA,QAAQ,EAAC;AAZX;AAAA;AAAA;AAAA;AAAA,8BAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBA3FF,eAyHE,QAAC,QAAD;AAAU,gBAAA,OAAO,EAAE,CAAnB;AAAA,uCACE,QAAC,WAAD;AAAA,yCACE,QAAC,UAAD;AACE,oBAAA,OAAO,EAAEjB,OADX;AAEE,oBAAA,IAAI,EAAC,QAFP,CAGE;AAHF;AAIE,oBAAA,MAAM,EAAE,CAAC;AAAEc,sBAAAA,KAAK,EAAE;AAAEC,wBAAAA,QAAF;AAAYC,wBAAAA,KAAZ;AAAmBC,wBAAAA;AAAnB;AAAT,qBAAD,kBACN,QAAC,MAAD;AAAQ,sBAAA,KAAK,EAAC,MAAd;AAAA,8CACE,QAAC,IAAD;AAAM,wBAAA,EAAE,EAAC,GAAT;AAAa,wBAAA,QAAQ,EAAC,IAAtB;AAA2B,wBAAA,SAAS,EAAC,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,eAIE,QAAC,KAAD;AACE,wBAAA,IAAI,EAAC,QADP;AAEE,wBAAA,KAAK,EAAED,KAFT;AAGE,wBAAA,KAAK,EAAC,MAHR;AAIE,wBAAA,QAAQ,EAAED,QAJZ;AAKE,wBAAA,WAAW,EAAC,UALd,CAME;AANF;AAOE,wBAAA,GAAG,EAAEE,GAPP;AAQE,wBAAA,WAAW,EAAC,QARd;AASE,wBAAA,QAAQ,EAAC,KATX;AAUE,wBAAA,QAAQ;AAVV;AAAA;AAAA;AAAA;AAAA,8BAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAzHF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAuJE,QAAC,OAAD;AAAS,cAAA,WAAW,EAAE,CAAtB;AAAyB,cAAA,WAAW,EAAC,MAArC;AAA4C,cAAA,EAAE,EAAE;AAAhD;AAAA;AAAA;AAAA;AAAA,oBAvJF,eAwJE,QAAC,UAAD;AACE,cAAA,EAAE,EAAE,CADN;AAEE,cAAA,QAAQ,EAAEpB,aAFZ;AAGE,cAAA,KAAK,EAAED,UAHT;AAIE,cAAA,MAAM,EAAC,gBAJT;AAKE,cAAA,YAAY,EAAE,EALhB;AAME,cAAA,EAAE,EAAE,CANN;AAOE,cAAA,EAAE,EAAE,CAPN;AAQE,cAAA,IAAI,EAAC,IARP;AAAA,qCAUE,QAAC,KAAD;AAAO,gBAAA,SAAS,EAAC,KAAjB;AAAA,wCACE,QAAC,KAAD;AAAO,kBAAA,KAAK,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE,QAAC,KAAD;AAAO,kBAAA,KAAK,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,eAGE,QAAC,KAAD;AAAO,kBAAA,KAAK,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHF,eAIE,QAAC,KAAD;AAAO,kBAAA,KAAK,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAVF;AAAA;AAAA;AAAA;AAAA,oBAxJF,eAyKE,QAAC,MAAD;AAAQ,cAAA,CAAC,EAAE,CAAX;AAAA,qCACE,QAAC,WAAD;AAAa,gBAAA,GAAG,EAAC,IAAjB;AAAsB,gBAAA,EAAE,EAAC,IAAzB;AAAA,wCACE,QAAC,MAAD;AAAQ,kBAAA,WAAW,EAAC,MAApB;AAA2B,kBAAA,OAAO,EAAC,OAAnC;AAA2C,kBAAA,IAAI,EAAC,QAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAIE,QAAC,MAAD;AACE,kBAAA,WAAW,EAAC,MADd;AAEE,kBAAA,OAAO,EAAC,OAFV;AAGE,kBAAA,OAAO,EAAEJ,iBAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAzKF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,gBADF,eA6LE,QAAC,QAAD;AAAA,oBACGG,QAAQ,KAAK,CAAb,iBACC;AAAM,YAAA,QAAQ,EAAEG,YAAY,CAACU,UAAD,CAA5B;AAAA,oCACE,QAAC,IAAD;AACE,cAAA,eAAe,EAAE,eADnB;AAEE,cAAA,SAAS,EAAE,CAFb;AAGE,cAAA,MAAM,EAAE,CAHV;AAAA,sCAKE,QAAC,QAAD;AAAU,gBAAA,OAAO,EAAE,CAAnB;AAAA,uCACE,QAAC,WAAD;AAAA,yCACE,QAAC,UAAD;AACE,oBAAA,OAAO,EAAER,OADX;AAEE,oBAAA,IAAI,EAAC,MAFP,CAGE;AAHF;AAIE,oBAAA,MAAM,EAAE,CAAC;AAAEc,sBAAAA,KAAK,EAAE;AAAEC,wBAAAA,QAAF;AAAYC,wBAAAA,KAAZ;AAAmBC,wBAAAA;AAAnB;AAAT,qBAAD,kBACN,QAAC,MAAD;AAAQ,sBAAA,KAAK,EAAC,MAAd;AAAA,8CACE,QAAC,IAAD;AAAM,wBAAA,EAAE,EAAC,GAAT;AAAa,wBAAA,QAAQ,EAAC,IAAtB;AAA2B,wBAAA,SAAS,EAAC,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,eAIE,QAAC,KAAD;AACE,wBAAA,IAAI,EAAC,MADP;AAEE,wBAAA,KAAK,EAAED,KAFT;AAGE,wBAAA,KAAK,EAAC,MAHR;AAIE,wBAAA,QAAQ,EAAED,QAJZ;AAKE,wBAAA,WAAW,EAAC,UALd,CAME;AANF;AAOE,wBAAA,GAAG,EAAEE,GAPP;AAQE,wBAAA,WAAW,EAAC,MARd;AASE,wBAAA,QAAQ,EAAC,KATX;AAUE,wBAAA,QAAQ;AAVV;AAAA;AAAA;AAAA;AAAA,8BAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBALF,eAiCE,QAAC,QAAD;AAAU,gBAAA,OAAO,EAAE,CAAnB;AAAA,uCACE,QAAC,WAAD;AAAA,yCACE,QAAC,UAAD;AACE,oBAAA,OAAO,EAAEjB,OADX;AAEE,oBAAA,IAAI,EAAC,MAFP,CAGE;AAHF;AAIE,oBAAA,MAAM,EAAE,CAAC;AAAEc,sBAAAA,KAAK,EAAE;AAAEC,wBAAAA,QAAF;AAAYC,wBAAAA,KAAZ;AAAmBC,wBAAAA;AAAnB;AAAT,qBAAD,kBACN,QAAC,MAAD;AAAQ,sBAAA,KAAK,EAAC,MAAd;AAAA,8CACE,QAAC,IAAD;AAAM,wBAAA,EAAE,EAAC,GAAT;AAAa,wBAAA,QAAQ,EAAC,IAAtB;AAA2B,wBAAA,SAAS,EAAC,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,eAKE,QAAC,KAAD;AACE,wBAAA,IAAI,EAAC,MADP;AAEE,wBAAA,KAAK,EAAED,KAFT;AAGE,wBAAA,IAAI,EAAC,MAHP;AAIE,wBAAA,KAAK,EAAC,MAJR;AAKE,wBAAA,QAAQ,EAAED,QALZ;AAME,wBAAA,WAAW,EAAC,UANd,CAOE;AAPF;AAQE,wBAAA,GAAG,EAAEE,GARP;AASE,wBAAA,WAAW,EAAC,MATd;AAUE,wBAAA,QAAQ,EAAC;AAVX;AAAA;AAAA;AAAA;AAAA,8BALF;AAAA;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAjCF,eA8DE,QAAC,QAAD;AAAU,gBAAA,OAAO,EAAE,CAAnB;AAAA,uCACE,QAAC,WAAD;AAAA,yCACE,QAAC,UAAD;AACE,oBAAA,OAAO,EAAEjB,OADX;AAEE,oBAAA,IAAI,EAAC,QAFP,CAGE;AAHF;AAIE,oBAAA,MAAM,EAAE,CAAC;AAAEc,sBAAAA,KAAK,EAAE;AAAEC,wBAAAA,QAAF;AAAYC,wBAAAA,KAAZ;AAAmBC,wBAAAA;AAAnB;AAAT,qBAAD,kBACN,QAAC,MAAD;AAAQ,sBAAA,KAAK,EAAC,MAAd;AAAA,8CACE,QAAC,IAAD;AAAM,wBAAA,EAAE,EAAC,GAAT;AAAa,wBAAA,QAAQ,EAAC,IAAtB;AAA2B,wBAAA,SAAS,EAAC,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,eAIE,QAAC,KAAD;AACE,wBAAA,IAAI,EAAC,QADP;AAEE,wBAAA,KAAK,EAAED,KAFT;AAGE,wBAAA,IAAI,EAAC,QAHP;AAIE,wBAAA,KAAK,EAAC,MAJR;AAKE,wBAAA,QAAQ,EAAGE,CAAD,IACRH,QAAQ,CAACI,UAAU,CAACD,CAAC,CAACE,MAAF,CAASJ,KAAV,CAAX,CANZ;AAQE,wBAAA,WAAW,EAAC,UARd,CASE;AATF;AAUE,wBAAA,GAAG,EAAEC,GAVP;AAWE,wBAAA,WAAW,EAAC,QAXd;AAYE,wBAAA,QAAQ,EAAC;AAZX;AAAA;AAAA;AAAA;AAAA,8BAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBA9DF,eA4FE,QAAC,QAAD;AAAU,gBAAA,OAAO,EAAE,CAAnB;AAAA,uCACE,QAAC,WAAD;AAAA,yCACE,QAAC,UAAD;AACE,oBAAA,OAAO,EAAEjB,OADX;AAEE,oBAAA,IAAI,EAAC,aAFP,CAGE;AAHF;AAIE,oBAAA,MAAM,EAAE,CAAC;AAAEc,sBAAAA,KAAK,EAAE;AAAEC,wBAAAA,QAAF;AAAYC,wBAAAA,KAAZ;AAAmBC,wBAAAA;AAAnB;AAAT,qBAAD,kBACN,QAAC,MAAD;AAAQ,sBAAA,KAAK,EAAC,MAAd;AAAA,8CACE,QAAC,IAAD;AAAM,wBAAA,EAAE,EAAC,GAAT;AAAa,wBAAA,QAAQ,EAAC,IAAtB;AAA2B,wBAAA,SAAS,EAAC,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,eAIE,QAAC,KAAD;AACE,wBAAA,IAAI,EAAC,aADP;AAEE,wBAAA,KAAK,EAAED,KAFT;AAGE,wBAAA,KAAK,EAAC,MAHR;AAIE,wBAAA,QAAQ,EAAED,QAJZ;AAKE,wBAAA,WAAW,EAAC,UALd,CAME;AANF;AAOE,wBAAA,GAAG,EAAEE,GAPP;AAQE,wBAAA,WAAW,EAAC,aARd;AASE,wBAAA,QAAQ,EAAC;AATX;AAAA;AAAA;AAAA;AAAA,8BAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBA5FF,eAuHE,QAAC,QAAD;AAAU,gBAAA,OAAO,EAAE,CAAnB;AAAA,uCACE,QAAC,WAAD;AAAA,yCACE,QAAC,UAAD;AACE,oBAAA,OAAO,EAAEjB,OADX;AAEE,oBAAA,IAAI,EAAC,QAFP,CAGE;AAHF;AAIE,oBAAA,MAAM,EAAE,CAAC;AAAEc,sBAAAA,KAAK,EAAE;AAAEC,wBAAAA,QAAF;AAAYC,wBAAAA,KAAZ;AAAmBC,wBAAAA;AAAnB;AAAT,qBAAD,kBACN,QAAC,MAAD;AAAQ,sBAAA,KAAK,EAAC,MAAd;AAAA,8CACE,QAAC,IAAD;AAAM,wBAAA,EAAE,EAAC,GAAT;AAAa,wBAAA,QAAQ,EAAC,IAAtB;AAA2B,wBAAA,SAAS,EAAC,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,eAIE,QAAC,KAAD;AACE,wBAAA,IAAI,EAAC,QADP;AAEE,wBAAA,KAAK,EAAED,KAFT;AAGE,wBAAA,KAAK,EAAC,MAHR;AAIE,wBAAA,QAAQ,EAAED,QAJZ;AAKE,wBAAA,WAAW,EAAC,UALd,CAME;AANF;AAOE,wBAAA,GAAG,EAAEE,GAPP;AAQE,wBAAA,WAAW,EAAC,QARd;AASE,wBAAA,QAAQ,EAAC,KATX;AAUE,wBAAA,QAAQ;AAVV;AAAA;AAAA;AAAA;AAAA,8BAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAvHF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAqJE,QAAC,OAAD;AAAS,cAAA,WAAW,EAAE,CAAtB;AAAyB,cAAA,WAAW,EAAC,MAArC;AAA4C,cAAA,EAAE,EAAE;AAAhD;AAAA;AAAA;AAAA;AAAA,oBArJF,eAsJE,QAAC,UAAD;AACE,cAAA,EAAE,EAAE,CADN;AAEE,cAAA,QAAQ,EAAEpB,aAFZ;AAGE,cAAA,KAAK,EAAED,UAHT;AAIE,cAAA,MAAM,EAAC,gBAJT;AAKE,cAAA,YAAY,EAAE,EALhB;AAME,cAAA,EAAE,EAAE,CANN;AAOE,cAAA,EAAE,EAAE,CAPN;AAQE,cAAA,IAAI,EAAC,IARP;AASE,cAAA,WAAW,EAAC,MATd;AAUE,cAAA,UAAU,EAAC,MAVb;AAWE,cAAA,IAAI,EAAC,IAXP;AAAA,qCAaE,QAAC,KAAD;AAAO,gBAAA,SAAS,EAAC,KAAjB;AAAA,wCACE,QAAC,KAAD;AAAO,kBAAA,KAAK,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE,QAAC,KAAD;AAAO,kBAAA,KAAK,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,eAGE,QAAC,KAAD;AAAO,kBAAA,KAAK,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAbF;AAAA;AAAA;AAAA;AAAA,oBAtJF,eA0KE,QAAC,MAAD;AAAQ,cAAA,CAAC,EAAE,CAAX;AAAA,qCACE,QAAC,WAAD;AAAa,gBAAA,GAAG,EAAC,IAAjB;AAAsB,gBAAA,EAAE,EAAC,IAAzB;AAAA,wCACE,QAAC,MAAD;AAAQ,kBAAA,WAAW,EAAC,MAApB;AAA2B,kBAAA,OAAO,EAAC,OAAnC;AAA2C,kBAAA,IAAI,EAAC,QAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAIE,QAAC,MAAD;AACE,kBAAA,WAAW,EAAC,MADd;AAEE,kBAAA,OAAO,EAAC,OAFV;AAGE,kBAAA,OAAO,EAAEJ,iBAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBA1KF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,gBA7LF,eA0XE,QAAC,QAAD;AAAA,oBACGG,QAAQ,KAAK,CAAb,iBACC;AAAM,YAAA,QAAQ,EAAEG,YAAY,CAACU,UAAD,CAA5B;AAAA,oCACE,QAAC,IAAD;AACE,cAAA,eAAe,EAAE,eADnB;AAEE,cAAA,SAAS,EAAE,CAFb;AAGE,cAAA,MAAM,EAAE,CAHV;AAAA,sCAKE,QAAC,QAAD;AAAU,gBAAA,OAAO,EAAE,CAAnB;AAAA,uCACE,QAAC,WAAD;AAAA,yCACE,QAAC,UAAD;AACE,oBAAA,OAAO,EAAER,OADX;AAEE,oBAAA,IAAI,EAAC,MAFP,CAGE;AAHF;AAIE,oBAAA,MAAM,EAAE,CAAC;AAAEc,sBAAAA,KAAK,EAAE;AAAEC,wBAAAA,QAAF;AAAYC,wBAAAA,KAAZ;AAAmBC,wBAAAA;AAAnB;AAAT,qBAAD,kBACN,QAAC,MAAD;AAAQ,sBAAA,KAAK,EAAC,MAAd;AAAA,8CACE,QAAC,IAAD;AAAM,wBAAA,EAAE,EAAC,GAAT;AAAa,wBAAA,QAAQ,EAAC,IAAtB;AAA2B,wBAAA,SAAS,EAAC,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,eAIE,QAAC,KAAD;AACE,wBAAA,IAAI,EAAC,MADP;AAEE,wBAAA,KAAK,EAAED,KAFT;AAGE,wBAAA,KAAK,EAAC,MAHR;AAIE,wBAAA,QAAQ,EAAED,QAJZ;AAKE,wBAAA,WAAW,EAAC,UALd,CAME;AANF;AAOE,wBAAA,GAAG,EAAEE,GAPP;AAQE,wBAAA,WAAW,EAAC,MARd;AASE,wBAAA,QAAQ,EAAC,KATX;AAUE,wBAAA,QAAQ;AAVV;AAAA;AAAA;AAAA;AAAA,8BAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBALF,eAiCE,QAAC,QAAD;AAAU,gBAAA,OAAO,EAAE,CAAnB;AAAA,uCACE,QAAC,WAAD;AAAA,yCACE,QAAC,UAAD;AACE,oBAAA,OAAO,EAAEjB,OADX;AAEE,oBAAA,IAAI,EAAC,QAFP,CAGE;AAHF;AAIE,oBAAA,MAAM,EAAE,CAAC;AAAEc,sBAAAA,KAAK,EAAE;AAAEC,wBAAAA,QAAF;AAAYC,wBAAAA,KAAZ;AAAmBC,wBAAAA;AAAnB;AAAT,qBAAD,kBACN,QAAC,MAAD;AAAQ,sBAAA,KAAK,EAAC,MAAd;AAAA,8CACE,QAAC,IAAD;AAAM,wBAAA,EAAE,EAAC,GAAT;AAAa,wBAAA,QAAQ,EAAC,IAAtB;AAA2B,wBAAA,SAAS,EAAC,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,eAIE,QAAC,KAAD;AACE,wBAAA,IAAI,EAAC,QADP;AAEE,wBAAA,KAAK,EAAED,KAFT;AAGE,wBAAA,KAAK,EAAC,MAHR;AAIE,wBAAA,QAAQ,EAAED,QAJZ;AAKE,wBAAA,WAAW,EAAC,UALd,CAME;AANF;AAOE,wBAAA,GAAG,EAAEE,GAPP;AAQE,wBAAA,WAAW,EAAC,QARd;AASE,wBAAA,QAAQ,EAAC;AATX;AAAA;AAAA;AAAA;AAAA,8BAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAjCF,eA4DE,QAAC,QAAD;AAAU,gBAAA,OAAO,EAAE,CAAnB;AAAA,uCACE,QAAC,WAAD;AAAA,yCACE,QAAC,UAAD;AACE,oBAAA,OAAO,EAAEjB,OADX;AAEE,oBAAA,IAAI,EAAC,YAFP,CAGE;AAHF;AAIE,oBAAA,MAAM,EAAE,CAAC;AAAEc,sBAAAA,KAAK,EAAE;AAAEC,wBAAAA,QAAF;AAAYC,wBAAAA,KAAZ;AAAmBC,wBAAAA;AAAnB;AAAT,qBAAD,kBACN,QAAC,MAAD;AAAQ,sBAAA,KAAK,EAAC,MAAd;AAAA,8CACE,QAAC,IAAD;AAAM,wBAAA,EAAE,EAAC,GAAT;AAAa,wBAAA,QAAQ,EAAC,IAAtB;AAA2B,wBAAA,SAAS,EAAC,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,eAIE,QAAC,KAAD;AACE,wBAAA,IAAI,EAAC,YADP;AAEE,wBAAA,KAAK,EAAED,KAFT;AAGE,wBAAA,IAAI,EAAC,QAHP;AAIE,wBAAA,KAAK,EAAC,MAJR;AAKE,wBAAA,QAAQ,EAAGE,CAAD,IACRH,QAAQ,CAACI,UAAU,CAACD,CAAC,CAACE,MAAF,CAASJ,KAAV,CAAX,CANZ;AAQE,wBAAA,WAAW,EAAC,UARd,CASE;AATF;AAUE,wBAAA,GAAG,EAAEC,GAVP;AAWE,wBAAA,WAAW,EAAC,YAXd;AAYE,wBAAA,QAAQ,EAAC,KAZX;AAaE,wBAAA,QAAQ;AAbV;AAAA;AAAA;AAAA;AAAA,8BAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBA5DF,eA2FE,QAAC,QAAD;AAAU,gBAAA,OAAO,EAAE,CAAnB;AAAA,uCACE,QAAC,WAAD;AAAA,yCACE,QAAC,UAAD;AACE,oBAAA,OAAO,EAAEjB,OADX;AAEE,oBAAA,IAAI,EAAC,QAFP,CAGE;AAHF;AAIE,oBAAA,MAAM,EAAE,CAAC;AAAEc,sBAAAA,KAAK,EAAE;AAAEC,wBAAAA,QAAF;AAAYC,wBAAAA,KAAZ;AAAmBC,wBAAAA;AAAnB;AAAT,qBAAD,kBACN,QAAC,MAAD;AAAQ,sBAAA,KAAK,EAAC,MAAd;AAAA,8CACE,QAAC,IAAD;AAAM,wBAAA,EAAE,EAAC,GAAT;AAAa,wBAAA,QAAQ,EAAC,IAAtB;AAA2B,wBAAA,SAAS,EAAC,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,eAIE,QAAC,KAAD;AACE,wBAAA,IAAI,EAAC,QADP;AAEE,wBAAA,KAAK,EAAED,KAFT;AAGE,wBAAA,IAAI,EAAC,QAHP;AAIE,wBAAA,KAAK,EAAC,MAJR;AAKE,wBAAA,QAAQ,EAAGE,CAAD,IACRH,QAAQ,CAACI,UAAU,CAACD,CAAC,CAACE,MAAF,CAASJ,KAAV,CAAX,CANZ;AAQE,wBAAA,WAAW,EAAC,UARd,CASE;AATF;AAUE,wBAAA,GAAG,EAAEC,GAVP;AAWE,wBAAA,WAAW,EAAC,QAXd;AAYE,wBAAA,QAAQ,EAAC,KAZX;AAaE,wBAAA,QAAQ;AAbV;AAAA;AAAA;AAAA;AAAA,8BAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBA3FF,eA0HE,QAAC,QAAD;AAAU,gBAAA,OAAO,EAAE,CAAnB;AAAA,uCACE,QAAC,WAAD;AAAA,yCACE,QAAC,UAAD;AACE,oBAAA,OAAO,EAAEjB,OADX;AAEE,oBAAA,IAAI,EAAC,QAFP,CAGE;AAHF;AAIE,oBAAA,MAAM,EAAE,CAAC;AAAEc,sBAAAA,KAAK,EAAE;AAAEC,wBAAAA,QAAF;AAAYC,wBAAAA,KAAZ;AAAmBC,wBAAAA;AAAnB;AAAT,qBAAD,kBACN,QAAC,MAAD;AAAQ,sBAAA,KAAK,EAAC,MAAd;AAAA,8CACE,QAAC,IAAD;AAAM,wBAAA,EAAE,EAAC,GAAT;AAAa,wBAAA,QAAQ,EAAC,IAAtB;AAA2B,wBAAA,SAAS,EAAC,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,eAIE,QAAC,KAAD;AACE,wBAAA,IAAI,EAAC,QADP;AAEE,wBAAA,KAAK,EAAED,KAFT;AAGE,wBAAA,KAAK,EAAC,MAHR;AAIE,wBAAA,QAAQ,EAAED,QAJZ;AAKE,wBAAA,WAAW,EAAC,UALd,CAME;AANF;AAOE,wBAAA,GAAG,EAAEE,GAPP;AAQE,wBAAA,WAAW,EAAC,QARd;AASE,wBAAA,QAAQ,EAAC,KATX;AAUE,wBAAA,QAAQ;AAVV;AAAA;AAAA;AAAA;AAAA,8BAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBA1HF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAwJE,QAAC,OAAD;AAAS,cAAA,WAAW,EAAE,CAAtB;AAAyB,cAAA,WAAW,EAAC,MAArC;AAA4C,cAAA,EAAE,EAAE;AAAhD;AAAA;AAAA;AAAA;AAAA,oBAxJF,eAyJE,QAAC,UAAD;AACE,cAAA,EAAE,EAAE,CADN;AAEE,cAAA,QAAQ,EAAEpB,aAFZ;AAGE,cAAA,KAAK,EAAED,UAHT;AAIE,cAAA,MAAM,EAAC,gBAJT;AAKE,cAAA,YAAY,EAAE,EALhB;AAME,cAAA,EAAE,EAAE,CANN;AAOE,cAAA,EAAE,EAAE,CAPN;AAQE,cAAA,IAAI,EAAC,IARP;AAAA,qCAUE,QAAC,KAAD;AAAO,gBAAA,SAAS,EAAC,KAAjB;AAAA,wCACE,QAAC,KAAD;AAAO,kBAAA,KAAK,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE,QAAC,KAAD;AAAO,kBAAA,KAAK,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,eAGE,QAAC,KAAD;AAAO,kBAAA,KAAK,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHF,eAIE,QAAC,KAAD;AAAO,kBAAA,KAAK,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAVF;AAAA;AAAA;AAAA;AAAA,oBAzJF,eA0KE,QAAC,MAAD;AAAQ,cAAA,CAAC,EAAE,CAAX;AAAA,qCACE,QAAC,WAAD;AAAa,gBAAA,GAAG,EAAC,IAAjB;AAAsB,gBAAA,EAAE,EAAC,IAAzB;AAAA,wCACE,QAAC,MAAD;AAAQ,kBAAA,WAAW,EAAC,MAApB;AAA2B,kBAAA,OAAO,EAAC,OAAnC;AAA2C,kBAAA,IAAI,EAAC,QAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAIE,QAAC,MAAD;AACE,kBAAA,WAAW,EAAC,MADd;AAEE,kBAAA,OAAO,EAAC,OAFV;AAGE,kBAAA,OAAO,EAAEJ,iBAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBA1KF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,gBA1XF,eAujBE,QAAC,QAAD;AAAA,oBACGG,QAAQ,KAAK,CAAb,iBACC;AAAM,YAAA,QAAQ,EAAEG,YAAY,CAACU,UAAD,CAA5B;AAAA,oCACE,QAAC,IAAD;AACE,cAAA,eAAe,EAAE,eADnB;AAEE,cAAA,SAAS,EAAE,CAFb;AAGE,cAAA,MAAM,EAAE,CAHV;AAAA,sCAKE,QAAC,QAAD;AAAU,gBAAA,OAAO,EAAE,CAAnB;AAAA,uCACE,QAAC,WAAD;AAAA,yCACE,QAAC,UAAD;AACE,oBAAA,OAAO,EAAER,OADX;AAEE,oBAAA,IAAI,EAAC,QAFP,CAGE;AAHF;AAIE,oBAAA,MAAM,EAAE,CAAC;AAAEc,sBAAAA,KAAK,EAAE;AAAEC,wBAAAA,QAAF;AAAYC,wBAAAA,KAAZ;AAAmBC,wBAAAA;AAAnB;AAAT,qBAAD,kBACN,QAAC,MAAD;AAAQ,sBAAA,KAAK,EAAC,MAAd;AAAA,8CACE,QAAC,IAAD;AAAM,wBAAA,EAAE,EAAC,GAAT;AAAa,wBAAA,QAAQ,EAAC,IAAtB;AAA2B,wBAAA,SAAS,EAAC,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,eAIE,QAAC,KAAD;AACE,wBAAA,IAAI,EAAC,QADP;AAEE,wBAAA,KAAK,EAAED,KAFT;AAGE,wBAAA,KAAK,EAAC,MAHR;AAIE,wBAAA,QAAQ,EAAED,QAJZ;AAKE,wBAAA,WAAW,EAAC,UALd,CAME;AANF;AAOE,wBAAA,GAAG,EAAEE,GAPP;AAQE,wBAAA,WAAW,EAAC,QARd;AASE,wBAAA,QAAQ,EAAC,KATX;AAUE,wBAAA,QAAQ;AAVV;AAAA;AAAA;AAAA;AAAA,8BAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBALF,eAiCE,QAAC,QAAD;AAAU,gBAAA,OAAO,EAAE,CAAnB;AAAA,uCACE,QAAC,WAAD;AAAA,yCACE,QAAC,UAAD;AACE,oBAAA,OAAO,EAAEjB,OADX;AAEE,oBAAA,IAAI,EAAC,cAFP,CAGE;AAHF;AAIE,oBAAA,MAAM,EAAE,CAAC;AAAEc,sBAAAA,KAAK,EAAE;AAAEC,wBAAAA,QAAF;AAAYC,wBAAAA,KAAZ;AAAmBC,wBAAAA;AAAnB;AAAT,qBAAD,kBACN,QAAC,MAAD;AAAQ,sBAAA,KAAK,EAAC,MAAd;AAAA,8CACE,QAAC,IAAD;AAAM,wBAAA,EAAE,EAAC,GAAT;AAAa,wBAAA,QAAQ,EAAC,IAAtB;AAA2B,wBAAA,SAAS,EAAC,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,eAIE,QAAC,KAAD;AACE,wBAAA,IAAI,EAAC,cADP;AAEE,wBAAA,KAAK,EAAED,KAFT;AAGE,wBAAA,IAAI,EAAC,QAHP;AAIE,wBAAA,KAAK,EAAC,MAJR;AAKE,wBAAA,QAAQ,EAAGE,CAAD,IACRH,QAAQ,CAACI,UAAU,CAACD,CAAC,CAACE,MAAF,CAASJ,KAAV,CAAX,CANZ;AAQE,wBAAA,WAAW,EAAC,UARd,CASE;AATF;AAUE,wBAAA,GAAG,EAAEC,GAVP;AAWE,wBAAA,WAAW,EAAC,eAXd;AAYE,wBAAA,QAAQ,EAAC,KAZX;AAaE,wBAAA,QAAQ;AAbV;AAAA;AAAA;AAAA;AAAA,8BAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAjCF,eAgEE,QAAC,QAAD;AAAU,gBAAA,OAAO,EAAE,CAAnB;AAAA,uCACE,QAAC,WAAD;AAAA,yCACE,QAAC,UAAD;AACE,oBAAA,OAAO,EAAEjB,OADX;AAEE,oBAAA,IAAI,EAAC,QAFP,CAGE;AAHF;AAIE,oBAAA,MAAM,EAAE,CAAC;AAAEc,sBAAAA,KAAK,EAAE;AAAEC,wBAAAA,QAAF;AAAYC,wBAAAA,KAAZ;AAAmBC,wBAAAA;AAAnB;AAAT,qBAAD,kBACN,QAAC,MAAD;AAAQ,sBAAA,KAAK,EAAC,MAAd;AAAA,8CACE,QAAC,IAAD;AAAM,wBAAA,EAAE,EAAC,GAAT;AAAa,wBAAA,QAAQ,EAAC,IAAtB;AAA2B,wBAAA,SAAS,EAAC,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,eAIE,QAAC,KAAD;AACE,wBAAA,IAAI,EAAC,QADP;AAEE,wBAAA,KAAK,EAAED,KAFT;AAGE,wBAAA,KAAK,EAAC,MAHR;AAIE,wBAAA,QAAQ,EAAED,QAJZ;AAKE,wBAAA,WAAW,EAAC,UALd,CAME;AANF;AAOE,wBAAA,GAAG,EAAEE,GAPP;AAQE,wBAAA,WAAW,EAAC,QARd;AASE,wBAAA,QAAQ,EAAC,KATX;AAUE,wBAAA,QAAQ;AAVV;AAAA;AAAA;AAAA;AAAA,8BAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAhEF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eA8FE,QAAC,OAAD;AAAS,cAAA,WAAW,EAAE,CAAtB;AAAyB,cAAA,WAAW,EAAC,MAArC;AAA4C,cAAA,EAAE,EAAE;AAAhD;AAAA;AAAA;AAAA;AAAA,oBA9FF,eA+FE,QAAC,UAAD;AACE,cAAA,EAAE,EAAE,CADN;AAEE,cAAA,QAAQ,EAAEpB,aAFZ;AAGE,cAAA,KAAK,EAAED,UAHT;AAIE,cAAA,MAAM,EAAC,gBAJT;AAKE,cAAA,YAAY,EAAE,EALhB;AAME,cAAA,EAAE,EAAE,CANN;AAOE,cAAA,EAAE,EAAE,CAPN;AAQE,cAAA,IAAI,EAAC,IARP;AAAA,qCAUE,QAAC,KAAD;AAAO,gBAAA,SAAS,EAAC,KAAjB;AAAA,wCACE,QAAC,KAAD;AAAO,kBAAA,KAAK,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE,QAAC,KAAD;AAAO,kBAAA,KAAK,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,eAGE,QAAC,KAAD;AAAO,kBAAA,KAAK,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHF,eAIE,QAAC,KAAD;AAAO,kBAAA,KAAK,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAVF;AAAA;AAAA;AAAA;AAAA,oBA/FF,eAiHE,QAAC,MAAD;AAAQ,cAAA,CAAC,EAAE,CAAX;AAAA,qCACE,QAAC,WAAD;AAAa,gBAAA,GAAG,EAAC,IAAjB;AAAsB,gBAAA,EAAE,EAAC,IAAzB;AAAA,wCACE,QAAC,MAAD;AAAQ,kBAAA,WAAW,EAAC,MAApB;AAA2B,kBAAA,OAAO,EAAC,OAAnC;AAA2C,kBAAA,IAAI,EAAC,QAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAIE,QAAC,MAAD;AACE,kBAAA,WAAW,EAAC,MADd;AAEE,kBAAA,OAAO,EAAC,OAFV;AAGE,kBAAA,OAAO,EAAEJ,iBAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAjHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,gBAvjBF;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+sBD,CA/uBD;;GAAMF,qB;UAeA9B,O;;;KAfA8B,qB;AAivBN,eAAeA,qBAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport {\r\n  AspectRatio,\r\n  Box,\r\n  Button,\r\n  ButtonGroup,\r\n  Center,\r\n  Container,\r\n  Divider,\r\n  FormControl,\r\n  Grid,\r\n  GridItem,\r\n  Heading,\r\n  Image,\r\n  Input,\r\n  InputGroup,\r\n  NumberInput,\r\n  NumberInputField,\r\n  Stack,\r\n  HStack,\r\n  VStack,\r\n  Wrap,\r\n  Tabs,\r\n  TabList,\r\n  TabPanels,\r\n  Tab,\r\n  TabPanel,\r\n  Text,\r\n  Radio,\r\n  RadioGroup,\r\n} from \"@chakra-ui/react\";\r\n\r\nimport { formatPrice } from \"../helpers/Utils\";\r\n\r\nconst ApprovalManagerScreen = ({\r\n  formdata,\r\n  handleDialogClose,\r\n  onConfirm,\r\n  setFormdata,\r\n  tabIndex,\r\n}) => {\r\n  const [statustype, setStatustype] = useState(\"\");\r\n  const {\r\n    handleSubmit,\r\n    register,\r\n    control,\r\n    reset,\r\n    setValue,\r\n    formState: { errors, isSubmitting, id },\r\n  } = useForm({\r\n    defaultValues: {\r\n      ...formdata,\r\n    },\r\n  });\r\n\r\n  const handleSave = (data) => {\r\n    const updData = { ...data, status: statustype };\r\n    onConfirm(updData);\r\n    handleDialogClose();\r\n  };\r\n  console.log(\"formdata\", formdata);\r\n\r\n  useEffect(() => {\r\n    setStatustype(formdata.status);\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <Heading size=\"md\">Approval Screen</Heading>\r\n      <Tabs\r\n        border=\"1px solid teal\"\r\n        borderRadius={10}\r\n        mt={5}\r\n        mb={5}\r\n        defaultIndex={tabIndex}\r\n      >\r\n        <TabList>\r\n          <Tab hidden={tabIndex !== 0}>Leaves</Tab>\r\n          <Tab hidden={tabIndex !== 1}>Expenses</Tab>\r\n          <Tab hidden={tabIndex !== 2}>Site Allows</Tab>\r\n          <Tab hidden={tabIndex !== 3}>Payroll</Tab>\r\n        </TabList>\r\n        <TabPanels>\r\n          <TabPanel>\r\n            {tabIndex === 0 && (\r\n              <form onSubmit={handleSubmit(handleSave)}>\r\n                <Grid\r\n                  templateColumns={\"repeat(2,1fr)\"}\r\n                  columnGap={2}\r\n                  rowGap={2}\r\n                >\r\n                  <GridItem colSpan={2}>\r\n                    <FormControl>\r\n                      <Controller\r\n                        control={control}\r\n                        name=\"name\"\r\n                        //defaultValue={invoice.sls_no || ''}\r\n                        render={({ field: { onChange, value, ref } }) => (\r\n                          <VStack align=\"left\">\r\n                            <Text as=\"b\" fontSize=\"sm\" textAlign=\"left\">\r\n                              Name\r\n                            </Text>\r\n                            <Input\r\n                              name=\"name\"\r\n                              value={value}\r\n                              width=\"full\"\r\n                              onChange={onChange}\r\n                              borderColor=\"gray.400\"\r\n                              //textTransform=\"capitalize\"\r\n                              ref={ref}\r\n                              placeholder=\"name\"\r\n                              minWidth=\"100\"\r\n                              readOnly\r\n                            />\r\n                          </VStack>\r\n                        )}\r\n                      />\r\n                    </FormControl>\r\n                  </GridItem>\r\n                  <GridItem colSpan={1}>\r\n                    <FormControl>\r\n                      <Controller\r\n                        control={control}\r\n                        name=\"from_date\"\r\n                        //defaultValue={invoice.sls_date}\r\n                        render={({ field: { onChange, value, ref } }) => (\r\n                          <VStack align=\"left\">\r\n                            <Text as=\"b\" fontSize=\"sm\" textAlign=\"left\">\r\n                              From Date\r\n                            </Text>\r\n\r\n                            <Input\r\n                              name=\"from_date\"\r\n                              value={value}\r\n                              type=\"date\"\r\n                              width=\"full\"\r\n                              onChange={onChange}\r\n                              borderColor=\"gray.400\"\r\n                              //textTransform=\"capitalize\"\r\n                              ref={ref}\r\n                              placeholder=\"from date\"\r\n                              minWidth=\"100\"\r\n                            />\r\n                          </VStack>\r\n                        )}\r\n                      />\r\n                    </FormControl>\r\n                  </GridItem>\r\n                  <GridItem colSpan={1}>\r\n                    <FormControl>\r\n                      <Controller\r\n                        control={control}\r\n                        name=\"to_date\"\r\n                        //defaultValue={invoice.sls_date}\r\n                        render={({ field: { onChange, value, ref } }) => (\r\n                          <VStack align=\"left\">\r\n                            <Text as=\"b\" fontSize=\"sm\" textAlign=\"left\">\r\n                              To Date\r\n                            </Text>\r\n\r\n                            <Input\r\n                              name=\"to_date\"\r\n                              value={value}\r\n                              type=\"date\"\r\n                              width=\"full\"\r\n                              onChange={onChange}\r\n                              borderColor=\"gray.400\"\r\n                              //textTransform=\"capitalize\"\r\n                              ref={ref}\r\n                              placeholder=\"to date\"\r\n                              minWidth=\"100\"\r\n                            />\r\n                          </VStack>\r\n                        )}\r\n                      />\r\n                    </FormControl>\r\n                  </GridItem>\r\n                  <GridItem colSpan={1}>\r\n                    <FormControl>\r\n                      <Controller\r\n                        control={control}\r\n                        name=\"no_of_days\"\r\n                        //defaultValue={invoice.sls_no || ''}\r\n                        render={({ field: { onChange, value, ref } }) => (\r\n                          <VStack align=\"left\">\r\n                            <Text as=\"b\" fontSize=\"sm\" textAlign=\"left\">\r\n                              No Of Days\r\n                            </Text>\r\n                            <Input\r\n                              name=\"no_of_days\"\r\n                              value={value}\r\n                              type=\"number\"\r\n                              width=\"full\"\r\n                              onChange={(e) =>\r\n                                onChange(parseFloat(e.target.value))\r\n                              }\r\n                              borderColor=\"gray.400\"\r\n                              //textTransform=\"capitalize\"\r\n                              ref={ref}\r\n                              placeholder=\"no of days\"\r\n                              minWidth=\"100\"\r\n                            />\r\n                          </VStack>\r\n                        )}\r\n                      />\r\n                    </FormControl>\r\n                  </GridItem>\r\n                  <GridItem colSpan={1}>\r\n                    <FormControl>\r\n                      <Controller\r\n                        control={control}\r\n                        name=\"status\"\r\n                        //defaultValue={invoice.sls_no || ''}\r\n                        render={({ field: { onChange, value, ref } }) => (\r\n                          <VStack align=\"left\">\r\n                            <Text as=\"b\" fontSize=\"sm\" textAlign=\"left\">\r\n                              Status\r\n                            </Text>\r\n                            <Input\r\n                              name=\"status\"\r\n                              value={value}\r\n                              width=\"full\"\r\n                              onChange={onChange}\r\n                              borderColor=\"gray.400\"\r\n                              //textTransform=\"capitalize\"\r\n                              ref={ref}\r\n                              placeholder=\"status\"\r\n                              minWidth=\"100\"\r\n                              readOnly\r\n                            />\r\n                          </VStack>\r\n                        )}\r\n                      />\r\n                    </FormControl>\r\n                  </GridItem>\r\n                </Grid>\r\n                <Divider borderWidth={1} borderColor=\"teal\" mt={5} />\r\n                <RadioGroup\r\n                  mt={5}\r\n                  onChange={setStatustype}\r\n                  value={statustype}\r\n                  border=\"1px solid teal\"\r\n                  borderRadius={10}\r\n                  py={5}\r\n                  px={1}\r\n                  minH=\"10\"\r\n                >\r\n                  <Stack direction=\"row\">\r\n                    <Radio value=\"Pending\">Pending</Radio>\r\n                    <Radio value=\"Rejected\">Rejected</Radio>\r\n                    <Radio value=\"Approved\">Approved</Radio>\r\n                    <Radio value=\"Delete\">Delete</Radio>\r\n                  </Stack>\r\n                </RadioGroup>\r\n                <HStack p={5}>\r\n                  <ButtonGroup gap=\"20\" pl=\"20\">\r\n                    <Button colorScheme=\"teal\" variant=\"solid\" type=\"submit\">\r\n                      Save\r\n                    </Button>\r\n                    <Button\r\n                      colorScheme=\"teal\"\r\n                      variant=\"solid\"\r\n                      onClick={handleDialogClose}\r\n                    >\r\n                      Exit\r\n                    </Button>\r\n                  </ButtonGroup>\r\n                </HStack>\r\n              </form>\r\n            )}\r\n          </TabPanel>\r\n          <TabPanel>\r\n            {tabIndex === 1 && (\r\n              <form onSubmit={handleSubmit(handleSave)}>\r\n                <Grid\r\n                  templateColumns={\"repeat(2,1fr)\"}\r\n                  columnGap={2}\r\n                  rowGap={2}\r\n                >\r\n                  <GridItem colSpan={2}>\r\n                    <FormControl>\r\n                      <Controller\r\n                        control={control}\r\n                        name=\"name\"\r\n                        //defaultValue={invoice.sls_no || ''}\r\n                        render={({ field: { onChange, value, ref } }) => (\r\n                          <VStack align=\"left\">\r\n                            <Text as=\"b\" fontSize=\"sm\" textAlign=\"left\">\r\n                              Name\r\n                            </Text>\r\n                            <Input\r\n                              name=\"name\"\r\n                              value={value}\r\n                              width=\"full\"\r\n                              onChange={onChange}\r\n                              borderColor=\"gray.400\"\r\n                              //textTransform=\"capitalize\"\r\n                              ref={ref}\r\n                              placeholder=\"name\"\r\n                              minWidth=\"100\"\r\n                              readOnly\r\n                            />\r\n                          </VStack>\r\n                        )}\r\n                      />\r\n                    </FormControl>\r\n                  </GridItem>\r\n                  <GridItem colSpan={1}>\r\n                    <FormControl>\r\n                      <Controller\r\n                        control={control}\r\n                        name=\"date\"\r\n                        //defaultValue={invoice.sls_date}\r\n                        render={({ field: { onChange, value, ref } }) => (\r\n                          <VStack align=\"left\">\r\n                            <Text as=\"b\" fontSize=\"sm\" textAlign=\"left\">\r\n                              Date\r\n                            </Text>\r\n\r\n                            <Input\r\n                              name=\"date\"\r\n                              value={value}\r\n                              type=\"date\"\r\n                              width=\"full\"\r\n                              onChange={onChange}\r\n                              borderColor=\"gray.400\"\r\n                              //textTransform=\"capitalize\"\r\n                              ref={ref}\r\n                              placeholder=\"date\"\r\n                              minWidth=\"100\"\r\n                            />\r\n                          </VStack>\r\n                        )}\r\n                      />\r\n                    </FormControl>\r\n                  </GridItem>\r\n                  <GridItem colSpan={1}>\r\n                    <FormControl>\r\n                      <Controller\r\n                        control={control}\r\n                        name=\"amount\"\r\n                        //defaultValue={invoice.sls_no || ''}\r\n                        render={({ field: { onChange, value, ref } }) => (\r\n                          <VStack align=\"left\">\r\n                            <Text as=\"b\" fontSize=\"sm\" textAlign=\"left\">\r\n                              Amount\r\n                            </Text>\r\n                            <Input\r\n                              name=\"amount\"\r\n                              value={value}\r\n                              type=\"number\"\r\n                              width=\"full\"\r\n                              onChange={(e) =>\r\n                                onChange(parseFloat(e.target.value))\r\n                              }\r\n                              borderColor=\"gray.400\"\r\n                              //textTransform=\"capitalize\"\r\n                              ref={ref}\r\n                              placeholder=\"amount\"\r\n                              minWidth=\"100\"\r\n                            />\r\n                          </VStack>\r\n                        )}\r\n                      />\r\n                    </FormControl>\r\n                  </GridItem>\r\n                  <GridItem colSpan={2}>\r\n                    <FormControl>\r\n                      <Controller\r\n                        control={control}\r\n                        name=\"description\"\r\n                        //defaultValue={invoice.sls_no || ''}\r\n                        render={({ field: { onChange, value, ref } }) => (\r\n                          <VStack align=\"left\">\r\n                            <Text as=\"b\" fontSize=\"sm\" textAlign=\"left\">\r\n                              Description\r\n                            </Text>\r\n                            <Input\r\n                              name=\"description\"\r\n                              value={value}\r\n                              width=\"full\"\r\n                              onChange={onChange}\r\n                              borderColor=\"gray.400\"\r\n                              //textTransform=\"capitalize\"\r\n                              ref={ref}\r\n                              placeholder=\"description\"\r\n                              minWidth=\"100\"\r\n                            />\r\n                          </VStack>\r\n                        )}\r\n                      />\r\n                    </FormControl>\r\n                  </GridItem>\r\n                  <GridItem colSpan={1}>\r\n                    <FormControl>\r\n                      <Controller\r\n                        control={control}\r\n                        name=\"status\"\r\n                        //defaultValue={invoice.sls_no || ''}\r\n                        render={({ field: { onChange, value, ref } }) => (\r\n                          <VStack align=\"left\">\r\n                            <Text as=\"b\" fontSize=\"sm\" textAlign=\"left\">\r\n                              Status\r\n                            </Text>\r\n                            <Input\r\n                              name=\"status\"\r\n                              value={value}\r\n                              width=\"full\"\r\n                              onChange={onChange}\r\n                              borderColor=\"gray.400\"\r\n                              //textTransform=\"capitalize\"\r\n                              ref={ref}\r\n                              placeholder=\"status\"\r\n                              minWidth=\"100\"\r\n                              readOnly\r\n                            />\r\n                          </VStack>\r\n                        )}\r\n                      />\r\n                    </FormControl>\r\n                  </GridItem>\r\n                </Grid>\r\n                <Divider borderWidth={1} borderColor=\"teal\" mt={5} />\r\n                <RadioGroup\r\n                  mt={5}\r\n                  onChange={setStatustype}\r\n                  value={statustype}\r\n                  border=\"1px solid teal\"\r\n                  borderRadius={10}\r\n                  py={5}\r\n                  px={1}\r\n                  minH=\"10\"\r\n                  colorScheme=\"teal\"\r\n                  fontWeight=\"bold\"\r\n                  size=\"md\"\r\n                >\r\n                  <Stack direction=\"row\">\r\n                    <Radio value=\"Pending\">Pending</Radio>\r\n                    <Radio value=\"Rejected\">Rejected</Radio>\r\n                    <Radio value=\"Approved\">Approved</Radio>\r\n                    {/* <Radio value=\"Delete\">Delete</Radio> */}\r\n                  </Stack>\r\n                </RadioGroup>\r\n                <HStack p={5}>\r\n                  <ButtonGroup gap=\"20\" pl=\"20\">\r\n                    <Button colorScheme=\"teal\" variant=\"solid\" type=\"submit\">\r\n                      Save\r\n                    </Button>\r\n                    <Button\r\n                      colorScheme=\"teal\"\r\n                      variant=\"solid\"\r\n                      onClick={handleDialogClose}\r\n                    >\r\n                      Exit\r\n                    </Button>\r\n                  </ButtonGroup>\r\n                </HStack>\r\n              </form>\r\n            )}\r\n          </TabPanel>\r\n          <TabPanel>\r\n            {tabIndex === 2 && (\r\n              <form onSubmit={handleSubmit(handleSave)}>\r\n                <Grid\r\n                  templateColumns={\"repeat(2,1fr)\"}\r\n                  columnGap={2}\r\n                  rowGap={2}\r\n                >\r\n                  <GridItem colSpan={2}>\r\n                    <FormControl>\r\n                      <Controller\r\n                        control={control}\r\n                        name=\"name\"\r\n                        //defaultValue={invoice.sls_no || ''}\r\n                        render={({ field: { onChange, value, ref } }) => (\r\n                          <VStack align=\"left\">\r\n                            <Text as=\"b\" fontSize=\"sm\" textAlign=\"left\">\r\n                              Name\r\n                            </Text>\r\n                            <Input\r\n                              name=\"name\"\r\n                              value={value}\r\n                              width=\"full\"\r\n                              onChange={onChange}\r\n                              borderColor=\"gray.400\"\r\n                              //textTransform=\"capitalize\"\r\n                              ref={ref}\r\n                              placeholder=\"name\"\r\n                              minWidth=\"100\"\r\n                              readOnly\r\n                            />\r\n                          </VStack>\r\n                        )}\r\n                      />\r\n                    </FormControl>\r\n                  </GridItem>\r\n                  <GridItem colSpan={1}>\r\n                    <FormControl>\r\n                      <Controller\r\n                        control={control}\r\n                        name=\"period\"\r\n                        //defaultValue={invoice.sls_no || ''}\r\n                        render={({ field: { onChange, value, ref } }) => (\r\n                          <VStack align=\"left\">\r\n                            <Text as=\"b\" fontSize=\"sm\" textAlign=\"left\">\r\n                              Period\r\n                            </Text>\r\n                            <Input\r\n                              name=\"period\"\r\n                              value={value}\r\n                              width=\"full\"\r\n                              onChange={onChange}\r\n                              borderColor=\"gray.400\"\r\n                              //textTransform=\"capitalize\"\r\n                              ref={ref}\r\n                              placeholder=\"period\"\r\n                              minWidth=\"100\"\r\n                            />\r\n                          </VStack>\r\n                        )}\r\n                      />\r\n                    </FormControl>\r\n                  </GridItem>\r\n                  <GridItem colSpan={1}>\r\n                    <FormControl>\r\n                      <Controller\r\n                        control={control}\r\n                        name=\"no_of_days\"\r\n                        //defaultValue={invoice.sls_no || ''}\r\n                        render={({ field: { onChange, value, ref } }) => (\r\n                          <VStack align=\"left\">\r\n                            <Text as=\"b\" fontSize=\"sm\" textAlign=\"left\">\r\n                              No Of Days\r\n                            </Text>\r\n                            <Input\r\n                              name=\"no_of_days\"\r\n                              value={value}\r\n                              type=\"number\"\r\n                              width=\"full\"\r\n                              onChange={(e) =>\r\n                                onChange(parseFloat(e.target.value))\r\n                              }\r\n                              borderColor=\"gray.400\"\r\n                              //textTransform=\"capitalize\"\r\n                              ref={ref}\r\n                              placeholder=\"no of days\"\r\n                              minWidth=\"100\"\r\n                              readOnly\r\n                            />\r\n                          </VStack>\r\n                        )}\r\n                      />\r\n                    </FormControl>\r\n                  </GridItem>\r\n                  <GridItem colSpan={1}>\r\n                    <FormControl>\r\n                      <Controller\r\n                        control={control}\r\n                        name=\"amount\"\r\n                        //defaultValue={invoice.sls_no || ''}\r\n                        render={({ field: { onChange, value, ref } }) => (\r\n                          <VStack align=\"left\">\r\n                            <Text as=\"b\" fontSize=\"sm\" textAlign=\"left\">\r\n                              Amount\r\n                            </Text>\r\n                            <Input\r\n                              name=\"amount\"\r\n                              value={value}\r\n                              type=\"number\"\r\n                              width=\"full\"\r\n                              onChange={(e) =>\r\n                                onChange(parseFloat(e.target.value))\r\n                              }\r\n                              borderColor=\"gray.400\"\r\n                              //textTransform=\"capitalize\"\r\n                              ref={ref}\r\n                              placeholder=\"amount\"\r\n                              minWidth=\"100\"\r\n                              readOnly\r\n                            />\r\n                          </VStack>\r\n                        )}\r\n                      />\r\n                    </FormControl>\r\n                  </GridItem>\r\n                  <GridItem colSpan={1}>\r\n                    <FormControl>\r\n                      <Controller\r\n                        control={control}\r\n                        name=\"status\"\r\n                        //defaultValue={invoice.sls_no || ''}\r\n                        render={({ field: { onChange, value, ref } }) => (\r\n                          <VStack align=\"left\">\r\n                            <Text as=\"b\" fontSize=\"sm\" textAlign=\"left\">\r\n                              Status\r\n                            </Text>\r\n                            <Input\r\n                              name=\"status\"\r\n                              value={value}\r\n                              width=\"full\"\r\n                              onChange={onChange}\r\n                              borderColor=\"gray.400\"\r\n                              //textTransform=\"capitalize\"\r\n                              ref={ref}\r\n                              placeholder=\"status\"\r\n                              minWidth=\"100\"\r\n                              readOnly\r\n                            />\r\n                          </VStack>\r\n                        )}\r\n                      />\r\n                    </FormControl>\r\n                  </GridItem>\r\n                </Grid>\r\n                <Divider borderWidth={1} borderColor=\"teal\" mt={5} />\r\n                <RadioGroup\r\n                  mt={5}\r\n                  onChange={setStatustype}\r\n                  value={statustype}\r\n                  border=\"1px solid teal\"\r\n                  borderRadius={10}\r\n                  py={5}\r\n                  px={1}\r\n                  minH=\"10\"\r\n                >\r\n                  <Stack direction=\"row\">\r\n                    <Radio value=\"Pending\">Pending</Radio>\r\n                    <Radio value=\"Submitted\">Submitted</Radio>\r\n                    <Radio value=\"Verified\">Verified</Radio>\r\n                    <Radio value=\"Approved\">Approved</Radio>\r\n                  </Stack>\r\n                </RadioGroup>\r\n                <HStack p={5}>\r\n                  <ButtonGroup gap=\"20\" pl=\"20\">\r\n                    <Button colorScheme=\"teal\" variant=\"solid\" type=\"submit\">\r\n                      Save\r\n                    </Button>\r\n                    <Button\r\n                      colorScheme=\"teal\"\r\n                      variant=\"solid\"\r\n                      onClick={handleDialogClose}\r\n                    >\r\n                      Exit\r\n                    </Button>\r\n                  </ButtonGroup>\r\n                </HStack>\r\n              </form>\r\n            )}\r\n          </TabPanel>\r\n          <TabPanel>\r\n            {tabIndex === 3 && (\r\n              <form onSubmit={handleSubmit(handleSave)}>\r\n                <Grid\r\n                  templateColumns={\"repeat(2,1fr)\"}\r\n                  columnGap={2}\r\n                  rowGap={2}\r\n                >\r\n                  <GridItem colSpan={2}>\r\n                    <FormControl>\r\n                      <Controller\r\n                        control={control}\r\n                        name=\"period\"\r\n                        //defaultValue={invoice.sls_no || ''}\r\n                        render={({ field: { onChange, value, ref } }) => (\r\n                          <VStack align=\"left\">\r\n                            <Text as=\"b\" fontSize=\"sm\" textAlign=\"left\">\r\n                              Period\r\n                            </Text>\r\n                            <Input\r\n                              name=\"period\"\r\n                              value={value}\r\n                              width=\"full\"\r\n                              onChange={onChange}\r\n                              borderColor=\"gray.400\"\r\n                              //textTransform=\"capitalize\"\r\n                              ref={ref}\r\n                              placeholder=\"period\"\r\n                              minWidth=\"100\"\r\n                              readOnly\r\n                            />\r\n                          </VStack>\r\n                        )}\r\n                      />\r\n                    </FormControl>\r\n                  </GridItem>\r\n                  <GridItem colSpan={1}>\r\n                    <FormControl>\r\n                      <Controller\r\n                        control={control}\r\n                        name=\"totalpayroll\"\r\n                        //defaultValue={invoice.sls_no || ''}\r\n                        render={({ field: { onChange, value, ref } }) => (\r\n                          <VStack align=\"left\">\r\n                            <Text as=\"b\" fontSize=\"sm\" textAlign=\"left\">\r\n                              Total Payroll\r\n                            </Text>\r\n                            <Input\r\n                              name=\"totalpayroll\"\r\n                              value={value}\r\n                              type=\"number\"\r\n                              width=\"full\"\r\n                              onChange={(e) =>\r\n                                onChange(parseFloat(e.target.value))\r\n                              }\r\n                              borderColor=\"gray.400\"\r\n                              //textTransform=\"capitalize\"\r\n                              ref={ref}\r\n                              placeholder=\"total payroll\"\r\n                              minWidth=\"100\"\r\n                              readOnly\r\n                            />\r\n                          </VStack>\r\n                        )}\r\n                      />\r\n                    </FormControl>\r\n                  </GridItem>\r\n                  <GridItem colSpan={1}>\r\n                    <FormControl>\r\n                      <Controller\r\n                        control={control}\r\n                        name=\"status\"\r\n                        //defaultValue={invoice.sls_no || ''}\r\n                        render={({ field: { onChange, value, ref } }) => (\r\n                          <VStack align=\"left\">\r\n                            <Text as=\"b\" fontSize=\"sm\" textAlign=\"left\">\r\n                              Status\r\n                            </Text>\r\n                            <Input\r\n                              name=\"status\"\r\n                              value={value}\r\n                              width=\"full\"\r\n                              onChange={onChange}\r\n                              borderColor=\"gray.400\"\r\n                              //textTransform=\"capitalize\"\r\n                              ref={ref}\r\n                              placeholder=\"status\"\r\n                              minWidth=\"100\"\r\n                              readOnly\r\n                            />\r\n                          </VStack>\r\n                        )}\r\n                      />\r\n                    </FormControl>\r\n                  </GridItem>\r\n                </Grid>\r\n                <Divider borderWidth={1} borderColor=\"teal\" mt={5} />\r\n                <RadioGroup\r\n                  mt={5}\r\n                  onChange={setStatustype}\r\n                  value={statustype}\r\n                  border=\"1px solid teal\"\r\n                  borderRadius={10}\r\n                  py={5}\r\n                  px={1}\r\n                  minH=\"10\"\r\n                >\r\n                  <Stack direction=\"row\">\r\n                    <Radio value=\"Pending\">Pending</Radio>\r\n                    <Radio value=\"Rejected\">Rejected</Radio>\r\n                    <Radio value=\"Verified\">Verified</Radio>\r\n                    <Radio value=\"Approved\">Approved</Radio>\r\n                    {/* <Radio value=\"Delete\">Delete</Radio> */}\r\n                  </Stack>\r\n                </RadioGroup>\r\n                <HStack p={5}>\r\n                  <ButtonGroup gap=\"20\" pl=\"20\">\r\n                    <Button colorScheme=\"teal\" variant=\"solid\" type=\"submit\">\r\n                      Save\r\n                    </Button>\r\n                    <Button\r\n                      colorScheme=\"teal\"\r\n                      variant=\"solid\"\r\n                      onClick={handleDialogClose}\r\n                    >\r\n                      Exit\r\n                    </Button>\r\n                  </ButtonGroup>\r\n                </HStack>\r\n              </form>\r\n            )}\r\n          </TabPanel>\r\n        </TabPanels>\r\n      </Tabs>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ApprovalManagerScreen;\r\n"]},"metadata":{},"sourceType":"module"}
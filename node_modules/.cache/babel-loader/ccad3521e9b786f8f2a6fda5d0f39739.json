{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-demo\\\\src\\\\components\\\\LeavesTableViewSummary.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport MaterialTable from \"material-table\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Box, Button, HStack, Text, useDisclosure } from \"@chakra-ui/react\";\nimport { GrTask } from \"react-icons/gr\";\nimport { useRecoilState } from \"recoil\"; //import AddIcon from \"@material-ui/icons/Add\";\n//import EditIcon from \"@material-ui/icons/Edit\";\n//import DeleteIcon from \"@material-ui/icons/Delete\";\n//import CheckIcon from \"@material-ui/icons/Check\";\n//import SearchIcon from \"@material-ui/icons/Search\";\n//import LeaveForm from \"./LeaveForm\";\n//import { CustomDialog } from \"../helpers/CustomDialog\";\n//import { AlertDialog } from \"../helpers/AlertDialogBox\";\n\nimport { CustomDialog } from \"../helpers/CustomDialog\";\nimport { useLeavesPeriodbyMth } from \"./leaves/useLeavesPeriodbyMth\";\nimport { useUpdateLeaves } from \"./leaves/useUpdateLeaves\";\nimport { AlertDialogBox } from \"../helpers/AlertDialogBox\";\nimport { loginLevelState } from \"./data/atomdata\";\nimport ApprovalManagerScreen from \"./ApprovalManagerScreen\"; //const FILTERSTRING = \"Pending\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initial_form = {\n  name: \"\",\n  to_date: \"\",\n  from_date: \"\",\n  reason: \"\",\n  status: \"Pending\",\n  no_of_days: 0,\n  leave_bal: 0,\n  reporting_email: \"\"\n};\nexport default function LeaveTableViewSummary({\n  year,\n  month\n}) {\n  _s();\n\n  const classes = useStyles();\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\n  const {\n    leavesperiodbymth,\n    setLeavePeriodMthId,\n    setLeavePeriodYrId\n  } = useLeavesPeriodbyMth();\n  const updateLeave = useUpdateLeaves();\n  const [formdata, setFormdata] = useState(initial_form);\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\n  const [editLeaveID, setEditLeaveID] = useState(\"\");\n  const {\n    isOpen: isAppScreenOpen,\n    onOpen: onAppScreenOpen,\n    onClose: onAppScreenClose\n  } = useDisclosure();\n  const columns = useMemo(() => [{\n    title: \"Name\",\n    field: \"name\"\n  }, {\n    title: \"From Date\",\n    field: \"from_date\",\n    type: \"date\",\n    dateSetting: {\n      locale: \"en-GB\"\n    },\n    editable: \"never\"\n  }, {\n    title: \"To Date\",\n    field: \"to_date\",\n    type: \"date\",\n    dateSetting: {\n      locale: \"en-GB\"\n    },\n    editable: \"never\"\n  }, {\n    title: \"No of Days\",\n    field: \"no_of_days\",\n    type: \"numeric\",\n    editable: \"never\"\n  }, {\n    title: \"Reason\",\n    field: \"reason\",\n    editable: \"never\"\n  }, {\n    title: \"Status\",\n    field: \"status\"\n  }], []);\n  useEffect(() => {\n    setLeavePeriodYrId(year);\n    setLeavePeriodMthId(month);\n  }, []);\n\n  const Update_Leave = data => {\n    //console.log(\"del data\", data);\n    const {\n      id,\n      attachmentid,\n      rec_id,\n      tableData,\n      ...fields\n    } = data;\n    const editData = { ...fields\n    };\n    setFormdata({ ...editData\n    });\n    setFormdata({ ...editData\n    });\n    setEditLeaveID(id);\n    handleAppScreenOpen();\n  };\n\n  const handleAppScreenOpen = () => {\n    onAppScreenOpen();\n  };\n\n  const handleAppScreenClose = () => {\n    onAppScreenClose();\n  };\n\n  const handleAlertOpen = () => {\n    setIsAlertOpen(true);\n  };\n\n  const handleAlertClose = () => {\n    setIsAlertOpen(false);\n  };\n\n  const handleOnDeleteConfirm = () => {\n    const upddata = { ...formdata,\n      posted: \"D\"\n    };\n    updateLeave({\n      id: editLeaveID,\n      ...upddata\n    }); // const id = editExpenseID;\n    // deleteExpenses(id);\n    // expensesattachments\n    //   .filter((r) => r.attachmentid === expattachId)\n    //   .forEach((rec) => {\n    //     const id = rec.id;\n    //     deleteExpensesAttachment(id);\n    //   });\n  };\n\n  const handleOnUpdateConfirm = data => {\n    //console.log(\"update\", data)\n    const posted = data.status === \"Delete\" ? \"D\" : \"\";\n    const upddata = { ...data,\n      posted: posted\n    };\n    updateLeave({\n      id: editLeaveID,\n      ...upddata\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      maxW: \"100%\",\n      pt: \"5px\",\n      overflow: \"scroll\",\n      children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n        columns: columns,\n        data: leavesperiodbymth,\n        title: \"Leave Application\",\n        actions: [rowData => ({\n          icon: () => /*#__PURE__*/_jsxDEV(GrTask, {\n            size: \"23px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 27\n          }, this),\n          hidden: loginLevel.loginLevel !== \"Manager\",\n          tooltip: \"Edit\",\n          onClick: (event, rowData) => {\n            Update_Leave(rowData);\n          }\n        })],\n        options: {\n          filtering: false,\n          search: false,\n          toolbar: false,\n          paging: false,\n          headerStyle: {\n            backgroundColor: \"rgba(75, 192, 192, 1)\",\n            color: \"white\"\n          },\n          showTitle: false\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CustomDialog, {\n      isOpen: isAppScreenOpen,\n      handleClose: handleAppScreenClose,\n      title: \"\",\n      showButton: true,\n      isFullscree: false,\n      children: /*#__PURE__*/_jsxDEV(ApprovalManagerScreen, {\n        formdata: formdata,\n        setFormdata: setFormdata,\n        handleDialogClose: handleAppScreenClose,\n        onConfirm: handleOnUpdateConfirm,\n        tabIndex: 0\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AlertDialogBox, {\n      onClose: handleAlertClose,\n      onConfirm: handleOnDeleteConfirm,\n      isOpen: isAlertOpen,\n      title: \"Delete Leave\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Are you sure you want to delete \", formdata.name, \" leave from\", \" \", formdata.from_date, \" to \", formdata.to_date, \" ?\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this) // </div>\n  ;\n}\n\n_s(LeaveTableViewSummary, \"tofqtkCOD6ofG5q6YnHWs8AJ0GQ=\", false, function () {\n  return [useStyles, useRecoilState, useLeavesPeriodbyMth, useUpdateLeaves, useDisclosure];\n});\n\n_c = LeaveTableViewSummary;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: 0\n  }\n}));\n\nvar _c;\n\n$RefreshReg$(_c, \"LeaveTableViewSummary\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-demo/src/components/LeavesTableViewSummary.js"],"names":["React","useState","useEffect","useMemo","MaterialTable","makeStyles","Box","Button","HStack","Text","useDisclosure","GrTask","useRecoilState","CustomDialog","useLeavesPeriodbyMth","useUpdateLeaves","AlertDialogBox","loginLevelState","ApprovalManagerScreen","initial_form","name","to_date","from_date","reason","status","no_of_days","leave_bal","reporting_email","LeaveTableViewSummary","year","month","classes","useStyles","loginLevel","setLoginLevel","leavesperiodbymth","setLeavePeriodMthId","setLeavePeriodYrId","updateLeave","formdata","setFormdata","isAlertOpen","setIsAlertOpen","editLeaveID","setEditLeaveID","isOpen","isAppScreenOpen","onOpen","onAppScreenOpen","onClose","onAppScreenClose","columns","title","field","type","dateSetting","locale","editable","Update_Leave","data","id","attachmentid","rec_id","tableData","fields","editData","handleAppScreenOpen","handleAppScreenClose","handleAlertOpen","handleAlertClose","handleOnDeleteConfirm","upddata","posted","handleOnUpdateConfirm","root","rowData","icon","hidden","tooltip","onClick","event","filtering","search","toolbar","paging","headerStyle","backgroundColor","color","showTitle","theme","padding"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Box, Button, HStack, Text, useDisclosure } from \"@chakra-ui/react\";\r\nimport { GrTask } from \"react-icons/gr\";\r\nimport { useRecoilState } from \"recoil\";\r\n//import AddIcon from \"@material-ui/icons/Add\";\r\n//import EditIcon from \"@material-ui/icons/Edit\";\r\n//import DeleteIcon from \"@material-ui/icons/Delete\";\r\n//import CheckIcon from \"@material-ui/icons/Check\";\r\n//import SearchIcon from \"@material-ui/icons/Search\";\r\n//import LeaveForm from \"./LeaveForm\";\r\n//import { CustomDialog } from \"../helpers/CustomDialog\";\r\n//import { AlertDialog } from \"../helpers/AlertDialogBox\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { useLeavesPeriodbyMth } from \"./leaves/useLeavesPeriodbyMth\";\r\nimport { useUpdateLeaves } from \"./leaves/useUpdateLeaves\";\r\nimport { AlertDialogBox } from \"../helpers/AlertDialogBox\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport ApprovalManagerScreen from \"./ApprovalManagerScreen\";\r\n\r\n//const FILTERSTRING = \"Pending\";\r\n\r\nconst initial_form = {\r\n  name: \"\",\r\n  to_date: \"\",\r\n  from_date: \"\",\r\n  reason: \"\",\r\n  status: \"Pending\",\r\n  no_of_days: 0,\r\n  leave_bal: 0,\r\n  reporting_email: \"\",\r\n};\r\n\r\nexport default function LeaveTableViewSummary({ year, month }) {\r\n  const classes = useStyles();\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const { leavesperiodbymth, setLeavePeriodMthId, setLeavePeriodYrId } =\r\n    useLeavesPeriodbyMth();\r\n  const updateLeave = useUpdateLeaves();\r\n  const [formdata, setFormdata] = useState(initial_form);\r\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\r\n  const [editLeaveID, setEditLeaveID] = useState(\"\");\r\n  const {\r\n    isOpen: isAppScreenOpen,\r\n    onOpen: onAppScreenOpen,\r\n    onClose: onAppScreenClose,\r\n  } = useDisclosure();\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        title: \"Name\",\r\n        field: \"name\",\r\n      },\r\n\r\n      {\r\n        title: \"From Date\",\r\n        field: \"from_date\",\r\n        type: \"date\",\r\n        dateSetting: { locale: \"en-GB\" },\r\n        editable: \"never\",\r\n      },\r\n      {\r\n        title: \"To Date\",\r\n        field: \"to_date\",\r\n        type: \"date\",\r\n        dateSetting: { locale: \"en-GB\" },\r\n        editable: \"never\",\r\n      },\r\n      {\r\n        title: \"No of Days\",\r\n        field: \"no_of_days\",\r\n        type: \"numeric\",\r\n        editable: \"never\",\r\n      },\r\n      {\r\n        title: \"Reason\",\r\n        field: \"reason\",\r\n        editable: \"never\",\r\n      },\r\n      { title: \"Status\", field: \"status\" },\r\n    ],\r\n    []\r\n  );\r\n\r\n  useEffect(() => {\r\n    setLeavePeriodYrId(year);\r\n    setLeavePeriodMthId(month);\r\n  }, []);\r\n\r\n  const Update_Leave = (data) => {\r\n    //console.log(\"del data\", data);\r\n    const { id, attachmentid, rec_id, tableData, ...fields } = data;\r\n    const editData = { ...fields };\r\n\r\n    setFormdata({ ...editData });\r\n    setFormdata({ ...editData });\r\n    setEditLeaveID(id);\r\n    handleAppScreenOpen();\r\n  };\r\n\r\n  const handleAppScreenOpen = () => {\r\n    onAppScreenOpen();\r\n  };\r\n  const handleAppScreenClose = () => {\r\n    onAppScreenClose();\r\n  };\r\n\r\n  const handleAlertOpen = () => {\r\n    setIsAlertOpen(true);\r\n  };\r\n  const handleAlertClose = () => {\r\n    setIsAlertOpen(false);\r\n  };\r\n\r\n  const handleOnDeleteConfirm = () => {\r\n    const upddata = { ...formdata, posted: \"D\" };\r\n    updateLeave({ id: editLeaveID, ...upddata });\r\n    // const id = editExpenseID;\r\n    // deleteExpenses(id);\r\n    // expensesattachments\r\n    //   .filter((r) => r.attachmentid === expattachId)\r\n    //   .forEach((rec) => {\r\n    //     const id = rec.id;\r\n    //     deleteExpensesAttachment(id);\r\n    //   });\r\n  };\r\n\r\n  const handleOnUpdateConfirm = (data) => {\r\n    //console.log(\"update\", data)\r\n    const posted = data.status === \"Delete\" ? \"D\" : \"\";\r\n    const upddata = { ...data, posted: posted };\r\n    updateLeave({ id: editLeaveID, ...upddata });\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <h1>Expenses Claims Application</h1> */}\r\n\r\n      {/* <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}> */}\r\n\r\n      <Box maxW=\"100%\" pt=\"5px\" overflow=\"scroll\">\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={leavesperiodbymth}\r\n          title=\"Leave Application\"\r\n          actions={[\r\n            (rowData) => ({\r\n              icon: () => <GrTask size=\"23px\" />,\r\n              hidden: loginLevel.loginLevel !== \"Manager\",\r\n              tooltip: \"Edit\",\r\n              onClick: (event, rowData) => {\r\n                Update_Leave(rowData);\r\n              },\r\n            }),\r\n          ]}\r\n          options={{\r\n            filtering: false,\r\n            search: false,\r\n            toolbar: false,\r\n            paging: false,\r\n            headerStyle: {\r\n              backgroundColor: \"rgba(75, 192, 192, 1)\",\r\n              color: \"white\",\r\n            },\r\n            showTitle: false,\r\n          }}\r\n        />\r\n      </Box>\r\n      <CustomDialog\r\n        isOpen={isAppScreenOpen}\r\n        handleClose={handleAppScreenClose}\r\n        title=\"\"\r\n        showButton={true}\r\n        isFullscree={false}\r\n      >\r\n        <ApprovalManagerScreen\r\n          formdata={formdata}\r\n          setFormdata={setFormdata}\r\n          handleDialogClose={handleAppScreenClose}\r\n          onConfirm={handleOnUpdateConfirm}\r\n          tabIndex={0}\r\n        />\r\n      </CustomDialog>\r\n      <AlertDialogBox\r\n        onClose={handleAlertClose}\r\n        onConfirm={handleOnDeleteConfirm}\r\n        isOpen={isAlertOpen}\r\n        title=\"Delete Leave\"\r\n      >\r\n        <h2>\r\n          Are you sure you want to delete {formdata.name} leave from{\" \"}\r\n          {formdata.from_date} to {formdata.to_date} ?\r\n        </h2>\r\n      </AlertDialogBox>\r\n    </div>\r\n    // </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-demo\\\\src\\\\components\\\\EmployeeFormAdd.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Icon, TextField, Paper, Typography, Divider } from \"@material-ui/core\";\nimport { Box, Heading } from \"@chakra-ui/react\"; //import * as emailjs from \"emailjs-com\";\n//import { useRecoilState } from \"recoil\";\n//import { loginLevelState } from \"./data/atomdata\";\n\nimport { makeStyles } from \"@material-ui/core/styles\"; //import { useCustomToast } from \"../helpers/useCustomToast\";\n\nimport { Controller, useForm } from \"react-hook-form\";\nimport { useEmployees } from \"./employees/useEmployees\";\nimport { useAddEmployees } from \"./employees/useAddEmployees\"; //import { useEmployeesContext } from \"../context/employees_context\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initial_state = {\n  name: \"\",\n  email: \"\"\n};\n\nconst EmployeeFormAdd = ({\n  onAddEmpFormClose\n}) => {\n  _s();\n\n  const classes = useStyles(); //const toast = useCustomToast();\n\n  const {\n    employees\n  } = useEmployees();\n  const addEmployee = useAddEmployees();\n  const [state, setState] = useState(initial_state);\n  const [isExit, setIsExit] = useState(false); //const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\n\n  const {\n    handleSubmit,\n    control\n  } = useForm(); //const initialValues = Object.values(initial_state).join(\"\");\n  //const {\n  //editEmployeeID,\n  //employees_loading,\n  //deleteEmployee,\n  //loadEmployees,\n  //setEditEmployeeID,\n  //setIsEditingOn,\n  //setIsEditingOff,\n  //resetSingleEmployee,\n  //resetEmployees,\n  //getSingleEmployee,\n  //} = useEmployeesContext();\n\n  const onSubmit = data => {\n    const {\n      email\n    } = data;\n    const emp = employees && employees.filter(rec => rec.email === email);\n    console.log(\"exist\", emp);\n\n    if (emp.length) {\n      setIsExit(true);\n      setTimeout(() => {\n        setIsExit(false);\n      }, 2000);\n    } else {\n      setIsExit(false);\n      addEmployee({ ...data\n      });\n      onAddEmpFormClose();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        component: \"h3\",\n        children: \"CREATE NEW EMPLOYEE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        component: \"p\",\n        children: \"Fill in new employee name and email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"name\",\n            control: control,\n            defaultValue: state.name,\n            render: ({\n              field: {\n                onChange,\n                value\n              },\n              fieldState: {\n                error\n              }\n            }) => {\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Name\",\n                id: \"margin-normal\",\n                name: \"name\" //value={value}\n                ,\n                defaultValue: state.name,\n                className: classes.textField,\n                onChange: e => {\n                  onChange(e.target.value);\n                },\n                error: !!error,\n                helperText: error ? error.message : null\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 19\n              }, this);\n            },\n            rules: {\n              required: \"Name required\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"email\",\n            control: control,\n            defaultValue: state.email,\n            render: ({\n              field: {\n                onChange,\n                value\n              },\n              fieldState: {\n                error\n              }\n            }) => {\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Email\",\n                id: \"margin-normal-email\",\n                name: \"email\",\n                defaultValue: state.email,\n                className: classes.textField,\n                onChange: onChange,\n                error: !!error,\n                helperText: error ? error.message : null\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 19\n              }, this);\n            },\n            rules: {\n              required: \"Email is required\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            color: \"primary\",\n            className: classes.button,\n            onClick: handleSubmit(onSubmit),\n            children: [\"Submit \", /*#__PURE__*/_jsxDEV(Icon, {\n              className: classes.rightIcon,\n              children: \"send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 22\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), isExit && /*#__PURE__*/_jsxDEV(Box, {\n          children: /*#__PURE__*/_jsxDEV(Heading, {\n            size: \"md\",\n            pl: 2,\n            children: \"Warning! This email already existed!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EmployeeFormAdd, \"vbLH9J24kKJxxu3ih8roYweZqrs=\", false, function () {\n  return [useStyles, useEmployees, useAddEmployees, useForm];\n});\n\n_c = EmployeeFormAdd;\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(1)\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1)\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1)\n  },\n  iconSmall: {\n    fontSize: 20\n  },\n  root: {\n    padding: theme.spacing(3, 2)\n  },\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 400\n  }\n}));\nexport default EmployeeFormAdd;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmployeeFormAdd\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-demo/src/components/EmployeeFormAdd.js"],"names":["React","useState","useEffect","Button","Icon","TextField","Paper","Typography","Divider","Box","Heading","makeStyles","Controller","useForm","useEmployees","useAddEmployees","initial_state","name","email","EmployeeFormAdd","onAddEmpFormClose","classes","useStyles","employees","addEmployee","state","setState","isExit","setIsExit","handleSubmit","control","onSubmit","data","emp","filter","rec","console","log","length","setTimeout","root","field","onChange","value","fieldState","error","textField","e","target","message","required","button","rightIcon","theme","margin","spacing","leftIcon","marginRight","marginLeft","iconSmall","fontSize","padding","container","display","flexWrap","width"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Button,\r\n  Icon,\r\n  TextField,\r\n  Paper,\r\n  Typography,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\nimport { Box, Heading } from \"@chakra-ui/react\";\r\n//import * as emailjs from \"emailjs-com\";\r\n//import { useRecoilState } from \"recoil\";\r\n//import { loginLevelState } from \"./data/atomdata\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n//import { useCustomToast } from \"../helpers/useCustomToast\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport { useEmployees } from \"./employees/useEmployees\";\r\nimport { useAddEmployees } from \"./employees/useAddEmployees\";\r\n//import { useEmployeesContext } from \"../context/employees_context\";\r\n\r\nconst initial_state = {\r\n  name: \"\",\r\n  email: \"\",\r\n};\r\n\r\nconst EmployeeFormAdd = ({ onAddEmpFormClose }) => {\r\n  const classes = useStyles();\r\n  //const toast = useCustomToast();\r\n  const { employees } = useEmployees();\r\n  const addEmployee = useAddEmployees();\r\n  const [state, setState] = useState(initial_state);\r\n  const [isExit, setIsExit] = useState(false);\r\n  //const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const { handleSubmit, control } = useForm();\r\n  //const initialValues = Object.values(initial_state).join(\"\");\r\n\r\n  //const {\r\n    //editEmployeeID,\r\n    //employees_loading,\r\n    //deleteEmployee,\r\n    //loadEmployees,\r\n    //setEditEmployeeID,\r\n    //setIsEditingOn,\r\n    //setIsEditingOff,\r\n    //resetSingleEmployee,\r\n    //resetEmployees,\r\n    //getSingleEmployee,\r\n  //} = useEmployeesContext();\r\n\r\n  const onSubmit = (data) => {\r\n    const { email } = data;\r\n    const emp = employees && employees.filter((rec) => rec.email === email);\r\n    console.log(\"exist\", emp);\r\n    if (emp.length) {\r\n      setIsExit(true);\r\n      setTimeout(() => {\r\n        setIsExit(false);\r\n      }, 2000);\r\n    } else {\r\n      setIsExit(false)\r\n      addEmployee({ ...data });\r\n      onAddEmpFormClose();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Paper className={classes.root}>\r\n        <Typography variant=\"h5\" component=\"h3\">\r\n          CREATE NEW EMPLOYEE\r\n        </Typography>\r\n        <Typography component=\"p\">Fill in new employee name and email</Typography>\r\n        <Divider />\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <div>\r\n            <Controller\r\n              name=\"name\"\r\n              control={control}\r\n              defaultValue={state.name}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Name\"\r\n                    id=\"margin-normal\"\r\n                    name=\"name\"\r\n                    //value={value}\r\n                    defaultValue={state.name}\r\n                    className={classes.textField}\r\n                    onChange={(e) => {\r\n                      onChange(e.target.value);\r\n                    }}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                  ></TextField>\r\n                );\r\n              }}\r\n              rules={{ required: \"Name required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"email\"\r\n              control={control}\r\n              defaultValue={state.email}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Email\"\r\n                    id=\"margin-normal-email\"\r\n                    name=\"email\"\r\n                    defaultValue={state.email}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                  />\r\n                );\r\n              }}\r\n              rules={{ required: \"Email is required\" }}\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              onClick={handleSubmit(onSubmit)}\r\n            >\r\n              Submit <Icon className={classes.rightIcon}>send</Icon>\r\n            </Button>\r\n          </div>\r\n          {isExit && (\r\n            <Box>\r\n              <Heading size=\"md\" pl={2}>\r\n                Warning! This email already existed!\r\n              </Heading>\r\n            </Box>\r\n          )}\r\n        </form>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  leftIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  iconSmall: {\r\n    fontSize: 20,\r\n  },\r\n  root: {\r\n    padding: theme.spacing(3, 2),\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 400,\r\n  },\r\n}));\r\n\r\nexport default EmployeeFormAdd;\r\n"]},"metadata":{},"sourceType":"module"}
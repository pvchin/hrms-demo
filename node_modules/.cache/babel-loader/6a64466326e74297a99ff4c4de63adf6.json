{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-demo\\\\src\\\\components\\\\PayslipTableStaff.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useMemo } from \"react\";\nimport MaterialTable, { MTableToolbar } from \"material-table\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport PrintIcon from \"@material-ui/icons/Print\";\nimport BuildOutlinedIcon from \"@material-ui/icons/BuildOutlined\"; //import { useHistory } from \"react-router-dom\";\n\nimport { useRecoilState } from \"recoil\";\nimport { //payPeriodState,\n//payPeriodEndMonthState,\n//payPeriodEmpIdState,\nloginLevelState } from \"./data/atomdata\"; //import { usePayslipsContext } from \"../context/payslips_context\";\n\nimport { usePayslips } from \"./payslips/usePayslips\";\nimport { useEmployees } from \"./employees/useEmployees\";\nimport PrintPayslip from \"./PrintPayslip\"; // const PrintPayslip = React.lazy(() =>\n//   import(\"./PrintPayslip\")\n// );\n//const PrintPayslip = React.lazy(() => import(\"./PrintPayslip\"));\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PayslipTable() {\n  _s();\n\n  //let history = useHistory();\n  const classes = useStyles();\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\n  const {\n    employees\n  } = useEmployees();\n  const {\n    payslips,\n    setPayslipId\n  } = usePayslips();\n  const [isLoad, setIsLoad] = useState(true);\n  const columns = useMemo(() => [{\n    title: \"Name\",\n    field: \"name\"\n  }, {\n    title: \"Period\",\n    field: \"payrun\"\n  }, // {\n  //   title: \"Date\",\n  //   field: \"date\",\n  //   type: \"date\",\n  //   dateSetting: { locale: \"en-GB\" },\n  // },\n  {\n    title: \"Basic Pay\",\n    field: \"wages_bnd\",\n    type: \"currency\"\n  }, {\n    title: \"TAP Amount\",\n    field: \"tap_amount_bnd\",\n    type: \"currency\"\n  }, {\n    title: \"SCP Amount\",\n    field: \"scp_amount_bnd\",\n    type: \"currency\"\n  }, {\n    title: \"Site Allowances\",\n    field: \"site_allows_bnd\",\n    type: \"currency\"\n  }, {\n    title: \"Expenses Claims\",\n    field: \"expenses_claims_bnd\",\n    type: \"currency\"\n  }, {\n    title: \"Allowances\",\n    field: \"total_allowances_bnd\",\n    type: \"currency\"\n  }, {\n    title: \"Deductions\",\n    field: \"total_deductions_bnd\",\n    type: \"currency\"\n  }, {\n    title: \"Nett Pay\",\n    field: \"nett_pay_bnd\",\n    type: \"currency\"\n  }, // { title: \"Bank Name\", field: \"bank_name\" },\n  // { title: \"Bank AC No\", field: \"bank_accno\" },\n  {\n    title: \"Status\",\n    field: \"status\"\n  }], []);\n\n  const exportPdfTable = ({\n    data,\n    emp\n  }) => {\n    PrintPayslip({\n      data,\n      emp\n    });\n  };\n\n  const print_Payslip = async data => {\n    const {\n      empid\n    } = data.rowData;\n    const emp = employees.filter(f => f.id === empid).map(r => {\n      return { ...r\n      };\n    });\n    exportPdfTable({\n      data,\n      emp\n    });\n  }; // const update_Payslip = async (data) => {\n  //   const { id } = data;\n  //   setPayPeriodEmpId(id); //save to recoil\n  //   setEditPayslipID(id);\n  //   setIsPayslipEditingOn();\n  //   getSinglePayslip(id);\n  //   history.push(\"/singlepayslip\");\n  //};\n  // const add_Payslip = async (data) => {\n  //   const { id } = data;\n  //   resetSinglePayslip();\n  //   setEditPayslipID(\"\");\n  //   setIsPayslipEditingOff();\n  //   history.push(\"/singlepayslip\");\n  // };\n  // const delete_Payslip = (data) => {\n  //   const { id } = data;\n  //   setEditPayslipID(id);\n  //   deletePayslip(id);\n  //   loadPayslips();\n  //};\n\n\n  useEffect(() => {\n    setPayslipId(loginLevel.loginUserId);\n    setIsLoad(true);\n  }, [isLoad]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: \"100%\",\n        paddingTop: \"5px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n        columns: columns //data={payslips}\n        ,\n        data: payslips.filter(r => r.empid === loginLevel.loginUserId).sort((a, b) => a.payrun > b.payrun ? -1 : b.payrun > a.payrun ? 1 : 0),\n        title: \"Payslips\",\n        icons: {\n          Add: props => /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 29\n          }, this),\n          Edit: props => /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 30\n          }, this),\n          Delete: props => /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 32\n          }, this),\n          Clear: props => /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 31\n          }, this),\n          Check: props => /*#__PURE__*/_jsxDEV(CheckIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 31\n          }, this),\n          Search: props => /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 32\n          }, this),\n          ResetSearch: props => /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 37\n          }, this),\n          Build: props => /*#__PURE__*/_jsxDEV(BuildOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 31\n          }, this),\n          Print: props => /*#__PURE__*/_jsxDEV(PrintIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 31\n          }, this)\n        },\n        actions: [{\n          icon: \"print\",\n          tooltip: \"Print Payslip\",\n          onClick: (event, rowData) => {\n            print_Payslip({\n              rowData\n            });\n          }\n        } // {\n        //   icon: \"delete\",\n        //   tooltip: \"Delete Record\",\n        //   onClick: (event, rowData) => {\n        //     delete_Payslip(rowData);\n        //   },\n        // },\n        // {\n        //   icon: \"add\",\n        //   tooltip: \"Add Record\",\n        //   isFreeAction: true,\n        //   onClick: (event, rowData) => {\n        //     add_Payslip(rowData);\n        //   },\n        // },\n        ],\n        options: {\n          filtering: true,\n          headerStyle: {\n            backgroundColor: \"orange\",\n            color: \"#FFF\"\n          },\n          showTitle: true\n        },\n        components: {\n          Toolbar: props => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(MTableToolbar, { ...props\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PayslipTable, \"t8qRD9n4BnBqbf50+IW3MEJjxvM=\", false, function () {\n  return [useStyles, useRecoilState, useEmployees, usePayslips];\n});\n\n_c = PayslipTable;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: 0\n  }\n}));\n\nvar _c;\n\n$RefreshReg$(_c, \"PayslipTable\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-demo/src/components/PayslipTableStaff.js"],"names":["React","useEffect","useState","useMemo","MaterialTable","MTableToolbar","makeStyles","AddIcon","EditIcon","DeleteIcon","CheckIcon","SearchIcon","PrintIcon","BuildOutlinedIcon","useRecoilState","loginLevelState","usePayslips","useEmployees","PrintPayslip","PayslipTable","classes","useStyles","loginLevel","setLoginLevel","employees","payslips","setPayslipId","isLoad","setIsLoad","columns","title","field","type","exportPdfTable","data","emp","print_Payslip","empid","rowData","filter","f","id","map","r","loginUserId","root","maxWidth","paddingTop","sort","a","b","payrun","Add","props","Edit","Delete","Clear","Check","Search","ResetSearch","Build","Print","icon","tooltip","onClick","event","filtering","headerStyle","backgroundColor","color","showTitle","Toolbar","theme","padding"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useMemo } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport PrintIcon from \"@material-ui/icons/Print\";\r\nimport BuildOutlinedIcon from \"@material-ui/icons/BuildOutlined\";\r\n//import { useHistory } from \"react-router-dom\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport {\r\n  //payPeriodState,\r\n  //payPeriodEndMonthState,\r\n  //payPeriodEmpIdState,\r\n  loginLevelState,\r\n} from \"./data/atomdata\";\r\n//import { usePayslipsContext } from \"../context/payslips_context\";\r\nimport { usePayslips } from \"./payslips/usePayslips\";\r\nimport { useEmployees } from \"./employees/useEmployees\";\r\nimport PrintPayslip from \"./PrintPayslip\";\r\n\r\n// const PrintPayslip = React.lazy(() =>\r\n//   import(\"./PrintPayslip\")\r\n// );\r\n//const PrintPayslip = React.lazy(() => import(\"./PrintPayslip\"));\r\n\r\nexport default function PayslipTable() {\r\n  //let history = useHistory();\r\n  const classes = useStyles();\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const { employees } = useEmployees();\r\n  const { payslips, setPayslipId } = usePayslips();\r\n  const [isLoad, setIsLoad] = useState(true);\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        title: \"Name\",\r\n        field: \"name\",\r\n      },\r\n      { title: \"Period\", field: \"payrun\" },\r\n      // {\r\n      //   title: \"Date\",\r\n      //   field: \"date\",\r\n      //   type: \"date\",\r\n      //   dateSetting: { locale: \"en-GB\" },\r\n      // },\r\n      { title: \"Basic Pay\", field: \"wages_bnd\", type: \"currency\" },\r\n      { title: \"TAP Amount\", field: \"tap_amount_bnd\", type: \"currency\" },\r\n      { title: \"SCP Amount\", field: \"scp_amount_bnd\", type: \"currency\" },\r\n      { title: \"Site Allowances\", field: \"site_allows_bnd\", type: \"currency\" },\r\n      {\r\n        title: \"Expenses Claims\",\r\n        field: \"expenses_claims_bnd\",\r\n        type: \"currency\",\r\n      },\r\n      { title: \"Allowances\", field: \"total_allowances_bnd\", type: \"currency\" },\r\n      { title: \"Deductions\", field: \"total_deductions_bnd\", type: \"currency\" },\r\n      { title: \"Nett Pay\", field: \"nett_pay_bnd\", type: \"currency\" },\r\n      // { title: \"Bank Name\", field: \"bank_name\" },\r\n      // { title: \"Bank AC No\", field: \"bank_accno\" },\r\n      { title: \"Status\", field: \"status\" },\r\n    ],\r\n    []\r\n  );\r\n\r\n  const exportPdfTable = ({ data, emp }) => {\r\n    PrintPayslip({ data, emp });\r\n  };\r\n\r\n  const print_Payslip = async (data) => {\r\n    const { empid } = data.rowData;\r\n    const emp = employees\r\n      .filter((f) => f.id === empid)\r\n      .map((r) => {\r\n        return { ...r };\r\n      });\r\n    exportPdfTable({ data, emp });\r\n  };\r\n\r\n  // const update_Payslip = async (data) => {\r\n  //   const { id } = data;\r\n  //   setPayPeriodEmpId(id); //save to recoil\r\n  //   setEditPayslipID(id);\r\n  //   setIsPayslipEditingOn();\r\n  //   getSinglePayslip(id);\r\n  //   history.push(\"/singlepayslip\");\r\n  //};\r\n\r\n  // const add_Payslip = async (data) => {\r\n  //   const { id } = data;\r\n  //   resetSinglePayslip();\r\n  //   setEditPayslipID(\"\");\r\n  //   setIsPayslipEditingOff();\r\n  //   history.push(\"/singlepayslip\");\r\n  // };\r\n\r\n  // const delete_Payslip = (data) => {\r\n  //   const { id } = data;\r\n  //   setEditPayslipID(id);\r\n  //   deletePayslip(id);\r\n  //   loadPayslips();\r\n  //};\r\n\r\n  useEffect(() => {\r\n    setPayslipId(loginLevel.loginUserId);\r\n    setIsLoad(true);\r\n  }, [isLoad]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          //data={payslips}\r\n          data={payslips\r\n            .filter((r) => r.empid === loginLevel.loginUserId)\r\n            .sort((a, b) =>\r\n              a.payrun > b.payrun ? -1 : b.payrun > a.payrun ? 1 : 0\r\n            )}\r\n          title=\"Payslips\"\r\n          icons={{\r\n            Add: (props) => <AddIcon />,\r\n            Edit: (props) => <EditIcon />,\r\n            Delete: (props) => <DeleteIcon />,\r\n            Clear: (props) => <DeleteIcon />,\r\n            Check: (props) => <CheckIcon />,\r\n            Search: (props) => <SearchIcon />,\r\n            ResetSearch: (props) => <DeleteIcon />,\r\n            Build: (props) => <BuildOutlinedIcon />,\r\n            Print: (props) => <PrintIcon />,\r\n          }}\r\n          actions={[\r\n            {\r\n              icon: \"print\",\r\n              tooltip: \"Print Payslip\",\r\n              onClick: (event, rowData) => {\r\n                print_Payslip({ rowData });\r\n              },\r\n            },\r\n            // {\r\n            //   icon: \"delete\",\r\n            //   tooltip: \"Delete Record\",\r\n            //   onClick: (event, rowData) => {\r\n            //     delete_Payslip(rowData);\r\n            //   },\r\n            // },\r\n            // {\r\n            //   icon: \"add\",\r\n            //   tooltip: \"Add Record\",\r\n            //   isFreeAction: true,\r\n            //   onClick: (event, rowData) => {\r\n            //     add_Payslip(rowData);\r\n            //   },\r\n            // },\r\n          ]}\r\n          options={{\r\n            filtering: true,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"#FFF\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n"]},"metadata":{},"sourceType":"module"}
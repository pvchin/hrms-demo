{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-airtable\\\\src\\\\components\\\\HocTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport MaterialTable, { MTableToolbar } from \"material-table\";\nimport { format, getYear, getMonth } from \"date-fns\";\nimport * as moment from \"moment\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useRecoilState } from \"recoil\";\nimport { Box, Button, Container, Divider,\n//Grid,\nHeading, HStack, Modal, ModalOverlay, ModalContent,\n//ModalHeader,\n//ModalFooter,\nModalBody, ModalCloseButton, Select, SimpleGrid, Tabs, TabList, TabPanels, Tab, TabPanel,\n//Text,\nuseDisclosure } from \"@chakra-ui/react\";\nimport { loginLevelState } from \"./data/atomdata\";\nimport AddIcon from \"@material-ui/icons/Add\";\n//import EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport CheckCircleOutlineOutlinedIcon from \"@material-ui/icons/CheckCircleOutlineOutlined\";\n//import { useCustomToast } from \"../helpers/useCustomToast\";\n//import { useExpensesContext } from \"../context/expenses_context\";\nimport HocForm from \"./HocForm\";\n//import { useEmployeesContext } from \"../context/employees_context\";\nimport { CustomDialog } from \"../helpers/CustomDialog\";\nimport { AlertDialogBox } from \"../helpers/AlertDialogBox\";\nimport { useHoc } from \"./hoc/useHoc\";\n//import { useAddHoc } from \"./hoc/useAddHoc\";\nimport { useDeleteHoc } from \"./hoc/useDeleteHoc\";\n//import { useUpdateHoc } from \"./hoc/useUpdateHoc\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initial_form = {\n  findings: \"\",\n  category: \"\",\n  what: \"\",\n  what_details: \"\",\n  why: \"\",\n  why_details: \"\",\n  discussion: \"No\",\n  action: \"\",\n  isfollowup: \"No\",\n  isworkrelated: \"No\",\n  raisedby: \"\",\n  email: \"\",\n  raisedon: null,\n  company: \"APPSMITH SUTERA\",\n  location: \" \"\n};\nexport default function HocTable(_ref) {\n  _s();\n  let {\n    year,\n    month\n  } = _ref;\n  const classes = useStyles();\n  //const toast = useCustomToast();\n  //const [isLoad, setIsLoad] = useState(false);\n  const {\n    hoc,\n    setHocId,\n    setYearId\n  } = useHoc();\n  //const updateHoc = useUpdateHoc();\n  //const addHoc = useAddHoc();\n  const deleteHoc = useDeleteHoc();\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\n  //const [hocdata, setHocdata] = useState([]);\n  //const [alertSuccess, setAlertSuccess] = useState(false);\n  const [formdata, setFormdata] = useState(initial_form);\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\n  const [isEditId, setIsEditId] = useState(\"\");\n\n  //console.log(\"hoctable\", year, month);\n\n  const columns = useMemo(() => [{\n    title: \"Findings\",\n    field: \"findings\",\n    editable: \"never\",\n    cellStyle: {\n      minWidth: 200,\n      maxWidth: 200\n    }\n  }, {\n    title: \"Risks\",\n    field: \"risks\",\n    editable: \"never\",\n    cellStyle: {\n      minWidth: 150,\n      maxWidth: 150\n    }\n  }, {\n    title: \"Type/Category\",\n    field: \"category\",\n    editable: \"never\"\n  }, {\n    title: \"What\",\n    field: \"what\",\n    editable: \"never\"\n  }, {\n    title: \"What Details\",\n    field: \"what_details\",\n    editable: \"never\",\n    cellStyle: {\n      minWidth: 150,\n      maxWidth: 150\n    }\n  }, {\n    title: \"Why\",\n    field: \"why\",\n    editable: \"never\"\n  }, {\n    title: \"Why Details\",\n    field: \"why_details\",\n    editable: \"never\"\n  }, {\n    title: \"Discussion\",\n    field: \"discussion\",\n    editable: \"never\"\n  }, {\n    title: \"Action\",\n    field: \"action\",\n    editable: \"never\",\n    cellStyle: {\n      minWidth: 200,\n      maxWidth: 200\n    }\n  }, {\n    title: \"Follow-up required?\",\n    field: \"isfollowup\",\n    editable: \"never\"\n  }, {\n    title: \"Work Related?\",\n    field: \"isworkrelated\",\n    editable: \"never\"\n  }, {\n    title: \"Raised By\",\n    field: \"raisedby\",\n    editable: \"never\"\n  }, {\n    title: \"Raised On\",\n    field: \"raisedon\",\n    type: \"date\",\n    dateSetting: {\n      locale: \"en-GB\"\n    },\n    editable: \"never\"\n  }, {\n    title: \"Company\",\n    field: \"company\",\n    editable: \"never\"\n  }, {\n    title: \"Location\",\n    field: \"location\",\n    editable: \"never\"\n  }\n  // {\n  //   title: \"Department\",\n  //   field: \"department\",\n  //   editable: \"never\",\n  // },\n  ], []);\n  useEffect(() => {\n    //console.log(\"loginid\", loginLevel.loginUserId)\n    setHocId(loginLevel.loginUserId);\n    setYearId(year);\n  }, []);\n  const add_Hoc = async data => {\n    //const { id } = data;\n    let today = format(new Date(), \"yyyy-MM-dd\");\n    //console.log(\"today\", today);\n    setIsEditId(prev => prev = \"\");\n    setFormdata(prev => prev = {\n      ...data,\n      raisedby: loginLevel.loginUser,\n      email: loginLevel.loginEmail,\n      company: \"APPSMITHS SUTERA\",\n      raisedon: today\n    });\n    //setFormdata(initial_form);\n    //setIsHocEditingOff();\n    handleDialogOpen();\n    // history.push(\"/singleexpense\");\n  };\n\n  const update_Hoc = async data => {\n    console.log(\"hoc\", data);\n    const {\n      id\n    } = data;\n    setIsEditId(prev => prev = id);\n    setFormdata(prev => prev = {\n      ...data\n    });\n    //setFormdata({ ...data });\n    //setHocId(prev => prev = id)\n    //setEditHocID(id);\n    //setIsExpenseEditingOn();\n    handleDialogOpen();\n\n    // history.push(\"/singleexpense\");\n  };\n\n  const delete_Hoc = data => {\n    const {\n      id\n    } = data;\n    setIsEditId(prev => prev = id);\n    handleAlertOpen();\n\n    // deleteExpense(id);\n    // loadExpenses();\n  };\n\n  const handleDialogOpen = () => {\n    setIsDialogOpen(true);\n  };\n  const handleDialogClose = () => {\n    setIsDialogOpen(false);\n  };\n  const handleAlertOpen = () => {\n    setIsAlertOpen(true);\n  };\n  const handleAlertClose = () => {\n    setIsAlertOpen(false);\n  };\n  const handleOnDeleteConfirm = () => {\n    //const id = isEditId;\n    deleteHoc(isEditId);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: \"100%\",\n        paddingTop: \"5px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(MaterialTable, {\n        columns: columns,\n        data: hoc.filter(r =>\n        // getYear(new Date(r.raisedon)) === year &&\n        getMonth(new Date(r.raisedon)) === month).sort((a, b) => a.raisedon < b.raisedon ? 1 : b.raisedon < a.raisedon ? -1 : 0),\n        title: \"HOC Tables\",\n        icons: {\n          Add: props => /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 29\n          }, this),\n          Edit: props => /*#__PURE__*/_jsxDEV(CheckCircleOutlineOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 30\n          }, this),\n          Delete: props => /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 32\n          }, this),\n          Clear: props => /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 31\n          }, this),\n          Check: props => /*#__PURE__*/_jsxDEV(CheckIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 31\n          }, this),\n          Search: props => /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 32\n          }, this),\n          ResetSearch: props => /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 37\n          }, this)\n        }\n        // editable={{\n        //   onRowUpdate: (newData, oldData) =>\n        //     new Promise((resolve, reject) => {\n        //       setTimeout(() => {\n        //         const dataUpdate = [...expensesdata];\n        //         const index = oldData.tableData.id;\n        //         dataUpdate[index] = newData;\n        //         setExpensesdata([...dataUpdate]);\n        //         //approve_Expense(newData);\n\n        //         resolve();\n        //       }, 1000);\n        //     }),\n        // }}\n        ,\n        actions: [rowData => ({\n          icon: \"edit\",\n          tooltip: \"Edit Record\",\n          onClick: (event, rowData) => {\n            update_Hoc(rowData);\n          }\n        }), rowData => ({\n          icon: \"delete\",\n          tooltip: \"Delete Record\",\n          onClick: (event, rowData) => {\n            delete_Hoc(rowData);\n          }\n        }), {\n          icon: \"add\",\n          tooltip: \"Add Record\",\n          isFreeAction: true,\n          onClick: (event, rowData) => {\n            add_Hoc(rowData);\n          }\n        }],\n        options: {\n          filtering: true,\n          pageSize: 10,\n          headerStyle: {\n            backgroundColor: \"orange\",\n            color: \"#FFF\"\n          },\n          showTitle: true\n        },\n        components: {\n          Toolbar: props => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(MTableToolbar, {\n              ...props\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 15\n          }, this)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CustomDialog, {\n        isOpen: isDialogOpen,\n        handleClose: handleDialogClose,\n        title: \"\",\n        showButton: true,\n        isFullscreen: false,\n        isFullwidth: false,\n        isEditId: isEditId,\n        children: /*#__PURE__*/_jsxDEV(HocForm, {\n          formdata: formdata,\n          setFormdata: setFormdata,\n          handleDialogClose: handleDialogClose,\n          isNew: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AlertDialogBox, {\n        onClose: handleAlertClose,\n        onConfirm: handleOnDeleteConfirm,\n        isOpen: isAlertOpen,\n        title: \"Delete HOC\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Are you sure you want to delete ?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 262,\n    columnNumber: 5\n  }, this);\n}\n_s(HocTable, \"LTx7Bruiai8zezvdCvO5BI41of0=\", false, function () {\n  return [useStyles, useHoc, useDeleteHoc, useRecoilState];\n});\n_c = HocTable;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: 0\n  }\n}));\nvar _c;\n$RefreshReg$(_c, \"HocTable\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","MaterialTable","MTableToolbar","format","getYear","getMonth","moment","makeStyles","useRecoilState","Box","Button","Container","Divider","Heading","HStack","Modal","ModalOverlay","ModalContent","ModalBody","ModalCloseButton","Select","SimpleGrid","Tabs","TabList","TabPanels","Tab","TabPanel","useDisclosure","loginLevelState","AddIcon","DeleteIcon","CheckIcon","SearchIcon","CheckCircleOutlineOutlinedIcon","HocForm","CustomDialog","AlertDialogBox","useHoc","useDeleteHoc","initial_form","findings","category","what","what_details","why","why_details","discussion","action","isfollowup","isworkrelated","raisedby","email","raisedon","company","location","HocTable","year","month","classes","useStyles","hoc","setHocId","setYearId","deleteHoc","isDialogOpen","setIsDialogOpen","isAlertOpen","setIsAlertOpen","formdata","setFormdata","loginLevel","setLoginLevel","isEditId","setIsEditId","columns","title","field","editable","cellStyle","minWidth","maxWidth","type","dateSetting","locale","loginUserId","add_Hoc","data","today","Date","prev","loginUser","loginEmail","handleDialogOpen","update_Hoc","console","log","id","delete_Hoc","handleAlertOpen","handleDialogClose","handleAlertClose","handleOnDeleteConfirm","root","paddingTop","filter","r","sort","a","b","Add","props","Edit","Delete","Clear","Check","Search","ResetSearch","rowData","icon","tooltip","onClick","event","isFreeAction","filtering","pageSize","headerStyle","backgroundColor","color","showTitle","Toolbar","theme","padding"],"sources":["D:/react-myprojects/hrms-airtable/src/components/HocTable.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { format, getYear, getMonth } from \"date-fns\";\r\nimport * as moment from \"moment\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  Divider,\r\n  //Grid,\r\n  Heading,\r\n  HStack,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  //ModalHeader,\r\n  //ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  Select,\r\n  SimpleGrid,\r\n  Tabs,\r\n  TabList,\r\n  TabPanels,\r\n  Tab,\r\n  TabPanel,\r\n  //Text,\r\n  useDisclosure,\r\n} from \"@chakra-ui/react\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\n//import EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport CheckCircleOutlineOutlinedIcon from \"@material-ui/icons/CheckCircleOutlineOutlined\";\r\n//import { useCustomToast } from \"../helpers/useCustomToast\";\r\n//import { useExpensesContext } from \"../context/expenses_context\";\r\nimport HocForm from \"./HocForm\";\r\n//import { useEmployeesContext } from \"../context/employees_context\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { AlertDialogBox } from \"../helpers/AlertDialogBox\";\r\nimport { useHoc } from \"./hoc/useHoc\";\r\n//import { useAddHoc } from \"./hoc/useAddHoc\";\r\nimport { useDeleteHoc } from \"./hoc/useDeleteHoc\";\r\n//import { useUpdateHoc } from \"./hoc/useUpdateHoc\";\r\n\r\nconst initial_form = {\r\n  findings: \"\",\r\n  category: \"\",\r\n  what: \"\",\r\n  what_details: \"\",\r\n  why: \"\",\r\n  why_details: \"\",\r\n  discussion: \"No\",\r\n  action: \"\",\r\n  isfollowup: \"No\",\r\n  isworkrelated: \"No\",\r\n  raisedby: \"\",\r\n  email: \"\",\r\n  raisedon: null,\r\n  company: \"APPSMITH SUTERA\",\r\n  location: \" \",\r\n};\r\n\r\nexport default function HocTable({ year, month }) {\r\n  const classes = useStyles();\r\n  //const toast = useCustomToast();\r\n  //const [isLoad, setIsLoad] = useState(false);\r\n  const { hoc, setHocId, setYearId } = useHoc();\r\n  //const updateHoc = useUpdateHoc();\r\n  //const addHoc = useAddHoc();\r\n  const deleteHoc = useDeleteHoc();\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\r\n  //const [hocdata, setHocdata] = useState([]);\r\n  //const [alertSuccess, setAlertSuccess] = useState(false);\r\n  const [formdata, setFormdata] = useState(initial_form);\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const [isEditId, setIsEditId] = useState(\"\");\r\n\r\n  //console.log(\"hoctable\", year, month);\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        title: \"Findings\",\r\n        field: \"findings\",\r\n        editable: \"never\",\r\n        cellStyle: {\r\n          minWidth: 200,\r\n          maxWidth: 200,\r\n        },\r\n      },\r\n      {\r\n        title: \"Risks\",\r\n        field: \"risks\",\r\n        editable: \"never\",\r\n        cellStyle: {\r\n          minWidth: 150,\r\n          maxWidth: 150,\r\n        },\r\n      },\r\n      {\r\n        title: \"Type/Category\",\r\n        field: \"category\",\r\n        editable: \"never\",\r\n      },\r\n      {\r\n        title: \"What\",\r\n        field: \"what\",\r\n        editable: \"never\",\r\n      },\r\n      {\r\n        title: \"What Details\",\r\n        field: \"what_details\",\r\n        editable: \"never\",\r\n        cellStyle: {\r\n          minWidth: 150,\r\n          maxWidth: 150,\r\n        },\r\n      },\r\n      {\r\n        title: \"Why\",\r\n        field: \"why\",\r\n        editable: \"never\",\r\n      },\r\n      {\r\n        title: \"Why Details\",\r\n        field: \"why_details\",\r\n        editable: \"never\",\r\n      },\r\n      {\r\n        title: \"Discussion\",\r\n        field: \"discussion\",\r\n        editable: \"never\",\r\n      },\r\n      {\r\n        title: \"Action\",\r\n        field: \"action\",\r\n        editable: \"never\",\r\n        cellStyle: {\r\n          minWidth: 200,\r\n          maxWidth: 200,\r\n        },\r\n      },\r\n      {\r\n        title: \"Follow-up required?\",\r\n        field: \"isfollowup\",\r\n        editable: \"never\",\r\n      },\r\n      {\r\n        title: \"Work Related?\",\r\n        field: \"isworkrelated\",\r\n        editable: \"never\",\r\n      },\r\n      {\r\n        title: \"Raised By\",\r\n        field: \"raisedby\",\r\n        editable: \"never\",\r\n      },\r\n      {\r\n        title: \"Raised On\",\r\n        field: \"raisedon\",\r\n        type: \"date\",\r\n        dateSetting: { locale: \"en-GB\" },\r\n        editable: \"never\",\r\n      },\r\n      {\r\n        title: \"Company\",\r\n        field: \"company\",\r\n        editable: \"never\",\r\n      },\r\n      {\r\n        title: \"Location\",\r\n        field: \"location\",\r\n        editable: \"never\",\r\n      },\r\n      // {\r\n      //   title: \"Department\",\r\n      //   field: \"department\",\r\n      //   editable: \"never\",\r\n      // },\r\n    ],\r\n    []\r\n  );\r\n\r\n  useEffect(() => {\r\n    //console.log(\"loginid\", loginLevel.loginUserId)\r\n    setHocId(loginLevel.loginUserId);\r\n    setYearId(year);\r\n  }, []);\r\n\r\n  const add_Hoc = async (data) => {\r\n    //const { id } = data;\r\n    let today = format(new Date(), \"yyyy-MM-dd\");\r\n    //console.log(\"today\", today);\r\n    setIsEditId((prev) => (prev = \"\"));\r\n    setFormdata(\r\n      (prev) =>\r\n        (prev = {\r\n          ...data,\r\n          raisedby: loginLevel.loginUser,\r\n          email: loginLevel.loginEmail,\r\n          company: \"APPSMITHS SUTERA\",\r\n          raisedon: today,\r\n        })\r\n    );\r\n    //setFormdata(initial_form);\r\n    //setIsHocEditingOff();\r\n    handleDialogOpen();\r\n    // history.push(\"/singleexpense\");\r\n  };\r\n\r\n  const update_Hoc = async (data) => {\r\n    console.log(\"hoc\", data);\r\n    const { id } = data;\r\n    setIsEditId((prev) => (prev = id));\r\n    setFormdata((prev) => (prev = { ...data }));\r\n    //setFormdata({ ...data });\r\n    //setHocId(prev => prev = id)\r\n    //setEditHocID(id);\r\n    //setIsExpenseEditingOn();\r\n    handleDialogOpen();\r\n\r\n    // history.push(\"/singleexpense\");\r\n  };\r\n\r\n  const delete_Hoc = (data) => {\r\n    const { id } = data;\r\n    setIsEditId((prev) => (prev = id));\r\n    handleAlertOpen();\r\n\r\n    // deleteExpense(id);\r\n    // loadExpenses();\r\n  };\r\n\r\n  const handleDialogOpen = () => {\r\n    setIsDialogOpen(true);\r\n  };\r\n\r\n  const handleDialogClose = () => {\r\n    setIsDialogOpen(false);\r\n  };\r\n\r\n  const handleAlertOpen = () => {\r\n    setIsAlertOpen(true);\r\n  };\r\n\r\n  const handleAlertClose = () => {\r\n    setIsAlertOpen(false);\r\n  };\r\n\r\n  const handleOnDeleteConfirm = () => {\r\n    //const id = isEditId;\r\n    deleteHoc(isEditId);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={hoc\r\n            .filter(\r\n              (r) =>\r\n                // getYear(new Date(r.raisedon)) === year &&\r\n                getMonth(new Date(r.raisedon)) === month\r\n            )\r\n            .sort((a, b) =>\r\n              a.raisedon < b.raisedon ? 1 : b.raisedon < a.raisedon ? -1 : 0\r\n            )}\r\n          title=\"HOC Tables\"\r\n          icons={{\r\n            Add: (props) => <AddIcon />,\r\n            Edit: (props) => <CheckCircleOutlineOutlinedIcon />,\r\n            Delete: (props) => <DeleteIcon />,\r\n            Clear: (props) => <DeleteIcon />,\r\n            Check: (props) => <CheckIcon />,\r\n            Search: (props) => <SearchIcon />,\r\n            ResetSearch: (props) => <DeleteIcon />,\r\n          }}\r\n          // editable={{\r\n          //   onRowUpdate: (newData, oldData) =>\r\n          //     new Promise((resolve, reject) => {\r\n          //       setTimeout(() => {\r\n          //         const dataUpdate = [...expensesdata];\r\n          //         const index = oldData.tableData.id;\r\n          //         dataUpdate[index] = newData;\r\n          //         setExpensesdata([...dataUpdate]);\r\n          //         //approve_Expense(newData);\r\n\r\n          //         resolve();\r\n          //       }, 1000);\r\n          //     }),\r\n          // }}\r\n          actions={[\r\n            (rowData) => ({\r\n              icon: \"edit\",\r\n              tooltip: \"Edit Record\",\r\n              onClick: (event, rowData) => {\r\n                update_Hoc(rowData);\r\n              },\r\n            }),\r\n            (rowData) => ({\r\n              icon: \"delete\",\r\n              tooltip: \"Delete Record\",\r\n              onClick: (event, rowData) => {\r\n                delete_Hoc(rowData);\r\n              },\r\n            }),\r\n            {\r\n              icon: \"add\",\r\n              tooltip: \"Add Record\",\r\n              isFreeAction: true,\r\n              onClick: (event, rowData) => {\r\n                add_Hoc(rowData);\r\n              },\r\n            },\r\n          ]}\r\n          options={{\r\n            filtering: true,\r\n            pageSize: 10,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"#FFF\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n        <CustomDialog\r\n          isOpen={isDialogOpen}\r\n          handleClose={handleDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscreen={false}\r\n          isFullwidth={false}\r\n          isEditId={isEditId}\r\n        >\r\n          <HocForm\r\n            formdata={formdata}\r\n            setFormdata={setFormdata}\r\n            handleDialogClose={handleDialogClose}\r\n            isNew={false}\r\n          />\r\n        </CustomDialog>\r\n\r\n        <AlertDialogBox\r\n          onClose={handleAlertClose}\r\n          onConfirm={handleOnDeleteConfirm}\r\n          isOpen={isAlertOpen}\r\n          title=\"Delete HOC\"\r\n        >\r\n          <h2>Are you sure you want to delete ?</h2>\r\n        </AlertDialogBox>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-demo\\\\src\\\\components\\\\LeavestypesTable.js\";\nimport React, { useMemo, useEffect } from \"react\";\nimport MaterialTable from \"material-table\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useLeavestypes } from \"./leavestypes/useLeavestypes\";\nimport { useUpdateLeavestype } from \"./leavestypes/useUpdateLeavestype\";\nimport { useDeleteLeavestype } from \"./leavestypes/useDeleteLeavestype\";\nimport { useAddLeavestype } from \"./leavestypes/useAddLeavestype\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LeavestypesTable() {\n  const classes = useStyles();\n  const {\n    leavestypes,\n    setLeaveId\n  } = useLeavestypes();\n  const updateLeavestype = useUpdateLeavestype();\n  const deleteLeavestype = useDeleteLeavestype();\n  const addLeavestype = useAddLeavestype();\n  const columns = useMemo(() => [{\n    title: \"Description\",\n    field: \"description\"\n  }\n  //   {\n  //     title: \"Deduct Leave\",\n  //     field: \"isdeductable\",\n  //   },\n  ], []);\n  const update_Leavestype = data => {\n    const {\n      id,\n      rec_id,\n      ...fields\n    } = data;\n    updateLeavestype({\n      id,\n      ...fields\n    });\n  };\n  const add_Leavestype = data => {\n    //const newData = { ...data, grouptype: type };\n    addLeavestype(data);\n  };\n  const delete_Leavestype = data => {\n    const {\n      id\n    } = data;\n    deleteLeavestype(id);\n  };\n\n  //   useEffect(() => {\n  //     setGroupId(type);\n  //   }, [type]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: \"100%\",\n        paddingTop: \"5px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n        columns: columns,\n        data: leavestypes,\n        title: \"Type Of Leaves\",\n        editable: {\n          onRowAdd: newData => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              add_Leavestype(newData);\n              resolve();\n            }, 1000);\n          }),\n          onRowUpdate: (newData, oldData) => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              update_Leavestype(newData);\n              resolve();\n            }, 1000);\n          }),\n          onRowDelete: oldData => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              delete_Leavestype(oldData);\n              resolve();\n            }, 1000);\n          })\n        },\n        options: {\n          filtering: true,\n          headerStyle: {\n            backgroundColor: \"#90CDF4\",\n            color: \"primary\"\n          },\n          showTitle: true\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: 0\n  }\n}));","map":{"version":3,"names":["React","useMemo","useEffect","MaterialTable","makeStyles","useLeavestypes","useUpdateLeavestype","useDeleteLeavestype","useAddLeavestype","LeavestypesTable","classes","useStyles","leavestypes","setLeaveId","updateLeavestype","deleteLeavestype","addLeavestype","columns","title","field","update_Leavestype","data","id","rec_id","fields","add_Leavestype","delete_Leavestype","root","maxWidth","paddingTop","onRowAdd","newData","Promise","resolve","reject","setTimeout","onRowUpdate","oldData","onRowDelete","filtering","headerStyle","backgroundColor","color","showTitle","theme","padding"],"sources":["D:/react-myprojects/hrms-demo/src/components/LeavestypesTable.js"],"sourcesContent":["import React, { useMemo, useEffect } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useLeavestypes } from \"./leavestypes/useLeavestypes\";\r\nimport { useUpdateLeavestype } from \"./leavestypes/useUpdateLeavestype\";\r\nimport { useDeleteLeavestype } from \"./leavestypes/useDeleteLeavestype\";\r\nimport { useAddLeavestype } from \"./leavestypes/useAddLeavestype\";\r\n\r\nexport default function LeavestypesTable() {\r\n  const classes = useStyles();\r\n  const { leavestypes, setLeaveId } = useLeavestypes();\r\n  const updateLeavestype = useUpdateLeavestype();\r\n  const deleteLeavestype = useDeleteLeavestype();\r\n  const addLeavestype = useAddLeavestype();\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        title: \"Description\",\r\n        field: \"description\",\r\n      },\r\n    //   {\r\n    //     title: \"Deduct Leave\",\r\n    //     field: \"isdeductable\",\r\n    //   },\r\n    ],\r\n    []\r\n  );\r\n\r\n  const update_Leavestype = (data) => {\r\n    const { id, rec_id, ...fields } = data;\r\n    updateLeavestype({ id, ...fields });\r\n  };\r\n\r\n  const add_Leavestype = (data) => {\r\n    //const newData = { ...data, grouptype: type };\r\n    addLeavestype(data);\r\n  };\r\n\r\n  const delete_Leavestype = (data) => {\r\n    const { id } = data;\r\n    deleteLeavestype(id);\r\n  };\r\n\r\n  //   useEffect(() => {\r\n  //     setGroupId(type);\r\n  //   }, [type]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={leavestypes}\r\n          title=\"Type Of Leaves\"\r\n          editable={{\r\n            onRowAdd: (newData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  add_Leavestype(newData);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowUpdate: (newData, oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  update_Leavestype(newData);\r\n\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowDelete: (oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  delete_Leavestype(oldData);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n          }}\r\n          options={{\r\n            filtering: true,\r\n            headerStyle: {\r\n              backgroundColor: \"#90CDF4\",\r\n              color: \"primary\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
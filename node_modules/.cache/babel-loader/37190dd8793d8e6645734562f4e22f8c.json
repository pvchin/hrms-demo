{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-airtable\\\\src\\\\components\\\\ExpenseTableViewStaff.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n//import clsx from \"clsx\";\nimport { Box, Grid, Heading, GridItem,\n//Icon,\nIconButton, Stack, Spacer } from \"@chakra-ui/react\";\nimport { EditIcon } from \"@chakra-ui/icons\";\n//import MaterialTable from \"material-table\";\nimport { useNavigate } from \"react-router-dom\";\nimport { List } from \"@material-ui/core\";\nimport { useRecoilState } from \"recoil\";\nimport { loginLevelState } from \"./data/atomdata\";\nimport { useExpensesContext } from \"../context/expenses_context\";\n//import { expenses_url } from \"../utils/constants\";\nimport { useExpenses } from \"./expenses/useExpenses\";\n\n//const drawerWidth = 240;\n\n// const columns = [\n//   {\n//     title: \"Name\",\n//     field: \"name\",\n//   },\n//   {\n//     title: \"Date\",\n//     field: \"date\",\n//     type: \"date\",\n//     dateSetting: { locale: \"en-GB\" },\n//   },\n\n//   { title: \"Description\", field: \"description\" },\n//   { title: \"Amount\", field: \"amount\", type: \"currency\" },\n//   { title: \"Status\", field: \"status\" },\n// ];\n\n// const fetchExpensesDetails = selector({\n//   key: \"fetchExpensesDetailsSelector\",\n//   get: async ({ get }) => {\n//     try {\n//       const { data } = await axios.get(expenses_url);\n\n//       return data;\n//     } catch (error) {\n//       throw error;\n//     }\n//   },\n// });\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpenseTableViewStaff = () => {\n  _s();\n  const classes = useStyles();\n  const navigate = useNavigate();\n  //const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\n  const {\n    expenses,\n    setFilter,\n    setExpenseId\n  } = useExpenses();\n  //const [userdata, setUserdata] = useState([]);\n  //const [userdata, setUserdata] = useRecoilState(userdatastate);\n  // const ExpensesDetails = useRecoilValueLoadable(fetchExpensesDetails);\n  // const { state, contents } = ExpensesDetails;\n  // const { expenses_loading, expenses_error, loadEmpExpenses } =\n  useExpensesContext();\n  useEffect(() => {\n    setFilter(loginLevel.loginUserId);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(List, {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      direction: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          as: \"h4\",\n          size: \"md\",\n          children: \"Expenses Claims (Pending)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Spacer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton\n        // variant=\"outline\"\n        , {\n          size: \"md\",\n          \"aria-label\": \"Edit\",\n          icon: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 19\n          }, this),\n          onClick: () => navigate(\"/expenses\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), expenses.filter(i => i.status === \"Pending\").map(row => {\n        return /*#__PURE__*/_jsxDEV(Grid, {\n          templateColumns: \"repeat(15, 1fr)\",\n          gap: 3,\n          p: 1,\n          children: [/*#__PURE__*/_jsxDEV(GridItem, {\n            colSpan: 3,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              w: \"100%\",\n              children: row.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n            colSpan: 3,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              w: \"100%\",\n              children: row.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n            colSpan: 3,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              w: \"100%\",\n              children: row.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n            colSpan: 3,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              w: \"100%\",\n              children: row.amount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n            colSpan: 3,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              w: \"100%\",\n              children: row.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 17\n          }, this)]\n        }, row.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }, this)\n        // <ListItem key={row.id}>\n        //   {/* <Grid item sm={2} align=\"center\">\n        //     <ListItemText>{row.name}</ListItemText>\n        //   </Grid> */}\n        //   <Grid item sm={3} align=\"center\">\n        //     <ListItemText>{row.date}</ListItemText>\n        //   </Grid>\n        //   <Grid item sm={3} align=\"center\">\n        //     <ListItemText>{row.description}</ListItemText>\n        //   </Grid>\n        //   <Grid item sm={3} align=\"center\">\n        //     <ListItemText>{row.amount}</ListItemText>\n        //   </Grid>\n        //   <Grid item sm={3} align=\"center\">\n        //     <ListItemText>{row.status}</ListItemText>\n        //   </Grid>\n        // </ListItem>\n        ;\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(ExpenseTableViewStaff, \"bhtbMsrU2EOztI7F3lZ0EO3Xwgc=\", false, function () {\n  return [useStyles, useNavigate, useRecoilState, useExpenses, useExpensesContext];\n});\n_c = ExpenseTableViewStaff;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: 0\n  }\n}));\nexport default ExpenseTableViewStaff;\nvar _c;\n$RefreshReg$(_c, \"ExpenseTableViewStaff\");","map":{"version":3,"names":["React","useEffect","makeStyles","Box","Grid","Heading","GridItem","IconButton","Stack","Spacer","EditIcon","useNavigate","List","useRecoilState","loginLevelState","useExpensesContext","useExpenses","ExpenseTableViewStaff","classes","useStyles","navigate","loginLevel","setLoginLevel","expenses","setFilter","setExpenseId","loginUserId","root","filter","i","status","map","row","name","date","description","amount","id","theme","padding"],"sources":["D:/react-myprojects/hrms-airtable/src/components/ExpenseTableViewStaff.js"],"sourcesContent":["import React, {  useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n//import clsx from \"clsx\";\r\nimport {\r\n  Box,\r\n  Grid,\r\n  Heading,\r\n  GridItem,\r\n  //Icon,\r\n  IconButton,\r\n  Stack,\r\n  Spacer,\r\n} from \"@chakra-ui/react\";\r\nimport { EditIcon } from \"@chakra-ui/icons\";\r\n//import MaterialTable from \"material-table\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { List } from \"@material-ui/core\";\r\nimport {  useRecoilState } from \"recoil\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport { useExpensesContext } from \"../context/expenses_context\";\r\n//import { expenses_url } from \"../utils/constants\";\r\nimport { useExpenses } from \"./expenses/useExpenses\";\r\n\r\n//const drawerWidth = 240;\r\n\r\n// const columns = [\r\n//   {\r\n//     title: \"Name\",\r\n//     field: \"name\",\r\n//   },\r\n//   {\r\n//     title: \"Date\",\r\n//     field: \"date\",\r\n//     type: \"date\",\r\n//     dateSetting: { locale: \"en-GB\" },\r\n//   },\r\n\r\n//   { title: \"Description\", field: \"description\" },\r\n//   { title: \"Amount\", field: \"amount\", type: \"currency\" },\r\n//   { title: \"Status\", field: \"status\" },\r\n// ];\r\n\r\n// const fetchExpensesDetails = selector({\r\n//   key: \"fetchExpensesDetailsSelector\",\r\n//   get: async ({ get }) => {\r\n//     try {\r\n//       const { data } = await axios.get(expenses_url);\r\n\r\n//       return data;\r\n//     } catch (error) {\r\n//       throw error;\r\n//     }\r\n//   },\r\n// });\r\n\r\nconst ExpenseTableViewStaff = () => {\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n  //const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const { expenses, setFilter, setExpenseId } = useExpenses();\r\n  //const [userdata, setUserdata] = useState([]);\r\n  //const [userdata, setUserdata] = useRecoilState(userdatastate);\r\n  // const ExpensesDetails = useRecoilValueLoadable(fetchExpensesDetails);\r\n  // const { state, contents } = ExpensesDetails;\r\n  // const { expenses_loading, expenses_error, loadEmpExpenses } =\r\n    useExpensesContext();\r\n\r\n  useEffect(() => {\r\n    setFilter(loginLevel.loginUserId);\r\n  }, []);\r\n\r\n  return (\r\n    <List className={classes.root}>\r\n      <Grid direction=\"row\">\r\n        <Stack direction=\"row\">\r\n          <Heading as=\"h4\" size=\"md\">\r\n            Expenses Claims (Pending)\r\n          </Heading>\r\n          <Spacer />\r\n          <IconButton\r\n            // variant=\"outline\"\r\n            size=\"md\"\r\n            aria-label=\"Edit\"\r\n            icon={<EditIcon />}\r\n            onClick={() => navigate(\"/expenses\")}\r\n          />\r\n        </Stack>\r\n        {/* <Heading as=\"h4\" size=\"md\">\r\n          Expenses Claims (Pending)\r\n        </Heading> */}\r\n        {expenses\r\n          .filter((i) => i.status === \"Pending\")\r\n          .map((row) => {\r\n            return (\r\n              <Grid\r\n                key={row.id}\r\n                templateColumns=\"repeat(15, 1fr)\"\r\n                gap={3}\r\n                p={1}\r\n              >\r\n                <GridItem colSpan={3}>\r\n                  <Box w=\"100%\">{row.name}</Box>\r\n                </GridItem>\r\n                <GridItem colSpan={3}>\r\n                  <Box w=\"100%\">{row.date}</Box>\r\n                </GridItem>\r\n                <GridItem colSpan={3}>\r\n                  <Box w=\"100%\">{row.description}</Box>\r\n                </GridItem>\r\n                <GridItem colSpan={3}>\r\n                  <Box w=\"100%\">{row.amount}</Box>\r\n                </GridItem>\r\n                <GridItem colSpan={3}>\r\n                  <Box w=\"100%\">{row.status}</Box>\r\n                </GridItem>\r\n              </Grid>\r\n              // <ListItem key={row.id}>\r\n              //   {/* <Grid item sm={2} align=\"center\">\r\n              //     <ListItemText>{row.name}</ListItemText>\r\n              //   </Grid> */}\r\n              //   <Grid item sm={3} align=\"center\">\r\n              //     <ListItemText>{row.date}</ListItemText>\r\n              //   </Grid>\r\n              //   <Grid item sm={3} align=\"center\">\r\n              //     <ListItemText>{row.description}</ListItemText>\r\n              //   </Grid>\r\n              //   <Grid item sm={3} align=\"center\">\r\n              //     <ListItemText>{row.amount}</ListItemText>\r\n              //   </Grid>\r\n              //   <Grid item sm={3} align=\"center\">\r\n              //     <ListItemText>{row.status}</ListItemText>\r\n              //   </Grid>\r\n              // </ListItem>\r\n            );\r\n          })}\r\n      </Grid>\r\n    </List>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n\r\nexport default ExpenseTableViewStaff;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
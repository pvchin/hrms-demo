{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useToast } from '@chakra-ui/react';\n// a wrapper around Chakra UI's useToast that has my default options applied\nexport function useCustomToast() {\n  _s();\n  return useToast({\n    isClosable: true,\n    variant: 'subtle',\n    position: 'bottom'\n  });\n}\n_s(useCustomToast, \"zmshFnTy2h/BI3RcMmgy8WlZc1c=\", false, function () {\n  return [useToast];\n});","map":{"version":3,"names":["useToast","useCustomToast","isClosable","variant","position"],"sources":["D:/react-myprojects/hrms-airtable/src/helpers/useCustomToast.ts"],"sourcesContent":["import {\r\n  CloseAllToastsOptions,\r\n  ToastId,\r\n  useToast,\r\n  UseToastOptions,\r\n} from '@chakra-ui/react';\r\n\r\ninterface UseCustomToast {\r\n  (options?: UseToastOptions | undefined): string | number | undefined;\r\n  close: (id: ToastId) => void;\r\n  closeAll: (options?: CloseAllToastsOptions | undefined) => void;\r\n  update(id: ToastId, options: any): void;\r\n  isActive: (id: ToastId) => boolean | undefined;\r\n}\r\n\r\n// a wrapper around Chakra UI's useToast that has my default options applied\r\nexport function useCustomToast(): UseCustomToast {\r\n  return useToast({\r\n    isClosable: true,\r\n    variant: 'subtle',\r\n    position: 'bottom',\r\n  });\r\n}\r\n"],"mappings":";AAAA,SAGEA,QAAQ,QAEH,kBAAkB;AAUzB;AACA,OAAO,SAASC,cAAc,GAAmB;EAAA;EAC/C,OAAOD,QAAQ,CAAC;IACdE,UAAU,EAAE,IAAI;IAChBC,OAAO,EAAE,QAAQ;IACjBC,QAAQ,EAAE;EACZ,CAAC,CAAC;AACJ;AAAC,GANeH,cAAc;EAAA,QACrBD,QAAQ;AAAA"},"metadata":{},"sourceType":"module"}
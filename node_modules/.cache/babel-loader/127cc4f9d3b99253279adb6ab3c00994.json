{"ast":null,"code":"import { useState, useCallback } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { leavestypes_url } from \"../../utils/constants\";\nimport { filterByEmpId } from \"./utils\";\nimport axios from \"axios\";\nimport { queryKeys } from \"../react-query/constants\";\nasync function getLeavestypes(leaveId) {\n  const {\n    data\n  } = await axios.get(`${leavestypes_url}?fv=${leaveId}`);\n  return data;\n}\nexport function useLeavestypes(empid) {\n  const [filter, setFilter] = useState(\"all\");\n  const [leaveId, setLeaveId] = useState(\"\");\n  const selectFn = useCallback(unfiltered => filterByEmpId(unfiltered, filter), [filter]);\n  const fallback = [];\n  const {\n    data: leavestypes = fallback\n  } = useQuery([queryKeys.leavestypes, leaveId], () => getLeavestypes(leaveId), {\n    select: filter !== \"all\" ? selectFn : undefined\n  });\n  return {\n    leavestypes,\n    filter,\n    setFilter,\n    setLeaveId\n  };\n}","map":{"version":3,"names":["useState","useCallback","useQuery","leavestypes_url","filterByEmpId","axios","queryKeys","getLeavestypes","leaveId","data","get","useLeavestypes","empid","filter","setFilter","setLeaveId","selectFn","unfiltered","fallback","leavestypes","select","undefined"],"sources":["D:/react-myprojects/hrms-demo/src/components/leavestypes/useLeavestypes.js"],"sourcesContent":["import { useState, useCallback } from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport { leavestypes_url } from \"../../utils/constants\";\r\nimport { filterByEmpId } from \"./utils\";\r\n\r\nimport axios from \"axios\";\r\nimport { queryKeys } from \"../react-query/constants\";\r\n\r\nasync function getLeavestypes(leaveId) {\r\n  const { data } = await axios.get(`${leavestypes_url}?fv=${leaveId}`);\r\n  return data;\r\n}\r\n\r\nexport function useLeavestypes(empid) {\r\n  const [filter, setFilter] = useState(\"all\");\r\n  const [leaveId, setLeaveId] = useState(\"\");\r\n\r\n  const selectFn = useCallback(\r\n    (unfiltered) => filterByEmpId(unfiltered, filter),\r\n    [filter]\r\n  );\r\n\r\n  const fallback = [];\r\n  const { data: leavestypes = fallback } = useQuery(\r\n    [queryKeys.leavestypes, leaveId],\r\n    () => getLeavestypes(leaveId),\r\n    {\r\n      select: filter !== \"all\" ? selectFn : undefined,\r\n    }\r\n  );\r\n\r\n  return { leavestypes, filter, setFilter, setLeaveId };\r\n}\r\n"],"mappings":"AAAA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAC7C,SAASC,QAAQ,QAAQ,aAAa;AACtC,SAASC,eAAe,QAAQ,uBAAuB;AACvD,SAASC,aAAa,QAAQ,SAAS;AAEvC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,0BAA0B;AAEpD,eAAeC,cAAc,CAACC,OAAO,EAAE;EACrC,MAAM;IAAEC;EAAK,CAAC,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAE,GAAEP,eAAgB,OAAMK,OAAQ,EAAC,CAAC;EACpE,OAAOC,IAAI;AACb;AAEA,OAAO,SAASE,cAAc,CAACC,KAAK,EAAE;EACpC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAACQ,OAAO,EAAEO,UAAU,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMgB,QAAQ,GAAGf,WAAW,CACzBgB,UAAU,IAAKb,aAAa,CAACa,UAAU,EAAEJ,MAAM,CAAC,EACjD,CAACA,MAAM,CAAC,CACT;EAED,MAAMK,QAAQ,GAAG,EAAE;EACnB,MAAM;IAAET,IAAI,EAAEU,WAAW,GAAGD;EAAS,CAAC,GAAGhB,QAAQ,CAC/C,CAACI,SAAS,CAACa,WAAW,EAAEX,OAAO,CAAC,EAChC,MAAMD,cAAc,CAACC,OAAO,CAAC,EAC7B;IACEY,MAAM,EAAEP,MAAM,KAAK,KAAK,GAAGG,QAAQ,GAAGK;EACxC,CAAC,CACF;EAED,OAAO;IAAEF,WAAW;IAAEN,MAAM;IAAEC,SAAS;IAAEC;EAAW,CAAC;AACvD"},"metadata":{},"sourceType":"module"}
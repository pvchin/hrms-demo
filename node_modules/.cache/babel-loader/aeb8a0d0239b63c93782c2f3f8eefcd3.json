{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-demo\\\\src\\\\components\\\\Payrun.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MaterialTable from \"material-table\";\nimport clsx from \"clsx\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Button, Paper, Grid, Icon, Divider, TextField } from \"@material-ui/core\";\nimport { Box, Modal, ModalOverlay, ModalContent, ModalHeader, ModalFooter, ModalBody, ModalCloseButton,\n//Select,\nuseDisclosure } from \"@chakra-ui/react\";\n// import {\n//   Input,\n//   InputGroup,\n//   InputLeftAddon,\n//   NumberInput,\n//   NumberInputField,\n//   NumberInputStepper,\n//   NumberIncrementStepper,\n//   NumberDecrementStepper,\n//   Stack,\n//} from \"@chakra-ui/react\";\nimport { useRecoilState } from \"recoil\";\nimport { useEmployeesContext } from \"../context/employees_context\";\nimport { usePayslipsContext } from \"../context/payslips_context\";\nimport { useExpensesContext } from \"../context/expenses_context\";\nimport { useDailyAllowancesContext } from \"../context/dailyallowances_context\";\nimport { payrunState, payrunIdState } from \"./data/atomdata\";\n//import { usePayrun } from \"./payrun/usePayrun\";\nimport { useCurrency } from \"./currency/useCurrency\";\n//import { useExpenses } from \"./expenses/useExpenses\";\nimport UpdateCurrency from \"./CurrencyTable\";\n//import { usePayslipsBatch } from \"./payslips/usePayslipsBatch\";\n\n//const drawerWidth = 240;\n// const selectmonths = [\n//   { mth: \"January\" },\n//   { mth: \"February\" },\n//   { mth: \"March\" },\n//   { mth: \"April\" },\n//   { mth: \"May\" },\n//   { mth: \"June\" },\n//   { mth: \"July\" },\n//   { mth: \"August\" },\n//   { mth: \"September\" },\n//   { mth: \"October\" },\n//   { mth: \"November\" },\n//   { mth: \"December\" },\n// ];\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Payrun = () => {\n  _s();\n  let navigate = useNavigate();\n  //let date = new Date();\n  //let longMonth = date.toLocaleString(\"en-us\", { month: \"long\" });\n\n  const classes = useStyles();\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n  //const { payrun } = usePayrun();\n  //const { payslipsbatch, psbpayrunId, setPSBPayrunId } = usePayslipsBatch();\n  const {\n    currency\n  } = useCurrency();\n  //const { expenses, setPayrunId } = useExpensesPayrun();\n  const {\n    isOpen,\n    onOpen,\n    onClose\n  } = useDisclosure();\n  const [loadPaybatch, setLoadPaybatch] = useState(false);\n  const {\n    loadEmployees,\n    employees\n  } = useEmployeesContext();\n  const {\n    loadUnpaidExpenses,\n    unpaidexpenses,\n    updateExpense\n  } = useExpensesContext();\n  const {\n    unpaiddailyallows,\n    loadUnpaidDailyAllows,\n    updateDailyAllowance\n  } = useDailyAllowancesContext();\n  const {\n    addPayrun,\n    getPayrun,\n    payrun,\n    payrun_loading,\n    addPayslip,\n    resetPayslipsData,\n    singlebatch_payslip_loading,\n    setPayslipPeriod\n  } = usePayslipsContext();\n  const [input, setInput] = useRecoilState(payrunState);\n  const [payrunid, setPayrunId] = useRecoilState(payrunIdState);\n  const [alert, setAlert] = useState(false);\n  const [error] = useState(false);\n  const [errornoselect, setErrornoselect] = useState(false);\n  const [isPayrunExist, setIsPayrunExist] = useState(false);\n  const [isSubmit, setIsSubmit] = useState(false);\n\n  //filter regisned employees\n  const allemployees = employees.filter(r => !r.hasresigned && !r.nonpayroll);\n  const columns = useMemo(() => [{\n    title: \"NAME\",\n    field: \"name\",\n    editable: \"never\",\n    cellStyle: {\n      width: 280,\n      maxWidth: 280\n    }\n  }], []);\n  useEffect(() => {\n    if (!payrun_loading) {\n      setLoadPaybatch(false);\n    }\n  }, [loadPaybatch]);\n  function formatDate(string) {\n    var options = {\n      year: \"numeric\",\n      month: \"long\",\n      day: \"numeric\"\n    };\n    return new Date(string).toLocaleDateString(\"en-GB\", options);\n  }\n  function formatPayrun() {\n    // const yy =\n    //   input.fromdate.substring(0, 4) + \"-\" + input.fromdate.substring(5, 7);\n    // const mm = input.fromdate.substring(5, 7);\n    // const d = input.fromdate;\n  }\n  const payrunExists = data => {\n    return payrun.some(function (el) {\n      return el.payrun === data;\n    });\n  };\n  const handleChange = e => {\n    setInput({\n      ...input,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handlePayrunSubmit = e => {\n    e.preventDefault();\n    setPayrunId(\"\");\n    var count = allemployees.reduce((acc, r) => {\n      if (r.tableData.checked) {\n        return acc + 1;\n      } else {\n        return acc;\n      }\n    }, 0);\n    //console.log(\"count\", count);\n    if (count === 0) {\n      setErrornoselect(true);\n      setTimeout(() => {\n        setErrornoselect(false);\n      }, 3000);\n      return null;\n    }\n    const period = formatDate(input.fromdate) + \" - \" + formatDate(input.todate);\n    const payrundata = input.fromdate.substring(0, 4) + \"-\" + input.fromdate.substring(5, 7);\n    setInput({\n      ...input,\n      period: period,\n      payrun: payrundata,\n      status: \"New\"\n    });\n    formatPayrun();\n    setPayslipPeriod(payrundata);\n    const isExist = payrunExists(payrundata);\n    if (isExist) {\n      //console.log(\"exist\");\n      setIsPayrunExist(true);\n      setIsSubmit(false);\n      setAlert(true);\n    } else {\n      //console.log(\"add\");\n      checkSelectedEmployees(period, payrundata);\n      add_Payrun(period, payrundata);\n      setIsPayrunExist(false);\n      setAlert(true);\n      setIsSubmit(true);\n      setLoadPaybatch(true);\n    }\n  };\n  const checkSelectedEmployees = (period, payrun) => {\n    //console.log(\"payrun\", payrun, period);\n    var exp = 0,\n      allows = 0,\n      tmpbasicsalary = 0,\n      tmptotalallows = 0,\n      tmptotalTAP = 0,\n      tmptotalSCP = 0,\n      //tmpsiteallows = 0,\n      //tmpexpsclaims = 0,\n      tmpnettpay = 0,\n      tmpcurrrate = 0,\n      tmpbasicsalarybnd = 0,\n      tmptotalallowsbnd = 0,\n      tmptotalTAPbnd = 0,\n      tmptotalSCPbnd = 0,\n      tmpsiteallowsbnd = 0,\n      tmpexpsclaimsbnd = 0,\n      tmpnettpaybnd = 0;\n    resetPayslipsData();\n    allemployees && allemployees.forEach((emp, index) => {\n      exp = 0;\n      allows = 0;\n      tmpbasicsalary = 0;\n      tmptotalallows = 0;\n      tmptotalTAP = 0;\n      tmptotalSCP = 0;\n      tmpnettpay = 0;\n      tmpcurrrate = 0;\n      tmpbasicsalarybnd = 0;\n      tmptotalallowsbnd = 0;\n      tmptotalTAPbnd = 0;\n      tmpsiteallowsbnd = 0;\n      tmpexpsclaimsbnd = 0;\n      tmptotalSCPbnd = 0;\n      tmpnettpaybnd = 0;\n      if (emp.tableData.checked) {\n        exp = 0;\n        if (unpaidexpenses) {\n          unpaidexpenses.filter(r => r.empid === emp.id).map(i => {\n            updateExpense({\n              id: i.id,\n              payrun: payrun\n            });\n            return exp = exp + i.amount;\n          });\n        }\n        allows = 0;\n        if (unpaiddailyallows) {\n          unpaiddailyallows.filter(r => r.empid === emp.id).map(i => {\n            updateDailyAllowance({\n              id: i.id,\n              payrun: payrun\n            });\n            return allows = allows + i.amount;\n          });\n        }\n        const {\n          id,\n          name,\n          bank_name,\n          bank_acno,\n          basic_salary,\n          salary_currency,\n          tap_acno,\n          scp_acno,\n          tap_checkbox\n        } = emp;\n        tmpbasicsalary = basic_salary;\n        if (salary_currency && salary_currency !== \"BND\") {\n          const table = currency.filter(r => r.currency === salary_currency).map(rec => {\n            return {\n              ...rec\n            };\n          });\n          tmpcurrrate = table[0].rate;\n        } else {\n          tmpcurrrate = 1;\n        }\n\n        //console.log(\"USD\", table, basic_salary, tmpbasicsalary);\n        //tmptotalallows = allows + exp;\n        tmptotalTAP = tap_checkbox ? Math.ceil(tmpbasicsalary * 0.05) : 0;\n        tmptotalSCP = tap_checkbox ? Math.round((tmpbasicsalary + Number.EPSILON) * 0.035 * 100) / 100 : 0;\n        if (tmptotalSCP > 98) {\n          tmptotalSCP = 98;\n        }\n        tmpnettpay = tmpbasicsalary + allows + exp + tmptotalallows - tmptotalTAP - tmptotalSCP;\n        tmpbasicsalarybnd = Math.round((basic_salary + Number.EPSILON) * tmpcurrrate * 100) / 100;\n        tmptotalTAPbnd = Math.round((tmptotalTAP + Number.EPSILON) * tmpcurrrate * 100) / 100;\n        tmptotalSCPbnd = Math.round((tmptotalSCP + Number.EPSILON) * tmpcurrrate * 100) / 100;\n        tmpnettpaybnd = Math.round((tmpnettpay + Number.EPSILON) * tmpcurrrate * 100) / 100;\n        tmpsiteallowsbnd = Math.round((allows + Number.EPSILON) * tmpcurrrate * 100) / 100;\n        tmpexpsclaimsbnd = Math.round((exp + Number.EPSILON) * tmpcurrrate * 100) / 100;\n        tmpnettpaybnd = tmpbasicsalarybnd + tmpsiteallowsbnd + tmpexpsclaimsbnd - tmptotalTAPbnd - tmptotalSCPbnd;\n        const data = {\n          name: name,\n          period: period,\n          pay_date: input.pay_date,\n          payrun: payrun,\n          bank_name: bank_name,\n          bank_acno: bank_acno,\n          salary_currency: salary_currency ? salary_currency : \"BND\",\n          currency_rate: tmpcurrrate,\n          tap_acno: tap_acno,\n          scp_acno: scp_acno,\n          tap_checkbox: tap_checkbox,\n          empid: id,\n          status: \"Pending\",\n          allows_type1: \"Site Allowances\",\n          allows_type1amt: allows,\n          allows_type2: \"Expenses Claims\",\n          allows_type2amt: exp,\n          allows_type3: \" \",\n          allows_type3amt: 0,\n          allows_type4: \" \",\n          allows_type4amt: 0,\n          allows_type5: \" \",\n          allows_type5amt: 0,\n          allows_type6: \" \",\n          allows_type6amt: 0,\n          allows_type7: \" \",\n          allows_type7amt: 0,\n          allows_type8: \" \",\n          allows_type8amt: 0,\n          deducts_type1: \" \",\n          deducts_type1amt: 0,\n          deducts_type2: \" \",\n          deducts_type2amt: 0,\n          deducts_type3: \" \",\n          deducts_type3amt: 0,\n          deducts_type4: \" \",\n          deducts_type4amt: 0,\n          deducts_type5: \" \",\n          deducts_type5amt: 0,\n          deducts_type6: \" \",\n          deducts_type6amt: 0,\n          deducts_type7: \" \",\n          deducts_type7amt: 0,\n          deducts_type8: \" \",\n          deducts_type8amt: 0,\n          wages: tmpbasicsalary,\n          tap_amount: tmptotalTAP,\n          scp_amount: tmptotalSCP,\n          total_allowances: tmptotalallows,\n          total_deductions: 0,\n          site_allows: allows,\n          expenses_claims: exp,\n          nett_pay: tmpnettpay,\n          wages_bnd: tmpbasicsalarybnd,\n          site_allows_bnd: tmpsiteallowsbnd,\n          expenses_claims_bnd: tmpexpsclaimsbnd,\n          total_allowances_bnd: tmptotalallowsbnd,\n          total_deductions_bnd: 0,\n          tap_amount_bnd: tmptotalTAPbnd,\n          scp_amount_bnd: tmptotalSCPbnd,\n          nett_pay_bnd: tmpnettpaybnd\n        };\n        addPayslip({\n          ...data\n        });\n      }\n    });\n  };\n  const handleNext = () => {\n    navigate(\"/payrunbatch\");\n  };\n  const add_Payrun = (period, payrun) => {\n    //update payrun\n    addPayrun({\n      pay_freq: input.payfreq,\n      from_date: input.fromdate,\n      to_date: input.todate,\n      pay_date: input.paydate,\n      period: period,\n      payrun: payrun,\n      status: \"Pending\"\n    });\n    getPayrun();\n  };\n  useEffect(() => {\n    loadEmployees();\n    loadUnpaidExpenses();\n    loadUnpaidDailyAllows();\n    getPayrun();\n  }, []);\n\n  // useEffect(() => {\n  //   loadUnpaidDailyAllows();\n  // }, []);\n\n  // useEffect(() => {\n  //   console.log(\"useEffect here\", input.payrun);\n\n  //   // getSingleBatchPayslip(input.payrun);\n  //   if (singlebatchpayslip) {\n  //     checkSelectedEmployees(input.period, input.payrun);\n  //     setLoadPaybatch(false);\n  //   }\n  // }, [loadPaybatch]);\n\n  //   useEffect(() => {\n  //     if (input.period && input.payrun) {\n  //       //add_Payrun();\n\n  //       setAlert(true);\n  //     }\n  //   }, [input]);\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: fixedHeightPaper,\n    style: {\n      backgroundColor: \"659dbd\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.section,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        direction: \"row\",\n        container: true,\n        spacing: 1\n        // style={{ border: \"1px solid white\" }}\n        ,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          item: true,\n          sm: 3,\n          style: {\n            border: \"1px solid black\"\n          },\n          direction: \"column\",\n          align: \"left\",\n          children: /*#__PURE__*/_jsxDEV(\"article\", {\n            className: classes.jobinfo,\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Pay Run\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 455,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handlePayrunSubmit,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 457,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  label: \"Pay Frequency\",\n                  variant: \"filled\",\n                  required: true,\n                  defaultValue: \"Monthly\",\n                  style: {\n                    width: \"100%\"\n                  },\n                  name: \"payfreq\",\n                  value: input.payfreq,\n                  onChange: e => handleChange(e),\n                  select: true,\n                  children: /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Monthly\",\n                    children: \"Monthly\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 498,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 486,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 485,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  label: \"From Date\",\n                  variant: \"filled\",\n                  name: \"fromdate\",\n                  type: \"date\",\n                  value: input.fromdate,\n                  required: true,\n                  style: {\n                    width: \"100%\"\n                  },\n                  onChange: e => handleChange(e),\n                  InputLabelProps: {\n                    shrink: true\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 530,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 529,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  label: \"To Date\",\n                  variant: \"filled\",\n                  type: \"date\",\n                  name: \"todate\",\n                  value: input.todate,\n                  required: true,\n                  onChange: e => handleChange(e),\n                  style: {\n                    width: \"100%\"\n                  },\n                  InputLabelProps: {\n                    shrink: true\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 545,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 544,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  label: \"Payment Date\",\n                  variant: \"filled\",\n                  type: \"date\",\n                  name: \"paydate\",\n                  value: input.paydate,\n                  required: true,\n                  style: {\n                    width: \"100%\"\n                  },\n                  onChange: e => handleChange(e),\n                  InputLabelProps: {\n                    shrink: true\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 560,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 559,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    color: \"primary\",\n                    className: classes.button,\n                    onClick: onOpen,\n                    disabled: isSubmit,\n                    children: \"Currency Exchange Table\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 576,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 575,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    type: \"submit\",\n                    variant: \"contained\",\n                    color: \"primary\",\n                    className: classes.button,\n                    children: [\"Submit \", /*#__PURE__*/_jsxDEV(Icon, {\n                      className: classes.rightIcon,\n                      children: \"send\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 593,\n                      columnNumber: 30\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 587,\n                    columnNumber: 21\n                  }, this), alert && !isPayrunExist && /*#__PURE__*/_jsxDEV(Button, {\n                    type: \"submit\",\n                    variant: \"contained\",\n                    color: \"primary\",\n                    className: classes.button,\n                    onClick: handleNext,\n                    children: [\"Next \", /*#__PURE__*/_jsxDEV(Icon, {\n                      className: classes.rightIcon,\n                      children: \"send\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 604,\n                      columnNumber: 30\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 597,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 586,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 574,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [alert && !isPayrunExist && !singlebatch_payslip_loading && /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"New Payrun being added!\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 611,\n                  columnNumber: 21\n                }, this), alert && isPayrunExist && /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"This payrun already existed!\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 614,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 609,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [error && /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"This Payrun period already existed!\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 618,\n                  columnNumber: 29\n                }, this), errornoselect && /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"You must select employees!\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 619,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 617,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 456,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          orientation: \"vertical\",\n          flexItem: true,\n          style: {\n            background: \"white\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 624,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          item: true,\n          sm: 3,\n          style: {\n            border: \"1px solid black\"\n          },\n          align: \"right\",\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            h: \"500\",\n            w: \"full\",\n            overflow: \"scroll\",\n            children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n              columns: columns\n              //data={employees.filter((r) => !r.hasresigned && !r.nonpayroll)}\n              ,\n              data: allemployees,\n              title: \"Employee Listing\",\n              options: {\n                filtering: false,\n                search: false,\n                toolbar: true,\n                selection: true,\n                paging: false,\n                pageSize: 10,\n                headerStyle: {\n                  backgroundColor: \"#90CDF4\",\n                  color: \"primary\"\n                },\n                showTitle: true\n                // selectionProps: rowData => {\n                //   rowData.tableData.checked = true\n                // }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 637,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 636,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 629,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: isOpen,\n        onClose: onClose,\n        children: [/*#__PURE__*/_jsxDEV(ModalOverlay, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 663,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalContent, {\n          children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n            children: \"Currency Table\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 665,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ModalCloseButton, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 666,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              children: /*#__PURE__*/_jsxDEV(UpdateCurrency, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 669,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 668,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 667,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              colorScheme: \"blue\",\n              mr: 3,\n              onClick: onClose,\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 684,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 683,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 664,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 662,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 438,\n    columnNumber: 5\n  }, this);\n};\n_s(Payrun, \"1B4W9zPoaZFLOc+tGSCjLtZvtCQ=\", false, function () {\n  return [useNavigate, useStyles, useCurrency, useDisclosure, useEmployeesContext, useExpensesContext, useDailyAllowancesContext, usePayslipsContext, useRecoilState, useRecoilState];\n});\n_c = Payrun;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  button: {\n    margin: theme.spacing(1)\n  },\n  container: {\n    margin: 0,\n    padding: 0,\n    width: \"80vw\",\n    display: \"grid\",\n    gridTemplateColumns: \"repeat(auto-fill,250px)\",\n    gridAutoRows: \"10px\",\n    position: \"absolute\",\n    left: \"50%\",\n    transform: \"translateX(-50%)\",\n    justifyContent: \"center\",\n    backgroundColor: \"primary\"\n  },\n  fixedHeight: {\n    height: 800\n  },\n  paper: {\n    padding: theme.spacing(10),\n    // display: \"flex\",\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n    border: \"1px solid\",\n    width: \"100%\",\n    color: \"primary\",\n    bcakgroundColor: \"black\"\n  },\n  card: {\n    backgroundColor: \"black\"\n  },\n  section: {\n    width: \"95vw\",\n    margin: \"5rem auto\",\n    maxWidth: \"var(--max-width)\"\n  },\n  underline: {\n    width: \"5rem\",\n    height: \"0.25rem\",\n    marginBottom: \"1.25rem\",\n    background: \"var(--clr-primary-5)\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\"\n  },\n  title: {\n    marginbottom: \"4rem\",\n    textAlign: \"center\"\n  },\n  jobscenter: {\n    width: \"80vw\",\n    margin: \"0 auto\",\n    maxWidth: \"var(--max-width)\",\n    flexDirection: \"row\"\n  },\n  btncontainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    marginBottom: \"4rem\",\n    flexWrap: \"wrap\"\n  },\n  jobbtn: {\n    background: \"transparent\",\n    borderColor: \"transparent\",\n    textTransform: \"capitalize\",\n    fontSize: \"1.25rem\",\n    letterSpacing: \"var(--spacing)\",\n    margin: \"0 0.5rem\",\n    transition: \"var(--transition)\",\n    cursor: \"pointer\",\n    padding: \"0.25rem 0\",\n    lineHeight: \"1\",\n    outlineColor: \"var(--clr-primary-10)\",\n    \"&:hover\": {\n      color: \"var(--clr-primary-5)\",\n      boxShadow: \"0 2px var(--clr-primary-5)\"\n    }\n  },\n  activebtn: {\n    color: \"var(--clr-primary-5)\",\n    boxShadow: \"0 2px var(--clr-primary-5)\"\n  },\n  jobinfo: {\n    fontWeight: \"400\"\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1)\n  },\n  formLabel: {\n    fontSize: 12,\n    textAlign: \"left\",\n    marginLeft: 8,\n    marginTop: 5\n  }\n}));\nexport default Payrun;\nvar _c;\n$RefreshReg$(_c, \"Payrun\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","makeStyles","MaterialTable","clsx","useNavigate","Button","Paper","Grid","Icon","Divider","TextField","Box","Modal","ModalOverlay","ModalContent","ModalHeader","ModalFooter","ModalBody","ModalCloseButton","useDisclosure","useRecoilState","useEmployeesContext","usePayslipsContext","useExpensesContext","useDailyAllowancesContext","payrunState","payrunIdState","useCurrency","UpdateCurrency","Payrun","navigate","classes","useStyles","fixedHeightPaper","paper","fixedHeight","currency","isOpen","onOpen","onClose","loadPaybatch","setLoadPaybatch","loadEmployees","employees","loadUnpaidExpenses","unpaidexpenses","updateExpense","unpaiddailyallows","loadUnpaidDailyAllows","updateDailyAllowance","addPayrun","getPayrun","payrun","payrun_loading","addPayslip","resetPayslipsData","singlebatch_payslip_loading","setPayslipPeriod","input","setInput","payrunid","setPayrunId","alert","setAlert","error","errornoselect","setErrornoselect","isPayrunExist","setIsPayrunExist","isSubmit","setIsSubmit","allemployees","filter","r","hasresigned","nonpayroll","columns","title","field","editable","cellStyle","width","maxWidth","formatDate","string","options","year","month","day","Date","toLocaleDateString","formatPayrun","payrunExists","data","some","el","handleChange","e","target","name","value","handlePayrunSubmit","preventDefault","count","reduce","acc","tableData","checked","setTimeout","period","fromdate","todate","payrundata","substring","status","isExist","checkSelectedEmployees","add_Payrun","exp","allows","tmpbasicsalary","tmptotalallows","tmptotalTAP","tmptotalSCP","tmpnettpay","tmpcurrrate","tmpbasicsalarybnd","tmptotalallowsbnd","tmptotalTAPbnd","tmptotalSCPbnd","tmpsiteallowsbnd","tmpexpsclaimsbnd","tmpnettpaybnd","forEach","emp","index","empid","id","map","i","amount","bank_name","bank_acno","basic_salary","salary_currency","tap_acno","scp_acno","tap_checkbox","table","rec","rate","Math","ceil","round","Number","EPSILON","pay_date","currency_rate","allows_type1","allows_type1amt","allows_type2","allows_type2amt","allows_type3","allows_type3amt","allows_type4","allows_type4amt","allows_type5","allows_type5amt","allows_type6","allows_type6amt","allows_type7","allows_type7amt","allows_type8","allows_type8amt","deducts_type1","deducts_type1amt","deducts_type2","deducts_type2amt","deducts_type3","deducts_type3amt","deducts_type4","deducts_type4amt","deducts_type5","deducts_type5amt","deducts_type6","deducts_type6amt","deducts_type7","deducts_type7amt","deducts_type8","deducts_type8amt","wages","tap_amount","scp_amount","total_allowances","total_deductions","site_allows","expenses_claims","nett_pay","wages_bnd","site_allows_bnd","expenses_claims_bnd","total_allowances_bnd","total_deductions_bnd","tap_amount_bnd","scp_amount_bnd","nett_pay_bnd","handleNext","pay_freq","payfreq","from_date","to_date","paydate","backgroundColor","section","border","jobinfo","shrink","button","rightIcon","background","filtering","search","toolbar","selection","paging","pageSize","headerStyle","color","showTitle","theme","root","flexGrow","margin","spacing","container","padding","display","gridTemplateColumns","gridAutoRows","position","left","transform","justifyContent","height","overflow","flexDirection","bcakgroundColor","card","underline","marginBottom","marginLeft","marginRight","marginbottom","textAlign","jobscenter","btncontainer","flexWrap","jobbtn","borderColor","textTransform","fontSize","letterSpacing","transition","cursor","lineHeight","outlineColor","boxShadow","activebtn","fontWeight","formLabel","marginTop"],"sources":["D:/react-myprojects/hrms-demo/src/components/Payrun.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport MaterialTable from \"material-table\";\r\nimport clsx from \"clsx\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  Paper,\r\n  Grid,\r\n  Icon,\r\n  Divider,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Box,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  //Select,\r\n  useDisclosure,\r\n} from \"@chakra-ui/react\";\r\n// import {\r\n//   Input,\r\n//   InputGroup,\r\n//   InputLeftAddon,\r\n//   NumberInput,\r\n//   NumberInputField,\r\n//   NumberInputStepper,\r\n//   NumberIncrementStepper,\r\n//   NumberDecrementStepper,\r\n//   Stack,\r\n//} from \"@chakra-ui/react\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\nimport { useExpensesContext } from \"../context/expenses_context\";\r\nimport { useDailyAllowancesContext } from \"../context/dailyallowances_context\";\r\nimport { payrunState, payrunIdState } from \"./data/atomdata\";\r\n//import { usePayrun } from \"./payrun/usePayrun\";\r\nimport { useCurrency } from \"./currency/useCurrency\";\r\n//import { useExpenses } from \"./expenses/useExpenses\";\r\nimport UpdateCurrency from \"./CurrencyTable\";\r\n//import { usePayslipsBatch } from \"./payslips/usePayslipsBatch\";\r\n\r\n//const drawerWidth = 240;\r\n// const selectmonths = [\r\n//   { mth: \"January\" },\r\n//   { mth: \"February\" },\r\n//   { mth: \"March\" },\r\n//   { mth: \"April\" },\r\n//   { mth: \"May\" },\r\n//   { mth: \"June\" },\r\n//   { mth: \"July\" },\r\n//   { mth: \"August\" },\r\n//   { mth: \"September\" },\r\n//   { mth: \"October\" },\r\n//   { mth: \"November\" },\r\n//   { mth: \"December\" },\r\n// ];\r\n\r\nconst Payrun = () => {\r\n  let navigate = useNavigate();\r\n  //let date = new Date();\r\n  //let longMonth = date.toLocaleString(\"en-us\", { month: \"long\" });\r\n\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  //const { payrun } = usePayrun();\r\n  //const { payslipsbatch, psbpayrunId, setPSBPayrunId } = usePayslipsBatch();\r\n  const { currency } = useCurrency();\r\n  //const { expenses, setPayrunId } = useExpensesPayrun();\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const [loadPaybatch, setLoadPaybatch] = useState(false);\r\n  const { loadEmployees, employees } = useEmployeesContext();\r\n  const { loadUnpaidExpenses, unpaidexpenses, updateExpense } =\r\n    useExpensesContext();\r\n  const { unpaiddailyallows, loadUnpaidDailyAllows, updateDailyAllowance } =\r\n    useDailyAllowancesContext();\r\n  const {\r\n    addPayrun,\r\n    getPayrun,\r\n    payrun,\r\n    payrun_loading,\r\n    addPayslip,\r\n    resetPayslipsData,\r\n    singlebatch_payslip_loading,\r\n    setPayslipPeriod,\r\n  } = usePayslipsContext();\r\n  const [input, setInput] = useRecoilState(payrunState);\r\n  const [payrunid, setPayrunId] = useRecoilState(payrunIdState);\r\n  const [alert, setAlert] = useState(false);\r\n  const [error] = useState(false);\r\n  const [errornoselect, setErrornoselect] = useState(false);\r\n  const [isPayrunExist, setIsPayrunExist] = useState(false);\r\n  const [isSubmit, setIsSubmit] = useState(false);\r\n\r\n  //filter regisned employees\r\n  const allemployees = employees.filter((r) => !r.hasresigned && !r.nonpayroll);\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        title: \"NAME\",\r\n        field: \"name\",\r\n        editable: \"never\",\r\n        cellStyle: {\r\n          width: 280,\r\n          maxWidth: 280,\r\n        },\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!payrun_loading) {\r\n      setLoadPaybatch(false);\r\n    }\r\n  }, [loadPaybatch]);\r\n\r\n  function formatDate(string) {\r\n    var options = { year: \"numeric\", month: \"long\", day: \"numeric\" };\r\n    return new Date(string).toLocaleDateString(\"en-GB\", options);\r\n  }\r\n\r\n  function formatPayrun() {\r\n    // const yy =\r\n    //   input.fromdate.substring(0, 4) + \"-\" + input.fromdate.substring(5, 7);\r\n    // const mm = input.fromdate.substring(5, 7);\r\n    // const d = input.fromdate;\r\n  }\r\n\r\n  const payrunExists = (data) => {\r\n    return payrun.some(function (el) {\r\n      return el.payrun === data;\r\n    });\r\n  };\r\n  const handleChange = (e) => {\r\n    setInput({ ...input, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handlePayrunSubmit = (e) => {\r\n    e.preventDefault();\r\n    setPayrunId(\"\");\r\n    var count = allemployees.reduce((acc, r) => {\r\n      if (r.tableData.checked) {\r\n        return acc + 1;\r\n      } else {\r\n        return acc;\r\n      }\r\n    }, 0);\r\n    //console.log(\"count\", count);\r\n    if (count === 0) {\r\n      setErrornoselect(true);\r\n      setTimeout(() => {\r\n        setErrornoselect(false);\r\n      }, 3000);\r\n      return null;\r\n    }\r\n\r\n    const period =\r\n      formatDate(input.fromdate) + \" - \" + formatDate(input.todate);\r\n    const payrundata =\r\n      input.fromdate.substring(0, 4) + \"-\" + input.fromdate.substring(5, 7);\r\n    setInput({\r\n      ...input,\r\n      period: period,\r\n      payrun: payrundata,\r\n      status: \"New\",\r\n    });\r\n    formatPayrun();\r\n    setPayslipPeriod(payrundata);\r\n    const isExist = payrunExists(payrundata);\r\n\r\n    if (isExist) {\r\n      //console.log(\"exist\");\r\n      setIsPayrunExist(true);\r\n      setIsSubmit(false);\r\n      setAlert(true);\r\n    } else {\r\n      //console.log(\"add\");\r\n      checkSelectedEmployees(period, payrundata);\r\n      add_Payrun(period, payrundata);\r\n      setIsPayrunExist(false);\r\n      setAlert(true);\r\n      setIsSubmit(true);\r\n      setLoadPaybatch(true);\r\n    }\r\n  };\r\n\r\n  const checkSelectedEmployees = (period, payrun) => {\r\n    //console.log(\"payrun\", payrun, period);\r\n    var exp = 0,\r\n      allows = 0,\r\n      tmpbasicsalary = 0,\r\n      tmptotalallows = 0,\r\n      tmptotalTAP = 0,\r\n      tmptotalSCP = 0,\r\n      //tmpsiteallows = 0,\r\n      //tmpexpsclaims = 0,\r\n      tmpnettpay = 0,\r\n      tmpcurrrate = 0,\r\n      tmpbasicsalarybnd = 0,\r\n      tmptotalallowsbnd = 0,\r\n      tmptotalTAPbnd = 0,\r\n      tmptotalSCPbnd = 0,\r\n      tmpsiteallowsbnd = 0,\r\n      tmpexpsclaimsbnd = 0,\r\n      tmpnettpaybnd = 0;\r\n\r\n    resetPayslipsData();\r\n    allemployees &&\r\n      allemployees.forEach((emp, index) => {\r\n        exp = 0;\r\n        allows = 0;\r\n        tmpbasicsalary = 0;\r\n        tmptotalallows = 0;\r\n        tmptotalTAP = 0;\r\n        tmptotalSCP = 0;\r\n        tmpnettpay = 0;\r\n        tmpcurrrate = 0;\r\n        tmpbasicsalarybnd = 0;\r\n        tmptotalallowsbnd = 0;\r\n        tmptotalTAPbnd = 0;\r\n        tmpsiteallowsbnd = 0;\r\n        tmpexpsclaimsbnd = 0;\r\n        tmptotalSCPbnd = 0;\r\n        tmpnettpaybnd = 0;\r\n\r\n        if (emp.tableData.checked) {\r\n          exp = 0;\r\n          if (unpaidexpenses) {\r\n            unpaidexpenses\r\n              .filter((r) => r.empid === emp.id)\r\n              .map((i) => {\r\n                updateExpense({ id: i.id, payrun: payrun });\r\n                return (exp = exp + i.amount);\r\n              });\r\n          }\r\n          allows = 0;\r\n          if (unpaiddailyallows) {\r\n            unpaiddailyallows\r\n              .filter((r) => r.empid === emp.id)\r\n              .map((i) => {\r\n                updateDailyAllowance({ id: i.id, payrun: payrun });\r\n                return (allows = allows + i.amount);\r\n              });\r\n          }\r\n\r\n          const {\r\n            id,\r\n            name,\r\n            bank_name,\r\n            bank_acno,\r\n            basic_salary,\r\n            salary_currency,\r\n            tap_acno,\r\n            scp_acno,\r\n            tap_checkbox,\r\n          } = emp;\r\n\r\n          tmpbasicsalary = basic_salary;\r\n\r\n          if (salary_currency && salary_currency !== \"BND\") {\r\n            const table = currency\r\n              .filter((r) => r.currency === salary_currency)\r\n              .map((rec) => {\r\n                return { ...rec };\r\n              });\r\n            tmpcurrrate = table[0].rate;\r\n          } else {\r\n            tmpcurrrate = 1;\r\n          }\r\n\r\n          //console.log(\"USD\", table, basic_salary, tmpbasicsalary);\r\n          //tmptotalallows = allows + exp;\r\n          tmptotalTAP = tap_checkbox ? Math.ceil(tmpbasicsalary * 0.05) : 0;\r\n          tmptotalSCP = tap_checkbox\r\n            ? Math.round((tmpbasicsalary + Number.EPSILON) * 0.035 * 100) / 100\r\n            : 0;\r\n          if (tmptotalSCP > 98) {\r\n            tmptotalSCP = 98;\r\n          }\r\n          tmpnettpay =\r\n            tmpbasicsalary +\r\n            allows +\r\n            exp +\r\n            tmptotalallows -\r\n            tmptotalTAP -\r\n            tmptotalSCP;\r\n\r\n          tmpbasicsalarybnd =\r\n            Math.round((basic_salary + Number.EPSILON) * tmpcurrrate * 100) /\r\n            100;\r\n\r\n          tmptotalTAPbnd =\r\n            Math.round((tmptotalTAP + Number.EPSILON) * tmpcurrrate * 100) /\r\n            100;\r\n          tmptotalSCPbnd =\r\n            Math.round((tmptotalSCP + Number.EPSILON) * tmpcurrrate * 100) /\r\n            100;\r\n          tmpnettpaybnd =\r\n            Math.round((tmpnettpay + Number.EPSILON) * tmpcurrrate * 100) / 100;\r\n          tmpsiteallowsbnd =\r\n            Math.round((allows + Number.EPSILON) * tmpcurrrate * 100) / 100;\r\n          tmpexpsclaimsbnd =\r\n            Math.round((exp + Number.EPSILON) * tmpcurrrate * 100) / 100;\r\n\r\n          tmpnettpaybnd =\r\n            tmpbasicsalarybnd +\r\n            tmpsiteallowsbnd +\r\n            tmpexpsclaimsbnd -\r\n            tmptotalTAPbnd -\r\n            tmptotalSCPbnd;\r\n\r\n          const data = {\r\n            name: name,\r\n            period: period,\r\n            pay_date: input.pay_date,\r\n            payrun: payrun,\r\n            bank_name: bank_name,\r\n            bank_acno: bank_acno,\r\n            salary_currency: salary_currency ? salary_currency : \"BND\",\r\n            currency_rate: tmpcurrrate,\r\n            tap_acno: tap_acno,\r\n            scp_acno: scp_acno,\r\n            tap_checkbox: tap_checkbox,\r\n            empid: id,\r\n            status: \"Pending\",\r\n            allows_type1: \"Site Allowances\",\r\n            allows_type1amt: allows,\r\n            allows_type2: \"Expenses Claims\",\r\n            allows_type2amt: exp,\r\n            allows_type3: \" \",\r\n            allows_type3amt: 0,\r\n            allows_type4: \" \",\r\n            allows_type4amt: 0,\r\n            allows_type5: \" \",\r\n            allows_type5amt: 0,\r\n            allows_type6: \" \",\r\n            allows_type6amt: 0,\r\n            allows_type7: \" \",\r\n            allows_type7amt: 0,\r\n            allows_type8: \" \",\r\n            allows_type8amt: 0,\r\n            deducts_type1: \" \",\r\n            deducts_type1amt: 0,\r\n            deducts_type2: \" \",\r\n            deducts_type2amt: 0,\r\n            deducts_type3: \" \",\r\n            deducts_type3amt: 0,\r\n            deducts_type4: \" \",\r\n            deducts_type4amt: 0,\r\n            deducts_type5: \" \",\r\n            deducts_type5amt: 0,\r\n            deducts_type6: \" \",\r\n            deducts_type6amt: 0,\r\n            deducts_type7: \" \",\r\n            deducts_type7amt: 0,\r\n            deducts_type8: \" \",\r\n            deducts_type8amt: 0,\r\n\r\n            wages: tmpbasicsalary,\r\n            tap_amount: tmptotalTAP,\r\n            scp_amount: tmptotalSCP,\r\n            total_allowances: tmptotalallows,\r\n            total_deductions: 0,\r\n            site_allows: allows,\r\n            expenses_claims: exp,\r\n            nett_pay: tmpnettpay,\r\n\r\n            wages_bnd: tmpbasicsalarybnd,\r\n            site_allows_bnd: tmpsiteallowsbnd,\r\n            expenses_claims_bnd: tmpexpsclaimsbnd,\r\n            total_allowances_bnd: tmptotalallowsbnd,\r\n            total_deductions_bnd: 0,\r\n            tap_amount_bnd: tmptotalTAPbnd,\r\n            scp_amount_bnd: tmptotalSCPbnd,\r\n            nett_pay_bnd: tmpnettpaybnd,\r\n          };\r\n          addPayslip({ ...data });\r\n        }\r\n      });\r\n  };\r\n\r\n  const handleNext = () => {\r\n    navigate(\"/payrunbatch\");\r\n  };\r\n\r\n  const add_Payrun = (period, payrun) => {\r\n    //update payrun\r\n    addPayrun({\r\n      pay_freq: input.payfreq,\r\n      from_date: input.fromdate,\r\n      to_date: input.todate,\r\n      pay_date: input.paydate,\r\n      period: period,\r\n      payrun: payrun,\r\n      status: \"Pending\",\r\n    });\r\n    getPayrun();\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadEmployees();\r\n    loadUnpaidExpenses();\r\n    loadUnpaidDailyAllows();\r\n    getPayrun();\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   loadUnpaidDailyAllows();\r\n  // }, []);\r\n\r\n  // useEffect(() => {\r\n  //   console.log(\"useEffect here\", input.payrun);\r\n\r\n  //   // getSingleBatchPayslip(input.payrun);\r\n  //   if (singlebatchpayslip) {\r\n  //     checkSelectedEmployees(input.period, input.payrun);\r\n  //     setLoadPaybatch(false);\r\n  //   }\r\n  // }, [loadPaybatch]);\r\n\r\n  //   useEffect(() => {\r\n  //     if (input.period && input.payrun) {\r\n  //       //add_Payrun();\r\n\r\n  //       setAlert(true);\r\n  //     }\r\n  //   }, [input]);\r\n\r\n  return (\r\n    <Paper className={fixedHeightPaper} style={{ backgroundColor: \"659dbd\" }}>\r\n      <section className={classes.section}>\r\n        <Grid\r\n          direction=\"row\"\r\n          container\r\n          spacing={1}\r\n          // style={{ border: \"1px solid white\" }}\r\n        >\r\n          <Grid\r\n            container\r\n            item\r\n            sm={3}\r\n            style={{ border: \"1px solid black\" }}\r\n            direction=\"column\"\r\n            align=\"left\"\r\n          >\r\n            <article className={classes.jobinfo}>\r\n              <h2>Pay Run</h2>\r\n              <form onSubmit={handlePayrunSubmit}>\r\n                <div>\r\n                  {/* <InputLabel\r\n                    htmlFor=\"deduct-customized-native-simple\"\r\n                    className={classes.formLabel}\r\n                  >\r\n                    Copy From\r\n                  </InputLabel>\r\n                  <NativeSelect\r\n                    name=\"copyfrom\"\r\n                    value={\"New\"}\r\n                    style={{\r\n                      padding: 4,\r\n                      marginLeft: 5,\r\n                      width: \"100%\",\r\n                      textAlign: \"left\",\r\n                    }}\r\n                    onChange={(e) => handleChange(e)}\r\n                  >\r\n                    <option value=\"\">New</option>\r\n                    {payrun.map((row) => {\r\n                      return (\r\n                        <option key={row.id} value={row.payrun}>\r\n                          {row.payrun}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                  </NativeSelect> */}\r\n                </div>\r\n                <div>\r\n                  <TextField\r\n                    label=\"Pay Frequency\"\r\n                    variant=\"filled\"\r\n                    required\r\n                    defaultValue=\"Monthly\"\r\n                    style={{ width: \"100%\" }}\r\n                    name=\"payfreq\"\r\n                    value={input.payfreq}\r\n                    onChange={(e) => handleChange(e)}\r\n                    select\r\n                  >\r\n                    {/* <MenuItem value=\"Weekly\">Weekly</MenuItem> */}\r\n                    <option value=\"Monthly\">Monthly</option>\r\n                  </TextField>\r\n                </div>\r\n                {/* <div>\r\n                  <InputLabel\r\n                    htmlFor=\"deduct-customized-native-simple\"\r\n                    className={classes.formLabel}\r\n                  >\r\n                    Month\r\n                  </InputLabel>\r\n                  <NativeSelect\r\n                    name=\"selectmonth\"\r\n                    defaultValue={longMonth}\r\n                    // value={input.selectmonth}\r\n                    style={{\r\n                      padding: 4,\r\n                      marginLeft: 5,\r\n                      width: \"100%\",\r\n                      textAlign: \"left\",\r\n                    }}\r\n                    onChange={(e) => handleChange(e)}\r\n                  >\r\n                    {selectmonths.map((row, i) => {\r\n                      return (\r\n                        <option key={i} value={row.mth}>\r\n                          {row.mth}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                  </NativeSelect>\r\n                </div> */}\r\n                <div>\r\n                  <TextField\r\n                    label=\"From Date\"\r\n                    variant=\"filled\"\r\n                    name=\"fromdate\"\r\n                    type=\"date\"\r\n                    value={input.fromdate}\r\n                    required\r\n                    style={{ width: \"100%\" }}\r\n                    onChange={(e) => handleChange(e)}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <TextField\r\n                    label=\"To Date\"\r\n                    variant=\"filled\"\r\n                    type=\"date\"\r\n                    name=\"todate\"\r\n                    value={input.todate}\r\n                    required\r\n                    onChange={(e) => handleChange(e)}\r\n                    style={{ width: \"100%\" }}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <TextField\r\n                    label=\"Payment Date\"\r\n                    variant=\"filled\"\r\n                    type=\"date\"\r\n                    name=\"paydate\"\r\n                    value={input.paydate}\r\n                    required\r\n                    style={{ width: \"100%\" }}\r\n                    onChange={(e) => handleChange(e)}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <div>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      className={classes.button}\r\n                      onClick={onOpen}\r\n                      disabled={isSubmit}\r\n                    >\r\n                      Currency Exchange Table\r\n                    </Button>\r\n                  </div>\r\n                  <div>\r\n                    <Button\r\n                      type=\"submit\"\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      className={classes.button}\r\n                    >\r\n                      Submit <Icon className={classes.rightIcon}>send</Icon>\r\n                    </Button>\r\n\r\n                    {alert && !isPayrunExist && (\r\n                      <Button\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.button}\r\n                        onClick={handleNext}\r\n                      >\r\n                        Next <Icon className={classes.rightIcon}>send</Icon>\r\n                      </Button>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  {alert && !isPayrunExist && !singlebatch_payslip_loading && (\r\n                    <h3>New Payrun being added!</h3>\r\n                  )}\r\n                  {alert && isPayrunExist && (\r\n                    <h3>This payrun already existed!</h3>\r\n                  )}\r\n                </div>\r\n                <div>\r\n                  {error && <h3>This Payrun period already existed!</h3>}\r\n                  {errornoselect && <h3>You must select employees!</h3>}\r\n                </div>\r\n              </form>\r\n            </article>\r\n          </Grid>\r\n          <Divider\r\n            orientation=\"vertical\"\r\n            flexItem\r\n            style={{ background: \"white\" }}\r\n          />\r\n          <Grid\r\n            container\r\n            item\r\n            sm={3}\r\n            style={{ border: \"1px solid black\" }}\r\n            align=\"right\"\r\n          >\r\n            <Box h=\"500\" w=\"full\" overflow=\"scroll\">\r\n              <MaterialTable\r\n                columns={columns}\r\n                //data={employees.filter((r) => !r.hasresigned && !r.nonpayroll)}\r\n                data={allemployees}\r\n                title=\"Employee Listing\"\r\n                options={{\r\n                  filtering: false,\r\n                  search: false,\r\n                  toolbar: true,\r\n                  selection: true,\r\n                  paging: false,\r\n                  pageSize: 10,\r\n                  headerStyle: {\r\n                    backgroundColor: \"#90CDF4\",\r\n                    color: \"primary\",\r\n                  },\r\n                  showTitle: true,\r\n                  // selectionProps: rowData => {\r\n                  //   rowData.tableData.checked = true\r\n                  // }\r\n                }}\r\n              />\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n        <Modal isOpen={isOpen} onClose={onClose}>\r\n          <ModalOverlay />\r\n          <ModalContent>\r\n            <ModalHeader>Currency Table</ModalHeader>\r\n            <ModalCloseButton />\r\n            <ModalBody>\r\n              <Box>\r\n                <UpdateCurrency />\r\n                {/* <Stack spacing={4}>\r\n                  <InputGroup>\r\n                    <InputLeftAddon children=\"USD\" />\r\n                    <Input type=\"text\" placeholder=\"USD Rate\" />\r\n                  </InputGroup>\r\n                  <InputGroup>\r\n                    <InputLeftAddon children=\"MYR\" />\r\n                    <Input type=\"text\" placeholder=\"MYR Rate\" />\r\n                  </InputGroup>\r\n                </Stack> */}\r\n              </Box>\r\n            </ModalBody>\r\n\r\n            <ModalFooter>\r\n              <Button colorScheme=\"blue\" mr={3} onClick={onClose}>\r\n                Close\r\n              </Button>\r\n            </ModalFooter>\r\n          </ModalContent>\r\n        </Modal>\r\n      </section>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  container: {\r\n    margin: 0,\r\n    padding: 0,\r\n    width: \"80vw\",\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"repeat(auto-fill,250px)\",\r\n    gridAutoRows: \"10px\",\r\n    position: \"absolute\",\r\n    left: \"50%\",\r\n    transform: \"translateX(-50%)\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"primary\",\r\n  },\r\n  fixedHeight: {\r\n    height: 800,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(10),\r\n    // display: \"flex\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid\",\r\n    width: \"100%\",\r\n    color: \"primary\",\r\n    bcakgroundColor: \"black\",\r\n  },\r\n  card: {\r\n    backgroundColor: \"black\",\r\n  },\r\n  section: {\r\n    width: \"95vw\",\r\n    margin: \"5rem auto\",\r\n    maxWidth: \"var(--max-width)\",\r\n  },\r\n  underline: {\r\n    width: \"5rem\",\r\n    height: \"0.25rem\",\r\n    marginBottom: \"1.25rem\",\r\n    background: \"var(--clr-primary-5)\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n  },\r\n  title: {\r\n    marginbottom: \"4rem\",\r\n    textAlign: \"center\",\r\n  },\r\n  jobscenter: {\r\n    width: \"80vw\",\r\n    margin: \"0 auto\",\r\n    maxWidth: \"var(--max-width)\",\r\n    flexDirection: \"row\",\r\n  },\r\n  btncontainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    marginBottom: \"4rem\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  jobbtn: {\r\n    background: \"transparent\",\r\n    borderColor: \"transparent\",\r\n    textTransform: \"capitalize\",\r\n    fontSize: \"1.25rem\",\r\n    letterSpacing: \"var(--spacing)\",\r\n    margin: \"0 0.5rem\",\r\n    transition: \"var(--transition)\",\r\n    cursor: \"pointer\",\r\n    padding: \"0.25rem 0\",\r\n    lineHeight: \"1\",\r\n    outlineColor: \"var(--clr-primary-10)\",\r\n    \"&:hover\": {\r\n      color: \"var(--clr-primary-5)\",\r\n      boxShadow: \"0 2px var(--clr-primary-5)\",\r\n    },\r\n  },\r\n  activebtn: {\r\n    color: \"var(--clr-primary-5)\",\r\n    boxShadow: \"0 2px var(--clr-primary-5)\",\r\n  },\r\n  jobinfo: {\r\n    fontWeight: \"400\",\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  formLabel: {\r\n    fontSize: 12,\r\n    textAlign: \"left\",\r\n    marginLeft: 8,\r\n    marginTop: 5,\r\n  },\r\n}));\r\n\r\nexport default Payrun;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
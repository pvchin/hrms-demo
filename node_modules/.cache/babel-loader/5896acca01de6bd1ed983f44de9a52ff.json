{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-demo\\\\src\\\\components\\\\PayslipTableViewManager.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useMemo } from \"react\";\nimport MaterialTable from \"material-table\";\nimport { makeStyles } from \"@material-ui/core/styles\"; //import {\n//payPeriodState,\n//payPeriodEndMonthState,\n//payPeriodEmpIdState,\n//} from \"./data/atomdata\";\n\nimport { usePayslipsContext } from \"../context/payslips_context\";\nimport { loginLevelState } from \"./data/atomdata\";\nimport ApprovalManagerScreen from \"./ApprovalManagerScreen\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FILTERSTRING = \"Verified\";\nexport default function PayslipTableVIew() {\n  _s();\n\n  //et history = useHistory();\n  const classes = useStyles();\n  const {\n    batchpayrun,\n    getBatchPayrun //batchpayrun_loading,\n    //batchpayrun_error,\n    //loadPendingPayslips,\n\n  } = usePayslipsContext(); //const { loadEmployees, employees } = useEmployeesContext();\n\n  const columns = useMemo(() => [{\n    title: \"Batch\",\n    field: \"payrun\",\n    editable: \"never\"\n  }, // { title: \"Period\", field: \"period\", editable: \"never\" },\n  // {\n  //   title: \"PayDate\",\n  //   field: \"pay_date\",\n  //   type: \"date\",\n  //   dateSetting: { locale: \"en-GB\" },\n  //   editable: \"never\",\n  // },\n  {\n    title: \"Wages\",\n    field: \"totalwages\",\n    type: \"currency\",\n    editable: \"never\"\n  }, {\n    title: \"TAP Amount\",\n    field: \"totaltap\",\n    type: \"currency\",\n    editable: \"never\"\n  }, {\n    title: \"SCP Amount\",\n    field: \"totalscp\",\n    type: \"currency\",\n    editable: \"never\"\n  }, {\n    title: \"Site Allowances\",\n    field: \"totalsitesallows\",\n    type: \"currency\",\n    editable: \"never\"\n  }, {\n    title: \"Expenses Claims\",\n    field: \"totalexpensesclaims\",\n    type: \"currency\",\n    editable: \"never\"\n  }, {\n    title: \"Allowances\",\n    field: \"totalallows\",\n    type: \"currency\",\n    editable: \"never\"\n  }, {\n    title: \"Deductions\",\n    field: \"totaldeducts\",\n    type: \"currency\",\n    editable: \"never\"\n  }, {\n    title: \"Payroll\",\n    field: \"totalpayroll\",\n    type: \"currency\",\n    editable: \"never\"\n  }, // { title: \"Bank Name\", field: \"bank_name\" },\n  // { title: \"Bank AC No\", field: \"bank_accno\" },\n  {\n    title: \"Status\",\n    field: \"status\",\n    editable: \"never\"\n  }], []);\n  useEffect(() => {\n    getBatchPayrun(FILTERSTRING);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: \"100%\",\n        paddingTop: \"5px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n        columns: columns,\n        data: batchpayrun,\n        title: \"Payslips\",\n        options: {\n          filtering: false,\n          search: false,\n          toolbar: false,\n          headerStyle: {\n            backgroundColor: \"#90CDF4\",\n            color: \"black\"\n          },\n          showTitle: false\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PayslipTableVIew, \"JMGVBapguvXMP1XSLuakF9H2dLk=\", false, function () {\n  return [useStyles, usePayslipsContext];\n});\n\n_c = PayslipTableVIew;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: 0\n  }\n}));\n\nvar _c;\n\n$RefreshReg$(_c, \"PayslipTableVIew\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-demo/src/components/PayslipTableViewManager.js"],"names":["React","useEffect","useMemo","MaterialTable","makeStyles","usePayslipsContext","loginLevelState","ApprovalManagerScreen","FILTERSTRING","PayslipTableVIew","classes","useStyles","batchpayrun","getBatchPayrun","columns","title","field","editable","type","root","maxWidth","paddingTop","filtering","search","toolbar","headerStyle","backgroundColor","color","showTitle","theme","padding"],"mappings":"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","sourcesContent":["import React, { useEffect, useMemo } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n//import {\r\n//payPeriodState,\r\n//payPeriodEndMonthState,\r\n//payPeriodEmpIdState,\r\n//} from \"./data/atomdata\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport ApprovalManagerScreen from \"./ApprovalManagerScreen\";\r\n\r\nconst FILTERSTRING = \"Verified\";\r\n\r\nexport default function PayslipTableVIew() {\r\n  //et history = useHistory();\r\n  const classes = useStyles();\r\n  const {\r\n    batchpayrun,\r\n    getBatchPayrun,\r\n    //batchpayrun_loading,\r\n    //batchpayrun_error,\r\n    //loadPendingPayslips,\r\n  } = usePayslipsContext();\r\n  //const { loadEmployees, employees } = useEmployeesContext();\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        title: \"Batch\",\r\n        field: \"payrun\",\r\n        editable: \"never\",\r\n      },\r\n      // { title: \"Period\", field: \"period\", editable: \"never\" },\r\n      // {\r\n      //   title: \"PayDate\",\r\n      //   field: \"pay_date\",\r\n      //   type: \"date\",\r\n      //   dateSetting: { locale: \"en-GB\" },\r\n      //   editable: \"never\",\r\n      // },\r\n      {\r\n        title: \"Wages\",\r\n        field: \"totalwages\",\r\n        type: \"currency\",\r\n        editable: \"never\",\r\n      },\r\n      {\r\n        title: \"TAP Amount\",\r\n        field: \"totaltap\",\r\n        type: \"currency\",\r\n        editable: \"never\",\r\n      },\r\n      {\r\n        title: \"SCP Amount\",\r\n        field: \"totalscp\",\r\n        type: \"currency\",\r\n        editable: \"never\",\r\n      },\r\n      {\r\n        title: \"Site Allowances\",\r\n        field: \"totalsitesallows\",\r\n        type: \"currency\",\r\n        editable: \"never\",\r\n      },\r\n      {\r\n        title: \"Expenses Claims\",\r\n        field: \"totalexpensesclaims\",\r\n        type: \"currency\",\r\n        editable: \"never\",\r\n      },\r\n      {\r\n        title: \"Allowances\",\r\n        field: \"totalallows\",\r\n        type: \"currency\",\r\n        editable: \"never\",\r\n      },\r\n      {\r\n        title: \"Deductions\",\r\n        field: \"totaldeducts\",\r\n        type: \"currency\",\r\n        editable: \"never\",\r\n      },\r\n      {\r\n        title: \"Payroll\",\r\n        field: \"totalpayroll\",\r\n        type: \"currency\",\r\n        editable: \"never\",\r\n      },\r\n      // { title: \"Bank Name\", field: \"bank_name\" },\r\n      // { title: \"Bank AC No\", field: \"bank_accno\" },\r\n      { title: \"Status\", field: \"status\", editable: \"never\" },\r\n    ],\r\n    []\r\n  );\r\n\r\n  useEffect(() => {\r\n    getBatchPayrun(FILTERSTRING);\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={batchpayrun}\r\n          title=\"Payslips\"\r\n       \r\n          options={{\r\n            filtering: false,\r\n            search: false,\r\n            toolbar: false,\r\n            headerStyle: {\r\n              backgroundColor: \"#90CDF4\",\r\n              color: \"black\",\r\n            },\r\n            showTitle: false,\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n"]},"metadata":{},"sourceType":"module"}
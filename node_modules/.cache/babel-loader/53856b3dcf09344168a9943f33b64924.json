{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useCallback } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { hocwhat_url } from \"../../utils/constants\";\nimport { filterByEmpId } from \"./utils\";\nimport axios from \"axios\";\nimport { queryKeys } from \"../react-query/constants\";\nasync function getHocwhat(id) {\n  const {\n    data\n  } = await axios.get(`${hocwhat_url}?fv=${id}`);\n  return data;\n}\nexport function useHocwhat(empid) {\n  _s();\n  const [filter, setFilter] = useState(\"all\");\n  const [hocwhatId, setHocwhatId] = useState(\"\");\n  const selectFn = useCallback(unfiltered => filterByEmpId(unfiltered, filter), [filter]);\n  const fallback = [];\n  const {\n    data: hocwhat = fallback\n  } = useQuery([queryKeys.hocwhat, hocwhatId], () => getHocwhat(hocwhatId), {\n    select: filter !== \"all\" ? selectFn : undefined\n  });\n  return {\n    hocwhat,\n    filter,\n    setFilter,\n    setHocwhatId\n  };\n}\n_s(useHocwhat, \"+DWJHw41qMhiGJy7xreEefHeNHA=\", false, function () {\n  return [useQuery];\n});","map":{"version":3,"names":["useState","useCallback","useQuery","hocwhat_url","filterByEmpId","axios","queryKeys","getHocwhat","id","data","get","useHocwhat","empid","filter","setFilter","hocwhatId","setHocwhatId","selectFn","unfiltered","fallback","hocwhat","select","undefined"],"sources":["D:/react-myprojects/hrms-demo/src/components/hocwhat/useHocwhat.js"],"sourcesContent":["import { useState, useCallback } from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport { hocwhat_url } from \"../../utils/constants\";\r\nimport { filterByEmpId } from \"./utils\";\r\n\r\nimport axios from \"axios\";\r\nimport { queryKeys } from \"../react-query/constants\";\r\n\r\nasync function getHocwhat(id) {\r\n  const { data } = await axios.get(`${hocwhat_url}?fv=${id}`);\r\n  return data;\r\n}\r\n\r\nexport function useHocwhat(empid) {\r\n  const [filter, setFilter] = useState(\"all\");\r\n  const [hocwhatId, setHocwhatId] = useState(\"\");\r\n\r\n  const selectFn = useCallback(\r\n    (unfiltered) => filterByEmpId(unfiltered, filter),\r\n    [filter]\r\n  );\r\n\r\n  const fallback = [];\r\n  const { data: hocwhat = fallback } = useQuery(\r\n    [queryKeys.hocwhat, hocwhatId ],\r\n    () => getHocwhat(hocwhatId),\r\n    {\r\n      select: filter !== \"all\" ? selectFn : undefined,\r\n    }\r\n  );\r\n\r\n  return { hocwhat, filter, setFilter, setHocwhatId };\r\n}\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAC7C,SAASC,QAAQ,QAAQ,aAAa;AACtC,SAASC,WAAW,QAAQ,uBAAuB;AACnD,SAASC,aAAa,QAAQ,SAAS;AAEvC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,0BAA0B;AAEpD,eAAeC,UAAU,CAACC,EAAE,EAAE;EAC5B,MAAM;IAAEC;EAAK,CAAC,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAE,GAAEP,WAAY,OAAMK,EAAG,EAAC,CAAC;EAC3D,OAAOC,IAAI;AACb;AAEA,OAAO,SAASE,UAAU,CAACC,KAAK,EAAE;EAAA;EAChC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMiB,QAAQ,GAAGhB,WAAW,CACzBiB,UAAU,IAAKd,aAAa,CAACc,UAAU,EAAEL,MAAM,CAAC,EACjD,CAACA,MAAM,CAAC,CACT;EAED,MAAMM,QAAQ,GAAG,EAAE;EACnB,MAAM;IAAEV,IAAI,EAAEW,OAAO,GAAGD;EAAS,CAAC,GAAGjB,QAAQ,CAC3C,CAACI,SAAS,CAACc,OAAO,EAAEL,SAAS,CAAE,EAC/B,MAAMR,UAAU,CAACQ,SAAS,CAAC,EAC3B;IACEM,MAAM,EAAER,MAAM,KAAK,KAAK,GAAGI,QAAQ,GAAGK;EACxC,CAAC,CACF;EAED,OAAO;IAAEF,OAAO;IAAEP,MAAM;IAAEC,SAAS;IAAEE;EAAa,CAAC;AACrD;AAAC,GAnBeL,UAAU;EAAA,QAUaT,QAAQ;AAAA"},"metadata":{},"sourceType":"module"}
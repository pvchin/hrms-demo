{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-demo\\\\src\\\\context\\\\tables_context.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useContext, useReducer } from \"react\";\nimport reducer from \"../reducers/tables_reducer\";\nimport { allowances_url } from \"../utils/constants\";\nimport { deductions_url } from \"../utils/constants\";\nimport { departments_url } from \"../utils/constants\";\nimport { designations_url } from \"../utils/constants\";\nimport { family_url } from \"../utils/constants\";\nimport { educations_url } from \"../utils/constants\";\nimport { experiences_url } from \"../utils/constants\";\nimport { payitems_url } from \"../utils/constants\";\nimport { GET_PAYITEMS_BEGIN, GET_PAYITEMS_SUCCESS, GET_PAYITEMS_ERROR, ADD_PAYITEM_BEGIN, ADD_PAYITEM_SUCCESS, ADD_PAYITEM_ERROR, UPDATE_PAYITEM_BEGIN, UPDATE_PAYITEM_SUCCESS, UPDATE_PAYITEM_ERROR, DELETE_PAYITEM_BEGIN, DELETE_PAYITEM_SUCCESS, DELETE_PAYITEM_ERROR, GET_ALLOWANCES_BEGIN, GET_ALLOWANCES_SUCCESS, GET_ALLOWANCES_ERROR, ADD_ALLOWANCE_BEGIN, ADD_ALLOWANCE_SUCCESS, ADD_ALLOWANCE_ERROR, UPDATE_ALLOWANCE_BEGIN, UPDATE_ALLOWANCE_SUCCESS, UPDATE_ALLOWANCE_ERROR, DELETE_ALLOWANCE_BEGIN, DELETE_ALLOWANCE_SUCCESS, DELETE_ALLOWANCE_ERROR, GET_DEDUCTIONS_BEGIN, GET_DEDUCTIONS_SUCCESS, GET_DEDUCTIONS_ERROR, ADD_DEDUCTION_BEGIN, ADD_DEDUCTION_SUCCESS, ADD_DEDUCTION_ERROR, UPDATE_DEDUCTION_BEGIN, UPDATE_DEDUCTION_SUCCESS, UPDATE_DEDUCTION_ERROR, DELETE_DEDUCTION_BEGIN, DELETE_DEDUCTION_SUCCESS, DELETE_DEDUCTION_ERROR, GET_DEPARTMENTS_BEGIN, GET_DEPARTMENTS_SUCCESS, GET_DEPARTMENTS_ERROR, ADD_DEPARTMENT_BEGIN, ADD_DEPARTMENT_SUCCESS, ADD_DEPARTMENT_ERROR, UPDATE_DEPARTMENT_BEGIN, UPDATE_DEPARTMENT_SUCCESS, UPDATE_DEPARTMENT_ERROR, DELETE_DEPARTMENT_BEGIN, DELETE_DEPARTMENT_SUCCESS, DELETE_DEPARTMENT_ERROR, GET_DESIGNATIONS_BEGIN, GET_DESIGNATIONS_SUCCESS, GET_DESIGNATIONS_ERROR, ADD_DESIGNATION_BEGIN, ADD_DESIGNATION_SUCCESS, ADD_DESIGNATION_ERROR, UPDATE_DESIGNATION_BEGIN, UPDATE_DESIGNATION_SUCCESS, UPDATE_DESIGNATION_ERROR, DELETE_DESIGNATION_BEGIN, DELETE_DESIGNATION_SUCCESS, DELETE_DESIGNATION_ERROR, GET_FAMILY_BEGIN, GET_FAMILY_SUCCESS, GET_FAMILY_ERROR, ADD_FAMILY_BEGIN, ADD_FAMILY_SUCCESS, ADD_FAMILY_ERROR, UPDATE_FAMILY_BEGIN, UPDATE_FAMILY_SUCCESS, UPDATE_FAMILY_ERROR, DELETE_FAMILY_BEGIN, DELETE_FAMILY_SUCCESS, DELETE_FAMILY_ERROR, LOAD_SINGLEBATCH_FAMILY_BEGIN, LOAD_SINGLEBATCH_FAMILY_SUCCESS, LOAD_SINGLEBATCH_FAMILY_ERROR,\n// education\nGET_EDUCATION_BEGIN, GET_EDUCATION_SUCCESS, GET_EDUCATION_ERROR, ADD_EDUCATION_BEGIN, ADD_EDUCATION_SUCCESS, ADD_EDUCATION_ERROR, UPDATE_EDUCATION_BEGIN, UPDATE_EDUCATION_SUCCESS, UPDATE_EDUCATION_ERROR, DELETE_EDUCATION_BEGIN, DELETE_EDUCATION_SUCCESS, DELETE_EDUCATION_ERROR, LOAD_SINGLEBATCH_EDUCATION_BEGIN, LOAD_SINGLEBATCH_EDUCATION_SUCCESS, LOAD_SINGLEBATCH_EDUCATION_ERROR,\n// experience\nGET_EXPERIENCE_BEGIN, GET_EXPERIENCE_SUCCESS, GET_EXPERIENCE_ERROR, ADD_EXPERIENCE_BEGIN, ADD_EXPERIENCE_SUCCESS, ADD_EXPERIENCE_ERROR, UPDATE_EXPERIENCE_BEGIN, UPDATE_EXPERIENCE_SUCCESS, UPDATE_EXPERIENCE_ERROR, DELETE_EXPERIENCE_BEGIN, DELETE_EXPERIENCE_SUCCESS, DELETE_EXPERIENCE_ERROR, LOAD_SINGLEBATCH_EXPERIENCE_BEGIN, LOAD_SINGLEBATCH_EXPERIENCE_SUCCESS, LOAD_SINGLEBATCH_EXPERIENCE_ERROR,\n// reset\nRESET_TABLES } from \"../actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  payitems: [],\n  payitems_loading: false,\n  payitems_error: false,\n  allowances: [],\n  allowances_loading: false,\n  allowances_error: false,\n  deductions: [],\n  deductions_loading: false,\n  deductions_error: false,\n  departments: [],\n  departments_loading: false,\n  departments_error: false,\n  designatons: [],\n  designations_loading: false,\n  designations_error: false,\n  family: [],\n  family_loading: false,\n  family_error: false,\n  singlebatch_family_loading: false,\n  singlebatch_family_error: false,\n  singlebatchfamily: {},\n  single_family: {},\n  education: [],\n  education_loading: false,\n  education_error: false,\n  singlebatch_education_loading: false,\n  singlebatch_education_error: false,\n  singlebatcheducation: {},\n  experience: [],\n  experience_loading: false,\n  experience_error: false,\n  singlebatch_experience_loading: false,\n  singlebatch_experience_error: false,\n  singlebatchexperience: {}\n};\nconst TablesContext = /*#__PURE__*/React.createContext();\nexport const TablesProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  // payitems\n  const loadPayitems = async () => {\n    dispatch({\n      type: GET_PAYITEMS_BEGIN\n    });\n    try {\n      // const res = await fetch(\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\n      // );\n      const res = await fetch(payitems_url);\n      //const { data } = await axios.get(employees_url);\n      //const employees = data;\n      const payitems = await res.json();\n      dispatch({\n        type: GET_PAYITEMS_SUCCESS,\n        payload: payitems\n      });\n    } catch (error) {\n      dispatch({\n        type: GET_PAYITEMS_ERROR\n      });\n    }\n  };\n  const addPayitem = async data => {\n    //const { id, name } = data;\n    //\n    dispatch({\n      type: ADD_PAYITEM_BEGIN\n    });\n    try {\n      await fetch(payitems_url, {\n        method: \"POST\",\n        body: JSON.stringify({\n          ...data\n        })\n      });\n      dispatch({\n        type: ADD_PAYITEM_SUCCESS\n      });\n    } catch (err) {\n      dispatch({\n        type: ADD_PAYITEM_ERROR\n      });\n    }\n  };\n  const updatePayitem = async data => {\n    const {\n      id,\n      ...fields\n    } = data;\n    dispatch({\n      type: UPDATE_PAYITEM_BEGIN\n    });\n    try {\n      await fetch(payitems_url, {\n        method: \"PUT\",\n        body: JSON.stringify({\n          id,\n          ...fields\n        })\n      });\n      dispatch({\n        type: UPDATE_PAYITEM_SUCCESS\n      });\n    } catch (error) {\n      dispatch({\n        type: UPDATE_PAYITEM_ERROR\n      });\n    }\n  };\n  const deletePayitem = async id => {\n    dispatch({\n      type: DELETE_PAYITEM_BEGIN\n    });\n    try {\n      await fetch(payitems_url, {\n        method: \"DELETE\",\n        body: JSON.stringify({\n          id: id\n        })\n      });\n      dispatch({\n        type: DELETE_PAYITEM_SUCCESS\n      });\n    } catch (err) {\n      dispatch({\n        type: DELETE_PAYITEM_ERROR\n      });\n    }\n  };\n\n  // Allowances\n  const loadAllowances = async () => {\n    dispatch({\n      type: GET_ALLOWANCES_BEGIN\n    });\n    try {\n      // const res = await fetch(\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\n      // );\n      const res = await fetch(allowances_url);\n      //const { data } = await axios.get(employees_url);\n      //const employees = data;\n      const allowances = await res.json();\n      dispatch({\n        type: GET_ALLOWANCES_SUCCESS,\n        payload: allowances\n      });\n    } catch (error) {\n      dispatch({\n        type: GET_ALLOWANCES_ERROR\n      });\n    }\n  };\n  const addAllowance = async data => {\n    //const { id, name } = data;\n    //\n    dispatch({\n      type: ADD_ALLOWANCE_BEGIN\n    });\n    try {\n      await fetch(allowances_url, {\n        method: \"POST\",\n        body: JSON.stringify({\n          ...data\n        })\n      });\n      dispatch({\n        type: ADD_ALLOWANCE_SUCCESS\n      });\n    } catch (err) {\n      dispatch({\n        type: ADD_ALLOWANCE_ERROR\n      });\n    }\n  };\n  const updateAllowance = async data => {\n    const {\n      id,\n      ...fields\n    } = data;\n    dispatch({\n      type: UPDATE_ALLOWANCE_BEGIN\n    });\n    try {\n      await fetch(allowances_url, {\n        method: \"PUT\",\n        body: JSON.stringify({\n          id,\n          ...fields\n        })\n      });\n      dispatch({\n        type: UPDATE_ALLOWANCE_SUCCESS\n      });\n    } catch (error) {\n      dispatch({\n        type: UPDATE_ALLOWANCE_ERROR\n      });\n    }\n  };\n  const deleteAllowance = async id => {\n    dispatch({\n      type: DELETE_ALLOWANCE_BEGIN\n    });\n    try {\n      await fetch(allowances_url, {\n        method: \"DELETE\",\n        body: JSON.stringify({\n          id: id\n        })\n      });\n      dispatch({\n        type: DELETE_ALLOWANCE_SUCCESS\n      });\n      //loadEmployees();\n    } catch (err) {\n      dispatch({\n        type: DELETE_ALLOWANCE_ERROR\n      });\n    }\n  };\n\n  // Deductions\n  const loadDeductions = async () => {\n    dispatch({\n      type: GET_DEDUCTIONS_BEGIN\n    });\n    try {\n      // const res = await fetch(\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\n      // );\n      const res = await fetch(deductions_url);\n      //const { data } = await axios.get(employees_url);\n      //const employees = data;\n      const deductions = await res.json();\n      dispatch({\n        type: GET_DEDUCTIONS_SUCCESS,\n        payload: deductions\n      });\n    } catch (error) {\n      dispatch({\n        type: GET_DEDUCTIONS_ERROR\n      });\n    }\n  };\n  const addDeduction = async data => {\n    //const { id, name } = data;\n    //\n    dispatch({\n      type: ADD_DEDUCTION_BEGIN\n    });\n    try {\n      await fetch(deductions_url, {\n        method: \"POST\",\n        body: JSON.stringify({\n          ...data\n        })\n      });\n      dispatch({\n        type: ADD_DEDUCTION_SUCCESS\n      });\n    } catch (err) {\n      dispatch({\n        type: ADD_DEDUCTION_ERROR\n      });\n    }\n  };\n  const updateDeduction = async data => {\n    const {\n      id,\n      ...fields\n    } = data;\n    dispatch({\n      type: UPDATE_DEDUCTION_BEGIN\n    });\n    try {\n      await fetch(deductions_url, {\n        method: \"PUT\",\n        body: JSON.stringify({\n          id,\n          ...fields\n        })\n      });\n      dispatch({\n        type: UPDATE_DEDUCTION_SUCCESS\n      });\n    } catch (error) {\n      dispatch({\n        type: UPDATE_DEDUCTION_ERROR\n      });\n    }\n  };\n  const deleteDeduction = async id => {\n    dispatch({\n      type: DELETE_DEDUCTION_BEGIN\n    });\n    try {\n      await fetch(deductions_url, {\n        method: \"DELETE\",\n        body: JSON.stringify({\n          id: id\n        })\n      });\n      dispatch({\n        type: DELETE_DEDUCTION_SUCCESS\n      });\n      //loadEmployees();\n    } catch (err) {\n      dispatch({\n        type: DELETE_DEDUCTION_ERROR\n      });\n    }\n  };\n\n  // Departments\n  const loadDepartments = async () => {\n    dispatch({\n      type: GET_DEPARTMENTS_BEGIN\n    });\n    try {\n      // const res = await fetch(\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\n      // );\n      const res = await fetch(departments_url);\n      //const { data } = await axios.get(employees_url);\n      //const employees = data;\n      const departments = await res.json();\n      dispatch({\n        type: GET_DEPARTMENTS_SUCCESS,\n        payload: departments\n      });\n    } catch (error) {\n      dispatch({\n        type: GET_DEPARTMENTS_ERROR\n      });\n    }\n  };\n  const addDepartment = async data => {\n    //const { id, name } = data;\n    //\n    dispatch({\n      type: ADD_DEPARTMENT_BEGIN\n    });\n    try {\n      await fetch(departments_url, {\n        method: \"POST\",\n        body: JSON.stringify({\n          ...data\n        })\n      });\n      dispatch({\n        type: ADD_DEPARTMENT_SUCCESS\n      });\n    } catch (err) {\n      dispatch({\n        type: ADD_DEPARTMENT_ERROR\n      });\n    }\n  };\n  const updateDepartment = async data => {\n    const {\n      id,\n      ...fields\n    } = data;\n    dispatch({\n      type: UPDATE_DEPARTMENT_BEGIN\n    });\n    try {\n      await fetch(departments_url, {\n        method: \"PUT\",\n        body: JSON.stringify({\n          id,\n          ...fields\n        })\n      });\n      dispatch({\n        type: UPDATE_DEPARTMENT_SUCCESS\n      });\n    } catch (error) {\n      dispatch({\n        type: UPDATE_DEPARTMENT_ERROR\n      });\n    }\n  };\n  const deleteDepartment = async id => {\n    dispatch({\n      type: DELETE_DEPARTMENT_BEGIN\n    });\n    try {\n      await fetch(departments_url, {\n        method: \"DELETE\",\n        body: JSON.stringify({\n          id: id\n        })\n      });\n      dispatch({\n        type: DELETE_DEPARTMENT_SUCCESS\n      });\n      //loadEmployees();\n    } catch (err) {\n      dispatch({\n        type: DELETE_DEPARTMENT_ERROR\n      });\n    }\n  };\n\n  // Designations\n  const loadDesignations = async () => {\n    dispatch({\n      type: GET_DESIGNATIONS_BEGIN\n    });\n    try {\n      // const res = await fetch(\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\n      // );\n      const res = await fetch(designations_url);\n      //const { data } = await axios.get(employees_url);\n      //const employees = data;\n      const designations = await res.json();\n      dispatch({\n        type: GET_DESIGNATIONS_SUCCESS,\n        payload: designations\n      });\n    } catch (error) {\n      dispatch({\n        type: GET_DESIGNATIONS_ERROR\n      });\n    }\n  };\n  const addDesignation = async data => {\n    //const { id, name } = data;\n    //\n    dispatch({\n      type: ADD_DESIGNATION_BEGIN\n    });\n    try {\n      await fetch(designations_url, {\n        method: \"POST\",\n        body: JSON.stringify({\n          ...data\n        })\n      });\n      dispatch({\n        type: ADD_DESIGNATION_SUCCESS\n      });\n    } catch (err) {\n      dispatch({\n        type: ADD_DESIGNATION_ERROR\n      });\n    }\n  };\n  const updateDesignation = async data => {\n    const {\n      id,\n      ...fields\n    } = data;\n    dispatch({\n      type: UPDATE_DESIGNATION_BEGIN\n    });\n    try {\n      await fetch(designations_url, {\n        method: \"PUT\",\n        body: JSON.stringify({\n          id,\n          ...fields\n        })\n      });\n      dispatch({\n        type: UPDATE_DESIGNATION_SUCCESS\n      });\n    } catch (error) {\n      dispatch({\n        type: UPDATE_DESIGNATION_ERROR\n      });\n    }\n  };\n  const deleteDesignation = async id => {\n    dispatch({\n      type: DELETE_DESIGNATION_BEGIN\n    });\n    try {\n      await fetch(designations_url, {\n        method: \"DELETE\",\n        body: JSON.stringify({\n          id: id\n        })\n      });\n      dispatch({\n        type: DELETE_DESIGNATION_SUCCESS\n      });\n      //loadEmployees();\n    } catch (err) {\n      dispatch({\n        type: DELETE_DESIGNATION_ERROR\n      });\n    }\n  };\n\n  // Family\n  const loadFamily = async () => {\n    dispatch({\n      type: GET_FAMILY_BEGIN\n    });\n    try {\n      const res = await fetch(family_url);\n      const family = await res.json();\n      dispatch({\n        type: GET_FAMILY_SUCCESS,\n        payload: family\n      });\n    } catch (error) {\n      dispatch({\n        type: GET_FAMILY_ERROR\n      });\n    }\n  };\n  const loadSingleBatchFamily = async empid => {\n    dispatch({\n      type: LOAD_SINGLEBATCH_FAMILY_BEGIN\n    });\n    try {\n      const res = await fetch(`${family_url}?fv=${empid}`);\n      //console.log(`${family_url}?fv=${linkid}`);\n      const singlebatchfamily = await res.json();\n      dispatch({\n        type: LOAD_SINGLEBATCH_FAMILY_SUCCESS,\n        payload: singlebatchfamily\n      });\n    } catch (error) {\n      dispatch({\n        type: LOAD_SINGLEBATCH_FAMILY_ERROR\n      });\n    }\n  };\n  const addFamily = async data => {\n    //const { id, name } = data;\n\n    dispatch({\n      type: ADD_FAMILY_BEGIN\n    });\n    try {\n      await fetch(family_url, {\n        method: \"POST\",\n        body: JSON.stringify({\n          ...data\n        })\n      });\n      dispatch({\n        type: ADD_FAMILY_SUCCESS\n      });\n    } catch (err) {\n      dispatch({\n        type: ADD_FAMILY_ERROR\n      });\n    }\n  };\n  const updateFamily = async data => {\n    const {\n      id,\n      ...fields\n    } = data;\n    dispatch({\n      type: UPDATE_FAMILY_BEGIN\n    });\n    try {\n      await fetch(family_url, {\n        method: \"PUT\",\n        body: JSON.stringify({\n          id,\n          ...fields\n        })\n      });\n      dispatch({\n        type: UPDATE_FAMILY_SUCCESS\n      });\n    } catch (error) {\n      dispatch({\n        type: UPDATE_FAMILY_ERROR\n      });\n    }\n  };\n  const deleteFamily = async id => {\n    dispatch({\n      type: DELETE_FAMILY_BEGIN\n    });\n    try {\n      await fetch(family_url, {\n        method: \"DELETE\",\n        body: JSON.stringify({\n          id: id\n        })\n      });\n      dispatch({\n        type: DELETE_FAMILY_SUCCESS\n      });\n      //loadEmployees();\n    } catch (err) {\n      dispatch({\n        type: DELETE_FAMILY_ERROR\n      });\n    }\n  };\n\n  // Education\n  const loadEducation = async () => {\n    dispatch({\n      type: GET_EDUCATION_BEGIN\n    });\n    try {\n      const res = await fetch(educations_url);\n      const education = await res.json();\n      dispatch({\n        type: GET_EDUCATION_SUCCESS,\n        payload: education\n      });\n    } catch (error) {\n      dispatch({\n        type: GET_EDUCATION_ERROR\n      });\n    }\n  };\n  const loadSingleBatchEducation = async empid => {\n    dispatch({\n      type: LOAD_SINGLEBATCH_EDUCATION_BEGIN\n    });\n    try {\n      const res = await fetch(`${educations_url}?fv=${empid}`);\n      const singlebatcheducation = await res.json();\n      dispatch({\n        type: LOAD_SINGLEBATCH_EDUCATION_SUCCESS,\n        payload: singlebatcheducation\n      });\n    } catch (error) {\n      dispatch({\n        type: LOAD_SINGLEBATCH_EDUCATION_ERROR\n      });\n    }\n  };\n  const addEducation = async data => {\n    //const { id, name } = data;\n\n    dispatch({\n      type: ADD_EDUCATION_BEGIN\n    });\n    try {\n      await fetch(educations_url, {\n        method: \"POST\",\n        body: JSON.stringify({\n          ...data\n        })\n      });\n      dispatch({\n        type: ADD_EDUCATION_SUCCESS\n      });\n    } catch (err) {\n      dispatch({\n        type: ADD_EDUCATION_ERROR\n      });\n    }\n  };\n  const updateEducation = async data => {\n    const {\n      id,\n      ...fields\n    } = data;\n    dispatch({\n      type: UPDATE_EDUCATION_BEGIN\n    });\n    try {\n      await fetch(educations_url, {\n        method: \"PUT\",\n        body: JSON.stringify({\n          id,\n          ...fields\n        })\n      });\n      dispatch({\n        type: UPDATE_EDUCATION_SUCCESS\n      });\n    } catch (error) {\n      dispatch({\n        type: UPDATE_EDUCATION_ERROR\n      });\n    }\n  };\n  const deleteEducation = async id => {\n    dispatch({\n      type: DELETE_EDUCATION_BEGIN\n    });\n    try {\n      await fetch(educations_url, {\n        method: \"DELETE\",\n        body: JSON.stringify({\n          id: id\n        })\n      });\n      dispatch({\n        type: DELETE_EDUCATION_SUCCESS\n      });\n    } catch (err) {\n      dispatch({\n        type: DELETE_EDUCATION_ERROR\n      });\n    }\n  };\n\n  // Experience\n  const loadExperience = async () => {\n    dispatch({\n      type: GET_EXPERIENCE_BEGIN\n    });\n    try {\n      const res = await fetch(educations_url);\n      const experience = await res.json();\n      dispatch({\n        type: GET_EXPERIENCE_SUCCESS,\n        payload: experience\n      });\n    } catch (error) {\n      dispatch({\n        type: GET_EXPERIENCE_ERROR\n      });\n    }\n  };\n  const loadSingleBatchExperience = async empid => {\n    dispatch({\n      type: LOAD_SINGLEBATCH_EXPERIENCE_BEGIN\n    });\n    try {\n      const res = await fetch(`${experiences_url}?fv=${empid}`);\n      const singlebatchexperience = await res.json();\n      dispatch({\n        type: LOAD_SINGLEBATCH_EXPERIENCE_SUCCESS,\n        payload: singlebatchexperience\n      });\n    } catch (error) {\n      dispatch({\n        type: LOAD_SINGLEBATCH_EXPERIENCE_ERROR\n      });\n    }\n  };\n  const addExperience = async data => {\n    //const { id, name } = data;\n\n    dispatch({\n      type: ADD_EXPERIENCE_BEGIN\n    });\n    try {\n      await fetch(experiences_url, {\n        method: \"POST\",\n        body: JSON.stringify({\n          ...data\n        })\n      });\n      dispatch({\n        type: ADD_EXPERIENCE_SUCCESS\n      });\n    } catch (err) {\n      dispatch({\n        type: ADD_EXPERIENCE_ERROR\n      });\n    }\n  };\n  const updateExperience = async data => {\n    const {\n      id,\n      ...fields\n    } = data;\n    dispatch({\n      type: UPDATE_EXPERIENCE_BEGIN\n    });\n    try {\n      await fetch(experiences_url, {\n        method: \"PUT\",\n        body: JSON.stringify({\n          id,\n          ...fields\n        })\n      });\n      dispatch({\n        type: UPDATE_EXPERIENCE_SUCCESS\n      });\n    } catch (error) {\n      dispatch({\n        type: UPDATE_EXPERIENCE_ERROR\n      });\n    }\n  };\n  const deleteExperience = async id => {\n    dispatch({\n      type: DELETE_EXPERIENCE_BEGIN\n    });\n    try {\n      await fetch(experiences_url, {\n        method: \"DELETE\",\n        body: JSON.stringify({\n          id: id\n        })\n      });\n      dispatch({\n        type: DELETE_EXPERIENCE_SUCCESS\n      });\n      //loadEmployees();\n    } catch (err) {\n      dispatch({\n        type: DELETE_EXPERIENCE_ERROR\n      });\n    }\n  };\n  const resetTables = () => {\n    dispatch({\n      type: RESET_TABLES\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(TablesContext.Provider, {\n    value: {\n      ...state,\n      loadPayitems,\n      addPayitem,\n      deletePayitem,\n      updatePayitem,\n      loadAllowances,\n      addAllowance,\n      deleteAllowance,\n      updateAllowance,\n      loadDeductions,\n      addDeduction,\n      deleteDeduction,\n      updateDeduction,\n      loadDepartments,\n      addDepartment,\n      deleteDepartment,\n      updateDepartment,\n      loadDesignations,\n      addDesignation,\n      deleteDesignation,\n      updateDesignation,\n      loadFamily,\n      loadSingleBatchFamily,\n      addFamily,\n      deleteFamily,\n      updateFamily,\n      loadEducation,\n      loadSingleBatchEducation,\n      addEducation,\n      deleteEducation,\n      updateEducation,\n      loadExperience,\n      loadSingleBatchExperience,\n      addExperience,\n      deleteExperience,\n      updateExperience,\n      resetTables\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 690,\n    columnNumber: 5\n  }, this);\n};\n_s(TablesProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n_c = TablesProvider;\nexport const useTablesContext = () => {\n  _s2();\n  return useContext(TablesContext);\n};\n_s2(useTablesContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"TablesProvider\");","map":{"version":3,"names":["React","useContext","useReducer","reducer","allowances_url","deductions_url","departments_url","designations_url","family_url","educations_url","experiences_url","payitems_url","GET_PAYITEMS_BEGIN","GET_PAYITEMS_SUCCESS","GET_PAYITEMS_ERROR","ADD_PAYITEM_BEGIN","ADD_PAYITEM_SUCCESS","ADD_PAYITEM_ERROR","UPDATE_PAYITEM_BEGIN","UPDATE_PAYITEM_SUCCESS","UPDATE_PAYITEM_ERROR","DELETE_PAYITEM_BEGIN","DELETE_PAYITEM_SUCCESS","DELETE_PAYITEM_ERROR","GET_ALLOWANCES_BEGIN","GET_ALLOWANCES_SUCCESS","GET_ALLOWANCES_ERROR","ADD_ALLOWANCE_BEGIN","ADD_ALLOWANCE_SUCCESS","ADD_ALLOWANCE_ERROR","UPDATE_ALLOWANCE_BEGIN","UPDATE_ALLOWANCE_SUCCESS","UPDATE_ALLOWANCE_ERROR","DELETE_ALLOWANCE_BEGIN","DELETE_ALLOWANCE_SUCCESS","DELETE_ALLOWANCE_ERROR","GET_DEDUCTIONS_BEGIN","GET_DEDUCTIONS_SUCCESS","GET_DEDUCTIONS_ERROR","ADD_DEDUCTION_BEGIN","ADD_DEDUCTION_SUCCESS","ADD_DEDUCTION_ERROR","UPDATE_DEDUCTION_BEGIN","UPDATE_DEDUCTION_SUCCESS","UPDATE_DEDUCTION_ERROR","DELETE_DEDUCTION_BEGIN","DELETE_DEDUCTION_SUCCESS","DELETE_DEDUCTION_ERROR","GET_DEPARTMENTS_BEGIN","GET_DEPARTMENTS_SUCCESS","GET_DEPARTMENTS_ERROR","ADD_DEPARTMENT_BEGIN","ADD_DEPARTMENT_SUCCESS","ADD_DEPARTMENT_ERROR","UPDATE_DEPARTMENT_BEGIN","UPDATE_DEPARTMENT_SUCCESS","UPDATE_DEPARTMENT_ERROR","DELETE_DEPARTMENT_BEGIN","DELETE_DEPARTMENT_SUCCESS","DELETE_DEPARTMENT_ERROR","GET_DESIGNATIONS_BEGIN","GET_DESIGNATIONS_SUCCESS","GET_DESIGNATIONS_ERROR","ADD_DESIGNATION_BEGIN","ADD_DESIGNATION_SUCCESS","ADD_DESIGNATION_ERROR","UPDATE_DESIGNATION_BEGIN","UPDATE_DESIGNATION_SUCCESS","UPDATE_DESIGNATION_ERROR","DELETE_DESIGNATION_BEGIN","DELETE_DESIGNATION_SUCCESS","DELETE_DESIGNATION_ERROR","GET_FAMILY_BEGIN","GET_FAMILY_SUCCESS","GET_FAMILY_ERROR","ADD_FAMILY_BEGIN","ADD_FAMILY_SUCCESS","ADD_FAMILY_ERROR","UPDATE_FAMILY_BEGIN","UPDATE_FAMILY_SUCCESS","UPDATE_FAMILY_ERROR","DELETE_FAMILY_BEGIN","DELETE_FAMILY_SUCCESS","DELETE_FAMILY_ERROR","LOAD_SINGLEBATCH_FAMILY_BEGIN","LOAD_SINGLEBATCH_FAMILY_SUCCESS","LOAD_SINGLEBATCH_FAMILY_ERROR","GET_EDUCATION_BEGIN","GET_EDUCATION_SUCCESS","GET_EDUCATION_ERROR","ADD_EDUCATION_BEGIN","ADD_EDUCATION_SUCCESS","ADD_EDUCATION_ERROR","UPDATE_EDUCATION_BEGIN","UPDATE_EDUCATION_SUCCESS","UPDATE_EDUCATION_ERROR","DELETE_EDUCATION_BEGIN","DELETE_EDUCATION_SUCCESS","DELETE_EDUCATION_ERROR","LOAD_SINGLEBATCH_EDUCATION_BEGIN","LOAD_SINGLEBATCH_EDUCATION_SUCCESS","LOAD_SINGLEBATCH_EDUCATION_ERROR","GET_EXPERIENCE_BEGIN","GET_EXPERIENCE_SUCCESS","GET_EXPERIENCE_ERROR","ADD_EXPERIENCE_BEGIN","ADD_EXPERIENCE_SUCCESS","ADD_EXPERIENCE_ERROR","UPDATE_EXPERIENCE_BEGIN","UPDATE_EXPERIENCE_SUCCESS","UPDATE_EXPERIENCE_ERROR","DELETE_EXPERIENCE_BEGIN","DELETE_EXPERIENCE_SUCCESS","DELETE_EXPERIENCE_ERROR","LOAD_SINGLEBATCH_EXPERIENCE_BEGIN","LOAD_SINGLEBATCH_EXPERIENCE_SUCCESS","LOAD_SINGLEBATCH_EXPERIENCE_ERROR","RESET_TABLES","initialState","payitems","payitems_loading","payitems_error","allowances","allowances_loading","allowances_error","deductions","deductions_loading","deductions_error","departments","departments_loading","departments_error","designatons","designations_loading","designations_error","family","family_loading","family_error","singlebatch_family_loading","singlebatch_family_error","singlebatchfamily","single_family","education","education_loading","education_error","singlebatch_education_loading","singlebatch_education_error","singlebatcheducation","experience","experience_loading","experience_error","singlebatch_experience_loading","singlebatch_experience_error","singlebatchexperience","TablesContext","createContext","TablesProvider","children","state","dispatch","loadPayitems","type","res","fetch","json","payload","error","addPayitem","data","method","body","JSON","stringify","err","updatePayitem","id","fields","deletePayitem","loadAllowances","addAllowance","updateAllowance","deleteAllowance","loadDeductions","addDeduction","updateDeduction","deleteDeduction","loadDepartments","addDepartment","updateDepartment","deleteDepartment","loadDesignations","designations","addDesignation","updateDesignation","deleteDesignation","loadFamily","loadSingleBatchFamily","empid","addFamily","updateFamily","deleteFamily","loadEducation","loadSingleBatchEducation","addEducation","updateEducation","deleteEducation","loadExperience","loadSingleBatchExperience","addExperience","updateExperience","deleteExperience","resetTables","useTablesContext"],"sources":["D:/react-myprojects/hrms-demo/src/context/tables_context.js"],"sourcesContent":["import React, { useContext,  useReducer } from \"react\";\r\nimport reducer from \"../reducers/tables_reducer\";\r\nimport { allowances_url } from \"../utils/constants\";\r\nimport { deductions_url } from \"../utils/constants\";\r\nimport { departments_url } from \"../utils/constants\";\r\nimport { designations_url } from \"../utils/constants\";\r\nimport { family_url } from \"../utils/constants\";\r\nimport { educations_url } from \"../utils/constants\";\r\nimport { experiences_url } from \"../utils/constants\";\r\nimport { payitems_url } from \"../utils/constants\";\r\n\r\nimport {\r\n  GET_PAYITEMS_BEGIN,\r\n  GET_PAYITEMS_SUCCESS,\r\n  GET_PAYITEMS_ERROR,\r\n  ADD_PAYITEM_BEGIN,\r\n  ADD_PAYITEM_SUCCESS,\r\n  ADD_PAYITEM_ERROR,\r\n  UPDATE_PAYITEM_BEGIN,\r\n  UPDATE_PAYITEM_SUCCESS,\r\n  UPDATE_PAYITEM_ERROR,\r\n  DELETE_PAYITEM_BEGIN,\r\n  DELETE_PAYITEM_SUCCESS,\r\n  DELETE_PAYITEM_ERROR,\r\n  GET_ALLOWANCES_BEGIN,\r\n  GET_ALLOWANCES_SUCCESS,\r\n  GET_ALLOWANCES_ERROR,\r\n  ADD_ALLOWANCE_BEGIN,\r\n  ADD_ALLOWANCE_SUCCESS,\r\n  ADD_ALLOWANCE_ERROR,\r\n  UPDATE_ALLOWANCE_BEGIN,\r\n  UPDATE_ALLOWANCE_SUCCESS,\r\n  UPDATE_ALLOWANCE_ERROR,\r\n  DELETE_ALLOWANCE_BEGIN,\r\n  DELETE_ALLOWANCE_SUCCESS,\r\n  DELETE_ALLOWANCE_ERROR,\r\n  GET_DEDUCTIONS_BEGIN,\r\n  GET_DEDUCTIONS_SUCCESS,\r\n  GET_DEDUCTIONS_ERROR,\r\n  ADD_DEDUCTION_BEGIN,\r\n  ADD_DEDUCTION_SUCCESS,\r\n  ADD_DEDUCTION_ERROR,\r\n  UPDATE_DEDUCTION_BEGIN,\r\n  UPDATE_DEDUCTION_SUCCESS,\r\n  UPDATE_DEDUCTION_ERROR,\r\n  DELETE_DEDUCTION_BEGIN,\r\n  DELETE_DEDUCTION_SUCCESS,\r\n  DELETE_DEDUCTION_ERROR,\r\n  GET_DEPARTMENTS_BEGIN,\r\n  GET_DEPARTMENTS_SUCCESS,\r\n  GET_DEPARTMENTS_ERROR,\r\n  ADD_DEPARTMENT_BEGIN,\r\n  ADD_DEPARTMENT_SUCCESS,\r\n  ADD_DEPARTMENT_ERROR,\r\n  UPDATE_DEPARTMENT_BEGIN,\r\n  UPDATE_DEPARTMENT_SUCCESS,\r\n  UPDATE_DEPARTMENT_ERROR,\r\n  DELETE_DEPARTMENT_BEGIN,\r\n  DELETE_DEPARTMENT_SUCCESS,\r\n  DELETE_DEPARTMENT_ERROR,\r\n  GET_DESIGNATIONS_BEGIN,\r\n  GET_DESIGNATIONS_SUCCESS,\r\n  GET_DESIGNATIONS_ERROR,\r\n  ADD_DESIGNATION_BEGIN,\r\n  ADD_DESIGNATION_SUCCESS,\r\n  ADD_DESIGNATION_ERROR,\r\n  UPDATE_DESIGNATION_BEGIN,\r\n  UPDATE_DESIGNATION_SUCCESS,\r\n  UPDATE_DESIGNATION_ERROR,\r\n  DELETE_DESIGNATION_BEGIN,\r\n  DELETE_DESIGNATION_SUCCESS,\r\n  DELETE_DESIGNATION_ERROR,\r\n  GET_FAMILY_BEGIN,\r\n  GET_FAMILY_SUCCESS,\r\n  GET_FAMILY_ERROR,\r\n  ADD_FAMILY_BEGIN,\r\n  ADD_FAMILY_SUCCESS,\r\n  ADD_FAMILY_ERROR,\r\n  UPDATE_FAMILY_BEGIN,\r\n  UPDATE_FAMILY_SUCCESS,\r\n  UPDATE_FAMILY_ERROR,\r\n  DELETE_FAMILY_BEGIN,\r\n  DELETE_FAMILY_SUCCESS,\r\n  DELETE_FAMILY_ERROR,\r\n  LOAD_SINGLEBATCH_FAMILY_BEGIN,\r\n  LOAD_SINGLEBATCH_FAMILY_SUCCESS,\r\n  LOAD_SINGLEBATCH_FAMILY_ERROR,\r\n  // education\r\n  GET_EDUCATION_BEGIN,\r\n  GET_EDUCATION_SUCCESS,\r\n  GET_EDUCATION_ERROR,\r\n  ADD_EDUCATION_BEGIN,\r\n  ADD_EDUCATION_SUCCESS,\r\n  ADD_EDUCATION_ERROR,\r\n  UPDATE_EDUCATION_BEGIN,\r\n  UPDATE_EDUCATION_SUCCESS,\r\n  UPDATE_EDUCATION_ERROR,\r\n  DELETE_EDUCATION_BEGIN,\r\n  DELETE_EDUCATION_SUCCESS,\r\n  DELETE_EDUCATION_ERROR,\r\n  LOAD_SINGLEBATCH_EDUCATION_BEGIN,\r\n  LOAD_SINGLEBATCH_EDUCATION_SUCCESS,\r\n  LOAD_SINGLEBATCH_EDUCATION_ERROR,\r\n  // experience\r\n  GET_EXPERIENCE_BEGIN,\r\n  GET_EXPERIENCE_SUCCESS,\r\n  GET_EXPERIENCE_ERROR,\r\n  ADD_EXPERIENCE_BEGIN,\r\n  ADD_EXPERIENCE_SUCCESS,\r\n  ADD_EXPERIENCE_ERROR,\r\n  UPDATE_EXPERIENCE_BEGIN,\r\n  UPDATE_EXPERIENCE_SUCCESS,\r\n  UPDATE_EXPERIENCE_ERROR,\r\n  DELETE_EXPERIENCE_BEGIN,\r\n  DELETE_EXPERIENCE_SUCCESS,\r\n  DELETE_EXPERIENCE_ERROR,\r\n  LOAD_SINGLEBATCH_EXPERIENCE_BEGIN,\r\n  LOAD_SINGLEBATCH_EXPERIENCE_SUCCESS,\r\n  LOAD_SINGLEBATCH_EXPERIENCE_ERROR,\r\n  // reset\r\n  RESET_TABLES,\r\n} from \"../actions\";\r\n\r\nconst initialState = {\r\n  payitems: [],\r\n  payitems_loading: false,\r\n  payitems_error: false,\r\n  allowances: [],\r\n  allowances_loading: false,\r\n  allowances_error: false,\r\n  deductions: [],\r\n  deductions_loading: false,\r\n  deductions_error: false,\r\n  departments: [],\r\n  departments_loading: false,\r\n  departments_error: false,\r\n  designatons: [],\r\n  designations_loading: false,\r\n  designations_error: false,\r\n  family: [],\r\n  family_loading: false,\r\n  family_error: false,\r\n  singlebatch_family_loading: false,\r\n  singlebatch_family_error: false,\r\n  singlebatchfamily: {},\r\n  single_family: {},\r\n  education: [],\r\n  education_loading: false,\r\n  education_error: false,\r\n  singlebatch_education_loading: false,\r\n  singlebatch_education_error: false,\r\n  singlebatcheducation: {},\r\n  experience: [],\r\n  experience_loading: false,\r\n  experience_error: false,\r\n  singlebatch_experience_loading: false,\r\n  singlebatch_experience_error: false,\r\n  singlebatchexperience: {},\r\n};\r\n\r\nconst TablesContext = React.createContext();\r\n\r\nexport const TablesProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  // payitems\r\n  const loadPayitems = async () => {\r\n    dispatch({ type: GET_PAYITEMS_BEGIN });\r\n    try {\r\n      // const res = await fetch(\r\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\r\n      // );\r\n      const res = await fetch(payitems_url);\r\n      //const { data } = await axios.get(employees_url);\r\n      //const employees = data;\r\n      const payitems = await res.json();\r\n      dispatch({ type: GET_PAYITEMS_SUCCESS, payload: payitems });\r\n    } catch (error) {\r\n      dispatch({ type: GET_PAYITEMS_ERROR });\r\n    }\r\n  };\r\n\r\n  const addPayitem = async (data) => {\r\n    //const { id, name } = data;\r\n    //\r\n    dispatch({ type: ADD_PAYITEM_BEGIN });\r\n    try {\r\n      await fetch(payitems_url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ ...data }),\r\n      });\r\n      dispatch({ type: ADD_PAYITEM_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: ADD_PAYITEM_ERROR });\r\n    }\r\n  };\r\n\r\n  const updatePayitem = async (data) => {\r\n    const { id, ...fields } = data;\r\n\r\n    dispatch({ type: UPDATE_PAYITEM_BEGIN });\r\n    try {\r\n      await fetch(payitems_url, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ id, ...fields }),\r\n      });\r\n      dispatch({ type: UPDATE_PAYITEM_SUCCESS });\r\n    } catch (error) {\r\n      dispatch({ type: UPDATE_PAYITEM_ERROR });\r\n    }\r\n  };\r\n\r\n  const deletePayitem = async (id) => {\r\n    dispatch({ type: DELETE_PAYITEM_BEGIN });\r\n    try {\r\n      await fetch(payitems_url, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify({ id: id }),\r\n      });\r\n      dispatch({ type: DELETE_PAYITEM_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: DELETE_PAYITEM_ERROR });\r\n    }\r\n  };\r\n\r\n  // Allowances\r\n  const loadAllowances = async () => {\r\n    dispatch({ type: GET_ALLOWANCES_BEGIN });\r\n    try {\r\n      // const res = await fetch(\r\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\r\n      // );\r\n      const res = await fetch(allowances_url);\r\n      //const { data } = await axios.get(employees_url);\r\n      //const employees = data;\r\n      const allowances = await res.json();\r\n      dispatch({ type: GET_ALLOWANCES_SUCCESS, payload: allowances });\r\n    } catch (error) {\r\n      dispatch({ type: GET_ALLOWANCES_ERROR });\r\n    }\r\n  };\r\n\r\n  const addAllowance = async (data) => {\r\n    //const { id, name } = data;\r\n    //\r\n    dispatch({ type: ADD_ALLOWANCE_BEGIN });\r\n    try {\r\n      await fetch(allowances_url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ ...data }),\r\n      });\r\n      dispatch({ type: ADD_ALLOWANCE_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: ADD_ALLOWANCE_ERROR });\r\n    }\r\n  };\r\n\r\n  const updateAllowance = async (data) => {\r\n    const { id, ...fields } = data;\r\n\r\n    dispatch({ type: UPDATE_ALLOWANCE_BEGIN });\r\n    try {\r\n      await fetch(allowances_url, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ id, ...fields }),\r\n      });\r\n      dispatch({ type: UPDATE_ALLOWANCE_SUCCESS });\r\n    } catch (error) {\r\n      dispatch({ type: UPDATE_ALLOWANCE_ERROR });\r\n    }\r\n  };\r\n\r\n  const deleteAllowance = async (id) => {\r\n    dispatch({ type: DELETE_ALLOWANCE_BEGIN });\r\n    try {\r\n      await fetch(allowances_url, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify({ id: id }),\r\n      });\r\n      dispatch({ type: DELETE_ALLOWANCE_SUCCESS });\r\n      //loadEmployees();\r\n    } catch (err) {\r\n      dispatch({ type: DELETE_ALLOWANCE_ERROR });\r\n    }\r\n  };\r\n\r\n  // Deductions\r\n  const loadDeductions = async () => {\r\n    dispatch({ type: GET_DEDUCTIONS_BEGIN });\r\n    try {\r\n      // const res = await fetch(\r\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\r\n      // );\r\n      const res = await fetch(deductions_url);\r\n      //const { data } = await axios.get(employees_url);\r\n      //const employees = data;\r\n      const deductions = await res.json();\r\n      dispatch({ type: GET_DEDUCTIONS_SUCCESS, payload: deductions });\r\n    } catch (error) {\r\n      dispatch({ type: GET_DEDUCTIONS_ERROR });\r\n    }\r\n  };\r\n\r\n  const addDeduction = async (data) => {\r\n    //const { id, name } = data;\r\n    //\r\n    dispatch({ type: ADD_DEDUCTION_BEGIN });\r\n    try {\r\n      await fetch(deductions_url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ ...data }),\r\n      });\r\n      dispatch({ type: ADD_DEDUCTION_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: ADD_DEDUCTION_ERROR });\r\n    }\r\n  };\r\n\r\n  const updateDeduction = async (data) => {\r\n    const { id, ...fields } = data;\r\n\r\n    dispatch({ type: UPDATE_DEDUCTION_BEGIN });\r\n    try {\r\n      await fetch(deductions_url, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ id, ...fields }),\r\n      });\r\n      dispatch({ type: UPDATE_DEDUCTION_SUCCESS });\r\n    } catch (error) {\r\n      dispatch({ type: UPDATE_DEDUCTION_ERROR });\r\n    }\r\n  };\r\n\r\n  const deleteDeduction = async (id) => {\r\n    dispatch({ type: DELETE_DEDUCTION_BEGIN });\r\n    try {\r\n      await fetch(deductions_url, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify({ id: id }),\r\n      });\r\n      dispatch({ type: DELETE_DEDUCTION_SUCCESS });\r\n      //loadEmployees();\r\n    } catch (err) {\r\n      dispatch({ type: DELETE_DEDUCTION_ERROR });\r\n    }\r\n  };\r\n\r\n  // Departments\r\n  const loadDepartments = async () => {\r\n    dispatch({ type: GET_DEPARTMENTS_BEGIN });\r\n    try {\r\n      // const res = await fetch(\r\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\r\n      // );\r\n      const res = await fetch(departments_url);\r\n      //const { data } = await axios.get(employees_url);\r\n      //const employees = data;\r\n      const departments = await res.json();\r\n      dispatch({ type: GET_DEPARTMENTS_SUCCESS, payload: departments });\r\n    } catch (error) {\r\n      dispatch({ type: GET_DEPARTMENTS_ERROR });\r\n    }\r\n  };\r\n\r\n  const addDepartment = async (data) => {\r\n    //const { id, name } = data;\r\n    //\r\n    dispatch({ type: ADD_DEPARTMENT_BEGIN });\r\n    try {\r\n      await fetch(departments_url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ ...data }),\r\n      });\r\n      dispatch({ type: ADD_DEPARTMENT_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: ADD_DEPARTMENT_ERROR });\r\n    }\r\n  };\r\n\r\n  const updateDepartment = async (data) => {\r\n    const { id, ...fields } = data;\r\n\r\n    dispatch({ type: UPDATE_DEPARTMENT_BEGIN });\r\n    try {\r\n      await fetch(departments_url, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ id, ...fields }),\r\n      });\r\n      dispatch({ type: UPDATE_DEPARTMENT_SUCCESS });\r\n    } catch (error) {\r\n      dispatch({ type: UPDATE_DEPARTMENT_ERROR });\r\n    }\r\n  };\r\n\r\n  const deleteDepartment = async (id) => {\r\n    dispatch({ type: DELETE_DEPARTMENT_BEGIN });\r\n    try {\r\n      await fetch(departments_url, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify({ id: id }),\r\n      });\r\n      dispatch({ type: DELETE_DEPARTMENT_SUCCESS });\r\n      //loadEmployees();\r\n    } catch (err) {\r\n      dispatch({ type: DELETE_DEPARTMENT_ERROR });\r\n    }\r\n  };\r\n\r\n  // Designations\r\n  const loadDesignations = async () => {\r\n    dispatch({ type: GET_DESIGNATIONS_BEGIN });\r\n    try {\r\n      // const res = await fetch(\r\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\r\n      // );\r\n      const res = await fetch(designations_url);\r\n      //const { data } = await axios.get(employees_url);\r\n      //const employees = data;\r\n      const designations = await res.json();\r\n      dispatch({ type: GET_DESIGNATIONS_SUCCESS, payload: designations });\r\n    } catch (error) {\r\n      dispatch({ type: GET_DESIGNATIONS_ERROR });\r\n    }\r\n  };\r\n\r\n  const addDesignation = async (data) => {\r\n    //const { id, name } = data;\r\n    //\r\n    dispatch({ type: ADD_DESIGNATION_BEGIN });\r\n    try {\r\n      await fetch(designations_url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ ...data }),\r\n      });\r\n      dispatch({ type: ADD_DESIGNATION_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: ADD_DESIGNATION_ERROR });\r\n    }\r\n  };\r\n\r\n  const updateDesignation = async (data) => {\r\n    const { id, ...fields } = data;\r\n\r\n    dispatch({ type: UPDATE_DESIGNATION_BEGIN });\r\n    try {\r\n      await fetch(designations_url, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ id, ...fields }),\r\n      });\r\n      dispatch({ type: UPDATE_DESIGNATION_SUCCESS });\r\n    } catch (error) {\r\n      dispatch({ type: UPDATE_DESIGNATION_ERROR });\r\n    }\r\n  };\r\n\r\n  const deleteDesignation = async (id) => {\r\n    dispatch({ type: DELETE_DESIGNATION_BEGIN });\r\n    try {\r\n      await fetch(designations_url, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify({ id: id }),\r\n      });\r\n      dispatch({ type: DELETE_DESIGNATION_SUCCESS });\r\n      //loadEmployees();\r\n    } catch (err) {\r\n      dispatch({ type: DELETE_DESIGNATION_ERROR });\r\n    }\r\n  };\r\n\r\n  // Family\r\n  const loadFamily = async () => {\r\n    dispatch({ type: GET_FAMILY_BEGIN });\r\n    try {\r\n      const res = await fetch(family_url);\r\n      const family = await res.json();\r\n      dispatch({ type: GET_FAMILY_SUCCESS, payload: family });\r\n    } catch (error) {\r\n      dispatch({ type: GET_FAMILY_ERROR });\r\n    }\r\n  };\r\n\r\n  const loadSingleBatchFamily = async (empid) => {\r\n    dispatch({ type: LOAD_SINGLEBATCH_FAMILY_BEGIN });\r\n    try {\r\n      const res = await fetch(`${family_url}?fv=${empid}`);\r\n      //console.log(`${family_url}?fv=${linkid}`);\r\n      const singlebatchfamily = await res.json();\r\n\r\n      dispatch({\r\n        type: LOAD_SINGLEBATCH_FAMILY_SUCCESS,\r\n        payload: singlebatchfamily,\r\n      });\r\n    } catch (error) {\r\n      dispatch({ type: LOAD_SINGLEBATCH_FAMILY_ERROR });\r\n    }\r\n  };\r\n\r\n  const addFamily = async (data) => {\r\n    //const { id, name } = data;\r\n\r\n    dispatch({ type: ADD_FAMILY_BEGIN });\r\n    try {\r\n      await fetch(family_url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ ...data }),\r\n      });\r\n      dispatch({ type: ADD_FAMILY_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: ADD_FAMILY_ERROR });\r\n    }\r\n  };\r\n\r\n  const updateFamily = async (data) => {\r\n    const { id, ...fields } = data;\r\n\r\n    dispatch({ type: UPDATE_FAMILY_BEGIN });\r\n    try {\r\n      await fetch(family_url, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ id, ...fields }),\r\n      });\r\n      dispatch({ type: UPDATE_FAMILY_SUCCESS });\r\n    } catch (error) {\r\n      dispatch({ type: UPDATE_FAMILY_ERROR });\r\n    }\r\n  };\r\n\r\n  const deleteFamily = async (id) => {\r\n    dispatch({ type: DELETE_FAMILY_BEGIN });\r\n    try {\r\n      await fetch(family_url, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify({ id: id }),\r\n      });\r\n      dispatch({ type: DELETE_FAMILY_SUCCESS });\r\n      //loadEmployees();\r\n    } catch (err) {\r\n      dispatch({ type: DELETE_FAMILY_ERROR });\r\n    }\r\n  };\r\n\r\n  // Education\r\n  const loadEducation = async () => {\r\n    dispatch({ type: GET_EDUCATION_BEGIN });\r\n    try {\r\n      const res = await fetch(educations_url);\r\n\r\n      const education = await res.json();\r\n      dispatch({ type: GET_EDUCATION_SUCCESS, payload: education });\r\n    } catch (error) {\r\n      dispatch({ type: GET_EDUCATION_ERROR });\r\n    }\r\n  };\r\n\r\n  const loadSingleBatchEducation = async (empid) => {\r\n    dispatch({ type: LOAD_SINGLEBATCH_EDUCATION_BEGIN });\r\n    try {\r\n      const res = await fetch(`${educations_url}?fv=${empid}`);\r\n\r\n      const singlebatcheducation = await res.json();\r\n      dispatch({\r\n        type: LOAD_SINGLEBATCH_EDUCATION_SUCCESS,\r\n        payload: singlebatcheducation,\r\n      });\r\n    } catch (error) {\r\n      dispatch({ type: LOAD_SINGLEBATCH_EDUCATION_ERROR });\r\n    }\r\n  };\r\n\r\n  const addEducation = async (data) => {\r\n    //const { id, name } = data;\r\n\r\n    dispatch({ type: ADD_EDUCATION_BEGIN });\r\n    try {\r\n      await fetch(educations_url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ ...data }),\r\n      });\r\n      dispatch({ type: ADD_EDUCATION_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: ADD_EDUCATION_ERROR });\r\n    }\r\n  };\r\n\r\n  const updateEducation = async (data) => {\r\n    const { id, ...fields } = data;\r\n\r\n    dispatch({ type: UPDATE_EDUCATION_BEGIN });\r\n    try {\r\n      await fetch(educations_url, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ id, ...fields }),\r\n      });\r\n      dispatch({ type: UPDATE_EDUCATION_SUCCESS });\r\n    } catch (error) {\r\n      dispatch({ type: UPDATE_EDUCATION_ERROR });\r\n    }\r\n  };\r\n\r\n  const deleteEducation = async (id) => {\r\n    dispatch({ type: DELETE_EDUCATION_BEGIN });\r\n    try {\r\n      await fetch(educations_url, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify({ id: id }),\r\n      });\r\n      dispatch({ type: DELETE_EDUCATION_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: DELETE_EDUCATION_ERROR });\r\n    }\r\n  };\r\n\r\n  // Experience\r\n  const loadExperience = async () => {\r\n    dispatch({ type: GET_EXPERIENCE_BEGIN });\r\n    try {\r\n      const res = await fetch(educations_url);\r\n\r\n      const experience = await res.json();\r\n      dispatch({ type: GET_EXPERIENCE_SUCCESS, payload: experience });\r\n    } catch (error) {\r\n      dispatch({ type: GET_EXPERIENCE_ERROR });\r\n    }\r\n  };\r\n\r\n  const loadSingleBatchExperience = async (empid) => {\r\n    dispatch({ type: LOAD_SINGLEBATCH_EXPERIENCE_BEGIN });\r\n    try {\r\n      const res = await fetch(`${experiences_url}?fv=${empid}`);\r\n\r\n      const singlebatchexperience = await res.json();\r\n      dispatch({\r\n        type: LOAD_SINGLEBATCH_EXPERIENCE_SUCCESS,\r\n        payload: singlebatchexperience,\r\n      });\r\n    } catch (error) {\r\n      dispatch({ type: LOAD_SINGLEBATCH_EXPERIENCE_ERROR });\r\n    }\r\n  };\r\n\r\n  const addExperience = async (data) => {\r\n    //const { id, name } = data;\r\n\r\n    dispatch({ type: ADD_EXPERIENCE_BEGIN });\r\n    try {\r\n      await fetch(experiences_url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ ...data }),\r\n      });\r\n      dispatch({ type: ADD_EXPERIENCE_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: ADD_EXPERIENCE_ERROR });\r\n    }\r\n  };\r\n\r\n  const updateExperience = async (data) => {\r\n    const { id, ...fields } = data;\r\n\r\n    dispatch({ type: UPDATE_EXPERIENCE_BEGIN });\r\n    try {\r\n      await fetch(experiences_url, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ id, ...fields }),\r\n      });\r\n      dispatch({ type: UPDATE_EXPERIENCE_SUCCESS });\r\n    } catch (error) {\r\n      dispatch({ type: UPDATE_EXPERIENCE_ERROR });\r\n    }\r\n  };\r\n\r\n  const deleteExperience = async (id) => {\r\n    dispatch({ type: DELETE_EXPERIENCE_BEGIN });\r\n    try {\r\n      await fetch(experiences_url, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify({ id: id }),\r\n      });\r\n      dispatch({ type: DELETE_EXPERIENCE_SUCCESS });\r\n      //loadEmployees();\r\n    } catch (err) {\r\n      dispatch({ type: DELETE_EXPERIENCE_ERROR });\r\n    }\r\n  };\r\n\r\n  const resetTables = () => {\r\n    dispatch({ type: RESET_TABLES });\r\n  };\r\n\r\n  return (\r\n    <TablesContext.Provider\r\n      value={{\r\n        ...state,\r\n        loadPayitems,\r\n        addPayitem,\r\n        deletePayitem,\r\n        updatePayitem,\r\n        loadAllowances,\r\n        addAllowance,\r\n        deleteAllowance,\r\n        updateAllowance,\r\n        loadDeductions,\r\n        addDeduction,\r\n        deleteDeduction,\r\n        updateDeduction,\r\n        loadDepartments,\r\n        addDepartment,\r\n        deleteDepartment,\r\n        updateDepartment,\r\n        loadDesignations,\r\n        addDesignation,\r\n        deleteDesignation,\r\n        updateDesignation,\r\n        loadFamily,\r\n        loadSingleBatchFamily,\r\n        addFamily,\r\n        deleteFamily,\r\n        updateFamily,\r\n        loadEducation,\r\n        loadSingleBatchEducation,\r\n        addEducation,\r\n        deleteEducation,\r\n        updateEducation,\r\n        loadExperience,\r\n        loadSingleBatchExperience,\r\n        addExperience,\r\n        deleteExperience,\r\n        updateExperience,\r\n        resetTables,\r\n      }}\r\n    >\r\n      {children}\r\n    </TablesContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useTablesContext = () => {\r\n  return useContext(TablesContext);\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
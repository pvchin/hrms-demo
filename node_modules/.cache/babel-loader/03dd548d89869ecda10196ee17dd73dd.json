{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-demo\\\\src\\\\components\\\\EmployeeTableLeaveBF.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport MaterialTable from \"material-table\";\nimport { useNavigate } from \"react-router-dom\";\nimport getYear from \"date-fns/getYear\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Box, Button, Container, Divider, Heading, Grid, GridItem, Radio, RadioGroup, HStack, Select, Tabs, TabList, TabPanels, Tab, TabPanel, useRadioGroup, useDisclosure } from \"@chakra-ui/react\";\n//import AddIcon from \"@material-ui/icons/Add\";\n//import EditIcon from \"@material-ui/icons/Edit\";\n//import DeleteIcon from \"@material-ui/icons/Delete\";\n//import CheckIcon from \"@material-ui/icons/Check\";\n//import SearchIcon from \"@material-ui/icons/Search\";\n//import LeaveForm from \"./LeaveForm\";\n//import { CustomDialog } from \"../helpers/CustomDialog\";\n//import { AlertDialog } from \"../helpers/AlertDialogBox\";\n//import { useExpensesPeriod } from \"./expenses/useExpensesPeriod\";\nimport { useEmployeesContext } from \"../context/employees_context\";\nimport { useEmployees } from \"./employees/useEmployees\";\nimport { useUpdateEmployees } from \"./employees/useUpdateEmployees\";\nimport { useLeavesPeriod } from \"./leaves/useLeavesPeriod\";\nimport { usePeriods } from \"./periods/usePeriods\";\nimport { useUpdatePeriods } from \"./periods/useUpdatePeriods\";\nimport { AlertDialogBox } from \"../helpers/AlertDialogBox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EmployeeTableLeaveBF() {\n  _s();\n  const classes = useStyles();\n  const navigate = useNavigate();\n  const {\n    employees,\n    setEmployeeId\n  } = useEmployees();\n  const {\n    periods\n  } = usePeriods();\n  const updatePeriods = useUpdatePeriods();\n  const updateEmployees = useUpdateEmployees();\n  const {\n    leavesperiod,\n    setLeavePeriodYrId\n  } = useLeavesPeriod();\n  const [empdata, setEmpData] = useState([]);\n  const [toBuild, setToBuild] = useState(true);\n  const [selectleaveyear, setSelectLeaveYear] = useState(\"\");\n  const yearperiod = periods.filter(r => r.status !== \"C\");\n  // console.log('yearperiod', yearperiod)\n  // const YEAR = \"2022\"\n\n  //console.log(\"empdata\", empdata);\n\n  const {\n    isOpen: isAlertOpen,\n    onOpen: onAlertOpen,\n    onClose: onAlertClose\n  } = useDisclosure();\n  const {\n    //editEmployeeID,\n    //employees_loading,\n    //deleteEmployee,\n    //loadEmployees,\n    setEditEmployeeID,\n    setIsEditingOn,\n    //setIsEditingOff,\n    resetSingleEmployee,\n    resetEmployees\n    //getSingleEmployee,\n  } = useEmployeesContext();\n  const columns = useMemo(() => [{\n    title: \"Name\",\n    field: \"name\",\n    cellStyle: {\n      width: 250,\n      maxWidth: 250\n    },\n    editable: \"never\"\n  },\n  // { title: \"IC No\", field: \"ic_no\" },\n  // { title: \"Gender\", field: \"gender\" },\n  // { title: \"Emp No\", field: \"empno\" },\n  // { title: \"Designation\", field: \"designation\" },\n  // { title: \"Department\", field: \"department\" },\n  {\n    title: \"Last Year Leave Balance\",\n    field: \"leave_bal\",\n    type: \"numeric\",\n    cellStyle: {\n      width: 60\n    },\n    editable: \"never\"\n  }, {\n    title: \"Leave Entitled\",\n    field: \"leave_entitled\",\n    type: \"numeric\",\n    cellStyle: {\n      width: 60,\n      backgroundColor: \"#e6e7e3\"\n    }\n  }, {\n    title: \"Leave B/F\",\n    field: \"newleave_bf\",\n    type: \"numeric\",\n    cellStyle: {\n      width: 60,\n      backgroundColor: \"#e6e7e3\"\n    }\n  }, {\n    title: \"Total Leave\",\n    field: \"newleaves_total\",\n    type: \"numeric\",\n    cellStyle: {\n      width: 60,\n      backgroundColor: \"#e6e7e3\"\n    }\n  }], []);\n  const Build_EmpData = YEAR => {\n    // eslint-disable-next-line no-lone-blocks\n    {\n      const emp = employees.map(rec => {\n        return {\n          ...rec,\n          leave_total: 0,\n          leave_taken: 0,\n          leave_pending: 0\n        };\n      });\n      emp && emp.forEach((rec, index) => {\n        const {\n          id\n          //name,\n          //icno,\n          //gender,\n          //designation,\n          //department,\n          //leave_entitled,\n          //leave_bf,\n          //leave_cd,\n        } = rec;\n        // calculate leaves\n\n        const leavesdata = leavesperiod.filter(r => r.empid === id && getYear(new Date(r.from_date)) === YEAR);\n        console.log(\"leavedata\", YEAR, leavesdata);\n        const leaveTaken = leavesdata.reduce((acc, item) => {\n          if (item.status === \"Approved\" && item.leavetype === \"Annual Leave\") {\n            return acc + item.no_of_days;\n          } else {\n            return acc;\n          }\n        }, 0);\n        const leavePending = leavesdata.reduce((acc, item) => {\n          if (item.status === \"Pending\") {\n            return acc + item.no_of_days;\n          } else {\n            return acc;\n          }\n        }, 0);\n        const leaveOthers = leavesdata.reduce((acc, item) => {\n          if (item.status === \"Approved\" && item.leavetype !== \"Annual Leave\") {\n            return acc + item.no_of_days;\n          } else {\n            return acc;\n          }\n        }, 0);\n        const leaveEntitled = isNaN(emp[index].leave_entitled) ? 0 : emp[index].leave_entitled;\n        const leaveBf = isNaN(emp[index].leave_bf) ? 0 : emp[index].leave_bf;\n        //const leaveCd = isNaN(emp[index].leave_cd) ? 0 : emp[index].leave_cd;\n        const leaveCd = 0;\n        const leavebal = leaveEntitled + leaveBf - leaveCd - leaveTaken;\n        const newleavebf = leavebal > 5 ? 5 : leavebal;\n        const newtotalleaves = newleavebf + leaveEntitled;\n        emp[index].leave_entitled = leaveEntitled;\n        emp[index].leave_cd = leaveCd;\n        emp[index].leave_total = leaveEntitled + leaveBf;\n        emp[index].leave_taken = leaveTaken + leaveCd;\n        emp[index].leave_pending = leavePending;\n        emp[index].leave_others = leaveOthers;\n        emp[index].leave_bal = leavebal;\n        emp[index].newleave_bf = newleavebf;\n        emp[index].newleaves_total = newtotalleaves;\n        setEmpData(emp);\n      });\n    }\n  };\n  const handleBuildEmpData = () => {\n    if (selectleaveyear === \"\") {\n      return null;\n    }\n    Build_EmpData(selectleaveyear);\n  };\n  const UpdateLeaveYear = e => {\n    setSelectLeaveYear(prev => prev = parseInt(e.target.value));\n    //Calc_Leave()\n    //setIsLoad(true);\n  };\n\n  const UpdateEmpProfile = () => {\n    empdata.forEach(rec => {\n      const {\n        id,\n        leave_entitled,\n        newleave_bf,\n        newleaves_total\n      } = rec;\n      const olddata = employees.filter(r => r.id === id).map(rec => {\n        return {\n          ...rec\n        };\n      });\n      const newdata = {\n        ...olddata[0],\n        leave_entitled: leave_entitled,\n        leave_bf: newleave_bf,\n        leave_bal: newleaves_total\n      };\n      updateEmployees({\n        id: id,\n        ...newdata\n      });\n    });\n  };\n  const handleOnUpdateConfirm = () => {\n    UpdateEmpProfile();\n    //console.log(\"post\", selectleaveyear, typeof selectleaveyear, periods);\n\n    //update periods\n    const currperiod = periods.filter(r => r.period === selectleaveyear.toString());\n    const updatedperiod = {\n      ...currperiod[0],\n      status: \"C\"\n    };\n    const {\n      id,\n      rec_id,\n      ...fields\n    } = updatedperiod;\n    updatePeriods({\n      id: updatedperiod.id,\n      ...fields\n    });\n    setEmpData([]);\n  };\n  useEffect(() => {\n    setLeavePeriodYrId(selectleaveyear);\n  }, []);\n\n  // useEffect(() => {\n  //   console.log(\"leaveperiod\", leavesperiod);\n  //   Build_EmpData(YEAR);\n  // }, []);\n\n  // useEffect(() => {\n  //   setLeavePeriodYrId(YEAR);\n  //   console.log(\"leaveperiod\", leavesperiod)\n  //   if (leavesperiod.length > 0) {\n  //     Build_EmpData(YEAR);\n  //     setToBuild(false);\n  //   } else {\n  //     setToBuild(true);\n  //   }\n  // }, [toBuild]);\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    minW: \"container.lg\",\n    minH: 900,\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      py: 2,\n      children: /*#__PURE__*/_jsxDEV(HStack, {\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          size: \"md\",\n          children: \"Leaves Balance Calculation B/F from Year \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          value: selectleaveyear,\n          fontSize: 20,\n          maxWidth: 100,\n          onChange: e => UpdateLeaveYear(e),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"None\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 13\n          }, this), periods.filter(r => r.status !== \"C\").map(row => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: row.period,\n              children: row.period\n            }, row.period, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 19\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          colorScheme: \"teal\",\n          variant: \"solid\",\n          onClick: handleBuildEmpData,\n          disabled: selectleaveyear === \"\",\n          children: \"Calc Leaves\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          colorScheme: \"teal\",\n          variant: \"solid\",\n          onClick: onAlertOpen,\n          disabled: selectleaveyear === \"\",\n          children: \"Update Employees Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n        columns: columns,\n        data: empdata.filter(r => !r.hasresigned).sort((a, b) => a.name > b.name ? 1 : b.name > a.name ? -1 : 0),\n        title: \"Employee Leave Details\",\n        editable: {\n          onRowUpdate: (newData, oldData) => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              const dataUpdate = [...empdata];\n              const index = oldData.tableData.id;\n              dataUpdate[index] = newData;\n              setEmpData([...dataUpdate]);\n              resolve();\n            }, 1000);\n          })\n        },\n        options: {\n          filtering: true,\n          search: true,\n          toolbar: false,\n          pageSize: 10,\n          headerStyle: {\n            backgroundColor: \"rgba(75, 192, 192, 1)\",\n            color: \"white\"\n          },\n          showTitle: false\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AlertDialogBox, {\n      onClose: onAlertClose,\n      onConfirm: handleOnUpdateConfirm,\n      isOpen: isAlertOpen,\n      title: \"Update Employees Profile\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Are you sure you want to update to Employee Profiles ?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 279,\n    columnNumber: 5\n  }, this);\n}\n_s(EmployeeTableLeaveBF, \"i+CPdu0RPMJ6QQ3RKz3qfWBdJkQ=\", false, function () {\n  return [useStyles, useNavigate, useEmployees, usePeriods, useUpdatePeriods, useUpdateEmployees, useLeavesPeriod, useDisclosure, useEmployeesContext];\n});\n_c = EmployeeTableLeaveBF;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: 0\n  }\n}));\nvar _c;\n$RefreshReg$(_c, \"EmployeeTableLeaveBF\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","MaterialTable","useNavigate","getYear","makeStyles","Box","Button","Container","Divider","Heading","Grid","GridItem","Radio","RadioGroup","HStack","Select","Tabs","TabList","TabPanels","Tab","TabPanel","useRadioGroup","useDisclosure","useEmployeesContext","useEmployees","useUpdateEmployees","useLeavesPeriod","usePeriods","useUpdatePeriods","AlertDialogBox","EmployeeTableLeaveBF","classes","useStyles","navigate","employees","setEmployeeId","periods","updatePeriods","updateEmployees","leavesperiod","setLeavePeriodYrId","empdata","setEmpData","toBuild","setToBuild","selectleaveyear","setSelectLeaveYear","yearperiod","filter","r","status","isOpen","isAlertOpen","onOpen","onAlertOpen","onClose","onAlertClose","setEditEmployeeID","setIsEditingOn","resetSingleEmployee","resetEmployees","columns","title","field","cellStyle","width","maxWidth","editable","type","backgroundColor","Build_EmpData","YEAR","emp","map","rec","leave_total","leave_taken","leave_pending","forEach","index","id","leavesdata","empid","Date","from_date","console","log","leaveTaken","reduce","acc","item","leavetype","no_of_days","leavePending","leaveOthers","leaveEntitled","isNaN","leave_entitled","leaveBf","leave_bf","leaveCd","leavebal","newleavebf","newtotalleaves","leave_cd","leave_others","leave_bal","newleave_bf","newleaves_total","handleBuildEmpData","UpdateLeaveYear","e","prev","parseInt","target","value","UpdateEmpProfile","olddata","newdata","handleOnUpdateConfirm","currperiod","period","toString","updatedperiod","rec_id","fields","row","hasresigned","sort","a","b","name","onRowUpdate","newData","oldData","Promise","resolve","reject","setTimeout","dataUpdate","tableData","filtering","search","toolbar","pageSize","headerStyle","color","showTitle","theme","root","padding"],"sources":["D:/react-myprojects/hrms-demo/src/components/EmployeeTableLeaveBF.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport getYear from \"date-fns/getYear\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  Divider,\r\n  Heading,\r\n  Grid,\r\n  GridItem,\r\n  Radio,\r\n  RadioGroup,\r\n  HStack,\r\n  Select,\r\n  Tabs,\r\n  TabList,\r\n  TabPanels,\r\n  Tab,\r\n  TabPanel,\r\n  useRadioGroup,\r\n  useDisclosure,\r\n} from \"@chakra-ui/react\";\r\n//import AddIcon from \"@material-ui/icons/Add\";\r\n//import EditIcon from \"@material-ui/icons/Edit\";\r\n//import DeleteIcon from \"@material-ui/icons/Delete\";\r\n//import CheckIcon from \"@material-ui/icons/Check\";\r\n//import SearchIcon from \"@material-ui/icons/Search\";\r\n//import LeaveForm from \"./LeaveForm\";\r\n//import { CustomDialog } from \"../helpers/CustomDialog\";\r\n//import { AlertDialog } from \"../helpers/AlertDialogBox\";\r\n//import { useExpensesPeriod } from \"./expenses/useExpensesPeriod\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useEmployees } from \"./employees/useEmployees\";\r\nimport { useUpdateEmployees } from \"./employees/useUpdateEmployees\";\r\nimport { useLeavesPeriod } from \"./leaves/useLeavesPeriod\";\r\nimport { usePeriods } from \"./periods/usePeriods\";\r\nimport { useUpdatePeriods } from \"./periods/useUpdatePeriods\";\r\nimport { AlertDialogBox } from \"../helpers/AlertDialogBox\";\r\n\r\nexport default function EmployeeTableLeaveBF() {\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n  const { employees, setEmployeeId } = useEmployees();\r\n  const { periods } = usePeriods();\r\n  const updatePeriods = useUpdatePeriods();\r\n  const updateEmployees = useUpdateEmployees();\r\n  const { leavesperiod, setLeavePeriodYrId } = useLeavesPeriod();\r\n  const [empdata, setEmpData] = useState([]);\r\n  const [toBuild, setToBuild] = useState(true);\r\n  const [selectleaveyear, setSelectLeaveYear] = useState(\"\");\r\n\r\n  const yearperiod = periods.filter((r) => r.status !== \"C\");\r\n  // console.log('yearperiod', yearperiod)\r\n  // const YEAR = \"2022\"\r\n\r\n  //console.log(\"empdata\", empdata);\r\n\r\n  const {\r\n    isOpen: isAlertOpen,\r\n    onOpen: onAlertOpen,\r\n    onClose: onAlertClose,\r\n  } = useDisclosure();\r\n\r\n  const {\r\n    //editEmployeeID,\r\n    //employees_loading,\r\n    //deleteEmployee,\r\n    //loadEmployees,\r\n    setEditEmployeeID,\r\n    setIsEditingOn,\r\n    //setIsEditingOff,\r\n    resetSingleEmployee,\r\n    resetEmployees,\r\n    //getSingleEmployee,\r\n  } = useEmployeesContext();\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        title: \"Name\",\r\n        field: \"name\",\r\n        cellStyle: {\r\n          width: 250,\r\n          maxWidth: 250,\r\n        },\r\n        editable: \"never\",\r\n      },\r\n      // { title: \"IC No\", field: \"ic_no\" },\r\n      // { title: \"Gender\", field: \"gender\" },\r\n      // { title: \"Emp No\", field: \"empno\" },\r\n      // { title: \"Designation\", field: \"designation\" },\r\n      // { title: \"Department\", field: \"department\" },\r\n      {\r\n        title: \"Last Year Leave Balance\",\r\n        field: \"leave_bal\",\r\n        type: \"numeric\",\r\n        cellStyle: {\r\n          width: 60,\r\n        },\r\n        editable: \"never\",\r\n      },\r\n      {\r\n        title: \"Leave Entitled\",\r\n        field: \"leave_entitled\",\r\n        type: \"numeric\",\r\n        cellStyle: {\r\n          width: 60,\r\n          backgroundColor: \"#e6e7e3\",\r\n        },\r\n      },\r\n      {\r\n        title: \"Leave B/F\",\r\n        field: \"newleave_bf\",\r\n        type: \"numeric\",\r\n        cellStyle: {\r\n          width: 60,\r\n          backgroundColor: \"#e6e7e3\",\r\n        },\r\n      },\r\n      {\r\n        title: \"Total Leave\",\r\n        field: \"newleaves_total\",\r\n        type: \"numeric\",\r\n        cellStyle: {\r\n          width: 60,\r\n          backgroundColor: \"#e6e7e3\",\r\n        },\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  const Build_EmpData = (YEAR) => {\r\n    // eslint-disable-next-line no-lone-blocks\r\n    {\r\n      const emp = employees.map((rec) => {\r\n        return { ...rec, leave_total: 0, leave_taken: 0, leave_pending: 0 };\r\n      });\r\n      emp &&\r\n        emp.forEach((rec, index) => {\r\n          const {\r\n            id,\r\n            //name,\r\n            //icno,\r\n            //gender,\r\n            //designation,\r\n            //department,\r\n            //leave_entitled,\r\n            //leave_bf,\r\n            //leave_cd,\r\n          } = rec;\r\n          // calculate leaves\r\n\r\n          const leavesdata = leavesperiod.filter(\r\n            (r) => r.empid === id && getYear(new Date(r.from_date)) === YEAR\r\n          );\r\n\r\n          console.log(\"leavedata\", YEAR, leavesdata);\r\n          const leaveTaken = leavesdata.reduce((acc, item) => {\r\n            if (\r\n              item.status === \"Approved\" &&\r\n              item.leavetype === \"Annual Leave\"\r\n            ) {\r\n              return acc + item.no_of_days;\r\n            } else {\r\n              return acc;\r\n            }\r\n          }, 0);\r\n          const leavePending = leavesdata.reduce((acc, item) => {\r\n            if (item.status === \"Pending\") {\r\n              return acc + item.no_of_days;\r\n            } else {\r\n              return acc;\r\n            }\r\n          }, 0);\r\n          const leaveOthers = leavesdata.reduce((acc, item) => {\r\n            if (\r\n              item.status === \"Approved\" &&\r\n              item.leavetype !== \"Annual Leave\"\r\n            ) {\r\n              return acc + item.no_of_days;\r\n            } else {\r\n              return acc;\r\n            }\r\n          }, 0);\r\n          const leaveEntitled = isNaN(emp[index].leave_entitled)\r\n            ? 0\r\n            : emp[index].leave_entitled;\r\n          const leaveBf = isNaN(emp[index].leave_bf) ? 0 : emp[index].leave_bf;\r\n          //const leaveCd = isNaN(emp[index].leave_cd) ? 0 : emp[index].leave_cd;\r\n          const leaveCd = 0;\r\n          const leavebal = leaveEntitled + leaveBf - leaveCd - leaveTaken;\r\n          const newleavebf = leavebal > 5 ? 5 : leavebal;\r\n          const newtotalleaves = newleavebf + leaveEntitled;\r\n          emp[index].leave_entitled = leaveEntitled;\r\n          emp[index].leave_cd = leaveCd;\r\n          emp[index].leave_total = leaveEntitled + leaveBf;\r\n          emp[index].leave_taken = leaveTaken + leaveCd;\r\n          emp[index].leave_pending = leavePending;\r\n          emp[index].leave_others = leaveOthers;\r\n          emp[index].leave_bal = leavebal;\r\n\r\n          emp[index].newleave_bf = newleavebf;\r\n          emp[index].newleaves_total = newtotalleaves;\r\n          setEmpData(emp);\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleBuildEmpData = () => {\r\n    if (selectleaveyear === \"\") {\r\n      return null;\r\n    }\r\n    Build_EmpData(selectleaveyear);\r\n  };\r\n\r\n  const UpdateLeaveYear = (e) => {\r\n    setSelectLeaveYear((prev) => (prev = parseInt(e.target.value)));\r\n    //Calc_Leave()\r\n    //setIsLoad(true);\r\n  };\r\n\r\n  const UpdateEmpProfile = () => {\r\n    empdata.forEach((rec) => {\r\n      const { id, leave_entitled, newleave_bf, newleaves_total } = rec;\r\n      const olddata = employees\r\n        .filter((r) => r.id === id)\r\n        .map((rec) => {\r\n          return { ...rec };\r\n        });\r\n      const newdata = {\r\n        ...olddata[0],\r\n        leave_entitled: leave_entitled,\r\n        leave_bf: newleave_bf,\r\n        leave_bal: newleaves_total,\r\n      };\r\n      updateEmployees({ id: id, ...newdata });\r\n    });\r\n  };\r\n\r\n  const handleOnUpdateConfirm = () => {\r\n    UpdateEmpProfile()\r\n    //console.log(\"post\", selectleaveyear, typeof selectleaveyear, periods);\r\n\r\n    //update periods\r\n    const currperiod = periods.filter(\r\n      (r) => r.period === selectleaveyear.toString()\r\n    );\r\n    const updatedperiod = { ...currperiod[0], status: \"C\" };\r\n    const { id, rec_id, ...fields } = updatedperiod;\r\n    updatePeriods({ id: updatedperiod.id, ...fields });\r\n    setEmpData([]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setLeavePeriodYrId(selectleaveyear);\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   console.log(\"leaveperiod\", leavesperiod);\r\n  //   Build_EmpData(YEAR);\r\n  // }, []);\r\n\r\n  // useEffect(() => {\r\n  //   setLeavePeriodYrId(YEAR);\r\n  //   console.log(\"leaveperiod\", leavesperiod)\r\n  //   if (leavesperiod.length > 0) {\r\n  //     Build_EmpData(YEAR);\r\n  //     setToBuild(false);\r\n  //   } else {\r\n  //     setToBuild(true);\r\n  //   }\r\n  // }, [toBuild]);\r\n\r\n  return (\r\n    <Container minW=\"container.lg\" minH={900}>\r\n      <Box py={2}>\r\n        <HStack>\r\n          <Heading size=\"md\">Leaves Balance Calculation B/F from Year </Heading>\r\n          <Select\r\n            value={selectleaveyear}\r\n            fontSize={20}\r\n            maxWidth={100}\r\n            onChange={(e) => UpdateLeaveYear(e)}\r\n          >\r\n            <option value=\"\">None</option>\r\n            {periods\r\n              .filter((r) => r.status !== \"C\")\r\n              .map((row) => {\r\n                return (\r\n                  <option key={row.period} value={row.period}>\r\n                    {row.period}\r\n                  </option>\r\n                );\r\n              })}\r\n          </Select>\r\n          <Button\r\n            colorScheme=\"teal\"\r\n            variant=\"solid\"\r\n            onClick={handleBuildEmpData}\r\n            disabled={selectleaveyear === \"\"}\r\n          >\r\n            Calc Leaves\r\n          </Button>\r\n          <Button\r\n            colorScheme=\"teal\"\r\n            variant=\"solid\"\r\n            onClick={onAlertOpen}\r\n            disabled={selectleaveyear === \"\"}\r\n          >\r\n            Update Employees Profile\r\n          </Button>\r\n        </HStack>\r\n      </Box>\r\n      <Box>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={empdata\r\n            .filter((r) => !r.hasresigned)\r\n            .sort((a, b) => (a.name > b.name ? 1 : b.name > a.name ? -1 : 0))}\r\n          title=\"Employee Leave Details\"\r\n          editable={{\r\n            onRowUpdate: (newData, oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  const dataUpdate = [...empdata];\r\n                  const index = oldData.tableData.id;\r\n                  dataUpdate[index] = newData;\r\n                  setEmpData([...dataUpdate]);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n          }}\r\n          options={{\r\n            filtering: true,\r\n            search: true,\r\n            toolbar: false,\r\n            pageSize: 10,\r\n            headerStyle: {\r\n              backgroundColor: \"rgba(75, 192, 192, 1)\",\r\n              color: \"white\",\r\n            },\r\n            showTitle: false,\r\n          }}\r\n        />\r\n      </Box>\r\n      <AlertDialogBox\r\n        onClose={onAlertClose}\r\n        onConfirm={handleOnUpdateConfirm}\r\n        isOpen={isAlertOpen}\r\n        title=\"Update Employees Profile\"\r\n      >\r\n        <h2>Are you sure you want to update to Employee Profiles ?</h2>\r\n      </AlertDialogBox>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-demo\\\\src\\\\components\\\\PaySummary.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport currency from \"currency.js\";\n//import PrintPaySummary from \"./PrintPaySummary\";\nimport { Box\n//Heading,\n//Text,\n//Table,\n//Thead,\n//Tbody,\n//Tr,\n//Th,\n//Td,\n//chakra,\n} from \"@chakra-ui/react\";\n//import { TriangleDownIcon, TriangleUpIcon } from \"@chakra-ui/icons\";\nimport MaterialTable from \"material-table\";\nimport { Grid, TextField } from \"@material-ui/core\";\n//import { makeStyles } from \"@material-ui/core/styles\";\nimport { useRecoilState } from \"recoil\";\n//import { formatPriceZero } from \"../helpers/Utils\";\nimport { payrunState } from \"./data/atomdata\";\n//import { usePayslipsContext } from \"../context/payslips_context\";\n//import { ComponentToPrint } from \"./ComponentToPrint\";\n//import PaySummaryTable from \"./PaySummaryTable\";\n\n// const initial_state = [\n//   {\n//     totalwages: 0,\n//     totaltap: 0,\n//     totalscp: 0,\n//     totalallows: 0,\n//     totaldeducts: 0,\n//     totalpayroll: 0,\n//   },\n// ];\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PaySummary = _ref => {\n  _s();\n  let {\n    singlebatchpayslip\n  } = _ref;\n  //const classes = useStyles();\n  //const componentRef = useRef();\n  //const [state, setState] = useState(initial_state);\n  const [payrundata, setPayrundata] = useRecoilState(payrunState);\n  //const [payrunstatus, setPayrunStatus] = useRecoilState(payrunStatusState);\n  const [isCalc, setIsCalc] = useState(true);\n  //const { payrun, updatePayrun, payslip_period } = usePayslipsContext();\n\n  const columns = useMemo(() => [{\n    title: \"Name\",\n    field: \"name\",\n    editable: \"never\"\n  }, {\n    title: \"Wages\",\n    field: \"wages_bnd\",\n    editable: \"never\",\n    type: \"currency\"\n  }, {\n    title: \"TAP Amount\",\n    field: \"tap_amount_bnd\",\n    editable: \"never\",\n    type: \"currency\"\n  }, {\n    title: \"SCP Amount\",\n    field: \"scp_amount_bnd\",\n    editable: \"never\",\n    type: \"currency\"\n  }, {\n    title: \"Site Allows\",\n    field: \"site_allows_bnd\",\n    editable: \"never\",\n    type: \"currency\"\n  }, {\n    title: \"Exps Claims\",\n    field: \"expenses_claims_bnd\",\n    editable: \"never\",\n    type: \"currency\"\n  }, {\n    title: \"Allowances\",\n    field: \"total_allowances_bnd\",\n    editable: \"never\",\n    type: \"currency\"\n  }, {\n    title: \"Deductions\",\n    field: \"total_deductions_bnd\",\n    editable: \"never\",\n    type: \"currency\"\n  }, {\n    title: \"Nett Pay\",\n    field: \"nett_pay_bnd\",\n    editable: \"never\",\n    type: \"currency\"\n  }], []);\n\n  // const columns1 = [\n  //   {\n  //     Header: \"Name\",\n  //     accessor: \"name\",\n  //   },\n  //   {\n  //     Header: \"Wages\",\n  //     accessor: \"wages_bnd\",\n  //     isNumeric: true,\n  //     Cell: (props) => formatPriceZero(props.value),\n  //   },\n\n  //   {\n  //     Header: \"TAP Amount\",\n  //     accessor: \"tap_amount_bnd\",\n  //     isNumeric: true,\n  //     Cell: (props) => formatPriceZero(props.value),\n  //   },\n  //   {\n  //     Header: \"SCP Amount\",\n  //     accessor: \"scp_amount_bnd\",\n  //     isNumeric: true,\n  //     Cell: (props) => formatPriceZero(props.value),\n  //   },\n  //   {\n  //     Header: \"Site Allows\",\n  //     accessor: \"site_allows_bnd\",\n  //     isNumeric: true,\n  //     Cell: (props) => formatPriceZero(props.value),\n  //   },\n  //   {\n  //     Header: \"Exps Claims\",\n  //     accessor: \"expenses_claims_bnd\",\n  //     isNumeric: true,\n  //     Cell: (props) => formatPriceZero(props.value),\n  //   },\n  //   {\n  //     Header: \"Allowances\",\n  //     accessor: \"total_allowances_bnd\",\n  //     isNumeric: true,\n  //     Cell: (props) => formatPriceZero(props.value),\n  //   },\n  //   {\n  //     Header: \"Deductions\",\n  //     accessor: \"total_deductions_bnd\",\n  //     isNumeric: true,\n  //     Cell: (props) => formatPriceZero(props.value),\n  //   },\n  //   {\n  //     Header: \"Nett Pay\",\n  //     accessor: \"nett_pay_bnd\",\n  //     isNumeric: true,\n  //     Cell: (props) => formatPriceZero(props.value),\n  //   },\n  // ];\n\n  // const exportPdfTable = () => {\n  //   PrintPaySummary((singlebatchpayslip = { singlebatchpayslip }));\n  // };\n\n  const handleCalcTotals = () => {\n    const data = singlebatchpayslip;\n    const totalwages = data.reduce((acc, item) => {\n      return acc + item.wages_bnd;\n    }, 0);\n    const totalsitesallows = data.reduce((acc, item) => {\n      return acc + item.site_allows_bnd;\n    }, 0);\n    const totalexpclaims = data.reduce((acc, item) => {\n      return acc + item.expenses_claims_bnd;\n    }, 0);\n    const totalallows = data.reduce((acc, item) => {\n      return acc + item.total_allowances_bnd;\n    }, 0);\n    const totaldeducts = data.reduce((acc, item) => {\n      return acc + item.total_deductions_bnd;\n    }, 0);\n    const totaltap = data.reduce((acc, item) => {\n      return acc + item.tap_amount_bnd;\n    }, 0);\n    const totalscp = data.reduce((acc, item) => {\n      return acc + item.scp_amount_bnd;\n    }, 0);\n    const totalpayroll = data.reduce((acc, item) => {\n      return acc + item.nett_pay_bnd;\n    }, 0);\n    setPayrundata({\n      ...payrundata,\n      totalpayroll: totalpayroll,\n      totalwages: totalwages,\n      totaltap: totaltap,\n      totalscp: totalscp,\n      totalallows: totalallows,\n      totaldeducts: totaldeducts,\n      totalsitesallows: totalsitesallows,\n      totalexpensesclaims: totalexpclaims\n    });\n    // payrun\n    //   .filter((r) => r.payrun === payslip_period)\n    //   .map((rec) => {\n    //     //update payrun\n    //     return updatePayrun({\n    //       id: rec.id,\n    //       totalpayroll: totalpayroll,\n    //       totalwages: totalwages,\n    //       totaltap: totaltap,\n    //       totalscp: totalscp,\n    //       totalallows: totalallows,\n    //       totaldeducts: totaldeducts,\n    //       totalsitesallows: totalsitesallows,\n    //       totalexpensesclaims: totalexpclaims,\n    //     });\n    //   });\n    // console.log(\"payrundata\", payrundata);\n    // console.log(\n    //   \"totals\",\n    //   totalpayroll,\n    //   totalwages,\n    //   totaltap,\n    //   totalscp,\n    //   totalallows,\n    //   totaldeducts\n    // );\n  };\n\n  // const handleSaveCalcTotals = (e) => {\n  //   e.preventDefault();\n  //   handleCalcTotals();\n  //};\n\n  useEffect(() => {\n    handleCalcTotals();\n    setIsCalc(false);\n  }, [isCalc]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        style: {\n          border: \"1px solid black\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid\n        // item\n        // sm={12}\n        // align=\"center\"\n        // style={{ border: \"1px solid black\" }}\n        , {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        style: {\n          border: \"1px solid white\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sm: 3,\n          align: \"center\",\n          style: {\n            border: \"1px solid white\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Period\",\n              name: \"period\",\n              variant: \"filled\",\n              type: \"text\",\n              value: payrundata.period,\n              style: {\n                width: \"100%\"\n              },\n              InputLabelProps: {\n                shrink: true\n              },\n              InputProps: {\n                readOnly: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sm: 3,\n          align: \"center\",\n          style: {\n            border: \"1px solid white\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Pay Run Batch\",\n              name: \"payrun\",\n              variant: \"filled\",\n              type: \"text\",\n              value: payrundata.payrun,\n              style: {\n                width: \"100%\"\n              },\n              InputLabelProps: {\n                shrink: true\n              },\n              InputProps: {\n                readOnly: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sm: 3,\n          align: \"center\",\n          style: {\n            border: \"1px solid white\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Status\",\n              name: \"status\",\n              variant: \"filled\",\n              value: payrundata.status,\n              style: {\n                width: \"100%\"\n              },\n              InputLabelProps: {\n                shrink: true\n              },\n              InputProps: {\n                readOnly: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sm: 3,\n          align: \"center\",\n          style: {\n            border: \"1px solid white\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Payroll Total\",\n              name: \"paytotal\",\n              variant: \"filled\",\n              type: \"number\",\n              value: currency(payrundata.totalpayroll),\n              style: {\n                width: \"100%\"\n              },\n              InputLabelProps: {\n                shrink: true\n              },\n              InputProps: {\n                readOnly: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        style: {\n          border: \"1px solid white\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sm: 12,\n          align: \"center\",\n          style: {\n            border: \"1px solid white\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            h: \"400\",\n            w: \"full\",\n            overflow: \"scroll\",\n            children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n              columns: columns,\n              data: singlebatchpayslip,\n              title: \"Payroll\",\n              options: {\n                filtering: false,\n                search: false,\n                toolbar: false,\n                paging: false,\n                headerStyle: {\n                  backgroundColor: \"lightblue\",\n                  color: \"primary\"\n                },\n                showTitle: false\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 405,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        style: {\n          border: \"1px solid white\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sm: 3,\n          align: \"center\",\n          style: {\n            border: \"1px solid white\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Total Wages\",\n              name: \"totalwages\",\n              variant: \"filled\",\n              type: \"currency\",\n              value: currency(payrundata.totalwages),\n              style: {\n                width: \"100%\"\n              },\n              InputLabelProps: {\n                shrink: true\n              },\n              InputProps: {\n                readOnly: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sm: 3,\n          align: \"center\",\n          style: {\n            border: \"1px solid white\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Total TAP\",\n              name: \"totaltap\",\n              variant: \"filled\",\n              type: \"currency\",\n              value: currency(payrundata.totaltap),\n              style: {\n                width: \"100%\"\n              },\n              InputLabelProps: {\n                shrink: true\n              },\n              InputProps: {\n                readOnly: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 455,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sm: 3,\n          align: \"center\",\n          style: {\n            border: \"1px solid white\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Total SCP\",\n              name: \"totalscp\",\n              variant: \"filled\",\n              type: \"currency\",\n              value: currency(payrundata.totalscp),\n              style: {\n                width: \"100%\"\n              },\n              InputLabelProps: {\n                shrink: true\n              },\n              InputProps: {\n                readOnly: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 478,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 477,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sm: 3,\n          align: \"center\",\n          style: {\n            border: \"1px solid white\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Total Sites Allows\",\n              name: \"totalsitesallows\",\n              variant: \"filled\",\n              type: \"currency\",\n              value: currency(payrundata.totalsiteallows),\n              style: {\n                width: \"100%\"\n              },\n              InputLabelProps: {\n                shrink: true\n              },\n              InputProps: {\n                readOnly: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 501,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sm: 3,\n          align: \"center\",\n          style: {\n            border: \"1px solid white\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Total Expenses Claims\",\n              name: \"totalsitesallows\",\n              variant: \"filled\",\n              type: \"currency\",\n              value: currency(payrundata.totalexpensesclaims),\n              style: {\n                width: \"100%\"\n              },\n              InputLabelProps: {\n                shrink: true\n              },\n              InputProps: {\n                readOnly: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 524,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 523,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 517,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sm: 3,\n          align: \"center\",\n          style: {\n            border: \"1px solid white\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Total Allowances\",\n              name: \"totalallows\",\n              variant: \"filled\",\n              type: \"currency\",\n              value: currency(payrundata.totalallows),\n              style: {\n                width: \"100%\"\n              },\n              InputLabelProps: {\n                shrink: true\n              },\n              InputProps: {\n                readOnly: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 547,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 546,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 540,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sm: 3,\n          align: \"center\",\n          style: {\n            border: \"1px solid white\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Total Deductions\",\n              name: \"totaldeducts\",\n              variant: \"filled\",\n              type: \"currency\",\n              value: currency(payrundata.totaldeducts),\n              style: {\n                width: \"100%\"\n              },\n              InputLabelProps: {\n                shrink: true\n              },\n              InputProps: {\n                readOnly: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 570,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 569,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 563,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sm: 3,\n          align: \"center\",\n          style: {\n            border: \"1px solid white\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Total Payroll\",\n              name: \"totalpayroll\",\n              variant: \"filled\",\n              type: \"currency\",\n              value: currency(payrundata.totalpayroll),\n              style: {\n                width: \"100%\"\n              },\n              InputLabelProps: {\n                shrink: true\n              },\n              InputProps: {\n                readOnly: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 593,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 592,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 586,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 243,\n    columnNumber: 5\n  }, this);\n};\n\n// const useStyles = makeStyles((theme) => ({\n//   root: {\n//     flexGrow: 1,\n//   },\n//   button: {\n//     margin: theme.spacing(1),\n//   },\n//   container: {\n//     margin: 0,\n//     padding: 0,\n//     width: \"80vw\",\n//     display: \"grid\",\n//     gridTemplateColumns: \"repeat(auto-fill,250px)\",\n//     gridAutoRows: \"10px\",\n//     position: \"absolute\",\n//     left: \"50%\",\n//     transform: \"translateX(-50%)\",\n//     justifyContent: \"center\",\n//     backgroundColor: \"primary\",\n//   },\n//   fixedHeight: {\n//     height: 800,\n//   },\n//   paper: {\n//     padding: theme.spacing(10),\n//     // display: \"flex\",\n//     display: \"flex\",\n//     overflow: \"auto\",\n//     flexDirection: \"column\",\n//     border: \"1px solid\",\n//     width: \"100%\",\n//     color: \"primary\",\n//     bcakgroundColor: \"black\",\n//   },\n//   card: {\n//     backgroundColor: \"black\",\n//   },\n//   section: {\n//     width: \"80vw\",\n//     margin: \"1rem auto\",\n//     maxWidth: \"var(--max-width)\",\n//   },\n//   underline: {\n//     width: \"5rem\",\n//     height: \"0.25rem\",\n//     marginBottom: \"1.25rem\",\n//     background: \"var(--clr-primary-5)\",\n//     marginLeft: \"auto\",\n//     marginRight: \"auto\",\n//   },\n//   title: {\n//     marginbottom: \"4rem\",\n//     textAlign: \"center\",\n//   },\n//   jobscenter: {\n//     width: \"80vw\",\n//     margin: \"0 auto\",\n//     maxWidth: \"var(--max-width)\",\n//     flexDirection: \"row\",\n//   },\n//   btncontainer: {\n//     display: \"flex\",\n//     flexDirection: \"row\",\n//     justifyContent: \"center\",\n//     marginBottom: \"4rem\",\n//     flexWrap: \"wrap\",\n//   },\n//   jobbtn: {\n//     background: \"transparent\",\n//     borderColor: \"transparent\",\n//     textTransform: \"capitalize\",\n//     fontSize: \"1.25rem\",\n//     letterSpacing: \"var(--spacing)\",\n//     margin: \"0 0.5rem\",\n//     transition: \"var(--transition)\",\n//     cursor: \"pointer\",\n//     padding: \"0.25rem 0\",\n//     lineHeight: \"1\",\n//     outlineColor: \"var(--clr-primary-10)\",\n//     \"&:hover\": {\n//       color: \"var(--clr-primary-5)\",\n//       boxShadow: \"0 2px var(--clr-primary-5)\",\n//     },\n//   },\n//   activebtn: {\n//     color: \"var(--clr-primary-5)\",\n//     boxShadow: \"0 2px var(--clr-primary-5)\",\n//   },\n//   jobinfo: {\n//     fontWeight: \"400\",\n//   },\n//   divider: {\n//     // Theme Color, or use css color in quote\n//     background: \"white\",\n//   },\n//   textField: {\n//     marginLeft: theme.spacing(1),\n//     marginRight: theme.spacing(1),\n//     width: 350,\n//   },\n//   divContainer: {\n//     display: \"flex\",\n//     flexDirection: \"row\",\n//   },\n// }));\n_s(PaySummary, \"XxketXQNdewJxUzKq2SR/j2YOSc=\", false, function () {\n  return [useRecoilState];\n});\n_c = PaySummary;\nexport default PaySummary;\nvar _c;\n$RefreshReg$(_c, \"PaySummary\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","currency","Box","MaterialTable","Grid","TextField","useRecoilState","payrunState","PaySummary","singlebatchpayslip","payrundata","setPayrundata","isCalc","setIsCalc","columns","title","field","editable","type","handleCalcTotals","data","totalwages","reduce","acc","item","wages_bnd","totalsitesallows","site_allows_bnd","totalexpclaims","expenses_claims_bnd","totalallows","total_allowances_bnd","totaldeducts","total_deductions_bnd","totaltap","tap_amount_bnd","totalscp","scp_amount_bnd","totalpayroll","nett_pay_bnd","totalexpensesclaims","border","period","width","shrink","readOnly","payrun","status","filtering","search","toolbar","paging","headerStyle","backgroundColor","color","showTitle","totalsiteallows"],"sources":["D:/react-myprojects/hrms-demo/src/components/PaySummary.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\";\r\nimport currency from \"currency.js\";\r\n//import PrintPaySummary from \"./PrintPaySummary\";\r\nimport {\r\n  Box,\r\n  //Heading,\r\n  //Text,\r\n  //Table,\r\n  //Thead,\r\n  //Tbody,\r\n  //Tr,\r\n  //Th,\r\n  //Td,\r\n  //chakra,\r\n} from \"@chakra-ui/react\";\r\n//import { TriangleDownIcon, TriangleUpIcon } from \"@chakra-ui/icons\";\r\nimport MaterialTable from \"material-table\";\r\nimport { Grid, TextField } from \"@material-ui/core\";\r\n//import { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useRecoilState } from \"recoil\";\r\n//import { formatPriceZero } from \"../helpers/Utils\";\r\nimport { payrunState } from \"./data/atomdata\";\r\n//import { usePayslipsContext } from \"../context/payslips_context\";\r\n//import { ComponentToPrint } from \"./ComponentToPrint\";\r\n//import PaySummaryTable from \"./PaySummaryTable\";\r\n\r\n// const initial_state = [\r\n//   {\r\n//     totalwages: 0,\r\n//     totaltap: 0,\r\n//     totalscp: 0,\r\n//     totalallows: 0,\r\n//     totaldeducts: 0,\r\n//     totalpayroll: 0,\r\n//   },\r\n// ];\r\n\r\nconst PaySummary = ({ singlebatchpayslip }) => {\r\n  //const classes = useStyles();\r\n  //const componentRef = useRef();\r\n  //const [state, setState] = useState(initial_state);\r\n  const [payrundata, setPayrundata] = useRecoilState(payrunState);\r\n  //const [payrunstatus, setPayrunStatus] = useRecoilState(payrunStatusState);\r\n  const [isCalc, setIsCalc] = useState(true);\r\n  //const { payrun, updatePayrun, payslip_period } = usePayslipsContext();\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        title: \"Name\",\r\n        field: \"name\",\r\n        editable: \"never\",\r\n      },\r\n      {\r\n        title: \"Wages\",\r\n        field: \"wages_bnd\",\r\n        editable: \"never\",\r\n        type: \"currency\",\r\n      },\r\n      {\r\n        title: \"TAP Amount\",\r\n        field: \"tap_amount_bnd\",\r\n        editable: \"never\",\r\n        type: \"currency\",\r\n      },\r\n      {\r\n        title: \"SCP Amount\",\r\n        field: \"scp_amount_bnd\",\r\n        editable: \"never\",\r\n        type: \"currency\",\r\n      },\r\n      {\r\n        title: \"Site Allows\",\r\n        field: \"site_allows_bnd\",\r\n        editable: \"never\",\r\n        type: \"currency\",\r\n      },\r\n      {\r\n        title: \"Exps Claims\",\r\n        field: \"expenses_claims_bnd\",\r\n        editable: \"never\",\r\n        type: \"currency\",\r\n      },\r\n      {\r\n        title: \"Allowances\",\r\n        field: \"total_allowances_bnd\",\r\n        editable: \"never\",\r\n        type: \"currency\",\r\n      },\r\n      {\r\n        title: \"Deductions\",\r\n        field: \"total_deductions_bnd\",\r\n        editable: \"never\",\r\n        type: \"currency\",\r\n      },\r\n      {\r\n        title: \"Nett Pay\",\r\n        field: \"nett_pay_bnd\",\r\n        editable: \"never\",\r\n        type: \"currency\",\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  // const columns1 = [\r\n  //   {\r\n  //     Header: \"Name\",\r\n  //     accessor: \"name\",\r\n  //   },\r\n  //   {\r\n  //     Header: \"Wages\",\r\n  //     accessor: \"wages_bnd\",\r\n  //     isNumeric: true,\r\n  //     Cell: (props) => formatPriceZero(props.value),\r\n  //   },\r\n\r\n  //   {\r\n  //     Header: \"TAP Amount\",\r\n  //     accessor: \"tap_amount_bnd\",\r\n  //     isNumeric: true,\r\n  //     Cell: (props) => formatPriceZero(props.value),\r\n  //   },\r\n  //   {\r\n  //     Header: \"SCP Amount\",\r\n  //     accessor: \"scp_amount_bnd\",\r\n  //     isNumeric: true,\r\n  //     Cell: (props) => formatPriceZero(props.value),\r\n  //   },\r\n  //   {\r\n  //     Header: \"Site Allows\",\r\n  //     accessor: \"site_allows_bnd\",\r\n  //     isNumeric: true,\r\n  //     Cell: (props) => formatPriceZero(props.value),\r\n  //   },\r\n  //   {\r\n  //     Header: \"Exps Claims\",\r\n  //     accessor: \"expenses_claims_bnd\",\r\n  //     isNumeric: true,\r\n  //     Cell: (props) => formatPriceZero(props.value),\r\n  //   },\r\n  //   {\r\n  //     Header: \"Allowances\",\r\n  //     accessor: \"total_allowances_bnd\",\r\n  //     isNumeric: true,\r\n  //     Cell: (props) => formatPriceZero(props.value),\r\n  //   },\r\n  //   {\r\n  //     Header: \"Deductions\",\r\n  //     accessor: \"total_deductions_bnd\",\r\n  //     isNumeric: true,\r\n  //     Cell: (props) => formatPriceZero(props.value),\r\n  //   },\r\n  //   {\r\n  //     Header: \"Nett Pay\",\r\n  //     accessor: \"nett_pay_bnd\",\r\n  //     isNumeric: true,\r\n  //     Cell: (props) => formatPriceZero(props.value),\r\n  //   },\r\n  // ];\r\n\r\n  // const exportPdfTable = () => {\r\n  //   PrintPaySummary((singlebatchpayslip = { singlebatchpayslip }));\r\n  // };\r\n\r\n  const handleCalcTotals = () => {\r\n    const data = singlebatchpayslip;\r\n    const totalwages = data.reduce((acc, item) => {\r\n      return acc + item.wages_bnd;\r\n    }, 0);\r\n    const totalsitesallows = data.reduce((acc, item) => {\r\n      return acc + item.site_allows_bnd;\r\n    }, 0);\r\n    const totalexpclaims = data.reduce((acc, item) => {\r\n      return acc + item.expenses_claims_bnd;\r\n    }, 0);\r\n    const totalallows = data.reduce((acc, item) => {\r\n      return acc + item.total_allowances_bnd;\r\n    }, 0);\r\n    const totaldeducts = data.reduce((acc, item) => {\r\n      return acc + item.total_deductions_bnd;\r\n    }, 0);\r\n    const totaltap = data.reduce((acc, item) => {\r\n      return acc + item.tap_amount_bnd;\r\n    }, 0);\r\n    const totalscp = data.reduce((acc, item) => {\r\n      return acc + item.scp_amount_bnd;\r\n    }, 0);\r\n    const totalpayroll = data.reduce((acc, item) => {\r\n      return acc + item.nett_pay_bnd;\r\n    }, 0);\r\n\r\n    setPayrundata({\r\n      ...payrundata,\r\n      totalpayroll: totalpayroll,\r\n      totalwages: totalwages,\r\n      totaltap: totaltap,\r\n      totalscp: totalscp,\r\n      totalallows: totalallows,\r\n      totaldeducts: totaldeducts,\r\n      totalsitesallows: totalsitesallows,\r\n      totalexpensesclaims: totalexpclaims,\r\n    });\r\n    // payrun\r\n    //   .filter((r) => r.payrun === payslip_period)\r\n    //   .map((rec) => {\r\n    //     //update payrun\r\n    //     return updatePayrun({\r\n    //       id: rec.id,\r\n    //       totalpayroll: totalpayroll,\r\n    //       totalwages: totalwages,\r\n    //       totaltap: totaltap,\r\n    //       totalscp: totalscp,\r\n    //       totalallows: totalallows,\r\n    //       totaldeducts: totaldeducts,\r\n    //       totalsitesallows: totalsitesallows,\r\n    //       totalexpensesclaims: totalexpclaims,\r\n    //     });\r\n    //   });\r\n    // console.log(\"payrundata\", payrundata);\r\n    // console.log(\r\n    //   \"totals\",\r\n    //   totalpayroll,\r\n    //   totalwages,\r\n    //   totaltap,\r\n    //   totalscp,\r\n    //   totalallows,\r\n    //   totaldeducts\r\n    // );\r\n  };\r\n\r\n  // const handleSaveCalcTotals = (e) => {\r\n  //   e.preventDefault();\r\n  //   handleCalcTotals();\r\n  //};\r\n\r\n  useEffect(() => {\r\n    handleCalcTotals();\r\n    setIsCalc(false);\r\n  }, [isCalc]);\r\n\r\n  return (\r\n    <div>\r\n      {/* <div style={{ display: \"none\" }}> */}\r\n      <div>\r\n        {/* <div style={{ border: \"1px solid black\" }} align=\"center\">\r\n          <button onClick={() => exportPdfTable()}>\r\n            <Heading size=\"sm\">Print Payroll Summary Report!</Heading>\r\n          </button>\r\n        </div> */}\r\n        {/* <div>\r\n          <div style={{ display: \"none\" }}>\r\n            <ComponentToPrint ref={componentRef} />\r\n          </div>\r\n          <button onClick={handlePrint}>Print this out!</button>\r\n        </div> */}\r\n      </div>\r\n      <form>\r\n        <Grid container direction=\"row\" style={{ border: \"1px solid black\" }}>\r\n          <Grid\r\n          // item\r\n          // sm={12}\r\n          // align=\"center\"\r\n          // style={{ border: \"1px solid black\" }}\r\n          >\r\n            <div>\r\n              {/* <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              style={{ marginLeft: 5 }}\r\n              onClick={(e) => handleSaveCalcTotals(e)}\r\n            >\r\n              Save <Icon className={classes.rightIcon}>send</Icon>\r\n            </Button> */}\r\n              {/* <Heading size=\"sm\">Summary</Heading> */}\r\n              {/* <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n                style={{ marginLeft: 5 }}\r\n                onClick={(e) => handle_Print(e)}\r\n              >\r\n                Print <Icon className={classes.rightIcon}>send</Icon>\r\n              </Button> */}\r\n              {/* <div>\r\n                <ReactToPrint\r\n                  trigger={(e) => {\r\n                    handle_Print(e);\r\n                  }}\r\n                  content={() => this.componentRef}\r\n                />\r\n                <ComponentToPrint ref={(el) => (this.componentRef = el)} />\r\n              </div> */}\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container direction=\"row\" style={{ border: \"1px solid white\" }}>\r\n          <Grid\r\n            item\r\n            sm={3}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <div>\r\n              <TextField\r\n                label=\"Period\"\r\n                name=\"period\"\r\n                variant=\"filled\"\r\n                type=\"text\"\r\n                value={payrundata.period}\r\n                style={{ width: \"100%\" }}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            sm={3}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <div>\r\n              <TextField\r\n                label=\"Pay Run Batch\"\r\n                name=\"payrun\"\r\n                variant=\"filled\"\r\n                type=\"text\"\r\n                value={payrundata.payrun}\r\n                style={{ width: \"100%\" }}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            sm={3}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <div>\r\n              <TextField\r\n                label=\"Status\"\r\n                name=\"status\"\r\n                variant=\"filled\"\r\n                value={payrundata.status}\r\n                style={{ width: \"100%\" }}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            sm={3}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <div>\r\n              <TextField\r\n                label=\"Payroll Total\"\r\n                name=\"paytotal\"\r\n                variant=\"filled\"\r\n                type=\"number\"\r\n                value={currency(payrundata.totalpayroll)}\r\n                style={{ width: \"100%\" }}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container direction=\"row\" style={{ border: \"1px solid white\" }}>\r\n          <Grid\r\n            item\r\n            sm={12}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            {/* <Box h=\"400\" overflow=\"scroll\">\r\n              <PaySummaryTable columns={columns} data={singlebatchpayslip} />\r\n            </Box> */}\r\n            <Box h=\"400\" w=\"full\" overflow=\"scroll\">\r\n              <MaterialTable\r\n                columns={columns}\r\n                data={singlebatchpayslip}\r\n                title=\"Payroll\"\r\n                options={{\r\n                  filtering: false,\r\n                  search: false,\r\n                  toolbar: false,\r\n                  paging: false,\r\n                  headerStyle: {\r\n                    backgroundColor: \"lightblue\",\r\n                    color: \"primary\",\r\n                  },\r\n                  showTitle: false,\r\n                }}\r\n              />\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container direction=\"row\" style={{ border: \"1px solid white\" }}>\r\n          <Grid\r\n            item\r\n            sm={3}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <div>\r\n              <TextField\r\n                label=\"Total Wages\"\r\n                name=\"totalwages\"\r\n                variant=\"filled\"\r\n                type=\"currency\"\r\n                value={currency(payrundata.totalwages)}\r\n                style={{ width: \"100%\" }}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            sm={3}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <div>\r\n              <TextField\r\n                label=\"Total TAP\"\r\n                name=\"totaltap\"\r\n                variant=\"filled\"\r\n                type=\"currency\"\r\n                value={currency(payrundata.totaltap)}\r\n                style={{ width: \"100%\" }}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            sm={3}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <div>\r\n              <TextField\r\n                label=\"Total SCP\"\r\n                name=\"totalscp\"\r\n                variant=\"filled\"\r\n                type=\"currency\"\r\n                value={currency(payrundata.totalscp)}\r\n                style={{ width: \"100%\" }}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            sm={3}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <div>\r\n              <TextField\r\n                label=\"Total Sites Allows\"\r\n                name=\"totalsitesallows\"\r\n                variant=\"filled\"\r\n                type=\"currency\"\r\n                value={currency(payrundata.totalsiteallows)}\r\n                style={{ width: \"100%\" }}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            sm={3}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <div>\r\n              <TextField\r\n                label=\"Total Expenses Claims\"\r\n                name=\"totalsitesallows\"\r\n                variant=\"filled\"\r\n                type=\"currency\"\r\n                value={currency(payrundata.totalexpensesclaims)}\r\n                style={{ width: \"100%\" }}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            sm={3}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <div>\r\n              <TextField\r\n                label=\"Total Allowances\"\r\n                name=\"totalallows\"\r\n                variant=\"filled\"\r\n                type=\"currency\"\r\n                value={currency(payrundata.totalallows)}\r\n                style={{ width: \"100%\" }}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            sm={3}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <div>\r\n              <TextField\r\n                label=\"Total Deductions\"\r\n                name=\"totaldeducts\"\r\n                variant=\"filled\"\r\n                type=\"currency\"\r\n                value={currency(payrundata.totaldeducts)}\r\n                style={{ width: \"100%\" }}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            sm={3}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <div>\r\n              <TextField\r\n                label=\"Total Payroll\"\r\n                name=\"totalpayroll\"\r\n                variant=\"filled\"\r\n                type=\"currency\"\r\n                value={currency(payrundata.totalpayroll)}\r\n                style={{ width: \"100%\" }}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//   root: {\r\n//     flexGrow: 1,\r\n//   },\r\n//   button: {\r\n//     margin: theme.spacing(1),\r\n//   },\r\n//   container: {\r\n//     margin: 0,\r\n//     padding: 0,\r\n//     width: \"80vw\",\r\n//     display: \"grid\",\r\n//     gridTemplateColumns: \"repeat(auto-fill,250px)\",\r\n//     gridAutoRows: \"10px\",\r\n//     position: \"absolute\",\r\n//     left: \"50%\",\r\n//     transform: \"translateX(-50%)\",\r\n//     justifyContent: \"center\",\r\n//     backgroundColor: \"primary\",\r\n//   },\r\n//   fixedHeight: {\r\n//     height: 800,\r\n//   },\r\n//   paper: {\r\n//     padding: theme.spacing(10),\r\n//     // display: \"flex\",\r\n//     display: \"flex\",\r\n//     overflow: \"auto\",\r\n//     flexDirection: \"column\",\r\n//     border: \"1px solid\",\r\n//     width: \"100%\",\r\n//     color: \"primary\",\r\n//     bcakgroundColor: \"black\",\r\n//   },\r\n//   card: {\r\n//     backgroundColor: \"black\",\r\n//   },\r\n//   section: {\r\n//     width: \"80vw\",\r\n//     margin: \"1rem auto\",\r\n//     maxWidth: \"var(--max-width)\",\r\n//   },\r\n//   underline: {\r\n//     width: \"5rem\",\r\n//     height: \"0.25rem\",\r\n//     marginBottom: \"1.25rem\",\r\n//     background: \"var(--clr-primary-5)\",\r\n//     marginLeft: \"auto\",\r\n//     marginRight: \"auto\",\r\n//   },\r\n//   title: {\r\n//     marginbottom: \"4rem\",\r\n//     textAlign: \"center\",\r\n//   },\r\n//   jobscenter: {\r\n//     width: \"80vw\",\r\n//     margin: \"0 auto\",\r\n//     maxWidth: \"var(--max-width)\",\r\n//     flexDirection: \"row\",\r\n//   },\r\n//   btncontainer: {\r\n//     display: \"flex\",\r\n//     flexDirection: \"row\",\r\n//     justifyContent: \"center\",\r\n//     marginBottom: \"4rem\",\r\n//     flexWrap: \"wrap\",\r\n//   },\r\n//   jobbtn: {\r\n//     background: \"transparent\",\r\n//     borderColor: \"transparent\",\r\n//     textTransform: \"capitalize\",\r\n//     fontSize: \"1.25rem\",\r\n//     letterSpacing: \"var(--spacing)\",\r\n//     margin: \"0 0.5rem\",\r\n//     transition: \"var(--transition)\",\r\n//     cursor: \"pointer\",\r\n//     padding: \"0.25rem 0\",\r\n//     lineHeight: \"1\",\r\n//     outlineColor: \"var(--clr-primary-10)\",\r\n//     \"&:hover\": {\r\n//       color: \"var(--clr-primary-5)\",\r\n//       boxShadow: \"0 2px var(--clr-primary-5)\",\r\n//     },\r\n//   },\r\n//   activebtn: {\r\n//     color: \"var(--clr-primary-5)\",\r\n//     boxShadow: \"0 2px var(--clr-primary-5)\",\r\n//   },\r\n//   jobinfo: {\r\n//     fontWeight: \"400\",\r\n//   },\r\n//   divider: {\r\n//     // Theme Color, or use css color in quote\r\n//     background: \"white\",\r\n//   },\r\n//   textField: {\r\n//     marginLeft: theme.spacing(1),\r\n//     marginRight: theme.spacing(1),\r\n//     width: 350,\r\n//   },\r\n//   divContainer: {\r\n//     display: \"flex\",\r\n//     flexDirection: \"row\",\r\n//   },\r\n// }));\r\n\r\nexport default PaySummary;\r\n"],"mappings":"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,EAAE;gBAAEW,KAAK,EAAE;cAAO,CAAE;cACzB,eAAe,EAAE;gBACfC,MAAM,EAAE;cACV,CAAE;cACF,UAAU,EAAE;gBACVC,QAAQ,EAAE;cACZ;YAAE;cAAA;cAAA;cAAA;YAAA;UACF;YAAA;YAAA;YAAA;UAAA;QACE;UAAA;UAAA;UAAA;QAAA,QACD,eACP,QAAC,IAAI;UACH,IAAI;UACJ,EAAE,EAAE,CAAE;UACN,KAAK,EAAC,QAAQ;UACd,KAAK,EAAE;YAAEJ,MAAM,EAAE;UAAkB,CAAE;UAAA,uBAErC;YAAA,uBACE,QAAC,SAAS;cACR,KAAK,EAAC,eAAe;cACrB,IAAI,EAAC,cAAc;cACnB,OAAO,EAAC,QAAQ;cAChB,IAAI,EAAC,UAAU;cACf,KAAK,EAAExC,QAAQ,CAACS,UAAU,CAAC4B,YAAY,CAAE;cACzC,KAAK,EAAE;gBAAEK,KAAK,EAAE;cAAO,CAAE;cACzB,eAAe,EAAE;gBACfC,MAAM,EAAE;cACV,CAAE;cACF,UAAU,EAAE;gBACVC,QAAQ,EAAE;cACZ;YAAE;cAAA;cAAA;cAAA;YAAA;UACF;YAAA;YAAA;YAAA;UAAA;QACE;UAAA;UAAA;UAAA;QAAA,QACD;MAAA;QAAA;QAAA;QAAA;MAAA,QACF;IAAA;MAAA;MAAA;MAAA;IAAA,QACF;EAAA;IAAA;IAAA;IAAA;EAAA,QACH;AAEV,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,GAzqBMrC,UAAU;EAAA,QAIsBF,cAAc;AAAA;AAAA,KAJ9CE,UAAU;AA2qBhB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module"}
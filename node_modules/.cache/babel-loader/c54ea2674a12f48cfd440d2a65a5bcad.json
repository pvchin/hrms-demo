{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-demo\\\\src\\\\components\\\\DailyAllowancesTableViewSummary.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\"; //import { useHistory} from \"react-router-dom\";\n\nimport MaterialTable from \"material-table\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Box } from \"@chakra-ui/react\";\nimport { //useSetRecoilState,\nuseRecoilValue //useRecoilState,\n//useRecoilValueLoadable,\n} from \"recoil\";\nimport { allowsPeriodState //allowsDataState,\n//empidState,\n} from \"./data/atomdata\"; //import { fetchDailyAllowancesSelector } from \"./data/selectordata\";\n//import AddIcon from \"@material-ui/icons/Add\";\n//import EditIcon from \"@material-ui/icons/Edit\";\n//import DeleteIcon from \"@material-ui/icons/Delete\";\n//import CheckIcon from \"@material-ui/icons/Check\";\n//import SearchIcon from \"@material-ui/icons/Search\";\n//import ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\n//import { CustomDialog } from \"../helpers/CustomDialog\";\n//import { useDailyAllowancesContext } from \"../context/dailyallowances_context\";\n//import { useEmployeesContext } from \"../context/employees_context\";\n\nimport { useDailyAllowsPeriod } from \"./dailyallows/useDailyAllowsPeriod\"; //const FILTERSTRING = \"Submitted\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  title: \"Name\",\n  field: \"name\"\n}, {\n  title: \"Period\",\n  field: \"period\"\n}, {\n  title: \"Location\",\n  field: \"location\"\n}, {\n  title: \"Manager\",\n  field: \"manager_name\"\n}, {\n  title: \"Days\",\n  field: \"no_of_days\",\n  type: \"numeric\"\n}, {\n  title: \"Amount\",\n  field: \"amount\",\n  type: \"currency\"\n}, {\n  title: \"Status\",\n  field: \"status\"\n}];\nexport default function DailyAllowancesTable({\n  month,\n  year\n}) {\n  _s();\n\n  //let history = useHistory();\n  const classes = useStyles();\n  const period = `${year}-${month}`; //const [isDialogOpen, setIsDialogOpen] = useState(false);\n  //const [tmpallowsdata, setTmpallowsdata] = useState([]);\n\n  const allows_period = useRecoilValue(allowsPeriodState); //const allows_empid = useRecoilValue(empidState);\n  //const [allowsdata, setAllowsdata] = useRecoilState(allowsDataState);\n  //const setEmpID = useSetRecoilState(empidState);\n\n  const title = `Site Allowances (${allows_period})`;\n  const {\n    dailyallowsperiod,\n    setDailyAllowsPeriodId\n  } = useDailyAllowsPeriod(); // const {\n  //   dailyallowances,\n  //   loadPendingDailyAllowances,\n  //   singlebatch_dailyallowance,\n  //   singlebatch_dailyallowance_loading,\n  //   deleteDailyAllowance,\n  //   setEditDailyAllowanceID,\n  //   setIsDailyAllowanceEditingOn,\n  //   setIsDailyAllowanceEditingOff,\n  //   resetSingleDailyAllowance,\n  //   dailyallowance_period,\n  //   getSingleBatchDailyAllowance,\n  // } = useDailyAllowancesContext();\n\n  useEffect(() => {\n    setDailyAllowsPeriodId(period);\n  }, []); //const handleDialogOpen = () => {\n  //console.log(\"allowsdetls\", allowsdata, allowsdataRef, singlebatch_dailyallowsdetl);\n  //setAllowsdata({ singlebatch_dailyallowsdetl });\n  //setIsDialogOpen(true);\n  //};\n  //const handleDialogClose = () => {\n  //setIsDialogOpen(false);\n  //getSingleBatchDailyAllowance(dailyallowance_period);\n  //};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      maxW: \"100%\",\n      pt: \"5px\",\n      overflow: \"scroll\",\n      children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n        columns: columns,\n        data: dailyallowsperiod,\n        title: title,\n        options: {\n          filtering: false,\n          search: false,\n          toolbar: false,\n          paging: false,\n          headerStyle: {\n            backgroundColor: \"rgba(75, 192, 192, 1)\",\n            color: \"#FFF\"\n          },\n          showTitle: false\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DailyAllowancesTable, \"jbgRQXhR4thKqpb5QNPfSOtaPEM=\", false, function () {\n  return [useStyles, useRecoilValue, useDailyAllowsPeriod];\n});\n\n_c = DailyAllowancesTable;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: 0\n  },\n  dialog: {\n    width: 1000\n  }\n}));\n\nvar _c;\n\n$RefreshReg$(_c, \"DailyAllowancesTable\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-demo/src/components/DailyAllowancesTableViewSummary.js"],"names":["React","useState","useEffect","MaterialTable","makeStyles","Box","useRecoilValue","allowsPeriodState","useDailyAllowsPeriod","columns","title","field","type","DailyAllowancesTable","month","year","classes","useStyles","period","allows_period","dailyallowsperiod","setDailyAllowsPeriodId","root","filtering","search","toolbar","paging","headerStyle","backgroundColor","color","showTitle","theme","padding","dialog","width"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n//import { useHistory} from \"react-router-dom\";\r\nimport MaterialTable from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Box } from \"@chakra-ui/react\";\r\nimport {\r\n  //useSetRecoilState,\r\n  useRecoilValue,\r\n  //useRecoilState,\r\n  //useRecoilValueLoadable,\r\n} from \"recoil\";\r\nimport {\r\n  allowsPeriodState,\r\n  //allowsDataState,\r\n  //empidState,\r\n} from \"./data/atomdata\";\r\n//import { fetchDailyAllowancesSelector } from \"./data/selectordata\";\r\n//import AddIcon from \"@material-ui/icons/Add\";\r\n//import EditIcon from \"@material-ui/icons/Edit\";\r\n//import DeleteIcon from \"@material-ui/icons/Delete\";\r\n//import CheckIcon from \"@material-ui/icons/Check\";\r\n//import SearchIcon from \"@material-ui/icons/Search\";\r\n//import ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\n//import { CustomDialog } from \"../helpers/CustomDialog\";\r\n//import { useDailyAllowancesContext } from \"../context/dailyallowances_context\";\r\n//import { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useDailyAllowsPeriod } from \"./dailyallows/useDailyAllowsPeriod\";\r\n\r\n//const FILTERSTRING = \"Submitted\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n  },\r\n  { title: \"Period\", field: \"period\" },\r\n  { title: \"Location\", field: \"location\" },\r\n  { title: \"Manager\", field: \"manager_name\" },\r\n  { title: \"Days\", field: \"no_of_days\", type: \"numeric\" },\r\n  { title: \"Amount\", field: \"amount\", type: \"currency\" },\r\n  { title: \"Status\", field: \"status\" },\r\n];\r\n\r\nexport default function DailyAllowancesTable({ month, year }) {\r\n  //let history = useHistory();\r\n  const classes = useStyles();\r\n  const period = `${year}-${month}`;\r\n\r\n  //const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  //const [tmpallowsdata, setTmpallowsdata] = useState([]);\r\n  const allows_period = useRecoilValue(allowsPeriodState);\r\n  //const allows_empid = useRecoilValue(empidState);\r\n  //const [allowsdata, setAllowsdata] = useRecoilState(allowsDataState);\r\n  //const setEmpID = useSetRecoilState(empidState);\r\n  const title = `Site Allowances (${allows_period})`;\r\n  const { dailyallowsperiod, setDailyAllowsPeriodId } = useDailyAllowsPeriod();\r\n  // const {\r\n  //   dailyallowances,\r\n  //   loadPendingDailyAllowances,\r\n  //   singlebatch_dailyallowance,\r\n  //   singlebatch_dailyallowance_loading,\r\n  //   deleteDailyAllowance,\r\n  //   setEditDailyAllowanceID,\r\n  //   setIsDailyAllowanceEditingOn,\r\n  //   setIsDailyAllowanceEditingOff,\r\n  //   resetSingleDailyAllowance,\r\n  //   dailyallowance_period,\r\n  //   getSingleBatchDailyAllowance,\r\n  // } = useDailyAllowancesContext();\r\n\r\n  useEffect(() => {\r\n    setDailyAllowsPeriodId(period);\r\n  }, []);\r\n\r\n  //const handleDialogOpen = () => {\r\n    //console.log(\"allowsdetls\", allowsdata, allowsdataRef, singlebatch_dailyallowsdetl);\r\n    //setAllowsdata({ singlebatch_dailyallowsdetl });\r\n    //setIsDialogOpen(true);\r\n  //};\r\n\r\n  //const handleDialogClose = () => {\r\n    //setIsDialogOpen(false);\r\n    //getSingleBatchDailyAllowance(dailyallowance_period);\r\n  //};\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Box maxW=\"100%\" pt=\"5px\" overflow=\"scroll\">\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={dailyallowsperiod}\r\n          title={title}\r\n          options={{\r\n            filtering: false,\r\n            search: false,\r\n            toolbar: false,\r\n            paging: false,\r\n            headerStyle: {\r\n              backgroundColor: \"rgba(75, 192, 192, 1)\",\r\n              color: \"#FFF\",\r\n            },\r\n            showTitle: false,\r\n          }}\r\n        />\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n  dialog: {\r\n    width: 1000,\r\n  },\r\n}));\r\n"]},"metadata":{},"sourceType":"module"}
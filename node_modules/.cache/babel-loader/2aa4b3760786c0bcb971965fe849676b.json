{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-airtable\\\\src\\\\components\\\\PayslipTableViewSummary.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport MaterialTable from \"material-table\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Box, useDisclosure } from \"@chakra-ui/react\";\nimport { GrTask } from \"react-icons/gr\";\nimport { useRecoilState } from \"recoil\";\n//import { useHistory } from \"react-router-dom\";\n//import { useSetRecoilState } from \"recoil\";\nimport\n//payPeriodState,\n//payPeriodEndMonthState,\n//payPeriodEmpIdState,\n\"./data/atomdata\";\n//import { usePayslipsContext } from \"../context/payslips_context\";\nimport { CustomDialog } from \"../helpers/CustomDialog\";\nimport { usePayrunStatus } from \"./payrun/usePayrunStatus\";\nimport { loginLevelState } from \"./data/atomdata\";\nimport { useUpdatePayrun } from \"./payrun/useUpdatePayrun\";\nimport ApprovalManagerScreen from \"./ApprovalManagerScreen\";\n\n//const FILTERSTRING = \"Pending\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PayslipTableVIew(_ref) {\n  _s();\n  let {\n    status\n  } = _ref;\n  //let history = useHistory();\n  const classes = useStyles();\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\n  //const setPayPeriodEmpId = useSetRecoilState(payPeriodEmpIdState);\n  //const { payrun, getPayrun,payrun_loading, loadPendingPayslips } =\n  //  usePayslipsContext();\n  //const { loadEmployees, employees } = useEmployeesContext();\n  const updatePayrun = useUpdatePayrun();\n  const {\n    payrunstatus,\n    setPayrunStatusId\n  } = usePayrunStatus();\n  const [payrunID, setPayrunID] = useState(\"\");\n  const [formdata, setFormdata] = useState({});\n  const {\n    isOpen: isAppScreenOpen,\n    onOpen: onAppScreenOpen,\n    onClose: onAppScreenClose\n  } = useDisclosure();\n  const columns = useMemo(() => [\n  // { title: \"Period\", field: \"period\" },\n  {\n    title: \"Payrun Batch\",\n    field: \"payrun\",\n    type: \"date\",\n    dateSetting: {\n      locale: \"en-GB\"\n    }\n  },\n  // {\n  //   title: \"Pay Date\",\n  //   field: \"pay_date\",\n  //   type: \"date\",\n  //   dateSetting: { locale: \"en-GB\" },\n  // },\n  {\n    title: \"Total Wages\",\n    field: \"totalwages\",\n    type: \"currency\"\n  }, {\n    title: \"TAP Amount\",\n    field: \"totaltap\",\n    type: \"currency\"\n  }, {\n    title: \"SCP Amount\",\n    field: \"totalscp\",\n    type: \"currency\"\n  }, {\n    title: \"Site Allowances\",\n    field: \"totalsitesallows\",\n    type: \"currency\"\n  }, {\n    title: \"Expenses Claims\",\n    field: \"totalexpensesclaims\",\n    type: \"currency\"\n  }, {\n    title: \"Total Allowances\",\n    field: \"totalallows\",\n    type: \"currency\"\n  }, {\n    title: \"Total Deductions\",\n    field: \"totaldeducts\",\n    type: \"currency\"\n  }, {\n    title: \"Total Payroll\",\n    field: \"totalpayroll\",\n    type: \"currency\"\n  }, {\n    title: \"Status\",\n    field: \"status\"\n  }], []);\n  const Update_Payrun = data => {\n    const {\n      id,\n      rec_id,\n      tableData,\n      ...fields\n    } = data;\n    const editData = {\n      ...fields\n    };\n    setFormdata({\n      ...editData\n    });\n    setFormdata({\n      ...editData\n    });\n    setPayrunID(id);\n    handleAppScreenOpen();\n  };\n  const handleAppScreenOpen = () => {\n    onAppScreenOpen();\n  };\n  const handleAppScreenClose = () => {\n    onAppScreenClose();\n  };\n  const handleOnUpdateConfirm = data => {\n    console.log(\"update\", data);\n    const posted = data.status === \"Delete\" ? \"D\" : \"\";\n    const upddata = {\n      ...data\n    };\n    updatePayrun({\n      id: payrunID,\n      ...upddata\n    });\n  };\n  useEffect(() => {\n    setPayrunStatusId(status);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      maxW: \"100%\",\n      pt: \"5px\",\n      overflow: \"Scroll\",\n      children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n        columns: columns,\n        data: payrunstatus,\n        title: \"Payslips\",\n        actions: [rowData => ({\n          icon: () => /*#__PURE__*/_jsxDEV(GrTask, {\n            size: \"23px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 27\n          }, this),\n          hidden: loginLevel.loginLevel !== \"Manager\",\n          tooltip: \"Edit\",\n          onClick: (event, rowData) => {\n            Update_Payrun(rowData);\n          }\n        })],\n        options: {\n          filtering: false,\n          search: false,\n          toolbar: false,\n          paging: false,\n          headerStyle: {\n            backgroundColor: \"rgba(75, 192, 192, 1)\",\n            color: \"#FFF\"\n          },\n          showTitle: false\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CustomDialog, {\n      isOpen: isAppScreenOpen,\n      handleClose: handleAppScreenClose,\n      title: \"\",\n      showButton: true,\n      isFullscree: false,\n      children: /*#__PURE__*/_jsxDEV(ApprovalManagerScreen, {\n        formdata: formdata,\n        setFormdata: setFormdata,\n        handleDialogClose: handleAppScreenClose,\n        onConfirm: handleOnUpdateConfirm,\n        tabIndex: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}\n_s(PayslipTableVIew, \"J17SeRbzmAeAXCobXfcwCLbNsR8=\", false, function () {\n  return [useStyles, useRecoilState, useUpdatePayrun, usePayrunStatus, useDisclosure];\n});\n_c = PayslipTableVIew;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: 0\n  }\n}));\nvar _c;\n$RefreshReg$(_c, \"PayslipTableVIew\");","map":{"version":3,"names":["React","useEffect","useMemo","useState","MaterialTable","makeStyles","Box","useDisclosure","GrTask","useRecoilState","CustomDialog","usePayrunStatus","loginLevelState","useUpdatePayrun","ApprovalManagerScreen","PayslipTableVIew","status","classes","useStyles","loginLevel","setLoginLevel","updatePayrun","payrunstatus","setPayrunStatusId","payrunID","setPayrunID","formdata","setFormdata","isOpen","isAppScreenOpen","onOpen","onAppScreenOpen","onClose","onAppScreenClose","columns","title","field","type","dateSetting","locale","Update_Payrun","data","id","rec_id","tableData","fields","editData","handleAppScreenOpen","handleAppScreenClose","handleOnUpdateConfirm","console","log","posted","upddata","root","rowData","icon","hidden","tooltip","onClick","event","filtering","search","toolbar","paging","headerStyle","backgroundColor","color","showTitle","theme","padding"],"sources":["D:/react-myprojects/hrms-airtable/src/components/PayslipTableViewSummary.js"],"sourcesContent":["import React, { useEffect, useMemo, useState } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Box, useDisclosure } from \"@chakra-ui/react\";\r\nimport { GrTask } from \"react-icons/gr\";\r\nimport { useRecoilState } from \"recoil\";\r\n//import { useHistory } from \"react-router-dom\";\r\n//import { useSetRecoilState } from \"recoil\";\r\nimport //payPeriodState,\r\n//payPeriodEndMonthState,\r\n//payPeriodEmpIdState,\r\n\"./data/atomdata\";\r\n//import { usePayslipsContext } from \"../context/payslips_context\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { usePayrunStatus } from \"./payrun/usePayrunStatus\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport { useUpdatePayrun } from \"./payrun/useUpdatePayrun\";\r\nimport ApprovalManagerScreen from \"./ApprovalManagerScreen\";\r\n\r\n//const FILTERSTRING = \"Pending\";\r\n\r\nexport default function PayslipTableVIew({ status }) {\r\n  //let history = useHistory();\r\n  const classes = useStyles();\r\n   const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  //const setPayPeriodEmpId = useSetRecoilState(payPeriodEmpIdState);\r\n  //const { payrun, getPayrun,payrun_loading, loadPendingPayslips } =\r\n  //  usePayslipsContext();\r\n  //const { loadEmployees, employees } = useEmployeesContext();\r\n  const updatePayrun = useUpdatePayrun()\r\n  const { payrunstatus, setPayrunStatusId } = usePayrunStatus();\r\n  const [payrunID, setPayrunID] = useState(\"\")\r\n  const [formdata, setFormdata] = useState({});\r\n  const {\r\n    isOpen: isAppScreenOpen,\r\n    onOpen: onAppScreenOpen,\r\n    onClose: onAppScreenClose,\r\n  } = useDisclosure();\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      // { title: \"Period\", field: \"period\" },\r\n      {\r\n        title: \"Payrun Batch\",\r\n        field: \"payrun\",\r\n        type: \"date\",\r\n        dateSetting: { locale: \"en-GB\" },\r\n      },\r\n      // {\r\n      //   title: \"Pay Date\",\r\n      //   field: \"pay_date\",\r\n      //   type: \"date\",\r\n      //   dateSetting: { locale: \"en-GB\" },\r\n      // },\r\n      { title: \"Total Wages\", field: \"totalwages\", type: \"currency\" },\r\n      { title: \"TAP Amount\", field: \"totaltap\", type: \"currency\" },\r\n      { title: \"SCP Amount\", field: \"totalscp\", type: \"currency\" },\r\n      { title: \"Site Allowances\", field: \"totalsitesallows\", type: \"currency\" },\r\n      {\r\n        title: \"Expenses Claims\",\r\n        field: \"totalexpensesclaims\",\r\n        type: \"currency\",\r\n      },\r\n      { title: \"Total Allowances\", field: \"totalallows\", type: \"currency\" },\r\n      { title: \"Total Deductions\", field: \"totaldeducts\", type: \"currency\" },\r\n      { title: \"Total Payroll\", field: \"totalpayroll\", type: \"currency\" },\r\n      { title: \"Status\", field: \"status\" },\r\n    ],\r\n    []\r\n  );\r\n\r\n  const Update_Payrun = (data) => {\r\n     const { id, rec_id, tableData, ...fields } = data;\r\n     const editData = { ...fields };\r\n\r\n     setFormdata({ ...editData });\r\n     setFormdata({ ...editData });\r\n     setPayrunID(id);\r\n     handleAppScreenOpen();\r\n  }\r\n\r\n  const handleAppScreenOpen = () => {\r\n    onAppScreenOpen();\r\n  };\r\n  const handleAppScreenClose = () => {\r\n    onAppScreenClose();\r\n  };\r\n\r\n   const handleOnUpdateConfirm = (data) => {\r\n     console.log(\"update\", data);\r\n     const posted = data.status === \"Delete\" ? \"D\" : \"\";\r\n     const upddata = { ...data };\r\n     updatePayrun({ id: payrunID, ...upddata });\r\n  };\r\n  \r\n  useEffect(() => {\r\n    setPayrunStatusId(status);\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Box maxW=\"100%\" pt=\"5px\" overflow=\"Scroll\">\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={payrunstatus}\r\n          title=\"Payslips\"\r\n          actions={[\r\n            (rowData) => ({\r\n              icon: () => <GrTask size=\"23px\" />,\r\n              hidden: loginLevel.loginLevel !== \"Manager\",\r\n              tooltip: \"Edit\",\r\n              onClick: (event, rowData) => {\r\n                Update_Payrun(rowData);\r\n              },\r\n            }),\r\n          ]}\r\n          options={{\r\n            filtering: false,\r\n            search: false,\r\n            toolbar: false,\r\n            paging: false,\r\n            headerStyle: {\r\n              backgroundColor: \"rgba(75, 192, 192, 1)\",\r\n              color: \"#FFF\",\r\n            },\r\n            showTitle: false,\r\n          }}\r\n        />\r\n      </Box>\r\n      <CustomDialog\r\n        isOpen={isAppScreenOpen}\r\n        handleClose={handleAppScreenClose}\r\n        title=\"\"\r\n        showButton={true}\r\n        isFullscree={false}\r\n      >\r\n        <ApprovalManagerScreen\r\n          formdata={formdata}\r\n          setFormdata={setFormdata}\r\n          handleDialogClose={handleAppScreenClose}\r\n          onConfirm={handleOnUpdateConfirm}\r\n          tabIndex={3}\r\n        />\r\n      </CustomDialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
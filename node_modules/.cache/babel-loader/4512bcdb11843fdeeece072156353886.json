{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-demo\\\\src\\\\components\\\\LeaveTableApproval.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport MaterialTable, { MTableToolbar } from \"material-table\";\nimport { TextField, MenuItem } from \"@material-ui/core\";\nimport { Button, HStack } from \"@chakra-ui/react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport * as emailjs from \"emailjs-com\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\"; //import EditIcon from \"@material-ui/icons/Edit\";\n\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport LeaveFormAdmin from \"./LeaveFormAdmin\";\nimport { useRecoilState } from \"recoil\";\nimport { loginLevelState } from \"./data/atomdata\";\nimport { CustomDialog } from \"../helpers/CustomDialog\";\nimport { useCustomToast } from \"../helpers/useCustomToast\";\nimport { AlertDialogBox } from \"../helpers/AlertDialogBox\";\nimport { useLeavesContext } from \"../context/leaves_context\"; //import { useEmployeesContext } from \"../context/employees_context\";\n//import { useLeaves } from \"./leaves/useLeaves\";\n\nimport { useLeavesStatus } from \"./leaves/useLeavesStatus\"; //import { useAddLeaves } from \"./leaves/useAddLeaves\";\n\nimport { useDeleteLeaves } from \"./leaves/useDeleteLeaves\";\nimport { useUpdateLeaves } from \"./leaves/useUpdateLeaves\";\nimport { useEmployees } from \"./employees/useEmployees\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SERVICE_ID = process.env.REACT_APP_EMAILJS_SERVICEID;\nconst TEMPLATE_ID = \"template_1y8odlq\";\nconst USER_ID = process.env.REACT_APP_EMAILJS_USERID;\nconst ADMINMANAGER_EMAIL = process.env.REACT_APP_ADMINMANAGER_EMAIL;\nconst initial_form = {\n  name: \"\",\n  to_date: \"\",\n  from_date: \"\",\n  reason: \"\",\n  status: \"Pending\",\n  no_of_days: 0,\n  leave_bal: 0\n};\nexport default function LeaveTableApproval() {\n  _s();\n\n  const classes = useStyles();\n  const toast = useCustomToast(); //const { leaves, filter, setFilter, setLeaveId } = useLeaves();\n\n  const {\n    employees\n  } = useEmployees();\n  const {\n    leavesstatus,\n    setLeaveStatusId\n  } = useLeavesStatus();\n  const updateLeaves = useUpdateLeaves(); //const addLeaves = useAddLeaves();\n\n  const deleteLeaves = useDeleteLeaves();\n  const [formdata, setFormdata] = useState(initial_form);\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\n  const [isUpdate, setIsUpdate] = useState(true);\n  const leavedata = leavesstatus.filter(r => r.reporting_email === loginLevel.loginEmail);\n  const {\n    // leaves,\n    editLeaveID //leaves_loading,\n    //deleteLeave,\n    //loadLeaves,\n    //getSingleLeave,\n    //setEditLeaveID,\n    //setIsLeaveEditingOn,\n    //setIsLeaveEditingOff,\n    //resetSingleLeave,\n\n  } = useLeavesContext();\n  const columns = useMemo(() => [{\n    title: \"Name\",\n    field: \"name\",\n    editable: \"never\"\n  }, {\n    title: \"From Date\",\n    field: \"from_date\",\n    type: \"date\",\n    dateSetting: {\n      locale: \"en-GB\"\n    },\n    editable: \"never\"\n  }, {\n    title: \"To Date\",\n    field: \"to_date\",\n    type: \"date\",\n    dateSetting: {\n      locale: \"en-GB\"\n    },\n    editable: \"never\"\n  }, {\n    title: \"Leave Balance\",\n    field: \"leave_bal\",\n    type: \"numeric\",\n    editable: \"never\"\n  }, {\n    title: \"No of Days\",\n    field: \"no_of_days\",\n    type: \"numeric\",\n    editable: \"never\"\n  }, {\n    title: \"Reason\",\n    field: \"reason\",\n    editable: \"never\"\n  }, {\n    title: \"Status\",\n    field: \"status\",\n    editComponent: props => /*#__PURE__*/_jsxDEV(TextField //defaultValue={props.value || null}\n    , {\n      onChange: e => props.onChange(e.target.value),\n      style: {\n        width: 100\n      },\n      value: props.value,\n      select: true,\n      children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n        value: \"Pending\",\n        children: \"Pending\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        value: \"Approve\",\n        children: \"Approve\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        value: \"Reject\",\n        children: \"Reject\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        value: \"Cancel\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }, this)\n  }], []);\n  useEffect(() => {\n    setLeaveStatusId(\"Pending\");\n  }, []); // const update_Leave = async (data) => {\n  //   const { id } = data;\n  //   setFormdata({ ...data });\n  //   setEditLeaveID(id);\n  //   setIsLeaveEditingOn();\n  //   getSingleLeave(id);\n  //   handleDialogOpen();\n  //   //history.push(\"/singleleave\");\n  // };\n  // const add_Leave = async (data) => {\n  //   // const { id } = data;\n  //   setFormdata({ ...data });\n  //   resetSingleLeave();\n  //   setEditLeaveID(\"\");\n  //   setIsLeaveEditingOff();\n  //   handleDialogOpen();\n  //   //history.push(\"/singleleave\");\n  // };\n  // const delete_Leave = (data) => {\n  //   const { id } = data;\n  //   setEditLeaveID(id);\n  //   handleAlertOpen();\n  //   //deleteLeave(id);\n  //   //loadLeaves();\n  // };\n  // const handleDialogOpen = () => {\n  //   setIsDialogOpen(true);\n  // };\n\n  const handleDialogClose = () => {\n    setIsDialogOpen(false);\n  }; // const handleAlertOpen = () => {\n  //   setIsAlertOpen(true);\n  // };\n\n\n  const handleAlertClose = () => {\n    setIsAlertOpen(false);\n  };\n\n  const handleOnDeleteConfirm = () => {\n    const id = editLeaveID;\n    deleteLeaves(id);\n  };\n\n  const handleSentEmail = (data, result) => {\n    const {\n      from_date,\n      to_date,\n      name,\n      empid\n    } = data;\n    const emp = employees.filter(f => f.id === empid).map(r => {\n      return { ...r\n      };\n    });\n    console.log(\"leave form\", data, emp);\n    var emaildata = {\n      to_name: name,\n      to_email: emp[0].email,\n      message: `Your leave application from ${from_date} to ${to_date} has been ${result}!`,\n      cc_to: ADMINMANAGER_EMAIL\n    };\n    emailjs.send(SERVICE_ID, TEMPLATE_ID, emaildata, USER_ID).then(function (response) {\n      console.log(response.status, response.text);\n      toast({\n        title: `Email has sent successfully to ${emaildata.to_email}!`,\n        status: \"success\"\n      });\n    }, function (err) {\n      console.log(err);\n      toast({\n        title: `Email has fail to send to ${emaildata.to_email}!`,\n        status: \"warning\"\n      });\n    });\n  };\n\n  const Approve_Leave = () => {\n    leavedata.forEach(rec => {\n      if (rec.tableData.checked) {\n        const currentrec = rec;\n        currentrec.status = \"Approved\";\n        updateLeaves({\n          id: rec.id,\n          status: \"Approved\"\n        });\n        toast({\n          title: \"Leave record being approved!\",\n          status: \"success\"\n        }); //sent email\n\n        handleSentEmail(rec, \"Approved\");\n      }\n    });\n    leavedata.forEach(d => {\n      if (d.tableData) d.tableData.checked = false;\n    });\n  };\n\n  const Reject_Leave = () => {\n    leavedata.forEach(rec => {\n      if (rec.tableData.checked) {\n        const currentrec = rec;\n        currentrec.status = \"Rejected\";\n        updateLeaves({\n          id: rec.id,\n          status: \"Rejected\"\n        });\n        setIsUpdate(true);\n        toast({\n          title: \"Leave record being rejected!\",\n          status: \"success\"\n        }); //sent email\n\n        handleSentEmail(rec, \"Approved\");\n      }\n    });\n    leavedata.forEach(d => {\n      if (d.tableData) d.tableData.checked = false;\n    });\n  }; //console.log(\"leave\", ADMINMANAGER_EMAIL, USER_ID);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: \"100%\",\n        paddingTop: \"5px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(MaterialTable, {\n        columns: columns // data={leavesstatus.filter(\n        //   (r) => r.reporting_email === loginLevel.loginEmail\n        // )}\n        ,\n        data: leavedata,\n        title: \"Leave Application\",\n        icons: {\n          Add: props => /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 29\n          }, this),\n          Edit: props => /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 30\n          }, this),\n          View: props => /*#__PURE__*/_jsxDEV(VisibilityIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 30\n          }, this),\n          Delete: props => /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 32\n          }, this),\n          Clear: props => /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 31\n          }, this),\n          Check: props => /*#__PURE__*/_jsxDEV(CheckIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 31\n          }, this),\n          Search: props => /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 32\n          }, this),\n          ResetSearch: props => /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 37\n          }, this)\n        },\n        actions: [// {\n          //   icon: () => <VisibilityIcon />,\n          //   tooltip: \"Edit Record\",\n          //   onClick: (event, rowData) => {\n          //     update_Leave(rowData);\n          //   },\n          // },\n          // {\n          //   icon: \"delete\",\n          //   tooltip: \"Delete Record\",\n          //   onClick: (event, rowData) => {\n          //     delete_Leave(rowData);\n          //   },\n          // },\n          // {\n          //   icon: \"add\",\n          //   tooltip: \"Add Record\",\n          //   isFreeAction: true,\n          //   onClick: (event, rowData) => {\n          //     add_Leave(rowData);\n          //   },\n          // },\n        ],\n        options: {\n          filtering: true,\n          selection: true,\n          paging: false,\n          headerStyle: {\n            backgroundColor: \"rgba(75, 192, 192, 1)\",\n            color: \"white\"\n          },\n          showTitle: true\n        },\n        components: {\n          Toolbar: props => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(MTableToolbar, { ...props\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(HStack, {\n              p: 2,\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                variant: \"solid\",\n                color: \"white\",\n                bgColor: \"red\" //className={classes.button}\n                ,\n                onClick: Approve_Leave,\n                children: \"Approve\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                variant: \"solid\",\n                color: \"white\",\n                bgColor: \"red\" //className={classes.button}\n                ,\n                onClick: Reject_Leave,\n                children: \"Reject\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 15\n          }, this)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CustomDialog, {\n        isOpen: isDialogOpen,\n        handleClose: handleDialogClose,\n        title: \"\",\n        showButton: true,\n        isFullscree: false,\n        children: /*#__PURE__*/_jsxDEV(LeaveFormAdmin, {\n          formdata: formdata,\n          setFormdata: setFormdata,\n          handleDialogClose: handleDialogClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AlertDialogBox, {\n        onClose: handleAlertClose,\n        onConfirm: handleOnDeleteConfirm,\n        isOpen: isAlertOpen,\n        title: \"Delete Expenses\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Are you sure you want to delete ?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 261,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LeaveTableApproval, \"SrgeL/4oH95OU0+aYfYSHf3154c=\", false, function () {\n  return [useStyles, useCustomToast, useEmployees, useLeavesStatus, useUpdateLeaves, useDeleteLeaves, useRecoilState, useLeavesContext];\n});\n\n_c = LeaveTableApproval;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: 0\n  }\n}));\n\nvar _c;\n\n$RefreshReg$(_c, \"LeaveTableApproval\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-demo/src/components/LeaveTableApproval.js"],"names":["React","useState","useEffect","useMemo","MaterialTable","MTableToolbar","TextField","MenuItem","Button","HStack","makeStyles","emailjs","AddIcon","VisibilityIcon","DeleteIcon","CheckIcon","SearchIcon","LeaveFormAdmin","useRecoilState","loginLevelState","CustomDialog","useCustomToast","AlertDialogBox","useLeavesContext","useLeavesStatus","useDeleteLeaves","useUpdateLeaves","useEmployees","SERVICE_ID","process","env","REACT_APP_EMAILJS_SERVICEID","TEMPLATE_ID","USER_ID","REACT_APP_EMAILJS_USERID","ADMINMANAGER_EMAIL","REACT_APP_ADMINMANAGER_EMAIL","initial_form","name","to_date","from_date","reason","status","no_of_days","leave_bal","LeaveTableApproval","classes","useStyles","toast","employees","leavesstatus","setLeaveStatusId","updateLeaves","deleteLeaves","formdata","setFormdata","loginLevel","setLoginLevel","isDialogOpen","setIsDialogOpen","isAlertOpen","setIsAlertOpen","isUpdate","setIsUpdate","leavedata","filter","r","reporting_email","loginEmail","editLeaveID","columns","title","field","editable","type","dateSetting","locale","editComponent","props","e","onChange","target","value","width","handleDialogClose","handleAlertClose","handleOnDeleteConfirm","id","handleSentEmail","data","result","empid","emp","f","map","console","log","emaildata","to_name","to_email","email","message","cc_to","send","then","response","text","err","Approve_Leave","forEach","rec","tableData","checked","currentrec","d","Reject_Leave","root","maxWidth","paddingTop","Add","Edit","View","Delete","Clear","Check","Search","ResetSearch","filtering","selection","paging","headerStyle","backgroundColor","color","showTitle","Toolbar","theme","padding"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,OAArC,QAAoD,OAApD;AACA,OAAOC,aAAP,IAAwBC,aAAxB,QAA6C,gBAA7C;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,mBAApC;AACA,SAASC,MAAT,EAAiBC,MAAjB,QAA+B,kBAA/B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAO,KAAKC,OAAZ,MAAyB,aAAzB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,cAAP,MAA2B,+BAA3B,C,CACA;;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,cAAT,QAA+B,QAA/B;AACA,SAASC,eAAT,QAAgC,iBAAhC;AACA,SAASC,YAAT,QAA6B,yBAA7B;AACA,SAASC,cAAT,QAA+B,2BAA/B;AACA,SAASC,cAAT,QAA+B,2BAA/B;AACA,SAASC,gBAAT,QAAiC,2BAAjC,C,CACA;AACA;;AACA,SAASC,eAAT,QAAgC,0BAAhC,C,CACA;;AACA,SAASC,eAAT,QAAgC,0BAAhC;AACA,SAASC,eAAT,QAAgC,0BAAhC;AACA,SAASC,YAAT,QAA6B,0BAA7B;;AAEA,MAAMC,UAAU,GAAGC,OAAO,CAACC,GAAR,CAAYC,2BAA/B;AACA,MAAMC,WAAW,GAAG,kBAApB;AACA,MAAMC,OAAO,GAAGJ,OAAO,CAACC,GAAR,CAAYI,wBAA5B;AACA,MAAMC,kBAAkB,GAAGN,OAAO,CAACC,GAAR,CAAYM,4BAAvC;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,EADa;AAEnBC,EAAAA,OAAO,EAAE,EAFU;AAGnBC,EAAAA,SAAS,EAAE,EAHQ;AAInBC,EAAAA,MAAM,EAAE,EAJW;AAKnBC,EAAAA,MAAM,EAAE,SALW;AAMnBC,EAAAA,UAAU,EAAE,CANO;AAOnBC,EAAAA,SAAS,EAAE;AAPQ,CAArB;AAUA,eAAe,SAASC,kBAAT,GAA8B;AAAA;;AAC3C,QAAMC,OAAO,GAAGC,SAAS,EAAzB;AACA,QAAMC,KAAK,GAAG3B,cAAc,EAA5B,CAF2C,CAG3C;;AACA,QAAM;AAAE4B,IAAAA;AAAF,MAAgBtB,YAAY,EAAlC;AACA,QAAM;AAAEuB,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAAqC3B,eAAe,EAA1D;AACA,QAAM4B,YAAY,GAAG1B,eAAe,EAApC,CAN2C,CAO3C;;AACA,QAAM2B,YAAY,GAAG5B,eAAe,EAApC;AACA,QAAM,CAAC6B,QAAD,EAAWC,WAAX,IAA0BtD,QAAQ,CAACoC,YAAD,CAAxC;AACA,QAAM,CAACmB,UAAD,EAAaC,aAAb,IAA8BvC,cAAc,CAACC,eAAD,CAAlD;AACA,QAAM,CAACuC,YAAD,EAAeC,eAAf,IAAkC1D,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAAC2D,WAAD,EAAcC,cAAd,IAAgC5D,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAAC6D,QAAD,EAAWC,WAAX,IAA0B9D,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM+D,SAAS,GAAGd,YAAY,CAACe,MAAb,CACfC,CAAD,IAAOA,CAAC,CAACC,eAAF,KAAsBX,UAAU,CAACY,UADxB,CAAlB;AAGA,QAAM;AACJ;AACAC,IAAAA,WAFI,CAGJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAVI,MAWF9C,gBAAgB,EAXpB;AAaA,QAAM+C,OAAO,GAAGnE,OAAO,CACrB,MAAM,CACJ;AACEoE,IAAAA,KAAK,EAAE,MADT;AAEEC,IAAAA,KAAK,EAAE,MAFT;AAGEC,IAAAA,QAAQ,EAAE;AAHZ,GADI,EAMJ;AACEF,IAAAA,KAAK,EAAE,WADT;AAEEC,IAAAA,KAAK,EAAE,WAFT;AAGEE,IAAAA,IAAI,EAAE,MAHR;AAIEC,IAAAA,WAAW,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAJf;AAKEH,IAAAA,QAAQ,EAAE;AALZ,GANI,EAaJ;AACEF,IAAAA,KAAK,EAAE,SADT;AAEEC,IAAAA,KAAK,EAAE,SAFT;AAGEE,IAAAA,IAAI,EAAE,MAHR;AAIEC,IAAAA,WAAW,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAJf;AAKEH,IAAAA,QAAQ,EAAE;AALZ,GAbI,EAoBJ;AACEF,IAAAA,KAAK,EAAE,eADT;AAEEC,IAAAA,KAAK,EAAE,WAFT;AAGEE,IAAAA,IAAI,EAAE,SAHR;AAIED,IAAAA,QAAQ,EAAE;AAJZ,GApBI,EA0BJ;AACEF,IAAAA,KAAK,EAAE,YADT;AAEEC,IAAAA,KAAK,EAAE,YAFT;AAGEE,IAAAA,IAAI,EAAE,SAHR;AAIED,IAAAA,QAAQ,EAAE;AAJZ,GA1BI,EAgCJ;AACEF,IAAAA,KAAK,EAAE,QADT;AAEEC,IAAAA,KAAK,EAAE,QAFT;AAGEC,IAAAA,QAAQ,EAAE;AAHZ,GAhCI,EAqCJ;AACEF,IAAAA,KAAK,EAAE,QADT;AAEEC,IAAAA,KAAK,EAAE,QAFT;AAGEK,IAAAA,aAAa,EAAGC,KAAD,iBACb,QAAC,SAAD,CACE;AADF;AAEE,MAAA,QAAQ,EAAGC,CAAD,IAAOD,KAAK,CAACE,QAAN,CAAeD,CAAC,CAACE,MAAF,CAASC,KAAxB,CAFnB;AAGE,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAHT;AAIE,MAAA,KAAK,EAAEL,KAAK,CAACI,KAJf;AAKE,MAAA,MAAM,MALR;AAAA,8BAOE,QAAC,QAAD;AAAU,QAAA,KAAK,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,eAQE,QAAC,QAAD;AAAU,QAAA,KAAK,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,eASE,QAAC,QAAD;AAAU,QAAA,KAAK,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF,eAUE,QAAC,QAAD;AAAU,QAAA,KAAK,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ,GArCI,CADe,EAyDrB,EAzDqB,CAAvB;AA4DAhF,EAAAA,SAAS,CAAC,MAAM;AACdiD,IAAAA,gBAAgB,CAAC,SAAD,CAAhB;AACD,GAFQ,EAEN,EAFM,CAAT,CA1F2C,CA8F3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA,QAAMiC,iBAAiB,GAAG,MAAM;AAC9BzB,IAAAA,eAAe,CAAC,KAAD,CAAf;AACD,GAFD,CA9H2C,CAkI3C;AACA;AACA;;;AAEA,QAAM0B,gBAAgB,GAAG,MAAM;AAC7BxB,IAAAA,cAAc,CAAC,KAAD,CAAd;AACD,GAFD;;AAIA,QAAMyB,qBAAqB,GAAG,MAAM;AAClC,UAAMC,EAAE,GAAGlB,WAAX;AACAhB,IAAAA,YAAY,CAACkC,EAAD,CAAZ;AACD,GAHD;;AAKA,QAAMC,eAAe,GAAG,CAACC,IAAD,EAAOC,MAAP,KAAkB;AACxC,UAAM;AAAElD,MAAAA,SAAF;AAAaD,MAAAA,OAAb;AAAsBD,MAAAA,IAAtB;AAA4BqD,MAAAA;AAA5B,QAAsCF,IAA5C;AACA,UAAMG,GAAG,GAAG3C,SAAS,CAClBgB,MADS,CACD4B,CAAD,IAAOA,CAAC,CAACN,EAAF,KAASI,KADd,EAETG,GAFS,CAEJ5B,CAAD,IAAO;AACV,aAAO,EAAE,GAAGA;AAAL,OAAP;AACD,KAJS,CAAZ;AAKA6B,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BP,IAA1B,EAAgCG,GAAhC;AAEA,QAAIK,SAAS,GAAG;AACdC,MAAAA,OAAO,EAAE5D,IADK;AAEd6D,MAAAA,QAAQ,EAAEP,GAAG,CAAC,CAAD,CAAH,CAAOQ,KAFH;AAGdC,MAAAA,OAAO,EAAG,+BAA8B7D,SAAU,OAAMD,OAAQ,aAAYmD,MAAO,GAHrE;AAIdY,MAAAA,KAAK,EAAEnE;AAJO,KAAhB;AAOAxB,IAAAA,OAAO,CAAC4F,IAAR,CAAa3E,UAAb,EAAyBI,WAAzB,EAAsCiE,SAAtC,EAAiDhE,OAAjD,EAA0DuE,IAA1D,CACE,UAAUC,QAAV,EAAoB;AAClBV,MAAAA,OAAO,CAACC,GAAR,CAAYS,QAAQ,CAAC/D,MAArB,EAA6B+D,QAAQ,CAACC,IAAtC;AACA1D,MAAAA,KAAK,CAAC;AACJuB,QAAAA,KAAK,EAAG,kCAAiC0B,SAAS,CAACE,QAAS,GADxD;AAEJzD,QAAAA,MAAM,EAAE;AAFJ,OAAD,CAAL;AAID,KAPH,EAQE,UAAUiE,GAAV,EAAe;AACbZ,MAAAA,OAAO,CAACC,GAAR,CAAYW,GAAZ;AACA3D,MAAAA,KAAK,CAAC;AACJuB,QAAAA,KAAK,EAAG,6BAA4B0B,SAAS,CAACE,QAAS,GADnD;AAEJzD,QAAAA,MAAM,EAAE;AAFJ,OAAD,CAAL;AAID,KAdH;AAgBD,GAhCD;;AAkCA,QAAMkE,aAAa,GAAG,MAAM;AAC1B5C,IAAAA,SAAS,CAAC6C,OAAV,CAAmBC,GAAD,IAAS;AACzB,UAAIA,GAAG,CAACC,SAAJ,CAAcC,OAAlB,EAA2B;AACzB,cAAMC,UAAU,GAAGH,GAAnB;AACAG,QAAAA,UAAU,CAACvE,MAAX,GAAoB,UAApB;AACAU,QAAAA,YAAY,CAAC;AAAEmC,UAAAA,EAAE,EAAEuB,GAAG,CAACvB,EAAV;AAAc7C,UAAAA,MAAM,EAAE;AAAtB,SAAD,CAAZ;AAEAM,QAAAA,KAAK,CAAC;AACJuB,UAAAA,KAAK,EAAE,8BADH;AAEJ7B,UAAAA,MAAM,EAAE;AAFJ,SAAD,CAAL,CALyB,CASzB;;AACA8C,QAAAA,eAAe,CAACsB,GAAD,EAAM,UAAN,CAAf;AACD;AACF,KAbD;AAcA9C,IAAAA,SAAS,CAAC6C,OAAV,CAAmBK,CAAD,IAAO;AACvB,UAAIA,CAAC,CAACH,SAAN,EAAiBG,CAAC,CAACH,SAAF,CAAYC,OAAZ,GAAsB,KAAtB;AAClB,KAFD;AAGD,GAlBD;;AAoBA,QAAMG,YAAY,GAAG,MAAM;AACzBnD,IAAAA,SAAS,CAAC6C,OAAV,CAAmBC,GAAD,IAAS;AACzB,UAAIA,GAAG,CAACC,SAAJ,CAAcC,OAAlB,EAA2B;AACzB,cAAMC,UAAU,GAAGH,GAAnB;AACAG,QAAAA,UAAU,CAACvE,MAAX,GAAoB,UAApB;AACAU,QAAAA,YAAY,CAAC;AAAEmC,UAAAA,EAAE,EAAEuB,GAAG,CAACvB,EAAV;AAAc7C,UAAAA,MAAM,EAAE;AAAtB,SAAD,CAAZ;AACAqB,QAAAA,WAAW,CAAC,IAAD,CAAX;AACAf,QAAAA,KAAK,CAAC;AACJuB,UAAAA,KAAK,EAAE,8BADH;AAEJ7B,UAAAA,MAAM,EAAE;AAFJ,SAAD,CAAL,CALyB,CASzB;;AACA8C,QAAAA,eAAe,CAACsB,GAAD,EAAM,UAAN,CAAf;AACD;AACF,KAbD;AAcA9C,IAAAA,SAAS,CAAC6C,OAAV,CAAmBK,CAAD,IAAO;AACvB,UAAIA,CAAC,CAACH,SAAN,EAAiBG,CAAC,CAACH,SAAF,CAAYC,OAAZ,GAAsB,KAAtB;AAClB,KAFD;AAGD,GAlBD,CArM2C,CAwN3C;;;AACA,sBACE;AAAK,IAAA,SAAS,EAAElE,OAAO,CAACsE,IAAxB;AAAA,2BAGE;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,QAAQ,EAAE,MAAZ;AAAoBC,QAAAA,UAAU,EAAE;AAAhC,OAAZ;AAAA,8BACE,QAAC,aAAD;AACE,QAAA,OAAO,EAAEhD,OADX,CAEE;AACA;AACA;AAJF;AAKE,QAAA,IAAI,EAAEN,SALR;AAME,QAAA,KAAK,EAAC,mBANR;AAOE,QAAA,KAAK,EAAE;AACLuD,UAAAA,GAAG,EAAGzC,KAAD,iBAAW,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,kBADX;AAEL0C,UAAAA,IAAI,EAAG1C,KAAD,iBAAW,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,kBAFZ;AAGL2C,UAAAA,IAAI,EAAG3C,KAAD,iBAAW,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,kBAHZ;AAIL4C,UAAAA,MAAM,EAAG5C,KAAD,iBAAW,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,kBAJd;AAKL6C,UAAAA,KAAK,EAAG7C,KAAD,iBAAW,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,kBALb;AAML8C,UAAAA,KAAK,EAAG9C,KAAD,iBAAW,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,kBANb;AAOL+C,UAAAA,MAAM,EAAG/C,KAAD,iBAAW,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,kBAPd;AAQLgD,UAAAA,WAAW,EAAGhD,KAAD,iBAAW,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AARnB,SAPT;AAiBE,QAAA,OAAO,EACL,CACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtBF,SAlBJ;AA2CE,QAAA,OAAO,EAAE;AACPiD,UAAAA,SAAS,EAAE,IADJ;AAEPC,UAAAA,SAAS,EAAE,IAFJ;AAGPC,UAAAA,MAAM,EAAE,KAHD;AAIPC,UAAAA,WAAW,EAAE;AACXC,YAAAA,eAAe,EAAE,uBADN;AAEXC,YAAAA,KAAK,EAAE;AAFI,WAJN;AAQPC,UAAAA,SAAS,EAAE;AARJ,SA3CX;AAqDE,QAAA,UAAU,EAAE;AACVC,UAAAA,OAAO,EAAGxD,KAAD,iBACP;AAAA,oCACE,QAAC,aAAD,OAAmBA;AAAnB;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,MAAD;AAAQ,cAAA,CAAC,EAAE,CAAX;AAAA,sCACE,QAAC,MAAD;AACE,gBAAA,IAAI,EAAC,QADP;AAEE,gBAAA,OAAO,EAAC,OAFV;AAGE,gBAAA,KAAK,EAAC,OAHR;AAIE,gBAAA,OAAO,EAAC,KAJV,CAKE;AALF;AAME,gBAAA,OAAO,EAAE8B,aANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAWE,QAAC,MAAD;AACE,gBAAA,IAAI,EAAC,QADP;AAEE,gBAAA,OAAO,EAAC,OAFV;AAGE,gBAAA,KAAK,EAAC,OAHR;AAIE,gBAAA,OAAO,EAAC,KAJV,CAKE;AALF;AAME,gBAAA,OAAO,EAAEO,YANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFQ;AArDd;AAAA;AAAA;AAAA;AAAA,cADF,eAoFE,QAAC,YAAD;AACE,QAAA,MAAM,EAAEzD,YADV;AAEE,QAAA,WAAW,EAAE0B,iBAFf;AAGE,QAAA,KAAK,EAAC,EAHR;AAIE,QAAA,UAAU,EAAE,IAJd;AAKE,QAAA,WAAW,EAAE,KALf;AAAA,+BAOE,QAAC,cAAD;AACE,UAAA,QAAQ,EAAE9B,QADZ;AAEE,UAAA,WAAW,EAAEC,WAFf;AAGE,UAAA,iBAAiB,EAAE6B;AAHrB;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,cApFF,eAkGE,QAAC,cAAD;AACE,QAAA,OAAO,EAAEC,gBADX;AAEE,QAAA,SAAS,EAAEC,qBAFb;AAGE,QAAA,MAAM,EAAE1B,WAHV;AAIE,QAAA,KAAK,EAAC,iBAJR;AAAA,+BAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,cAlGF;AAAA;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA,UADF;AAiHD;;GA1UuBf,kB;UACNE,S,EACF1B,c,EAEQM,Y,EACqBH,e,EACtBE,e,EAEAD,e,EAEeP,c,EAkBhCK,gB;;;KA5BkBsB,kB;AA4UxB,MAAME,SAAS,GAAGrC,UAAU,CAAE6H,KAAD,KAAY;AACvCnB,EAAAA,IAAI,EAAE;AACJoB,IAAAA,OAAO,EAAE;AADL;AADiC,CAAZ,CAAD,CAA5B","sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { TextField, MenuItem } from \"@material-ui/core\";\r\nimport { Button, HStack } from \"@chakra-ui/react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport * as emailjs from \"emailjs-com\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\n//import EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport LeaveFormAdmin from \"./LeaveFormAdmin\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { useCustomToast } from \"../helpers/useCustomToast\";\r\nimport { AlertDialogBox } from \"../helpers/AlertDialogBox\";\r\nimport { useLeavesContext } from \"../context/leaves_context\";\r\n//import { useEmployeesContext } from \"../context/employees_context\";\r\n//import { useLeaves } from \"./leaves/useLeaves\";\r\nimport { useLeavesStatus } from \"./leaves/useLeavesStatus\";\r\n//import { useAddLeaves } from \"./leaves/useAddLeaves\";\r\nimport { useDeleteLeaves } from \"./leaves/useDeleteLeaves\";\r\nimport { useUpdateLeaves } from \"./leaves/useUpdateLeaves\";\r\nimport { useEmployees } from \"./employees/useEmployees\";\r\n\r\nconst SERVICE_ID = process.env.REACT_APP_EMAILJS_SERVICEID;\r\nconst TEMPLATE_ID = \"template_1y8odlq\";\r\nconst USER_ID = process.env.REACT_APP_EMAILJS_USERID;\r\nconst ADMINMANAGER_EMAIL = process.env.REACT_APP_ADMINMANAGER_EMAIL;\r\n\r\nconst initial_form = {\r\n  name: \"\",\r\n  to_date: \"\",\r\n  from_date: \"\",\r\n  reason: \"\",\r\n  status: \"Pending\",\r\n  no_of_days: 0,\r\n  leave_bal: 0,\r\n};\r\n\r\nexport default function LeaveTableApproval() {\r\n  const classes = useStyles();\r\n  const toast = useCustomToast();\r\n  //const { leaves, filter, setFilter, setLeaveId } = useLeaves();\r\n  const { employees } = useEmployees();\r\n  const { leavesstatus, setLeaveStatusId } = useLeavesStatus();\r\n  const updateLeaves = useUpdateLeaves();\r\n  //const addLeaves = useAddLeaves();\r\n  const deleteLeaves = useDeleteLeaves();\r\n  const [formdata, setFormdata] = useState(initial_form);\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\r\n  const [isUpdate, setIsUpdate] = useState(true);\r\n  const leavedata = leavesstatus.filter(\r\n    (r) => r.reporting_email === loginLevel.loginEmail\r\n  );\r\n  const {\r\n    // leaves,\r\n    editLeaveID,\r\n    //leaves_loading,\r\n    //deleteLeave,\r\n    //loadLeaves,\r\n    //getSingleLeave,\r\n    //setEditLeaveID,\r\n    //setIsLeaveEditingOn,\r\n    //setIsLeaveEditingOff,\r\n    //resetSingleLeave,\r\n  } = useLeavesContext();\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        title: \"Name\",\r\n        field: \"name\",\r\n        editable: \"never\",\r\n      },\r\n      {\r\n        title: \"From Date\",\r\n        field: \"from_date\",\r\n        type: \"date\",\r\n        dateSetting: { locale: \"en-GB\" },\r\n        editable: \"never\",\r\n      },\r\n      {\r\n        title: \"To Date\",\r\n        field: \"to_date\",\r\n        type: \"date\",\r\n        dateSetting: { locale: \"en-GB\" },\r\n        editable: \"never\",\r\n      },\r\n      {\r\n        title: \"Leave Balance\",\r\n        field: \"leave_bal\",\r\n        type: \"numeric\",\r\n        editable: \"never\",\r\n      },\r\n      {\r\n        title: \"No of Days\",\r\n        field: \"no_of_days\",\r\n        type: \"numeric\",\r\n        editable: \"never\",\r\n      },\r\n      {\r\n        title: \"Reason\",\r\n        field: \"reason\",\r\n        editable: \"never\",\r\n      },\r\n      {\r\n        title: \"Status\",\r\n        field: \"status\",\r\n        editComponent: (props) => (\r\n          <TextField\r\n            //defaultValue={props.value || null}\r\n            onChange={(e) => props.onChange(e.target.value)}\r\n            style={{ width: 100 }}\r\n            value={props.value}\r\n            select\r\n          >\r\n            <MenuItem value=\"Pending\">Pending</MenuItem>\r\n            <MenuItem value=\"Approve\">Approve</MenuItem>\r\n            <MenuItem value=\"Reject\">Reject</MenuItem>\r\n            <MenuItem value=\"Cancel\">Cancel</MenuItem>\r\n          </TextField>\r\n        ),\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  useEffect(() => {\r\n    setLeaveStatusId(\"Pending\");\r\n  }, []);\r\n\r\n  // const update_Leave = async (data) => {\r\n  //   const { id } = data;\r\n  //   setFormdata({ ...data });\r\n  //   setEditLeaveID(id);\r\n  //   setIsLeaveEditingOn();\r\n  //   getSingleLeave(id);\r\n  //   handleDialogOpen();\r\n  //   //history.push(\"/singleleave\");\r\n  // };\r\n\r\n  // const add_Leave = async (data) => {\r\n  //   // const { id } = data;\r\n  //   setFormdata({ ...data });\r\n  //   resetSingleLeave();\r\n  //   setEditLeaveID(\"\");\r\n  //   setIsLeaveEditingOff();\r\n  //   handleDialogOpen();\r\n  //   //history.push(\"/singleleave\");\r\n  // };\r\n\r\n  // const delete_Leave = (data) => {\r\n  //   const { id } = data;\r\n  //   setEditLeaveID(id);\r\n  //   handleAlertOpen();\r\n  //   //deleteLeave(id);\r\n  //   //loadLeaves();\r\n  // };\r\n\r\n  // const handleDialogOpen = () => {\r\n  //   setIsDialogOpen(true);\r\n  // };\r\n\r\n  const handleDialogClose = () => {\r\n    setIsDialogOpen(false);\r\n  };\r\n\r\n  // const handleAlertOpen = () => {\r\n  //   setIsAlertOpen(true);\r\n  // };\r\n\r\n  const handleAlertClose = () => {\r\n    setIsAlertOpen(false);\r\n  };\r\n\r\n  const handleOnDeleteConfirm = () => {\r\n    const id = editLeaveID;\r\n    deleteLeaves(id);\r\n  };\r\n\r\n  const handleSentEmail = (data, result) => {\r\n    const { from_date, to_date, name, empid } = data;\r\n    const emp = employees\r\n      .filter((f) => f.id === empid)\r\n      .map((r) => {\r\n        return { ...r };\r\n      });\r\n    console.log(\"leave form\", data, emp);\r\n\r\n    var emaildata = {\r\n      to_name: name,\r\n      to_email: emp[0].email,\r\n      message: `Your leave application from ${from_date} to ${to_date} has been ${result}!`,\r\n      cc_to: ADMINMANAGER_EMAIL,\r\n    };\r\n\r\n    emailjs.send(SERVICE_ID, TEMPLATE_ID, emaildata, USER_ID).then(\r\n      function (response) {\r\n        console.log(response.status, response.text);\r\n        toast({\r\n          title: `Email has sent successfully to ${emaildata.to_email}!`,\r\n          status: \"success\",\r\n        });\r\n      },\r\n      function (err) {\r\n        console.log(err);\r\n        toast({\r\n          title: `Email has fail to send to ${emaildata.to_email}!`,\r\n          status: \"warning\",\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  const Approve_Leave = () => {\r\n    leavedata.forEach((rec) => {\r\n      if (rec.tableData.checked) {\r\n        const currentrec = rec;\r\n        currentrec.status = \"Approved\";\r\n        updateLeaves({ id: rec.id, status: \"Approved\" });\r\n\r\n        toast({\r\n          title: \"Leave record being approved!\",\r\n          status: \"success\",\r\n        });\r\n        //sent email\r\n        handleSentEmail(rec, \"Approved\");\r\n      }\r\n    });\r\n    leavedata.forEach((d) => {\r\n      if (d.tableData) d.tableData.checked = false;\r\n    });\r\n  };\r\n\r\n  const Reject_Leave = () => {\r\n    leavedata.forEach((rec) => {\r\n      if (rec.tableData.checked) {\r\n        const currentrec = rec;\r\n        currentrec.status = \"Rejected\";\r\n        updateLeaves({ id: rec.id, status: \"Rejected\" });\r\n        setIsUpdate(true);\r\n        toast({\r\n          title: \"Leave record being rejected!\",\r\n          status: \"success\",\r\n        });\r\n        //sent email\r\n        handleSentEmail(rec, \"Approved\");\r\n      }\r\n    });\r\n    leavedata.forEach((d) => {\r\n      if (d.tableData) d.tableData.checked = false;\r\n    });\r\n  };\r\n  //console.log(\"leave\", ADMINMANAGER_EMAIL, USER_ID);\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <h1>Expenses Claims Application</h1> */}\r\n\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          // data={leavesstatus.filter(\r\n          //   (r) => r.reporting_email === loginLevel.loginEmail\r\n          // )}\r\n          data={leavedata}\r\n          title=\"Leave Application\"\r\n          icons={{\r\n            Add: (props) => <AddIcon />,\r\n            Edit: (props) => <AddIcon />,\r\n            View: (props) => <VisibilityIcon />,\r\n            Delete: (props) => <DeleteIcon />,\r\n            Clear: (props) => <DeleteIcon />,\r\n            Check: (props) => <CheckIcon />,\r\n            Search: (props) => <SearchIcon />,\r\n            ResetSearch: (props) => <DeleteIcon />,\r\n          }}\r\n          actions={\r\n            [\r\n              // {\r\n              //   icon: () => <VisibilityIcon />,\r\n              //   tooltip: \"Edit Record\",\r\n              //   onClick: (event, rowData) => {\r\n              //     update_Leave(rowData);\r\n              //   },\r\n              // },\r\n              // {\r\n              //   icon: \"delete\",\r\n              //   tooltip: \"Delete Record\",\r\n              //   onClick: (event, rowData) => {\r\n              //     delete_Leave(rowData);\r\n              //   },\r\n              // },\r\n              // {\r\n              //   icon: \"add\",\r\n              //   tooltip: \"Add Record\",\r\n              //   isFreeAction: true,\r\n              //   onClick: (event, rowData) => {\r\n              //     add_Leave(rowData);\r\n              //   },\r\n              // },\r\n            ]\r\n          }\r\n          options={{\r\n            filtering: true,\r\n            selection: true,\r\n            paging: false,\r\n            headerStyle: {\r\n              backgroundColor: \"rgba(75, 192, 192, 1)\",\r\n              color: \"white\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n                <HStack p={2}>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"solid\"\r\n                    color=\"white\"\r\n                    bgColor=\"red\"\r\n                    //className={classes.button}\r\n                    onClick={Approve_Leave}\r\n                  >\r\n                    Approve\r\n                  </Button>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"solid\"\r\n                    color=\"white\"\r\n                    bgColor=\"red\"\r\n                    //className={classes.button}\r\n                    onClick={Reject_Leave}\r\n                  >\r\n                    Reject\r\n                  </Button>\r\n                </HStack>\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n        <CustomDialog\r\n          isOpen={isDialogOpen}\r\n          handleClose={handleDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscree={false}\r\n        >\r\n          <LeaveFormAdmin\r\n            formdata={formdata}\r\n            setFormdata={setFormdata}\r\n            handleDialogClose={handleDialogClose}\r\n          />\r\n        </CustomDialog>\r\n\r\n        <AlertDialogBox\r\n          onClose={handleAlertClose}\r\n          onConfirm={handleOnDeleteConfirm}\r\n          isOpen={isAlertOpen}\r\n          title=\"Delete Expenses\"\r\n        >\r\n          <h2>Are you sure you want to delete ?</h2>\r\n        </AlertDialogBox>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n"]},"metadata":{},"sourceType":"module"}
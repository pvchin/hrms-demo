{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-demo\\\\src\\\\components\\\\ExpenseFormView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Icon, TextField, Paper, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useRecoilState } from \"recoil\";\nimport * as emailjs from \"emailjs-com\";\nimport axios from \"axios\";\nimport currency from \"currency.js\";\nimport pdfMake from \"pdfmake/build/pdfmake\";\nimport CurrencyTextField from \"@unicef/material-ui-currency-textfield\"; //import { Box, Grid, GridItem, Heading } from \"@chakra-ui/react\";\n\nimport { Box, Image, IconButton, HStack, VStack, Grid, GridItem, Modal, ModalOverlay, ModalContent, ModalHeader, ModalFooter, ModalBody, ModalCloseButton, useDisclosure } from \"@chakra-ui/react\";\nimport { PDFViewer } from \"@react-pdf/renderer\";\nimport { FiEye, FiTrash2 } from \"react-icons/fi\";\nimport { viewImageState } from \"../components/data/atomdata\";\nimport { loginLevelState } from \"./data/atomdata\";\nimport { useExpensesContext } from \"../context/expenses_context\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport { useCustomToast } from \"../helpers/useCustomToast\"; //import { useExpenses } from \"./expenses/useExpenses\";\n\nimport { useAddExpenses } from \"./expenses/useAddExpenses\";\nimport { useDeleteExpenses } from \"./expenses/useDeleteExpenses\";\nimport { useUpdateExpenses } from \"./expenses/useUpdateExpenses\";\nimport { useExpensesAttachments } from \"./expensesattachments/useExpensesAttachments\";\nimport AllPagesPDFViewer from \"../helpers/AllPages\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SERVICE_ID = process.env.REACT_APP_EMAILJS_SERVICEID;\nconst TEMPLATE_ID = \"template_1y8odlq\";\nconst USER_ID = process.env.REACT_APP_EMAILJS_USERID;\nconst UPLOADURL = \"https://api.cloudinary.com/v1_1/dlmzwvakr/image/upload\";\nconst DOWNLOADURL = \"https://res.cloudinary.com/v1_1/dlmzwvakr/image/upload\";\nconst UPLOADPRESET = \"appsmiths\"; // const initial_values = {\n//   name: \"\",\n//   date: \"\",\n//   purchased_date: \"\",\n//   purchased_from: \"\",\n//   description: \"\",\n//   remark: \"\",\n//   status: \"Pending\",\n//   amount: 0,\n//};\n\nconst ExpenseForm = ({\n  formdata,\n  setFormdata,\n  handleDialogClose\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const toast = useCustomToast(); //const { acceptedFiles, getRootProps, getInputProps } = useDropzone();\n  //const { expenses, filter, setFilter, setExpenseId } = useExpenses();\n\n  const updateExpenses = useUpdateExpenses();\n  const addExpenses = useAddExpenses();\n  const delExpenses = useDeleteExpenses();\n  const {\n    expensesattachments,\n    setAttachmentId\n  } = useExpensesAttachments();\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\n  const {\n    isExpenseEditing,\n    editExpenseID\n  } = useExpensesContext();\n  const [files, setFiles] = useState([]);\n  const [filename, setFilename] = useState(\"\");\n  const [newFile, setNewFile] = useState({});\n  const [image, setImage] = useRecoilState(viewImageState);\n  const {\n    isOpen: isViewImageOpen,\n    onOpen: onViewImageOpen,\n    onClose: onViewImageClose\n  } = useDisclosure();\n  const {\n    handleSubmit,\n    control,\n    setValue\n  } = useForm({\n    defaultValues: { ...formdata\n    }\n  });\n  console.log(\"formdata\", formdata);\n  console.log(\"files\", files);\n\n  const onDrop = acceptedFiles => {\n    acceptedFiles.forEach(file => {\n      const formData = new FormData();\n      formData.append(\"file\", file);\n      formData.append(\"upload_preset\", UPLOADPRESET);\n      axios({\n        url: UPLOADURL,\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\"\n        },\n        data: formData\n      }).then(res => {\n        //console.log(\"res\", res.data);\n        // Object.assign(file, {\n        //   preview: res.data.url,\n        // });\n        setFiles(prev => prev = [...files, ...[{\n          name: res.data.original_filename,\n          preview: res.data.url\n        }]]);\n      }).catch(err => {\n        setNewFile({});\n        console.log(err);\n      }); // Object.assign(file, {\n      //   preview: URL.createObjectURL(file),\n      // });\n    }); //const allfiles = [...files, ...acceptedFiles];\n    //setFiles(allfiles);\n  };\n\n  const upLoad = () => {\n    const uploadURL = \"https://api.cloudinary.com/v1_1/dlmzwvakr/image/upload\";\n    const uploadPreset = \"appsmiths\";\n    files.forEach(file => {\n      const formData = new FormData();\n      formData.append(\"file\", file);\n      formData.append(\"upload_preset\", uploadPreset);\n      axios({\n        url: uploadURL,\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\"\n        },\n        data: formData\n      }).then(res => {\n        setFilename(prev => prev = res.data.public_id);\n        console.log(res.data.public_id); //console.log(\"filename\", filename);\n      }).catch(err => console.log(err));\n    });\n  };\n\n  const handleSentEmail = data => {\n    const {\n      date\n    } = data; //console.log(\"expense form\", loginLevel);\n\n    var emaildata = {\n      to_name: loginLevel.loginUser,\n      to_email: loginLevel.loginEmail,\n      message: `Your expenses claim application dated on ${date} has been successfully submitted for approval`,\n      cc_to: loginLevel.reporting_email\n    };\n    emailjs.send(SERVICE_ID, TEMPLATE_ID, emaildata, USER_ID).then(function (response) {\n      console.log(response.status, response.text);\n      toast({\n        title: `Email has sent successfully to ${emaildata.to_email}!`,\n        status: \"success\"\n      });\n    }, function (err) {\n      console.log(err);\n      toast({\n        title: `Email has fail to send to ${emaildata.to_email}!`,\n        status: \"warning\"\n      });\n    });\n  };\n\n  const onSubmit = (data, e) => {\n    e.preventDefault();\n    console.log(\"onSubmit\", isExpenseEditing);\n    let newData = { ...data,\n      attachment1_name: files.length >= 1 ? files[0].name : \"\",\n      attachment1_url: files.length >= 1 ? files[0].preview : \"\",\n      attachment2_name: files.length >= 2 ? files[1].name : \"\",\n      attachment2_url: files.length >= 2 ? files[1].preview : \"\",\n      attachment3_name: files.length >= 3 ? files[2].name : \"\",\n      attachment3_url: files.length >= 3 ? files[2].preview : \"\"\n    };\n    console.log(\"newdata\", newData);\n    console.log(\"isEditing\", isExpenseEditing);\n\n    if (isExpenseEditing) {\n      console.log(\"edit\");\n      const {\n        rec_id,\n        tableData,\n        ...editData\n      } = newData;\n      updateExpenses({\n        id: editExpenseID,\n        ...editData\n      });\n    } else {\n      console.log(\"new\");\n      addExpenses({ ...newData,\n        empid: loginLevel.loginUserId,\n        name: loginLevel.loginUser\n      });\n    } // if (isExpenseEditing) {\n    //   const { rec_id, tableData, ...editData } = newData;\n    //   console.log(\"edit\", ...editData);\n    //   updateExpenses({ id: editExpenseID, ...editData });\n    // } else {\n    //   console.log(\"new\");\n    //   addExpenses({\n    //     ...newData,\n    //     empid: loginLevel.loginUserId,\n    //     name: loginLevel.loginUser,\n    //   });\n    //   handleSentEmail(data);\n    // }\n\n\n    handleDialogClose();\n  };\n\n  const handleViewImage = ({\n    preview,\n    name,\n    type\n  }) => {\n    const newImage = {\n      url: preview,\n      name: name\n    };\n    const oldImage = image.url;\n    setImage(prev => newImage);\n    console.log(\"type\", preview);\n\n    if (type !== \"pdf\") {\n      console.log(\"image\");\n      onViewImageOpen();\n    } else {\n      var win = window.open(\"\", \"_blank\");\n      console.log(\"pdf\"); //pdfMake.createPdf(preview).open({}, win);\n\n      /*#__PURE__*/\n      _jsxDEV(AllPagesPDFViewer, {\n        pdf: preview\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 6\n      }, this);\n    }\n  };\n\n  useEffect(() => {\n    if (isExpenseEditing) {\n      setAttachmentId(formdata.attachmentid);\n      const newData = expensesattachments.filter(rec => rec.attachmentid === formdata.attachmentid).map(rec => {\n        return {\n          name: rec.name,\n          preview: rec.url\n        };\n      });\n      console.log(\"data\", newData);\n      setFiles(newData);\n    } else {\n      setFiles([]);\n    }\n  }, [expensesattachments]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      size: \"x1\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        component: \"h3\",\n        children: \"EXPENSES CLAIM FORM\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        component: \"p\",\n        children: \"Expense Claim Application\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          templateColumns: \"repeat(3, 1fr)\",\n          gap: 4,\n          children: [/*#__PURE__*/_jsxDEV(GridItem, {\n            colSpan: 1,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Controller, {\n                name: \"name\",\n                control: control,\n                defaultValue: loginLevel.loginUser,\n                render: ({\n                  field: {\n                    onChange,\n                    value\n                  },\n                  fieldState: {\n                    error\n                  }\n                }) => {\n                  return /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Name\",\n                    id: \"margin-normal1\",\n                    name: \"name\",\n                    defaultValue: loginLevel.loginUser,\n                    className: classes.textField,\n                    onChange: onChange,\n                    error: !!error,\n                    helperText: error ? error.message : null,\n                    InputProps: {\n                      readOnly: true\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 286,\n                    columnNumber: 23\n                  }, this);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Controller, {\n                name: \"date\",\n                control: control,\n                defaultValue: formdata.date,\n                render: ({\n                  field: {\n                    onChange,\n                    value\n                  },\n                  fieldState: {\n                    error\n                  }\n                }) => {\n                  return /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Date\",\n                    type: \"date\",\n                    id: \"margin-normal2\",\n                    name: \"formdata.date\",\n                    value: value,\n                    className: classes.textField,\n                    onChange: onChange,\n                    error: !!error,\n                    helperText: error ? error.message : null,\n                    InputLabelProps: {\n                      shrink: true\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 313,\n                    columnNumber: 23\n                  }, this);\n                },\n                rules: {\n                  required: \"From Date is required\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Controller, {\n                name: \"purchased_from\",\n                control: control,\n                defaultValue: formdata.purchased_from,\n                render: ({\n                  field: {\n                    onChange,\n                    value\n                  },\n                  fieldState: {\n                    error\n                  }\n                }) => {\n                  return /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Purchased From\",\n                    id: \"margin-normal3\",\n                    name: \"purchased_from\",\n                    defaultValue: formdata.purchased_from,\n                    className: classes.textField,\n                    onChange: onChange,\n                    error: !!error,\n                    helperText: error ? error.message : null\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 343,\n                    columnNumber: 23\n                  }, this);\n                } // rules={{ required: \"Reason is required\" }}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Controller, {\n                name: \"description\",\n                control: control,\n                defaultValue: formdata.description,\n                render: ({\n                  field: {\n                    onChange,\n                    value\n                  },\n                  fieldState: {\n                    error\n                  }\n                }) => {\n                  return /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Description\",\n                    id: \"margin-normal4\",\n                    name: \"description\",\n                    defaultValue: formdata.description,\n                    className: classes.textField,\n                    onChange: onChange,\n                    error: !!error,\n                    helperText: error ? error.message : null\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 368,\n                    columnNumber: 23\n                  }, this);\n                } // rules={{ required: \"Reason is required\" }}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Controller, {\n                name: \"amount\",\n                control: control,\n                defaultValue: formdata.amount,\n                render: ({\n                  field: {\n                    onChange,\n                    value\n                  },\n                  fieldState: {\n                    error\n                  }\n                }) => {\n                  return (\n                    /*#__PURE__*/\n                    // <TextField\n                    //   label=\"Amount\"\n                    //   type=\"number\"\n                    //   id=\"standard-number1\"\n                    //   name=\"amount\"\n                    //   defaultValue={formdata.amount}\n                    //   className={classes.textField}\n                    //   //onChange={onChange}\n                    //   onChange={(e) => {\n                    //     onChange(parseInt(e.target.value, 10));\n                    //   }}\n                    //   error={!!error}\n                    //   helperText={error ? error.message : null}\n                    // />\n                    _jsxDEV(CurrencyTextField, {\n                      label: \"Amount\",\n                      variant: \"standard\",\n                      value: formdata.amount,\n                      currencySymbol: \"$\",\n                      outputFormat: \"string\",\n                      decimalCharacter: \".\",\n                      digitGroupSeparator: \",\",\n                      decimalPlaces: \"2\",\n                      className: classes.textField,\n                      id: \"standard-amount\",\n                      name: \"amount\",\n                      style: {\n                        width: 100\n                      } //onChange={onChange}\n                      ,\n                      onChange: e => {\n                        onChange(parseFloat(currency(e.target.value), 10));\n                      },\n                      error: !!error,\n                      helperText: error ? error.message : null\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 407,\n                      columnNumber: 23\n                    }, this)\n                  );\n                } //rules={{ required: \"IC No required\" }}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 384,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Controller, {\n                name: \"remark\",\n                control: control,\n                defaultValue: formdata.remark,\n                render: ({\n                  field: {\n                    onChange,\n                    value\n                  },\n                  fieldState: {\n                    error\n                  }\n                }) => {\n                  return /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Remark\",\n                    id: \"margin-normal5\",\n                    name: \"remark\",\n                    defaultValue: formdata.remark,\n                    className: classes.textField,\n                    onChange: onChange,\n                    error: !!error,\n                    helperText: error ? error.message : null\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 442,\n                    columnNumber: 23\n                  }, this);\n                } // rules={{ required: \"Reason is required\" }}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 433,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Controller, {\n                name: \"status\",\n                control: control,\n                defaultValue: \"Pending\",\n                render: ({\n                  field: {\n                    onChange,\n                    value\n                  },\n                  fieldState: {\n                    error\n                  }\n                }) => {\n                  return /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Status\",\n                    id: \"margin-normal6\",\n                    name: \"status\",\n                    defaultValue: \"Pending\",\n                    className: classes.textField,\n                    onChange: onChange,\n                    error: !!error,\n                    helperText: error ? error.message : null,\n                    InputProps: {\n                      readOnly: true\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 467,\n                    columnNumber: 23\n                  }, this);\n                } //rules={{ required: \"Status is required\" }}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 458,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 569,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n            colSpan: 2,\n            children: files.filter(rec => rec.name !== undefined && rec.name !== null).map(file => {\n              return /*#__PURE__*/_jsxDEV(Box, {\n                display: \"inline-flex\",\n                w: \"50%\",\n                h: 150,\n                mb: 8,\n                mr: 8,\n                p: 4,\n                border: \"1px solid #eaeaea\",\n                borderRadius: 2,\n                children: /*#__PURE__*/_jsxDEV(HStack, {\n                  p: 5,\n                  children: [/*#__PURE__*/_jsxDEV(Image, {\n                    src: file.preview,\n                    alt: file.name,\n                    display: \"block\",\n                    w: \"auto\",\n                    h: \"100%\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 599,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(VStack, {\n                    children: /*#__PURE__*/_jsxDEV(IconButton, {\n                      size: \"sm\",\n                      \"aria-label\": \"view image\",\n                      icon: /*#__PURE__*/_jsxDEV(FiEye, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 610,\n                        columnNumber: 35\n                      }, this),\n                      onClick: () => handleViewImage({\n                        preview: file.preview,\n                        name: file.name,\n                        type: file.preview.split(\".\").pop()\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 607,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 606,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 598,\n                  columnNumber: 23\n                }, this)\n              }, file.name, false, {\n                fileName: _jsxFileName,\n                lineNumber: 587,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 581,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      closeOnOverlayClick: false,\n      isOpen: isViewImageOpen,\n      onClose: onViewImageClose,\n      size: \"2xl\",\n      children: [/*#__PURE__*/_jsxDEV(ModalOverlay, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 640,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalContent, {\n        children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n          children: \"Your images\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 642,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalCloseButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 643,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          pb: 6,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            display: \"inline-flex\",\n            w: \"100%\",\n            h: \"auto\",\n            mb: 8,\n            mr: 8,\n            p: 4,\n            border: \"1px solid #eaeaea\",\n            borderRadius: 2,\n            children: /*#__PURE__*/_jsxDEV(Image, {\n              src: image.url,\n              alt: image.name,\n              display: \"block\",\n              w: \"auto\",\n              h: \"100%\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 655,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 645,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 644,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: onViewImageClose,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 666,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 665,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 641,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 634,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 267,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ExpenseForm, \"wNpx03eilX6xwAcD2jXKgBWX+RI=\", false, function () {\n  return [useStyles, useCustomToast, useUpdateExpenses, useAddExpenses, useDeleteExpenses, useExpensesAttachments, useRecoilState, useExpensesContext, useRecoilState, useDisclosure, useForm];\n});\n\n_c = ExpenseForm;\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(1)\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1)\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1)\n  },\n  iconSmall: {\n    fontSize: 20\n  },\n  root: {\n    padding: theme.spacing(3, 2)\n  },\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 400\n  }\n}));\nexport default ExpenseForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-demo/src/components/ExpenseFormView.js"],"names":["React","useState","useEffect","Button","Icon","TextField","Paper","Typography","makeStyles","useRecoilState","emailjs","axios","currency","pdfMake","CurrencyTextField","Box","Image","IconButton","HStack","VStack","Grid","GridItem","Modal","ModalOverlay","ModalContent","ModalHeader","ModalFooter","ModalBody","ModalCloseButton","useDisclosure","PDFViewer","FiEye","FiTrash2","viewImageState","loginLevelState","useExpensesContext","Controller","useForm","useCustomToast","useAddExpenses","useDeleteExpenses","useUpdateExpenses","useExpensesAttachments","AllPagesPDFViewer","SERVICE_ID","process","env","REACT_APP_EMAILJS_SERVICEID","TEMPLATE_ID","USER_ID","REACT_APP_EMAILJS_USERID","UPLOADURL","DOWNLOADURL","UPLOADPRESET","ExpenseForm","formdata","setFormdata","handleDialogClose","classes","useStyles","toast","updateExpenses","addExpenses","delExpenses","expensesattachments","setAttachmentId","loginLevel","setLoginLevel","isExpenseEditing","editExpenseID","files","setFiles","filename","setFilename","newFile","setNewFile","image","setImage","isOpen","isViewImageOpen","onOpen","onViewImageOpen","onClose","onViewImageClose","handleSubmit","control","setValue","defaultValues","console","log","onDrop","acceptedFiles","forEach","file","formData","FormData","append","url","method","headers","data","then","res","prev","name","original_filename","preview","catch","err","upLoad","uploadURL","uploadPreset","public_id","handleSentEmail","date","emaildata","to_name","loginUser","to_email","loginEmail","message","cc_to","reporting_email","send","response","status","text","title","onSubmit","e","preventDefault","newData","attachment1_name","length","attachment1_url","attachment2_name","attachment2_url","attachment3_name","attachment3_url","rec_id","tableData","editData","id","empid","loginUserId","handleViewImage","type","newImage","oldImage","win","window","open","attachmentid","filter","rec","map","field","onChange","value","fieldState","error","textField","readOnly","shrink","required","purchased_from","description","amount","width","parseFloat","target","remark","undefined","split","pop","theme","button","margin","spacing","leftIcon","marginRight","rightIcon","marginLeft","iconSmall","fontSize","root","padding","container","display","flexWrap"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Button, Icon, TextField, Paper, Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport * as emailjs from \"emailjs-com\";\r\nimport axios from \"axios\";\r\nimport currency from \"currency.js\";\r\nimport pdfMake from \"pdfmake/build/pdfmake\";\r\nimport CurrencyTextField from \"@unicef/material-ui-currency-textfield\";\r\n//import { Box, Grid, GridItem, Heading } from \"@chakra-ui/react\";\r\nimport {\r\n  Box,\r\n  Image,\r\n  IconButton,\r\n  HStack,\r\n  VStack,\r\n  Grid,\r\n  GridItem,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  useDisclosure,\r\n} from \"@chakra-ui/react\";\r\nimport {PDFViewer} from \"@react-pdf/renderer\"\r\nimport { FiEye, FiTrash2 } from \"react-icons/fi\";\r\nimport { viewImageState } from \"../components/data/atomdata\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport { useExpensesContext } from \"../context/expenses_context\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport { useCustomToast } from \"../helpers/useCustomToast\";\r\n//import { useExpenses } from \"./expenses/useExpenses\";\r\nimport { useAddExpenses } from \"./expenses/useAddExpenses\";\r\nimport { useDeleteExpenses } from \"./expenses/useDeleteExpenses\";\r\nimport { useUpdateExpenses } from \"./expenses/useUpdateExpenses\";\r\nimport { useExpensesAttachments } from \"./expensesattachments/useExpensesAttachments\";\r\nimport AllPagesPDFViewer from \"../helpers/AllPages\";\r\n\r\n\r\nconst SERVICE_ID = process.env.REACT_APP_EMAILJS_SERVICEID;\r\nconst TEMPLATE_ID = \"template_1y8odlq\";\r\nconst USER_ID = process.env.REACT_APP_EMAILJS_USERID;\r\nconst UPLOADURL = \"https://api.cloudinary.com/v1_1/dlmzwvakr/image/upload\";\r\nconst DOWNLOADURL = \"https://res.cloudinary.com/v1_1/dlmzwvakr/image/upload\";\r\nconst UPLOADPRESET = \"appsmiths\";\r\n// const initial_values = {\r\n//   name: \"\",\r\n//   date: \"\",\r\n//   purchased_date: \"\",\r\n//   purchased_from: \"\",\r\n//   description: \"\",\r\n//   remark: \"\",\r\n//   status: \"Pending\",\r\n//   amount: 0,\r\n//};\r\n\r\nconst ExpenseForm = ({ formdata, setFormdata, handleDialogClose }) => {\r\n  const classes = useStyles();\r\n  const toast = useCustomToast();\r\n  //const { acceptedFiles, getRootProps, getInputProps } = useDropzone();\r\n  //const { expenses, filter, setFilter, setExpenseId } = useExpenses();\r\n  const updateExpenses = useUpdateExpenses();\r\n  const addExpenses = useAddExpenses();\r\n  const delExpenses = useDeleteExpenses();\r\n   const { expensesattachments, setAttachmentId } = useExpensesAttachments();\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const { isExpenseEditing, editExpenseID } = useExpensesContext();\r\n  const [files, setFiles] = useState([]);\r\n  const [filename, setFilename] = useState(\"\");\r\n  const [newFile, setNewFile] = useState({});\r\n   const [image, setImage] = useRecoilState(viewImageState);\r\nconst {\r\n  isOpen: isViewImageOpen,\r\n  onOpen: onViewImageOpen,\r\n  onClose: onViewImageClose,\r\n} = useDisclosure();\r\n  const { handleSubmit, control, setValue } = useForm({\r\n    defaultValues: {\r\n      ...formdata,\r\n    },\r\n  });\r\n\r\n  console.log(\"formdata\", formdata);\r\n  console.log(\"files\", files);\r\n\r\n\r\n  \r\n  const onDrop = (acceptedFiles) => {\r\n    acceptedFiles.forEach((file) => {\r\n      const formData = new FormData();\r\n      formData.append(\"file\", file);\r\n      formData.append(\"upload_preset\", UPLOADPRESET);\r\n      axios({\r\n        url: UPLOADURL,\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n        },\r\n        data: formData,\r\n      })\r\n        .then((res) => {\r\n          //console.log(\"res\", res.data);\r\n          // Object.assign(file, {\r\n          //   preview: res.data.url,\r\n          // });\r\n          setFiles(\r\n            (prev) =>\r\n              (prev = [\r\n                ...files,\r\n                ...[\r\n                  { name: res.data.original_filename, preview: res.data.url },\r\n                ],\r\n              ])\r\n          );\r\n        })\r\n        .catch((err) => {\r\n          setNewFile({});\r\n          console.log(err);\r\n        });\r\n      // Object.assign(file, {\r\n      //   preview: URL.createObjectURL(file),\r\n      // });\r\n    });\r\n\r\n    //const allfiles = [...files, ...acceptedFiles];\r\n    //setFiles(allfiles);\r\n  };\r\n\r\n  const upLoad = () => {\r\n    const uploadURL = \"https://api.cloudinary.com/v1_1/dlmzwvakr/image/upload\";\r\n    const uploadPreset = \"appsmiths\";\r\n\r\n    files.forEach((file) => {\r\n      const formData = new FormData();\r\n      formData.append(\"file\", file);\r\n      formData.append(\"upload_preset\", uploadPreset);\r\n\r\n      axios({\r\n        url: uploadURL,\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n        },\r\n        data: formData,\r\n      })\r\n        .then((res) => {\r\n          setFilename((prev) => (prev = res.data.public_id));\r\n          console.log(res.data.public_id);\r\n          //console.log(\"filename\", filename);\r\n        })\r\n        .catch((err) => console.log(err));\r\n    });\r\n  };\r\n\r\n  const handleSentEmail = (data) => {\r\n    const { date } = data;\r\n    //console.log(\"expense form\", loginLevel);\r\n    var emaildata = {\r\n      to_name: loginLevel.loginUser,\r\n      to_email: loginLevel.loginEmail,\r\n      message: `Your expenses claim application dated on ${date} has been successfully submitted for approval`,\r\n      cc_to: loginLevel.reporting_email,\r\n    };\r\n\r\n    emailjs.send(SERVICE_ID, TEMPLATE_ID, emaildata, USER_ID).then(\r\n      function (response) {\r\n        console.log(response.status, response.text);\r\n        toast({\r\n          title: `Email has sent successfully to ${emaildata.to_email}!`,\r\n          status: \"success\",\r\n        });\r\n      },\r\n      function (err) {\r\n        console.log(err);\r\n        toast({\r\n          title: `Email has fail to send to ${emaildata.to_email}!`,\r\n          status: \"warning\",\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  const onSubmit = (data, e) => {\r\n    e.preventDefault();\r\n    console.log(\"onSubmit\", isExpenseEditing);\r\n    let newData = {\r\n      ...data,\r\n      attachment1_name: files.length >= 1 ? files[0].name : \"\",\r\n      attachment1_url: files.length >= 1 ? files[0].preview : \"\",\r\n      attachment2_name: files.length >= 2 ? files[1].name : \"\",\r\n      attachment2_url: files.length >= 2 ? files[1].preview : \"\",\r\n      attachment3_name: files.length >= 3 ? files[2].name : \"\",\r\n      attachment3_url: files.length >= 3 ? files[2].preview : \"\",\r\n    };\r\n    console.log(\"newdata\", newData);\r\n    console.log(\"isEditing\", isExpenseEditing);\r\n    if (isExpenseEditing) {\r\n      console.log(\"edit\");\r\n      const { rec_id, tableData, ...editData } = newData;\r\n      updateExpenses({ id: editExpenseID, ...editData });\r\n    } else {\r\n      console.log(\"new\");\r\n      addExpenses({\r\n        ...newData,\r\n        empid: loginLevel.loginUserId,\r\n        name: loginLevel.loginUser,\r\n      });\r\n    }\r\n    // if (isExpenseEditing) {\r\n    //   const { rec_id, tableData, ...editData } = newData;\r\n    //   console.log(\"edit\", ...editData);\r\n    //   updateExpenses({ id: editExpenseID, ...editData });\r\n    // } else {\r\n    //   console.log(\"new\");\r\n    //   addExpenses({\r\n    //     ...newData,\r\n    //     empid: loginLevel.loginUserId,\r\n    //     name: loginLevel.loginUser,\r\n    //   });\r\n    //   handleSentEmail(data);\r\n    // }\r\n\r\n    handleDialogClose();\r\n  };\r\n\r\n  const handleViewImage = ({ preview, name, type }) => {\r\n   const newImage = { url: preview, name: name };\r\n   const oldImage = image.url;\r\n   setImage((prev) => newImage);\r\n   console.log(\"type\", preview);\r\n   if (type !== \"pdf\") {\r\n     console.log(\"image\");\r\n     onViewImageOpen();\r\n   } else {\r\n     var win = window.open(\"\", \"_blank\");\r\n     console.log(\"pdf\");\r\n     //pdfMake.createPdf(preview).open({}, win);\r\n     <AllPagesPDFViewer pdf={preview} />;\r\n   }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isExpenseEditing) {\r\n      setAttachmentId(formdata.attachmentid);\r\n      const newData = expensesattachments\r\n        .filter((rec) => rec.attachmentid === formdata.attachmentid)\r\n        .map((rec) => {\r\n          return {\r\n            name: rec.name,\r\n            preview: rec.url,\r\n          };\r\n        });\r\n\r\n      console.log(\"data\", newData);\r\n\r\n      setFiles(newData);\r\n    } else {\r\n      setFiles([]);\r\n    }\r\n  }, [expensesattachments]);\r\n\r\n  \r\n  return (\r\n    <div>\r\n      <Box size=\"x1\">\r\n        <Typography variant=\"h5\" component=\"h3\">\r\n          EXPENSES CLAIM FORM\r\n        </Typography>\r\n        <Typography component=\"p\">Expense Claim Application</Typography>\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <Grid templateColumns=\"repeat(3, 1fr)\" gap={4}>\r\n            <GridItem colSpan={1}>\r\n              <div>\r\n                <Controller\r\n                  name=\"name\"\r\n                  control={control}\r\n                  defaultValue={loginLevel.loginUser}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Name\"\r\n                        id=\"margin-normal1\"\r\n                        name=\"name\"\r\n                        defaultValue={loginLevel.loginUser}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        InputProps={{\r\n                          readOnly: true,\r\n                        }}\r\n                      ></TextField>\r\n                    );\r\n                  }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"date\"\r\n                  control={control}\r\n                  defaultValue={formdata.date}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Date\"\r\n                        type=\"date\"\r\n                        id=\"margin-normal2\"\r\n                        name=\"formdata.date\"\r\n                        value={value}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                      />\r\n                    );\r\n                  }}\r\n                  rules={{ required: \"From Date is required\" }}\r\n                />\r\n              </div>\r\n\r\n              <div>\r\n                <Controller\r\n                  name=\"purchased_from\"\r\n                  control={control}\r\n                  defaultValue={formdata.purchased_from}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Purchased From\"\r\n                        id=\"margin-normal3\"\r\n                        name=\"purchased_from\"\r\n                        defaultValue={formdata.purchased_from}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  // rules={{ required: \"Reason is required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"description\"\r\n                  control={control}\r\n                  defaultValue={formdata.description}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Description\"\r\n                        id=\"margin-normal4\"\r\n                        name=\"description\"\r\n                        defaultValue={formdata.description}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  // rules={{ required: \"Reason is required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"amount\"\r\n                  control={control}\r\n                  defaultValue={formdata.amount}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      // <TextField\r\n                      //   label=\"Amount\"\r\n                      //   type=\"number\"\r\n                      //   id=\"standard-number1\"\r\n                      //   name=\"amount\"\r\n                      //   defaultValue={formdata.amount}\r\n                      //   className={classes.textField}\r\n                      //   //onChange={onChange}\r\n                      //   onChange={(e) => {\r\n                      //     onChange(parseInt(e.target.value, 10));\r\n                      //   }}\r\n                      //   error={!!error}\r\n                      //   helperText={error ? error.message : null}\r\n                      // />\r\n                      <CurrencyTextField\r\n                        label=\"Amount\"\r\n                        variant=\"standard\"\r\n                        value={formdata.amount}\r\n                        currencySymbol=\"$\"\r\n                        outputFormat=\"string\"\r\n                        decimalCharacter=\".\"\r\n                        digitGroupSeparator=\",\"\r\n                        decimalPlaces=\"2\"\r\n                        className={classes.textField}\r\n                        id=\"standard-amount\"\r\n                        name=\"amount\"\r\n                        style={{ width: 100 }}\r\n                        //onChange={onChange}\r\n                        onChange={(e) => {\r\n                          onChange(parseFloat(currency(e.target.value), 10));\r\n                        }}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"IC No required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"remark\"\r\n                  control={control}\r\n                  defaultValue={formdata.remark}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Remark\"\r\n                        id=\"margin-normal5\"\r\n                        name=\"remark\"\r\n                        defaultValue={formdata.remark}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  // rules={{ required: \"Reason is required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"status\"\r\n                  control={control}\r\n                  defaultValue=\"Pending\"\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Status\"\r\n                        id=\"margin-normal6\"\r\n                        name=\"status\"\r\n                        defaultValue=\"Pending\"\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        InputProps={{\r\n                          readOnly: true,\r\n                        }}\r\n                      ></TextField>\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Status is required\" }}\r\n                />\r\n              </div>\r\n              {/* <div>\r\n                <Controller\r\n                  name=\"attachment1_name\"\r\n                  control={control}\r\n                  defaultValue={files.length >= 1 ? files[0].name : \"\"}\r\n                  defaultValue={formdata.attachment1_name}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Attachment #1\"\r\n                        id=\"margin-normal6\"\r\n                        name=\"attachment1_name\"\r\n                        defaultValue={files.length >= 1 ? files[0].name : \"\"}\r\n                        defaultValue={formdata.attachment1_name}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        InputProps={{\r\n                          readOnly: true,\r\n                        }}\r\n                      ></TextField>\r\n                    );\r\n                  }}\r\n                />\r\n              </div> */}\r\n              {/*  <div>\r\n                <Controller\r\n                  name=\"attachment2_name\"\r\n                  control={control}\r\n                  defaultValue={formdata.attachment2_name}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Attachment #2\"\r\n                        id=\"margin-normal6\"\r\n                        name=\"attachment2_name\"\r\n                        defaultValue={formdata.attachment2_name}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        InputProps={{\r\n                          readOnly: true,\r\n                        }}\r\n                      ></TextField>\r\n                    );\r\n                  }}\r\n                />\r\n              </div> */}\r\n              {/* <div>\r\n                <Controller\r\n                  name=\"attachment3_name\"\r\n                  control={control}\r\n                  defaultValue={formdata.attachment3_name}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Attachment #3\"\r\n                        id=\"margin-normal6\"\r\n                        name=\"attachment3_name\"\r\n                        defaultValue={formdata.attachment3_name}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        InputProps={{\r\n                          readOnly: true,\r\n                        }}\r\n                      ></TextField>\r\n                    );\r\n                  }}\r\n                />\r\n              </div> */}\r\n\r\n              <div>\r\n                {/* <Button\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  //onClick={() => handleSubmit(onSubmit)()}\r\n                >\r\n                  Save <Icon className={classes.rightIcon}>send</Icon>\r\n                </Button> */}\r\n              </div>\r\n            </GridItem>\r\n            <GridItem colSpan={2}>\r\n              {/* <ImageUpload files={files} setFiles={setFiles} onDrop={onDrop} /> */}\r\n              {files\r\n                .filter((rec) => rec.name !== undefined && rec.name !== null)\r\n                .map((file) => {\r\n                  return (\r\n                    <Box\r\n                      display=\"inline-flex\"\r\n                      w=\"50%\"\r\n                      h={150}\r\n                      mb={8}\r\n                      mr={8}\r\n                      p={4}\r\n                      border=\"1px solid #eaeaea\"\r\n                      borderRadius={2}\r\n                      key={file.name}\r\n                    >\r\n                      <HStack p={5}>\r\n                        <Image\r\n                          src={file.preview}\r\n                          alt={file.name}\r\n                          display=\"block\"\r\n                          w=\"auto\"\r\n                          h=\"100%\"\r\n                        />\r\n                        <VStack>\r\n                          <IconButton\r\n                            size=\"sm\"\r\n                            aria-label=\"view image\"\r\n                            icon={<FiEye />}\r\n                            onClick={() =>\r\n                              handleViewImage({\r\n                                preview: file.preview,\r\n                                name: file.name,\r\n                                type: file.preview.split(\".\").pop(),\r\n                              })\r\n                            }\r\n                          />\r\n                          {/* <IconButton\r\n                            size=\"sm\"\r\n                            aria-label=\"delete image\"\r\n                            icon={<FiTrash2 />}\r\n                            onClick={() => handleDelImage(file.name)}\r\n                          /> */}\r\n                        </VStack>\r\n                      </HStack>\r\n                    </Box>\r\n                  );\r\n                })}\r\n            </GridItem>\r\n          </Grid>\r\n        </form>\r\n      </Box>\r\n      <Modal\r\n        closeOnOverlayClick={false}\r\n        isOpen={isViewImageOpen}\r\n        onClose={onViewImageClose}\r\n        size=\"2xl\"\r\n      >\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader>Your images</ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody pb={6}>\r\n            <Box\r\n              display=\"inline-flex\"\r\n              w=\"100%\"\r\n              h=\"auto\"\r\n              mb={8}\r\n              mr={8}\r\n              p={4}\r\n              border=\"1px solid #eaeaea\"\r\n              borderRadius={2}\r\n            >\r\n              <Image\r\n                src={image.url}\r\n                alt={image.name}\r\n                display=\"block\"\r\n                w=\"auto\"\r\n                h=\"100%\"\r\n              />\r\n            </Box>\r\n          </ModalBody>\r\n\r\n          <ModalFooter>\r\n            <Button onClick={onViewImageClose}>Close</Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  leftIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  iconSmall: {\r\n    fontSize: 20,\r\n  },\r\n  root: {\r\n    padding: theme.spacing(3, 2),\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 400,\r\n  },\r\n}));\r\n\r\nexport default ExpenseForm;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-airtable\\\\src\\\\components\\\\EmpExperiences.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useMemo } from \"react\";\nimport MaterialTable, { MTableToolbar } from \"material-table\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { TextField } from \"@material-ui/core\";\nimport { useEmployeesContext } from \"../context/employees_context\";\nimport { useTablesContext } from \"../context/tables_context\";\nimport { useExperiences } from \"./experiences/useExperiences\";\nimport { useUpdateExperiences } from \"./experiences/useUpdateExperiences\";\nimport { useAddExperiences } from \"./experiences/useAddExperiences\";\nimport { useDeleteExperiences } from \"./experiences/useDeleteExperiences\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Emp_Experiences(_ref) {\n  _s();\n  let {\n    experiencedata,\n    setExperiencedata,\n    handleDialogClose\n  } = _ref;\n  const classes = useStyles();\n  const {\n    experiences,\n    setExperienceId\n  } = useExperiences();\n  const updateExperiences = useUpdateExperiences();\n  const addExperiences = useAddExperiences();\n  const deleteExperiences = useDeleteExperiences();\n  const {\n    editEmployeeID\n  } = useEmployeesContext();\n  const columns = useMemo(() => [{\n    title: \"Company\",\n    field: \"company\"\n  }, {\n    title: \"Location\",\n    field: \"location\"\n  }, {\n    title: \"Position\",\n    field: \"position\"\n  }, {\n    title: \"From Date\",\n    field: \"from_date\",\n    type: \"date\",\n    editComponent: props => /*#__PURE__*/_jsxDEV(TextField, {\n      defaultValue: props.value || new Date(),\n      onChange: e => props.onChange(e.target.value),\n      type: \"date\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)\n  }, {\n    title: \"To Date\",\n    field: \"to_date\",\n    type: \"date\",\n    editComponent: props => /*#__PURE__*/_jsxDEV(TextField, {\n      defaultValue: props.value || new Date(),\n      onChange: e => props.onChange(e.target.value),\n      type: \"date\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)\n  }, {\n    title: \"Remark\",\n    field: \"remark\"\n  }], []);\n  useEffect(() => {\n    setExperienceId(editEmployeeID);\n  }, []);\n  const update_Experience = data => {\n    const {\n      id,\n      rec_id,\n      tableData,\n      ...fields\n    } = data;\n    updateExperiences({\n      id,\n      ...fields\n    });\n  };\n  const add_Experience = data => {\n    addExperiences({\n      ...data,\n      empid: editEmployeeID\n    });\n  };\n  const delete_Experience = data => {\n    const {\n      id\n    } = data;\n    deleteExperiences(id);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: \"100%\",\n        paddingTop: \"5px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n        columns: columns,\n        data: experiences,\n        title: \"Experience\",\n        editable: {\n          onRowAdd: newData => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              add_Experience(newData);\n              resolve();\n            }, 1000);\n          }),\n          onRowUpdate: (newData, oldData) => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              update_Experience(newData);\n              resolve();\n            }, 1000);\n          }),\n          onRowDelete: oldData => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              delete_Experience(oldData);\n              resolve();\n            }, 1000);\n          })\n        },\n        options: {\n          filtering: true,\n          headerStyle: {\n            backgroundColor: \"orange\",\n            color: \"primary\"\n          },\n          showTitle: true\n        },\n        components: {\n          Toolbar: props => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(MTableToolbar, {\n              ...props\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n_s(Emp_Experiences, \"pF524HsCxlzAKb6PE1QfBP6HVAY=\", false, function () {\n  return [useStyles, useExperiences, useUpdateExperiences, useAddExperiences, useDeleteExperiences, useEmployeesContext];\n});\n_c = Emp_Experiences;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: 0\n  }\n}));\nvar _c;\n$RefreshReg$(_c, \"Emp_Experiences\");","map":{"version":3,"names":["React","useEffect","useMemo","MaterialTable","MTableToolbar","makeStyles","TextField","useEmployeesContext","useTablesContext","useExperiences","useUpdateExperiences","useAddExperiences","useDeleteExperiences","Emp_Experiences","experiencedata","setExperiencedata","handleDialogClose","classes","useStyles","experiences","setExperienceId","updateExperiences","addExperiences","deleteExperiences","editEmployeeID","columns","title","field","type","editComponent","props","value","Date","e","onChange","target","update_Experience","data","id","rec_id","tableData","fields","add_Experience","empid","delete_Experience","root","maxWidth","paddingTop","onRowAdd","newData","Promise","resolve","reject","setTimeout","onRowUpdate","oldData","onRowDelete","filtering","headerStyle","backgroundColor","color","showTitle","Toolbar","theme","padding"],"sources":["D:/react-myprojects/hrms-airtable/src/components/EmpExperiences.js"],"sourcesContent":["import React, { useEffect, useMemo } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useTablesContext } from \"../context/tables_context\";\r\nimport { useExperiences } from \"./experiences/useExperiences\";\r\nimport { useUpdateExperiences } from \"./experiences/useUpdateExperiences\";\r\nimport { useAddExperiences } from \"./experiences/useAddExperiences\";\r\nimport { useDeleteExperiences } from \"./experiences/useDeleteExperiences\";\r\n\r\nexport default function Emp_Experiences({\r\n  experiencedata,\r\n  setExperiencedata,\r\n  handleDialogClose,\r\n}) {\r\n  const classes = useStyles();\r\n  const { experiences, setExperienceId } = useExperiences();\r\n  const updateExperiences = useUpdateExperiences();\r\n  const addExperiences = useAddExperiences();\r\n  const deleteExperiences = useDeleteExperiences();\r\n  const { editEmployeeID } = useEmployeesContext();\r\n\r\n  const columns = useMemo(() => [\r\n    {\r\n      title: \"Company\",\r\n      field: \"company\",\r\n    },\r\n    {\r\n      title: \"Location\",\r\n      field: \"location\",\r\n    },\r\n    {\r\n      title: \"Position\",\r\n      field: \"position\",\r\n    },\r\n    {\r\n      title: \"From Date\",\r\n      field: \"from_date\",\r\n      type: \"date\",\r\n      editComponent: (props) => (\r\n        <TextField\r\n          defaultValue={props.value || new Date()}\r\n          onChange={(e) => props.onChange(e.target.value)}\r\n          type=\"date\"\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      title: \"To Date\",\r\n      field: \"to_date\",\r\n      type: \"date\",\r\n      editComponent: (props) => (\r\n        <TextField\r\n          defaultValue={props.value || new Date()}\r\n          onChange={(e) => props.onChange(e.target.value)}\r\n          type=\"date\"\r\n        />\r\n      ),\r\n    },\r\n    { title: \"Remark\", field: \"remark\" },\r\n  ],[]);\r\n\r\n  useEffect(() => {\r\n    setExperienceId(editEmployeeID);\r\n  }, []);\r\n\r\n  const update_Experience = (data) => {\r\n    const { id, rec_id, tableData, ...fields } = data;\r\n    updateExperiences({ id, ...fields });\r\n  };\r\n\r\n  const add_Experience = (data) => {\r\n    addExperiences({ ...data, empid: editEmployeeID });\r\n  };\r\n\r\n  const delete_Experience = (data) => {\r\n    const { id } = data;\r\n    deleteExperiences(id);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={experiences}\r\n          title=\"Experience\"\r\n          editable={{\r\n            onRowAdd: (newData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  add_Experience(newData);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowUpdate: (newData, oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  update_Experience(newData);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowDelete: (oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  delete_Experience(oldData);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n          }}\r\n          options={{\r\n            filtering: true,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"primary\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
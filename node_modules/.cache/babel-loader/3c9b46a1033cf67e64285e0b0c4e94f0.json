{"ast":null,"code":"'use strict';\n\nvar TYPED_OK = typeof Uint8Array !== 'undefined' && typeof Uint16Array !== 'undefined' && typeof Int32Array !== 'undefined';\nexports.assign = function (obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n  while (sources.length) {\n    var source = sources.shift();\n    if (!source) {\n      continue;\n    }\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be non-object');\n    }\n    for (var p in source) {\n      if (source.hasOwnProperty(p)) {\n        obj[p] = source[p];\n      }\n    }\n  }\n  return obj;\n};\n\n// reduce buffer size, avoiding mem copy\nexports.shrinkBuf = function (buf, size) {\n  if (buf.length === size) {\n    return buf;\n  }\n  if (buf.subarray) {\n    return buf.subarray(0, size);\n  }\n  buf.length = size;\n  return buf;\n};\nvar fnTyped = {\n  arraySet: function (dest, src, src_offs, len, dest_offs) {\n    if (src.subarray && dest.subarray) {\n      dest.set(src.subarray(src_offs, src_offs + len), dest_offs);\n      return;\n    }\n    // Fallback to ordinary array\n    for (var i = 0; i < len; i++) {\n      dest[dest_offs + i] = src[src_offs + i];\n    }\n  },\n  // Join array of chunks to single array.\n  flattenChunks: function (chunks) {\n    var i, l, len, pos, chunk, result;\n\n    // calculate data length\n    len = 0;\n    for (i = 0, l = chunks.length; i < l; i++) {\n      len += chunks[i].length;\n    }\n\n    // join chunks\n    result = new Uint8Array(len);\n    pos = 0;\n    for (i = 0, l = chunks.length; i < l; i++) {\n      chunk = chunks[i];\n      result.set(chunk, pos);\n      pos += chunk.length;\n    }\n    return result;\n  }\n};\nvar fnUntyped = {\n  arraySet: function (dest, src, src_offs, len, dest_offs) {\n    for (var i = 0; i < len; i++) {\n      dest[dest_offs + i] = src[src_offs + i];\n    }\n  },\n  // Join array of chunks to single array.\n  flattenChunks: function (chunks) {\n    return [].concat.apply([], chunks);\n  }\n};\n\n// Enable/Disable typed arrays use, for testing\n//\nexports.setTyped = function (on) {\n  if (on) {\n    exports.Buf8 = Uint8Array;\n    exports.Buf16 = Uint16Array;\n    exports.Buf32 = Int32Array;\n    exports.assign(exports, fnTyped);\n  } else {\n    exports.Buf8 = Array;\n    exports.Buf16 = Array;\n    exports.Buf32 = Array;\n    exports.assign(exports, fnUntyped);\n  }\n};\nexports.setTyped(TYPED_OK);","map":{"version":3,"names":["TYPED_OK","Uint8Array","Uint16Array","Int32Array","exports","assign","obj","sources","Array","prototype","slice","call","arguments","length","source","shift","TypeError","p","hasOwnProperty","shrinkBuf","buf","size","subarray","fnTyped","arraySet","dest","src","src_offs","len","dest_offs","set","i","flattenChunks","chunks","l","pos","chunk","result","fnUntyped","concat","apply","setTyped","on","Buf8","Buf16","Buf32"],"sources":["D:/react-myprojects/hrms-airtable/node_modules/pako/lib/utils/common.js"],"sourcesContent":["'use strict';\n\n\nvar TYPED_OK =  (typeof Uint8Array !== 'undefined') &&\n                (typeof Uint16Array !== 'undefined') &&\n                (typeof Int32Array !== 'undefined');\n\n\nexports.assign = function (obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n  while (sources.length) {\n    var source = sources.shift();\n    if (!source) { continue; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be non-object');\n    }\n\n    for (var p in source) {\n      if (source.hasOwnProperty(p)) {\n        obj[p] = source[p];\n      }\n    }\n  }\n\n  return obj;\n};\n\n\n// reduce buffer size, avoiding mem copy\nexports.shrinkBuf = function (buf, size) {\n  if (buf.length === size) { return buf; }\n  if (buf.subarray) { return buf.subarray(0, size); }\n  buf.length = size;\n  return buf;\n};\n\n\nvar fnTyped = {\n  arraySet: function (dest, src, src_offs, len, dest_offs) {\n    if (src.subarray && dest.subarray) {\n      dest.set(src.subarray(src_offs, src_offs + len), dest_offs);\n      return;\n    }\n    // Fallback to ordinary array\n    for (var i = 0; i < len; i++) {\n      dest[dest_offs + i] = src[src_offs + i];\n    }\n  },\n  // Join array of chunks to single array.\n  flattenChunks: function (chunks) {\n    var i, l, len, pos, chunk, result;\n\n    // calculate data length\n    len = 0;\n    for (i = 0, l = chunks.length; i < l; i++) {\n      len += chunks[i].length;\n    }\n\n    // join chunks\n    result = new Uint8Array(len);\n    pos = 0;\n    for (i = 0, l = chunks.length; i < l; i++) {\n      chunk = chunks[i];\n      result.set(chunk, pos);\n      pos += chunk.length;\n    }\n\n    return result;\n  }\n};\n\nvar fnUntyped = {\n  arraySet: function (dest, src, src_offs, len, dest_offs) {\n    for (var i = 0; i < len; i++) {\n      dest[dest_offs + i] = src[src_offs + i];\n    }\n  },\n  // Join array of chunks to single array.\n  flattenChunks: function (chunks) {\n    return [].concat.apply([], chunks);\n  }\n};\n\n\n// Enable/Disable typed arrays use, for testing\n//\nexports.setTyped = function (on) {\n  if (on) {\n    exports.Buf8  = Uint8Array;\n    exports.Buf16 = Uint16Array;\n    exports.Buf32 = Int32Array;\n    exports.assign(exports, fnTyped);\n  } else {\n    exports.Buf8  = Array;\n    exports.Buf16 = Array;\n    exports.Buf32 = Array;\n    exports.assign(exports, fnUntyped);\n  }\n};\n\nexports.setTyped(TYPED_OK);\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}
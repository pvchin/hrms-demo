{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-demo\\\\src\\\\components\\\\EmployeeFormStaff.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Icon, TextField, Paper, Typography, Grid, Divider } from \"@material-ui/core\"; //import { Alert, AlertTitle } from \"@material-ui/lab\";\n\nimport CurrencyTextField from \"@unicef/material-ui-currency-textfield\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { useCustomToast } from \"../helpers/useCustomToast\";\nimport { useRecoilState } from \"recoil\";\nimport { loginLevelState } from \"./data/atomdata\"; //import { useEmployeesContext } from \"../context/employees_context\";\n\nimport { Controller, useForm } from \"react-hook-form\";\nimport { useEmployees } from \"./employees/useEmployees\"; //import { useSingleEmployee } from \"./employees/useSingleEmployee\";\n\nimport { useUpdateEmployees } from \"./employees/useUpdateEmployees\"; // import EmpFamilyStaff from \"./EmpFamilyStaff\";\n// import EmpEducationsStaff from \"./EmpEducationsStaff\";\n// import EmpExperiencesStaff from \"./EmpExperiencesStaff\";\n\nimport EmpFamily from \"./EmpFamily\";\nimport EmpEducations from \"./EmpEducations\";\nimport EmpExperiences from \"./EmpExperiences\";\nimport EmpTrainings from \"./EmpTrainings\";\nimport EmpJobhistory from \"./EmpJobhistory\";\nimport App from \"../utils/firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initial_values = {\n  name: \"\",\n  birthdate: null,\n  empno: \"\",\n  gender: \"\",\n  ic_no: \"\",\n  email: \"\",\n  age: 0,\n  basic_salary: 0,\n  salary_currency: \"BND\",\n  bank_name: \"\",\n  bank_acno: \"\",\n  nationality: \"\",\n  address: \"\",\n  leave_bal: 0,\n  leave_bf: 0,\n  leave_entitled: 0,\n  tap_acno: \"\",\n  scp_acno: \"\",\n  date_of_join: null,\n  date_of_resign: null,\n  designation: \"\",\n  department: \"\",\n  passportno: \"\",\n  passport_expirydate: null,\n  workpermitno: \"\",\n  workpermit_expirydate: null,\n  siteallows_fee: 0,\n  perdiem_fee: 0,\n  reporting_to: \"\",\n  reporting_email: \"\"\n};\n\nconst EmployeeForm = () => {\n  _s();\n\n  const classes = useStyles();\n  const toast = useCustomToast();\n  const {\n    employees,\n    setEmployeeId\n  } = useEmployees(); //const { singleemployee, setSingleEmployeeId } = useSingleEmployee();\n\n  const updateEmployees = useUpdateEmployees();\n  const [empage, setEmpage] = useState(0);\n  const [reportemail, setReportEmail] = useState(\"\");\n  const {\n    handleSubmit,\n    control,\n    setValue,\n    register\n  } = useForm();\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState); // const {\n  //   isEditing,\n  //   single_employee,\n  //   editEmployeeID,\n  //   getSingleEmployee,\n  //   single_employee_loading,\n  // } = useEmployeesContext();\n\n  const single_employee = employees.filter(r => r.id === loginLevel.loginUserId).map(r => {\n    return { ...r\n    };\n  });\n  const {\n    name,\n    empno,\n    birthdate,\n    ic_no,\n    gender,\n    //age,\n    email,\n    nationality,\n    address,\n    basic_salary,\n    salary_currency,\n    bank_name,\n    bank_acno,\n    tap_acno,\n    scp_acno,\n    leave_bf,\n    leave_entitled,\n    date_of_join,\n    date_of_resign,\n    designation,\n    department,\n    passportno,\n    passport_expirydate,\n    workpermitno,\n    workpermit_expirydate,\n    siteallows_fee,\n    perdiem_fee,\n    reporting_to,\n    reporting_email\n  } = single_employee[0] || initial_values; //console.log(\"single employee\", single_employee);\n\n  const handleReportingTo = name => {\n    const emp = employees.filter(f => f.name === name).map(r => {\n      return { ...r\n      };\n    });\n    setReportEmail(emp[0].email);\n  };\n\n  const onSubmit = data => {\n    //console.log(\"Data\",data)\n    updateEmployees({\n      id: loginLevel.loginUserId,\n      ...data\n    });\n  };\n\n  const Reset_PW = () => {\n    try {\n      App.auth().sendPasswordResetEmail(email);\n      toast({\n        title: `Reset Password sent to ${email}!`,\n        status: \"success\"\n      });\n    } catch (error) {\n      toast({\n        title: `Fail to reset password on ${email}!`,\n        status: \"warning\"\n      });\n      console.log(error);\n    }\n  };\n\n  const calculateAge = dob => {\n    var today = new Date();\n    var birthDate = new Date(dob);\n    var age = today.getFullYear() - birthDate.getFullYear();\n    var m = today.getMonth() - birthDate.getMonth();\n\n    if (m < 0 || m === 0 && today.getDate() < birthDate.getDate()) {\n      age--;\n    }\n\n    return age;\n  }; // useEffect(() => {\n  //   setEmployeeId(loginLevel.loginUserId);\n  // }, []);\n\n\n  useEffect(() => {\n    let age = calculateAge(birthdate);\n    setEmpage(age);\n    setReportEmail(reporting_email);\n  }, []); // if (single_employee_loading) {\n  //   return (\n  //     <div>\n  //       <h2>Loading... </h2>\n  //     </div>\n  //   );\n  //}\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        className: classes.root,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          className: classes.root,\n          spacing: 15,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              component: \"h3\",\n              children: \"EMPLOYEE FORM\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              variant: \"contained\",\n              color: \"primary\",\n              className: classes.button,\n              children: [\"Submit \", /*#__PURE__*/_jsxDEV(Icon, {\n                className: classes.rightIcon,\n                children: \"send\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 24\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              className: classes.button,\n              onClick: Reset_PW,\n              children: [\"Reset PW \", /*#__PURE__*/_jsxDEV(Icon, {\n                className: classes.rightIcon,\n                children: \"send\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 26\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          className: classes.divider\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Controller, {\n                name: \"name\",\n                control: control,\n                defaultValue: name,\n                render: ({\n                  field: {\n                    onChange,\n                    value\n                  },\n                  fieldState: {\n                    error\n                  }\n                }) => {\n                  return /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Name\",\n                    id: \"standard-name\",\n                    defaultValue: name,\n                    name: \"name\",\n                    className: classes.textField,\n                    onChange: onChange,\n                    error: !!error,\n                    helperText: error ? error.message : null,\n                    inputProps: {\n                      readOnly: true\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 223,\n                    columnNumber: 23\n                  }, this);\n                },\n                rules: {\n                  required: \"Name required\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Controller, {\n                name: \"empno\",\n                control: control,\n                defaultValue: empno,\n                render: ({\n                  field: {\n                    onChange,\n                    value\n                  },\n                  fieldState: {\n                    error\n                  }\n                }) => {\n                  return /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Emp No\",\n                    id: \"standard-empno\",\n                    name: \"empno\",\n                    defaultValue: empno,\n                    className: classes.textField,\n                    onChange: onChange,\n                    error: !!error,\n                    helperText: error ? error.message : null,\n                    inputProps: {\n                      readOnly: true\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 247,\n                    columnNumber: 23\n                  }, this);\n                },\n                rules: {\n                  required: \"Name required\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Controller, {\n                name: \"email\",\n                control: control,\n                defaultValue: email,\n                render: ({\n                  field: {\n                    onChange,\n                    value\n                  },\n                  fieldState: {\n                    error\n                  }\n                }) => {\n                  return /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Email\",\n                    id: \"standard-email\",\n                    name: \"email\",\n                    defaultValue: email,\n                    className: classes.textField,\n                    onChange: onChange,\n                    error: !!error,\n                    helperText: error ? error.message : null,\n                    inputProps: {\n                      readOnly: true\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 273,\n                    columnNumber: 23\n                  }, this);\n                } //rules={{ required: \"Email is required\" }}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Controller, {\n                name: \"ic_no\",\n                control: control,\n                defaultValue: ic_no,\n                render: ({\n                  field: {\n                    onChange,\n                    value\n                  },\n                  fieldState: {\n                    error\n                  }\n                }) => {\n                  return /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"IC No\",\n                    id: \"standard-icno\",\n                    defaultValue: ic_no,\n                    name: \"ic_no\",\n                    className: classes.textField,\n                    onChange: onChange,\n                    error: !!error,\n                    helperText: error ? error.message : null\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 298,\n                    columnNumber: 23\n                  }, this);\n                } //rules={{ required: \"IC No required\" }}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Controller, {\n                name: \"birthdate\",\n                control: control,\n                defaultValue: birthdate,\n                render: ({\n                  field: {\n                    onChange,\n                    value\n                  },\n                  fieldState: {\n                    error\n                  }\n                }) => {\n                  return /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Birth Date\",\n                    id: \"standard-birthdate\",\n                    name: \"birthdate\",\n                    type: \"date\",\n                    defaultValue: birthdate,\n                    className: classes.textField,\n                    onChange: e => {\n                      onChange(e.target.value);\n                      let age = calculateAge(e.target.value);\n                      console.log(\"emp\", birthdate, age);\n                      setEmpage(age);\n                    },\n                    error: !!error,\n                    helperText: error ? error.message : null,\n                    InputLabelProps: {\n                      shrink: true\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 323,\n                    columnNumber: 23\n                  }, this);\n                } //rules={{ required: \"IC No required\" }}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Controller, {\n                name: \"age\",\n                control: control //defaultValue={age}\n                ,\n                render: ({\n                  field: {\n                    onChange,\n                    value\n                  },\n                  fieldState: {\n                    error\n                  }\n                }) => {\n                  return /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Age\",\n                    type: \"number\",\n                    id: \"standard-age\",\n                    name: \"age\",\n                    value: empage,\n                    className: classes.textField //onChange={onChange}\n                    ,\n                    onChange: e => {\n                      onChange(parseInt(e.target.value, 10));\n                    },\n                    error: !!error,\n                    helperText: error ? error.message : null,\n                    inputProps: {\n                      readOnly: true\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 356,\n                    columnNumber: 23\n                  }, this);\n                } //rules={{ required: \"IC No required\" }}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 347,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Controller, {\n                name: \"passportno\",\n                control: control,\n                defaultValue: passportno,\n                render: ({\n                  field: {\n                    onChange,\n                    value\n                  },\n                  fieldState: {\n                    error\n                  }\n                }) => {\n                  return /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Passport No\",\n                    id: \"stanrad-ppno\",\n                    name: \"passportno\",\n                    defaultValue: passportno,\n                    className: classes.textField,\n                    onChange: onChange,\n                    error: !!error,\n                    helperText: error ? error.message : null\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 386,\n                    columnNumber: 23\n                  }, this);\n                } //rules={{ required: \"Name required\" }}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 377,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Controller, {\n                name: \"passport_expirydate\",\n                control: control,\n                defaultValue: passport_expirydate,\n                render: ({\n                  field: {\n                    onChange,\n                    value\n                  },\n                  fieldState: {\n                    error\n                  }\n                }) => {\n                  return /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Passport Expiry Date\",\n                    id: \"standard-ppexpiry\",\n                    name: \"passport_expirydate\",\n                    type: \"date\",\n                    defaultValue: passport_expirydate,\n                    className: classes.textField,\n                    onChange: onChange,\n                    error: !!error,\n                    helperText: error ? error.message : null,\n                    InputLabelProps: {\n                      shrink: true\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 409,\n                    columnNumber: 23\n                  }, this);\n                } //rules={{ required: \"Name required\" }}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 400,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Controller, {\n                name: \"nationality\",\n                control: control,\n                defaultValue: nationality,\n                render: ({\n                  field: {\n                    onChange,\n                    value\n                  },\n                  fieldState: {\n                    error\n                  }\n                }) => {\n                  return /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Nationality\",\n                    id: \"standard-nationality\",\n                    name: \"nationality\",\n                    defaultValue: nationality,\n                    className: classes.textField,\n                    onChange: onChange,\n                    error: !!error,\n                    helperText: error ? error.message : null\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 438,\n                    columnNumber: 23\n                  }, this);\n                } //rules={{ required: \"IC No required\" }}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 429,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Controller, {\n                name: \"gender\",\n                control: control,\n                defaultValue: gender,\n                render: ({\n                  field: {\n                    onChange,\n                    value\n                  },\n                  fieldState: {\n                    error\n                  }\n                }) => {\n                  return /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Gender\",\n                    id: \"standard-gender\",\n                    name: \"gender\",\n                    defaultValue: gender,\n                    className: classes.textField,\n                    onChange: onChange,\n                    error: !!error,\n                    helperText: error ? error.message : null,\n                    select: true,\n                    children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: \"Male\",\n                      children: \"Male\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 472,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: \"Female\",\n                      children: \"Female\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 473,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 461,\n                    columnNumber: 23\n                  }, this);\n                } //rules={{ required: \"IC No required\" }}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 452,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 428,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Controller, {\n                name: \"address\",\n                control: control,\n                defaultValue: address,\n                render: ({\n                  field: {\n                    onChange,\n                    value\n                  },\n                  fieldState: {\n                    error\n                  }\n                }) => {\n                  return /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Address\",\n                    id: \"standard-address\",\n                    name: \"address\",\n                    defaultValue: address,\n                    className: classes.textField,\n                    onChange: onChange,\n                    error: !!error,\n                    helperText: error ? error.message : null\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 490,\n                    columnNumber: 23\n                  }, this);\n                } //rules={{ required: \"IC No required\" }}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 481,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 480,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {\n            className: classes.divider\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 507,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Controller, {\n                name: \"basic_salary\",\n                control: control,\n                defaultValue: basic_salary,\n                render: ({\n                  field: {\n                    onChange,\n                    value\n                  },\n                  fieldState: {\n                    error\n                  }\n                }) => {\n                  return /*#__PURE__*/_jsxDEV(CurrencyTextField, {\n                    label: \"Basic Salary\",\n                    variant: \"standard\",\n                    defaultValue: basic_salary,\n                    currencySymbol: \"$\",\n                    outputFormat: \"number\",\n                    decimalCharacter: \".\",\n                    digitGroupSeparator: \",\",\n                    decimalPlaces: \"2\",\n                    className: classes.textField,\n                    id: \"standard-basicsalary\",\n                    name: \"basic_pay\" //onChange={onChange}\n                    ,\n                    onChange: e => {\n                      onChange(parseFloat(e.target.value, 10));\n                    },\n                    error: !!error,\n                    helperText: error ? error.message : null,\n                    inputProps: {\n                      readOnly: true\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 519,\n                    columnNumber: 23\n                  }, this);\n                } //rules={{ required: \"IC No required\" }}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 510,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Controller, {\n                name: \"salary_currency\",\n                control: control,\n                defaultValue: salary_currency,\n                render: ({\n                  field: {\n                    onChange,\n                    value\n                  },\n                  fieldState: {\n                    error\n                  }\n                }) => {\n                  return /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Currency\",\n                    id: \"standard-currency\",\n                    name: \"salary_currency\",\n                    defaultValue: salary_currency,\n                    className: classes.textField,\n                    onChange: onChange,\n                    error: !!error,\n                    helperText: error ? error.message : null,\n                    inputProps: {\n                      readOnly: true\n                    },\n                    select: true,\n                    children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: \"BND\",\n                      children: \"BND\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 564,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: \"MYR\",\n                      children: \"MYR\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 565,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: \"USD\",\n                      children: \"USD\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 566,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 552,\n                    columnNumber: 23\n                  }, this);\n                } //rules={{ required: \"IC No required\" }}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 543,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 509,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Controller, {\n                name: \"siteallows_fee\",\n                control: control,\n                defaultValue: siteallows_fee,\n                render: ({\n                  field: {\n                    onChange,\n                    value\n                  },\n                  fieldState: {\n                    error\n                  }\n                }) => {\n                  return /*#__PURE__*/_jsxDEV(CurrencyTextField, {\n                    label: \"Site Allowances Fee\",\n                    variant: \"standard\",\n                    defaultValue: siteallows_fee,\n                    currencySymbol: \"$\",\n                    outputFormat: \"number\",\n                    decimalCharacter: \".\",\n                    digitGroupSeparator: \",\",\n                    decimalPlaces: \"2\",\n                    className: classes.textField,\n                    id: \"standard-siteallowances\",\n                    name: \"siteallows_fee\" //onChange={onChange}\n                    ,\n                    onChange: e => {\n                      onChange(parseFloat(e.target.value, 10));\n                    },\n                    error: !!error,\n                    helperText: error ? error.message : null,\n                    inputProps: {\n                      readOnly: true\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 583,\n                    columnNumber: 23\n                  }, this);\n                } //rules={{ required: \"IC No required\" }}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 574,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Controller, {\n                name: \"perdiem_fee\",\n                control: control,\n                defaultValue: perdiem_fee,\n                render: ({\n                  field: {\n                    onChange,\n                    value\n                  },\n                  fieldState: {\n                    error\n                  }\n                }) => {\n                  return /*#__PURE__*/_jsxDEV(CurrencyTextField, {\n                    label: \"Per Diem Fee\",\n                    variant: \"standard\",\n                    defaultValue: perdiem_fee,\n                    currencySymbol: \"$\",\n                    outputFormat: \"number\",\n                    decimalCharacter: \".\",\n                    digitGroupSeparator: \",\",\n                    decimalPlaces: \"2\",\n                    className: classes.textField,\n                    id: \"standard-perdiem\",\n                    name: \"perdiem_fee\" //onChange={onChange}\n                    ,\n                    onChange: e => {\n                      onChange(parseFloat(e.target.value, 10));\n                    },\n                    error: !!error,\n                    helperText: error ? error.message : null,\n                    inputProps: {\n                      readOnly: true\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 616,\n                    columnNumber: 23\n                  }, this);\n                } //rules={{ required: \"IC No required\" }}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 607,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 573,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Controller, {\n                name: \"bank_name\",\n                control: control,\n                defaultValue: bank_name,\n                render: ({\n                  field: {\n                    onChange,\n                    value\n                  },\n                  fieldState: {\n                    error\n                  }\n                }) => {\n                  return /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Bank Name\",\n                    id: \"standard-bankname\",\n                    name: \"bank_name\",\n                    defaultValue: bank_name,\n                    className: classes.textField,\n                    onChange: onChange,\n                    error: !!error,\n                    helperText: error ? error.message : null\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 651,\n                    columnNumber: 23\n                  }, this);\n                } //rules={{ required: \"Email is required\" }}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 642,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Controller, {\n                name: \"bank_acno\",\n                control: control,\n                defaultValue: bank_acno,\n                render: ({\n                  field: {\n                    onChange,\n                    value\n                  },\n                  fieldState: {\n                    error\n                  }\n                }) => {\n                  return /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Bank Ac No\",\n                    id: \"standard-bankacno\",\n                    name: \"bank_acno\",\n                    defaultValue: bank_acno,\n                    value: bank_acno,\n                    className: classes.textField,\n                    onChange: onChange,\n                    error: !!error,\n                    helperText: error ? error.message : null\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 675,\n                    columnNumber: 23\n                  }, this);\n                } // rules={{ required: \"Email is required\" }}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 666,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 641,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Controller, {\n                name: \"tap_acno\",\n                control: control,\n                defaultValue: tap_acno,\n                render: ({\n                  field: {\n                    onChange,\n                    value\n                  },\n                  fieldState: {\n                    error\n                  }\n                }) => {\n                  return /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"TAP Ac No\",\n                    id: \"standard-tapacno\",\n                    name: \"tap_acno\",\n                    defaultValue: tap_acno,\n                    className: classes.textField,\n                    onChange: onChange,\n                    error: !!error,\n                    helperText: error ? error.message : null\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 701,\n                    columnNumber: 23\n                  }, this);\n                } //rules={{ required: \"Email is required\" }}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 692,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Controller, {\n                name: \"scp_acno\",\n                control: control,\n                defaultValue: scp_acno,\n                render: ({\n                  field: {\n                    onChange,\n                    value\n                  },\n                  fieldState: {\n                    error\n                  }\n                }) => {\n                  return /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"SCP Ac No\",\n                    id: \"standard-scpacno\",\n                    name: \"scp_acno\",\n                    defaultValue: scp_acno,\n                    className: classes.textField,\n                    onChange: onChange,\n                    error: !!error,\n                    helperText: error ? error.message : null\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 725,\n                    columnNumber: 23\n                  }, this);\n                } //rules={{ required: \"Email is required\" }}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 716,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 691,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Controller, {\n                name: \"workpermitno\",\n                control: control,\n                defaultValue: workpermitno,\n                render: ({\n                  field: {\n                    onChange,\n                    value\n                  },\n                  fieldState: {\n                    error\n                  }\n                }) => {\n                  return /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Work Permit No\",\n                    id: \"standard-wpno\",\n                    name: \"workpermitno\",\n                    defaultValue: workpermitno,\n                    className: classes.textField,\n                    onChange: onChange,\n                    error: !!error,\n                    helperText: error ? error.message : null\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 750,\n                    columnNumber: 23\n                  }, this);\n                } //rules={{ required: \"Name required\" }}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 741,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Controller, {\n                name: \"workpermit_expirydate\",\n                control: control,\n                defaultValue: workpermit_expirydate,\n                render: ({\n                  field: {\n                    onChange,\n                    value\n                  },\n                  fieldState: {\n                    error\n                  }\n                }) => {\n                  return /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Work Permit Expiry Date\",\n                    id: \"standard-wpexpiry\",\n                    name: \"workpermit_expirydate\",\n                    type: \"date\",\n                    defaultValue: workpermit_expirydate,\n                    className: classes.textField,\n                    onChange: onChange,\n                    error: !!error,\n                    helperText: error ? error.message : null,\n                    InputLabelProps: {\n                      shrink: true\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 773,\n                    columnNumber: 23\n                  }, this);\n                } //rules={{ required: \"Name required\" }}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 764,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 740,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {\n              className: classes.divider\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 792,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Controller, {\n                name: \"date_of_join\",\n                control: control,\n                defaultValue: date_of_join,\n                render: ({\n                  field: {\n                    onChange,\n                    value\n                  },\n                  fieldState: {\n                    error\n                  }\n                }) => {\n                  return /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Joining Date\",\n                    id: \"standard-joindate\",\n                    name: \"date_of_join\",\n                    type: \"date\",\n                    defaultValue: date_of_join,\n                    className: classes.textField,\n                    onChange: onChange,\n                    error: !!error,\n                    helperText: error ? error.message : null,\n                    inputProps: {\n                      readOnly: true\n                    },\n                    InputLabelProps: {\n                      shrink: true\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 803,\n                    columnNumber: 23\n                  }, this);\n                } //rules={{ required: \"Email is required\" }}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 794,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Controller, {\n                name: \"date_of_resign\",\n                control: control,\n                defaultValue: date_of_resign,\n                render: ({\n                  field: {\n                    onChange,\n                    value\n                  },\n                  fieldState: {\n                    error\n                  }\n                }) => {\n                  return /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Resign Date\",\n                    id: \"standard-resigndate\",\n                    name: \"date_of_resign\",\n                    type: \"date\",\n                    defaultValue: date_of_resign,\n                    className: classes.textField,\n                    onChange: onChange,\n                    error: !!error,\n                    helperText: error ? error.message : null,\n                    inputProps: {\n                      readOnly: true\n                    },\n                    InputLabelProps: {\n                      shrink: true\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 831,\n                    columnNumber: 23\n                  }, this);\n                } //rules={{ required: \"Email is required\" }}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 822,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 793,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Controller, {\n                name: \"leave_entitled\",\n                control: control,\n                defaultValue: leave_entitled,\n                render: ({\n                  field: {\n                    onChange,\n                    value\n                  },\n                  fieldState: {\n                    error\n                  }\n                }) => {\n                  return /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Annual Leaves Entitled\",\n                    id: \"standard-annualleave\",\n                    name: \"leave_entitled\",\n                    type: \"numeric\",\n                    defaultValue: leave_entitled,\n                    className: classes.textField,\n                    onChange: onChange,\n                    error: !!error,\n                    helperText: error ? error.message : null,\n                    InputLabelProps: {\n                      shrink: true\n                    },\n                    inputProps: {\n                      readOnly: true\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 861,\n                    columnNumber: 23\n                  }, this);\n                } //rules={{ required: \"Email is required\" }}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 852,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Controller, {\n                name: \"leave_bf\",\n                control: control,\n                defaultValue: leave_bf,\n                render: ({\n                  field: {\n                    onChange,\n                    value\n                  },\n                  fieldState: {\n                    error\n                  }\n                }) => {\n                  return /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Leaves B/F\",\n                    id: \"standard-leavebal\",\n                    name: \"leave_bf\",\n                    type: \"numeric\",\n                    defaultValue: leave_bf,\n                    className: classes.textField,\n                    onChange: onChange,\n                    error: !!error,\n                    helperText: error ? error.message : null,\n                    InputLabelProps: {\n                      shrink: true\n                    },\n                    inputProps: {\n                      readOnly: true\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 889,\n                    columnNumber: 23\n                  }, this);\n                } //rules={{ required: \"Email is required\" }}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 880,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 851,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Controller, {\n                name: \"designation\",\n                control: control,\n                defaultValue: designation,\n                render: ({\n                  field: {\n                    onChange,\n                    value\n                  },\n                  fieldState: {\n                    error\n                  }\n                }) => {\n                  return /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Designation\",\n                    id: \"standard-designation\",\n                    name: \"designation\",\n                    defaultValue: designation,\n                    className: classes.textField,\n                    onChange: onChange,\n                    error: !!error,\n                    helperText: error ? error.message : null\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 919,\n                    columnNumber: 23\n                  }, this);\n                } //rules={{ required: \"Email is required\" }}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 910,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Controller, {\n                name: \"department\",\n                control: control,\n                defaultValue: department,\n                render: ({\n                  field: {\n                    onChange,\n                    value\n                  },\n                  fieldState: {\n                    error\n                  }\n                }) => {\n                  return /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Department\",\n                    id: \"standard-department\",\n                    name: \"department\",\n                    defaultValue: department,\n                    className: classes.textField,\n                    onChange: onChange,\n                    error: !!error,\n                    helperText: error ? error.message : null\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 942,\n                    columnNumber: 23\n                  }, this);\n                } //rules={{ required: \"Email is required\" }}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 933,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 909,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Controller, {\n                name: \"reporting_to\",\n                control: control,\n                defaultValue: reporting_to,\n                render: ({\n                  field: {\n                    onChange,\n                    value\n                  },\n                  fieldState: {\n                    error\n                  }\n                }) => {\n                  return /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Reporting To\",\n                    id: \"standard-reportingto\",\n                    name: \"reporting_to\",\n                    defaultValue: reporting_to,\n                    className: classes.textField,\n                    onChange: e => {\n                      onChange(e.target.value);\n                      handleReportingTo(e.target.value);\n                    },\n                    error: !!error,\n                    helperText: error ? error.message : null,\n                    select: true,\n                    children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: \"\",\n                      children: \"None\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 981,\n                      columnNumber: 25\n                    }, this), employees && employees.map(r => {\n                      return /*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: r.name,\n                        children: r.name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 984,\n                        columnNumber: 36\n                      }, this);\n                    })]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 967,\n                    columnNumber: 23\n                  }, this);\n                } //rules={{ required: \"Email is required\" }}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 958,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Controller, {\n                name: \"reporting_email\",\n                control: control,\n                defaultValue: reportemail,\n                render: ({\n                  field: {\n                    onChange,\n                    value\n                  },\n                  fieldState: {\n                    error\n                  }\n                }) => {\n                  return /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Reporting Email\",\n                    id: \"standard-reportingemail\",\n                    name: \"reporting_email\",\n                    defaultValue: reportemail,\n                    className: classes.textField,\n                    onChange: onChange,\n                    error: !!error,\n                    helperText: error ? error.message : null,\n                    InputLabelProps: {\n                      shrink: true\n                    },\n                    InputProps: {\n                      readOnly: true\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1000,\n                    columnNumber: 23\n                  }, this);\n                } //rules={{ required: \"Email is required\" }}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 991,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 957,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {\n              className: classes.divider\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1021,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 508,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1024,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(EmpJobhistory, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1029,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1028,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(EmpFamily, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1032,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1031,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(EmpEducations, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1035,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1034,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(EmpExperiences, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1038,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1037,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(EmpTrainings, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1041,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1040,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EmployeeForm, \"8DZQDS4oCMQ9tC0TmfHKLDFFrL0=\", false, function () {\n  return [useStyles, useCustomToast, useEmployees, useUpdateEmployees, useForm, useRecoilState];\n});\n\n_c = EmployeeForm;\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(1)\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1)\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1)\n  },\n  iconSmall: {\n    fontSize: 20\n  },\n  root: {\n    padding: theme.spacing(3, 2)\n  },\n  container: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    flexWrap: \"wrap\"\n  },\n  divider: {\n    padding: 4\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 350\n  }\n}));\nexport default EmployeeForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmployeeForm\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-demo/src/components/EmployeeFormStaff.js"],"names":["React","useState","useEffect","Button","Icon","TextField","Paper","Typography","Grid","Divider","CurrencyTextField","makeStyles","MenuItem","useCustomToast","useRecoilState","loginLevelState","Controller","useForm","useEmployees","useUpdateEmployees","EmpFamily","EmpEducations","EmpExperiences","EmpTrainings","EmpJobhistory","App","initial_values","name","birthdate","empno","gender","ic_no","email","age","basic_salary","salary_currency","bank_name","bank_acno","nationality","address","leave_bal","leave_bf","leave_entitled","tap_acno","scp_acno","date_of_join","date_of_resign","designation","department","passportno","passport_expirydate","workpermitno","workpermit_expirydate","siteallows_fee","perdiem_fee","reporting_to","reporting_email","EmployeeForm","classes","useStyles","toast","employees","setEmployeeId","updateEmployees","empage","setEmpage","reportemail","setReportEmail","handleSubmit","control","setValue","register","loginLevel","setLoginLevel","single_employee","filter","r","id","loginUserId","map","handleReportingTo","emp","f","onSubmit","data","Reset_PW","auth","sendPasswordResetEmail","title","status","error","console","log","calculateAge","dob","today","Date","birthDate","getFullYear","m","getMonth","getDate","root","button","rightIcon","divider","field","onChange","value","fieldState","textField","message","readOnly","required","e","target","shrink","parseInt","parseFloat","theme","margin","spacing","leftIcon","marginRight","marginLeft","iconSmall","fontSize","padding","container","display","flexDirection","flexWrap","width"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Button,\r\n  Icon,\r\n  TextField,\r\n  Paper,\r\n  Typography,\r\n  Grid,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\n//import { Alert, AlertTitle } from \"@material-ui/lab\";\r\nimport CurrencyTextField from \"@unicef/material-ui-currency-textfield\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { useCustomToast } from \"../helpers/useCustomToast\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\n//import { useEmployeesContext } from \"../context/employees_context\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\n\r\nimport { useEmployees } from \"./employees/useEmployees\";\r\n//import { useSingleEmployee } from \"./employees/useSingleEmployee\";\r\nimport { useUpdateEmployees } from \"./employees/useUpdateEmployees\";\r\n// import EmpFamilyStaff from \"./EmpFamilyStaff\";\r\n// import EmpEducationsStaff from \"./EmpEducationsStaff\";\r\n// import EmpExperiencesStaff from \"./EmpExperiencesStaff\";\r\nimport EmpFamily from \"./EmpFamily\";\r\nimport EmpEducations from \"./EmpEducations\";\r\nimport EmpExperiences from \"./EmpExperiences\";\r\nimport EmpTrainings from \"./EmpTrainings\";\r\nimport EmpJobhistory from \"./EmpJobhistory\"\r\nimport App from \"../utils/firebase\";\r\n\r\nconst initial_values = {\r\n  name: \"\",\r\n  birthdate: null,\r\n  empno: \"\",\r\n  gender: \"\",\r\n  ic_no: \"\",\r\n  email: \"\",\r\n  age: 0,\r\n  basic_salary: 0,\r\n  salary_currency: \"BND\",\r\n  bank_name: \"\",\r\n  bank_acno: \"\",\r\n  nationality: \"\",\r\n  address: \"\",\r\n  leave_bal: 0,\r\n  leave_bf: 0,\r\n  leave_entitled: 0,\r\n  tap_acno: \"\",\r\n  scp_acno: \"\",\r\n  date_of_join: null,\r\n  date_of_resign: null,\r\n  designation: \"\",\r\n  department: \"\",\r\n  passportno: \"\",\r\n  passport_expirydate: null,\r\n  workpermitno: \"\",\r\n  workpermit_expirydate: null,\r\n  siteallows_fee: 0,\r\n  perdiem_fee: 0,\r\n  reporting_to: \"\",\r\n  reporting_email: \"\",\r\n};\r\n\r\nconst EmployeeForm = () => {\r\n  const classes = useStyles();\r\n  const toast = useCustomToast();\r\n  const { employees,setEmployeeId } = useEmployees();\r\n  //const { singleemployee, setSingleEmployeeId } = useSingleEmployee();\r\n  const updateEmployees = useUpdateEmployees();\r\n  const [empage, setEmpage] = useState(0);\r\n  const [reportemail, setReportEmail] = useState(\"\");\r\n  const { handleSubmit, control, setValue, register } = useForm();\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  // const {\r\n  //   isEditing,\r\n  //   single_employee,\r\n  //   editEmployeeID,\r\n  //   getSingleEmployee,\r\n  //   single_employee_loading,\r\n  // } = useEmployeesContext();\r\n  const single_employee = employees\r\n    .filter((r) => r.id === loginLevel.loginUserId)\r\n    .map((r) => {\r\n      return { ...r };\r\n    });\r\n  const {\r\n    name,\r\n    empno,\r\n    birthdate,\r\n    ic_no,\r\n    gender,\r\n    //age,\r\n    email,\r\n    nationality,\r\n    address,\r\n    basic_salary,\r\n    salary_currency,\r\n    bank_name,\r\n    bank_acno,\r\n    tap_acno,\r\n    scp_acno,\r\n    leave_bf,\r\n    leave_entitled,\r\n    date_of_join,\r\n    date_of_resign,\r\n    designation,\r\n    department,\r\n    passportno,\r\n    passport_expirydate,\r\n    workpermitno,\r\n    workpermit_expirydate,\r\n    siteallows_fee,\r\n    perdiem_fee,\r\n    reporting_to,\r\n    reporting_email,\r\n  } = single_employee[0] || initial_values;\r\n\r\n  //console.log(\"single employee\", single_employee);\r\n\r\n  const handleReportingTo = (name) => {\r\n    const emp = employees\r\n      .filter((f) => f.name === name)\r\n      .map((r) => {\r\n        return { ...r };\r\n      });\r\n    setReportEmail(emp[0].email);\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n    //console.log(\"Data\",data)\r\n    updateEmployees({ id: loginLevel.loginUserId, ...data });\r\n  };\r\n\r\n  const Reset_PW = () => {\r\n    try {\r\n      App.auth().sendPasswordResetEmail(email);\r\n      toast({\r\n        title: `Reset Password sent to ${email}!`,\r\n        status: \"success\",\r\n      });\r\n    } catch (error) {\r\n      toast({\r\n        title: `Fail to reset password on ${email}!`,\r\n        status: \"warning\",\r\n      });\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const calculateAge = (dob) => {\r\n    var today = new Date();\r\n    var birthDate = new Date(dob);\r\n    var age = today.getFullYear() - birthDate.getFullYear();\r\n    var m = today.getMonth() - birthDate.getMonth();\r\n    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n      age--;\r\n    }\r\n    return age;\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   setEmployeeId(loginLevel.loginUserId);\r\n  // }, []);\r\n\r\n  useEffect(() => {\r\n    let age = calculateAge(birthdate);\r\n    setEmpage(age);\r\n    setReportEmail(reporting_email);\r\n  }, []);\r\n\r\n  // if (single_employee_loading) {\r\n  //   return (\r\n  //     <div>\r\n  //       <h2>Loading... </h2>\r\n  //     </div>\r\n  //   );\r\n  //}\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <Paper className={classes.root}>\r\n          <Grid container className={classes.root} spacing={15}>\r\n            <div>\r\n              <Typography variant=\"h5\" component=\"h3\">\r\n                EMPLOYEE FORM\r\n              </Typography>\r\n\r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n              >\r\n                Submit <Icon className={classes.rightIcon}>send</Icon>\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n                onClick={Reset_PW}\r\n              >\r\n                Reset PW <Icon className={classes.rightIcon}>send</Icon>\r\n              </Button>\r\n            </div>\r\n          </Grid>\r\n          <Divider className={classes.divider} />\r\n          <Grid item xs={12}>\r\n            <div>\r\n              <div>\r\n                <Controller\r\n                  name=\"name\"\r\n                  control={control}\r\n                  defaultValue={name}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Name\"\r\n                        id=\"standard-name\"\r\n                        defaultValue={name}\r\n                        name=\"name\"\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        inputProps={{ readOnly: true }}\r\n                      />\r\n                    );\r\n                  }}\r\n                  rules={{ required: \"Name required\" }}\r\n                />\r\n                <Controller\r\n                  name=\"empno\"\r\n                  control={control}\r\n                  defaultValue={empno}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Emp No\"\r\n                        id=\"standard-empno\"\r\n                        name=\"empno\"\r\n                        defaultValue={empno}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        inputProps={{ readOnly: true }}\r\n                      />\r\n                    );\r\n                  }}\r\n                  rules={{ required: \"Name required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"email\"\r\n                  control={control}\r\n                  defaultValue={email}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Email\"\r\n                        id=\"standard-email\"\r\n                        name=\"email\"\r\n                        defaultValue={email}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        inputProps={{ readOnly: true }}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Email is required\" }}\r\n                />\r\n\r\n                <Controller\r\n                  name=\"ic_no\"\r\n                  control={control}\r\n                  defaultValue={ic_no}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"IC No\"\r\n                        id=\"standard-icno\"\r\n                        defaultValue={ic_no}\r\n                        name=\"ic_no\"\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"IC No required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"birthdate\"\r\n                  control={control}\r\n                  defaultValue={birthdate}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Birth Date\"\r\n                        id=\"standard-birthdate\"\r\n                        name=\"birthdate\"\r\n                        type=\"date\"\r\n                        defaultValue={birthdate}\r\n                        className={classes.textField}\r\n                        onChange={(e) => {\r\n                          onChange(e.target.value);\r\n                          let age = calculateAge(e.target.value);\r\n                          console.log(\"emp\", birthdate, age);\r\n                          setEmpage(age);\r\n                        }}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                      ></TextField>\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"IC No required\" }}\r\n                />\r\n\r\n                <Controller\r\n                  name=\"age\"\r\n                  control={control}\r\n                  //defaultValue={age}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Age\"\r\n                        type=\"number\"\r\n                        id=\"standard-age\"\r\n                        name=\"age\"\r\n                        value={empage}\r\n                        className={classes.textField}\r\n                        //onChange={onChange}\r\n                        onChange={(e) => {\r\n                          onChange(parseInt(e.target.value, 10));\r\n                        }}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        inputProps={{ readOnly: true }}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"IC No required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"passportno\"\r\n                  control={control}\r\n                  defaultValue={passportno}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Passport No\"\r\n                        id=\"stanrad-ppno\"\r\n                        name=\"passportno\"\r\n                        defaultValue={passportno}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Name required\" }}\r\n                />\r\n                <Controller\r\n                  name=\"passport_expirydate\"\r\n                  control={control}\r\n                  defaultValue={passport_expirydate}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Passport Expiry Date\"\r\n                        id=\"standard-ppexpiry\"\r\n                        name=\"passport_expirydate\"\r\n                        type=\"date\"\r\n                        defaultValue={passport_expirydate}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Name required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"nationality\"\r\n                  control={control}\r\n                  defaultValue={nationality}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Nationality\"\r\n                        id=\"standard-nationality\"\r\n                        name=\"nationality\"\r\n                        defaultValue={nationality}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"IC No required\" }}\r\n                />\r\n                <Controller\r\n                  name=\"gender\"\r\n                  control={control}\r\n                  defaultValue={gender}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Gender\"\r\n                        id=\"standard-gender\"\r\n                        name=\"gender\"\r\n                        defaultValue={gender}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        select\r\n                      >\r\n                        <MenuItem value=\"Male\">Male</MenuItem>\r\n                        <MenuItem value=\"Female\">Female</MenuItem>\r\n                      </TextField>\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"IC No required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"address\"\r\n                  control={control}\r\n                  defaultValue={address}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Address\"\r\n                        id=\"standard-address\"\r\n                        name=\"address\"\r\n                        defaultValue={address}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"IC No required\" }}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <Divider className={classes.divider} />\r\n            <div>\r\n              <div>\r\n                <Controller\r\n                  name=\"basic_salary\"\r\n                  control={control}\r\n                  defaultValue={basic_salary}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <CurrencyTextField\r\n                        label=\"Basic Salary\"\r\n                        variant=\"standard\"\r\n                        defaultValue={basic_salary}\r\n                        currencySymbol=\"$\"\r\n                        outputFormat=\"number\"\r\n                        decimalCharacter=\".\"\r\n                        digitGroupSeparator=\",\"\r\n                        decimalPlaces=\"2\"\r\n                        className={classes.textField}\r\n                        id=\"standard-basicsalary\"\r\n                        name=\"basic_pay\"\r\n                        //onChange={onChange}\r\n                        onChange={(e) => {\r\n                          onChange(parseFloat(e.target.value, 10));\r\n                        }}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        inputProps={{ readOnly: true }}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"IC No required\" }}\r\n                />\r\n                <Controller\r\n                  name=\"salary_currency\"\r\n                  control={control}\r\n                  defaultValue={salary_currency}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Currency\"\r\n                        id=\"standard-currency\"\r\n                        name=\"salary_currency\"\r\n                        defaultValue={salary_currency}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        inputProps={{ readOnly: true }}\r\n                        select\r\n                      >\r\n                        <MenuItem value=\"BND\">BND</MenuItem>\r\n                        <MenuItem value=\"MYR\">MYR</MenuItem>\r\n                        <MenuItem value=\"USD\">USD</MenuItem>\r\n                      </TextField>\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"IC No required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"siteallows_fee\"\r\n                  control={control}\r\n                  defaultValue={siteallows_fee}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <CurrencyTextField\r\n                        label=\"Site Allowances Fee\"\r\n                        variant=\"standard\"\r\n                        defaultValue={siteallows_fee}\r\n                        currencySymbol=\"$\"\r\n                        outputFormat=\"number\"\r\n                        decimalCharacter=\".\"\r\n                        digitGroupSeparator=\",\"\r\n                        decimalPlaces=\"2\"\r\n                        className={classes.textField}\r\n                        id=\"standard-siteallowances\"\r\n                        name=\"siteallows_fee\"\r\n                        //onChange={onChange}\r\n                        onChange={(e) => {\r\n                          onChange(parseFloat(e.target.value, 10));\r\n                        }}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        inputProps={{ readOnly: true }}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"IC No required\" }}\r\n                />\r\n                <Controller\r\n                  name=\"perdiem_fee\"\r\n                  control={control}\r\n                  defaultValue={perdiem_fee}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <CurrencyTextField\r\n                        label=\"Per Diem Fee\"\r\n                        variant=\"standard\"\r\n                        defaultValue={perdiem_fee}\r\n                        currencySymbol=\"$\"\r\n                        outputFormat=\"number\"\r\n                        decimalCharacter=\".\"\r\n                        digitGroupSeparator=\",\"\r\n                        decimalPlaces=\"2\"\r\n                        className={classes.textField}\r\n                        id=\"standard-perdiem\"\r\n                        name=\"perdiem_fee\"\r\n                        //onChange={onChange}\r\n                        onChange={(e) => {\r\n                          onChange(parseFloat(e.target.value, 10));\r\n                        }}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        inputProps={{ readOnly: true }}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"IC No required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"bank_name\"\r\n                  control={control}\r\n                  defaultValue={bank_name}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Bank Name\"\r\n                        id=\"standard-bankname\"\r\n                        name=\"bank_name\"\r\n                        defaultValue={bank_name}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Email is required\" }}\r\n                />\r\n\r\n                <Controller\r\n                  name=\"bank_acno\"\r\n                  control={control}\r\n                  defaultValue={bank_acno}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Bank Ac No\"\r\n                        id=\"standard-bankacno\"\r\n                        name=\"bank_acno\"\r\n                        defaultValue={bank_acno}\r\n                        value={bank_acno}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  // rules={{ required: \"Email is required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"tap_acno\"\r\n                  control={control}\r\n                  defaultValue={tap_acno}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"TAP Ac No\"\r\n                        id=\"standard-tapacno\"\r\n                        name=\"tap_acno\"\r\n                        defaultValue={tap_acno}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Email is required\" }}\r\n                />\r\n\r\n                <Controller\r\n                  name=\"scp_acno\"\r\n                  control={control}\r\n                  defaultValue={scp_acno}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"SCP Ac No\"\r\n                        id=\"standard-scpacno\"\r\n                        name=\"scp_acno\"\r\n                        defaultValue={scp_acno}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Email is required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"workpermitno\"\r\n                  control={control}\r\n                  defaultValue={workpermitno}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Work Permit No\"\r\n                        id=\"standard-wpno\"\r\n                        name=\"workpermitno\"\r\n                        defaultValue={workpermitno}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Name required\" }}\r\n                />\r\n                <Controller\r\n                  name=\"workpermit_expirydate\"\r\n                  control={control}\r\n                  defaultValue={workpermit_expirydate}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Work Permit Expiry Date\"\r\n                        id=\"standard-wpexpiry\"\r\n                        name=\"workpermit_expirydate\"\r\n                        type=\"date\"\r\n                        defaultValue={workpermit_expirydate}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Name required\" }}\r\n                />\r\n              </div>\r\n              <Divider className={classes.divider} />\r\n              <div>\r\n                <Controller\r\n                  name=\"date_of_join\"\r\n                  control={control}\r\n                  defaultValue={date_of_join}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Joining Date\"\r\n                        id=\"standard-joindate\"\r\n                        name=\"date_of_join\"\r\n                        type=\"date\"\r\n                        defaultValue={date_of_join}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        inputProps={{ readOnly: true }}\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Email is required\" }}\r\n                />\r\n                <Controller\r\n                  name=\"date_of_resign\"\r\n                  control={control}\r\n                  defaultValue={date_of_resign}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Resign Date\"\r\n                        id=\"standard-resigndate\"\r\n                        name=\"date_of_resign\"\r\n                        type=\"date\"\r\n                        defaultValue={date_of_resign}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        inputProps={{ readOnly: true }}\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Email is required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"leave_entitled\"\r\n                  control={control}\r\n                  defaultValue={leave_entitled}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Annual Leaves Entitled\"\r\n                        id=\"standard-annualleave\"\r\n                        name=\"leave_entitled\"\r\n                        type=\"numeric\"\r\n                        defaultValue={leave_entitled}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                        inputProps={{ readOnly: true }}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Email is required\" }}\r\n                />\r\n                <Controller\r\n                  name=\"leave_bf\"\r\n                  control={control}\r\n                  defaultValue={leave_bf}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Leaves B/F\"\r\n                        id=\"standard-leavebal\"\r\n                        name=\"leave_bf\"\r\n                        type=\"numeric\"\r\n                        defaultValue={leave_bf}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                        inputProps={{ readOnly: true }}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Email is required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"designation\"\r\n                  control={control}\r\n                  defaultValue={designation}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Designation\"\r\n                        id=\"standard-designation\"\r\n                        name=\"designation\"\r\n                        defaultValue={designation}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Email is required\" }}\r\n                />\r\n                <Controller\r\n                  name=\"department\"\r\n                  control={control}\r\n                  defaultValue={department}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Department\"\r\n                        id=\"standard-department\"\r\n                        name=\"department\"\r\n                        defaultValue={department}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Email is required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"reporting_to\"\r\n                  control={control}\r\n                  defaultValue={reporting_to}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Reporting To\"\r\n                        id=\"standard-reportingto\"\r\n                        name=\"reporting_to\"\r\n                        defaultValue={reporting_to}\r\n                        className={classes.textField}\r\n                        onChange={(e) => {\r\n                          onChange(e.target.value);\r\n                          handleReportingTo(e.target.value);\r\n                        }}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        select\r\n                      >\r\n                        <MenuItem value=\"\">None</MenuItem>\r\n                        {employees &&\r\n                          employees.map((r) => {\r\n                            return <MenuItem value={r.name}>{r.name}</MenuItem>;\r\n                          })}\r\n                      </TextField>\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Email is required\" }}\r\n                />\r\n                <Controller\r\n                  name=\"reporting_email\"\r\n                  control={control}\r\n                  defaultValue={reportemail}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Reporting Email\"\r\n                        id=\"standard-reportingemail\"\r\n                        name=\"reporting_email\"\r\n                        defaultValue={reportemail}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                        InputProps={{\r\n                          readOnly: true,\r\n                        }}\r\n                      ></TextField>\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Email is required\" }}\r\n                />\r\n              </div>\r\n              <Divider className={classes.divider} />\r\n            </div>\r\n          </Grid>\r\n          <Divider />\r\n        </Paper>\r\n      </form>\r\n\r\n      <Grid item xs={12}>\r\n        <EmpJobhistory />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <EmpFamily />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <EmpEducations />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <EmpExperiences />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <EmpTrainings />\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  leftIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  iconSmall: {\r\n    fontSize: 20,\r\n  },\r\n  root: {\r\n    padding: theme.spacing(3, 2),\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  divider: {\r\n    padding: 4,\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 350,\r\n  },\r\n}));\r\n\r\nexport default EmployeeForm;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useCallback } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { payrun_url } from \"../../utils/constants\";\nimport { filterByEmpId } from \"./utils\";\nimport axios from \"axios\";\nimport { queryKeys } from \"../react-query/constants\";\n\nasync function getPayrunStatus(status) {\n  const {\n    data\n  } = await axios.get(`${payrun_url}?fi=${status}`); //const { data } = await axios.get(`${payrun_url}`);\n\n  return data;\n}\n\nexport function usePayrunStatus(empid) {\n  _s();\n\n  const [filter, setFilter] = useState(\"all\");\n  const [payrunstatusId, setPayrunStatusId] = useState(\"\");\n  const selectFn = useCallback(unfiltered => filterByEmpId(unfiltered, filter), [filter]);\n  const fallback = [];\n  const {\n    data: payrunstatus = fallback\n  } = useQuery([queryKeys.payrunstatus, {\n    payrunstatusId\n  }], //queryKeys.payrun,\n  () => getPayrunStatus(payrunstatusId), {\n    select: filter !== \"all\" ? selectFn : undefined\n  });\n  return {\n    payrunstatus,\n    filter,\n    setFilter,\n    setPayrunStatusId\n  };\n}\n\n_s(usePayrunStatus, \"kiNI+/SdQabNRgVMtieAkrOWFxA=\", false, function () {\n  return [useQuery];\n});","map":{"version":3,"sources":["D:/react-myprojects/hrms-demo/src/components/payrun/usePayrunStatus.js"],"names":["useState","useCallback","useQuery","payrun_url","filterByEmpId","axios","queryKeys","getPayrunStatus","status","data","get","usePayrunStatus","empid","filter","setFilter","payrunstatusId","setPayrunStatusId","selectFn","unfiltered","fallback","payrunstatus","select","undefined"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,OAAtC;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,UAAT,QAA2B,uBAA3B;AACA,SAASC,aAAT,QAA8B,SAA9B;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,0BAA1B;;AAEA,eAAeC,eAAf,CAA+BC,MAA/B,EAAuC;AACrC,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMJ,KAAK,CAACK,GAAN,CAAW,GAAEP,UAAW,OAAMK,MAAO,EAArC,CAAvB,CADqC,CAErC;;AACA,SAAOC,IAAP;AACD;;AAED,OAAO,SAASE,eAAT,CAAyBC,KAAzB,EAAgC;AAAA;;AACrC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACe,cAAD,EAAiBC,iBAAjB,IAAsChB,QAAQ,CAAC,EAAD,CAApD;AAEA,QAAMiB,QAAQ,GAAGhB,WAAW,CACzBiB,UAAD,IAAgBd,aAAa,CAACc,UAAD,EAAaL,MAAb,CADH,EAE1B,CAACA,MAAD,CAF0B,CAA5B;AAKA,QAAMM,QAAQ,GAAG,EAAjB;AACA,QAAM;AAAEV,IAAAA,IAAI,EAAEW,YAAY,GAAGD;AAAvB,MAAoCjB,QAAQ,CAChD,CAACI,SAAS,CAACc,YAAX,EAAyB;AAAEL,IAAAA;AAAF,GAAzB,CADgD,EAEhD;AACA,QAAMR,eAAe,CAACQ,cAAD,CAH2B,EAIhD;AACEM,IAAAA,MAAM,EAAER,MAAM,KAAK,KAAX,GAAmBI,QAAnB,GAA8BK;AADxC,GAJgD,CAAlD;AASA,SAAO;AAAEF,IAAAA,YAAF;AAAgBP,IAAAA,MAAhB;AAAwBC,IAAAA,SAAxB;AAAmCE,IAAAA;AAAnC,GAAP;AACD;;GApBeL,e;UAU4BT,Q","sourcesContent":["import { useState, useCallback } from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport { payrun_url } from \"../../utils/constants\";\r\nimport { filterByEmpId } from \"./utils\";\r\n\r\nimport axios from \"axios\";\r\nimport { queryKeys } from \"../react-query/constants\";\r\n\r\nasync function getPayrunStatus(status) {\r\n  const { data } = await axios.get(`${payrun_url}?fi=${status}`);\r\n  //const { data } = await axios.get(`${payrun_url}`);\r\n  return data;\r\n}\r\n\r\nexport function usePayrunStatus(empid) {\r\n  const [filter, setFilter] = useState(\"all\");\r\n  const [payrunstatusId, setPayrunStatusId] = useState(\"\");\r\n\r\n  const selectFn = useCallback(\r\n    (unfiltered) => filterByEmpId(unfiltered, filter),\r\n    [filter]\r\n  );\r\n\r\n  const fallback = [];\r\n  const { data: payrunstatus = fallback } = useQuery(\r\n    [queryKeys.payrunstatus, { payrunstatusId }],\r\n    //queryKeys.payrun,\r\n    () => getPayrunStatus(payrunstatusId),\r\n    {\r\n      select: filter !== \"all\" ? selectFn : undefined,\r\n    }\r\n  );\r\n\r\n  return { payrunstatus, filter, setFilter, setPayrunStatusId };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
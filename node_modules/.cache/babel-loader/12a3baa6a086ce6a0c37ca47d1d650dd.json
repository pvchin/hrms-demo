{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-demo\\\\src\\\\components\\\\ExpenseForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button, Icon, TextField, Paper, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Box, Heading, Image, Input, Grid, GridItem } from \"@chakra-ui/react\";\nimport { Document, Page, Viewer } from \"@react-pdf/renderer\";\nimport { useRecoilState } from \"recoil\";\nimport * as emailjs from \"emailjs-com\";\nimport { loginLevelState } from \"./data/atomdata\";\nimport { useExpensesContext } from \"../context/expenses_context\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport { useCustomToast } from \"../helpers/useCustomToast\"; //import { useExpenses } from \"./expenses/useExpenses\";\n\nimport { useAddExpenses } from \"./expenses/useAddExpenses\"; //import { useDeleteExpenses } from \"./expenses/useDeleteExpenses\";\n\nimport { useUpdateExpenses } from \"./expenses/useUpdateExpenses\";\nimport AllPagesPDFViewer from \"./PDFViewerAllPages\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SERVICE_ID = process.env.REACT_APP_EMAILJS_SERVICEID;\nconst TEMPLATE_ID = \"template_1y8odlq\";\nconst USER_ID = process.env.REACT_APP_EMAILJS_USERID; // const initial_values = {\n//   name: \"\",\n//   date: \"\",\n//   purchased_date: \"\",\n//   purchased_from: \"\",\n//   description: \"\",\n//   remark: \"\",\n//   status: \"Pending\",\n//   amount: 0,\n//};\n\nconst ExpenseForm = ({\n  formdata,\n  setFormdata,\n  handleDialogClose\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const toast = useCustomToast(); //const { expenses, filter, setFilter, setExpenseId } = useExpenses();\n\n  const updateExpenses = useUpdateExpenses();\n  const addExpenses = useAddExpenses();\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\n  const {\n    isExpenseEditing,\n    editExpenseID\n  } = useExpensesContext();\n  const [image, setImage] = useState(\"\");\n  const [url, setUrl] = useState(\"\");\n\n  const uploadImage = () => {\n    const data = new FormData();\n    data.append(\"file\", image);\n    data.append(\"upload_preset\", \"appsmiths\");\n    data.append(\"cloud_name\", \"dlmzwvakr\");\n    fetch(\"https://api.cloudinary.com/v1_1/dlmzwvakr/image/upload\", {\n      method: \"post\",\n      body: data\n    }).then(resp => resp.json()).then(data => {\n      setUrl(data.url);\n    }).catch(err => console.log(err));\n  };\n\n  const {\n    handleSubmit,\n    control\n  } = useForm();\n\n  const handleSentEmail = data => {\n    const {\n      date\n    } = data; //console.log(\"expense form\", loginLevel);\n\n    var emaildata = {\n      to_name: loginLevel.loginUser,\n      to_email: loginLevel.loginEmail,\n      message: `Your expenses claim application dated on ${date} has been successfully submitted for approval`,\n      cc_to: loginLevel.reporting_email\n    };\n    emailjs.send(SERVICE_ID, TEMPLATE_ID, emaildata, USER_ID).then(function (response) {\n      console.log(response.status, response.text);\n      toast({\n        title: `Email has sent successfully to ${emaildata.to_email}!`,\n        status: \"success\"\n      });\n    }, function (err) {\n      console.log(err);\n      toast({\n        title: `Email has fail to send to ${emaildata.to_email}!`,\n        status: \"warning\"\n      });\n    });\n  };\n\n  const onSubmit = (data, e) => {\n    e.preventDefault();\n    console.log(\"submit\", image);\n\n    if (isExpenseEditing) {\n      updateExpenses({\n        id: editExpenseID,\n        ...data\n      });\n    } else {\n      addExpenses({\n        empid: loginLevel.loginUserId,\n        ...data,\n        attachment: image.name\n      });\n      handleSentEmail(data);\n    }\n\n    handleDialogClose();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      templateColumns: \"repeat(2, 1fr)\",\n      gap: 6,\n      children: [/*#__PURE__*/_jsxDEV(GridItem, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          component: \"h3\",\n          children: \"EXPENSES CLAIM FORM\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          component: \"p\",\n          children: \"Expense Claim Application\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit(onSubmit),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Controller, {\n              name: \"name\",\n              control: control,\n              defaultValue: loginLevel.loginUser,\n              render: ({\n                field: {\n                  onChange,\n                  value\n                },\n                fieldState: {\n                  error\n                }\n              }) => {\n                return /*#__PURE__*/_jsxDEV(TextField, {\n                  label: \"Name\",\n                  id: \"margin-normal1\",\n                  name: \"name\",\n                  defaultValue: loginLevel.loginUser,\n                  className: classes.textField,\n                  onChange: onChange,\n                  error: !!error,\n                  helperText: error ? error.message : null,\n                  InputProps: {\n                    readOnly: true\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 21\n                }, this);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Controller, {\n              name: \"date\",\n              control: control,\n              defaultValue: formdata.date,\n              render: ({\n                field: {\n                  onChange,\n                  value\n                },\n                fieldState: {\n                  error\n                }\n              }) => {\n                return /*#__PURE__*/_jsxDEV(TextField, {\n                  label: \"Date\",\n                  type: \"date\",\n                  id: \"margin-normal2\",\n                  name: \"formdata.date\",\n                  value: value,\n                  className: classes.textField,\n                  onChange: onChange,\n                  error: !!error,\n                  helperText: error ? error.message : null,\n                  InputLabelProps: {\n                    shrink: true\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 21\n                }, this);\n              },\n              rules: {\n                required: \"From Date is required\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Controller, {\n              name: \"purchased_from\",\n              control: control,\n              defaultValue: formdata.purchased_from,\n              render: ({\n                field: {\n                  onChange,\n                  value\n                },\n                fieldState: {\n                  error\n                }\n              }) => {\n                return /*#__PURE__*/_jsxDEV(TextField, {\n                  label: \"Purchased From\",\n                  id: \"margin-normal3\",\n                  name: \"purchased_from\",\n                  defaultValue: formdata.purchased_from,\n                  className: classes.textField,\n                  onChange: onChange,\n                  error: !!error,\n                  helperText: error ? error.message : null\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 21\n                }, this);\n              } // rules={{ required: \"Reason is required\" }}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Controller, {\n              name: \"description\",\n              control: control,\n              defaultValue: formdata.description,\n              render: ({\n                field: {\n                  onChange,\n                  value\n                },\n                fieldState: {\n                  error\n                }\n              }) => {\n                return /*#__PURE__*/_jsxDEV(TextField, {\n                  label: \"Description\",\n                  id: \"margin-normal4\",\n                  name: \"description\",\n                  defaultValue: formdata.description,\n                  className: classes.textField,\n                  onChange: onChange,\n                  error: !!error,\n                  helperText: error ? error.message : null\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 21\n                }, this);\n              } // rules={{ required: \"Reason is required\" }}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Controller, {\n              name: \"amount\",\n              control: control,\n              defaultValue: formdata.amount,\n              render: ({\n                field: {\n                  onChange,\n                  value\n                },\n                fieldState: {\n                  error\n                }\n              }) => {\n                return /*#__PURE__*/_jsxDEV(TextField, {\n                  label: \"Amount\",\n                  type: \"number\",\n                  id: \"standard-number1\",\n                  name: \"amount\",\n                  defaultValue: formdata.amount,\n                  className: classes.textField //onChange={onChange}\n                  ,\n                  onChange: e => {\n                    onChange(parseInt(e.target.value, 10));\n                  },\n                  error: !!error,\n                  helperText: error ? error.message : null\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 21\n                }, this);\n              } //rules={{ required: \"IC No required\" }}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Controller, {\n              name: \"remark\",\n              control: control,\n              defaultValue: formdata.remark,\n              render: ({\n                field: {\n                  onChange,\n                  value\n                },\n                fieldState: {\n                  error\n                }\n              }) => {\n                return /*#__PURE__*/_jsxDEV(TextField, {\n                  label: \"Remark\",\n                  id: \"margin-normal5\",\n                  name: \"remark\",\n                  defaultValue: formdata.remark,\n                  className: classes.textField,\n                  onChange: onChange,\n                  error: !!error,\n                  helperText: error ? error.message : null\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 21\n                }, this);\n              } // rules={{ required: \"Reason is required\" }}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Controller, {\n              name: \"status\",\n              control: control,\n              defaultValue: \"Pending\",\n              render: ({\n                field: {\n                  onChange,\n                  value\n                },\n                fieldState: {\n                  error\n                }\n              }) => {\n                return /*#__PURE__*/_jsxDEV(TextField, {\n                  label: \"Status\",\n                  id: \"margin-normal6\",\n                  name: \"status\",\n                  defaultValue: \"Pending\",\n                  className: classes.textField,\n                  onChange: onChange,\n                  error: !!error,\n                  helperText: error ? error.message : null,\n                  InputProps: {\n                    readOnly: true\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 287,\n                  columnNumber: 21\n                }, this);\n              } //rules={{ required: \"Status is required\" }}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Controller, {\n              name: \"attachment\",\n              control: control,\n              defaultValue: formdata.attachment,\n              render: ({\n                field: {\n                  onChange,\n                  value\n                },\n                fieldState: {\n                  error\n                }\n              }) => {\n                return /*#__PURE__*/_jsxDEV(TextField, {\n                  type: \"file\",\n                  label: \"Attachment\",\n                  id: \"margin-normal=attachment\",\n                  name: \"attachment\",\n                  className: classes.textField,\n                  onChange: e => setImage(e.target.files[0]),\n                  error: !!error,\n                  helperText: error ? error.message : null,\n                  InputLabelProps: {\n                    shrink: true\n                  },\n                  inputProps: {\n                    accept: \".gif,.jpg,.jpeg,.png\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 315,\n                  columnNumber: 21\n                }, this);\n              } //rules={{ required: \"Status is required\" }}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              variant: \"contained\",\n              color: \"primary\",\n              className: classes.button //onClick={() => handleSubmit(onSubmit)()}\n              ,\n              children: [\"Save \", /*#__PURE__*/_jsxDEV(Icon, {\n                className: classes.rightIcon,\n                children: \"send\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 22\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              className: classes.button,\n              onClick: () => uploadImage(),\n              children: \"View Attachment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Heading, {\n            children: \"Your attachment:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Image, {\n            src: url,\n            fallbackSrc: \"https://via.placeholder.com/500\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ExpenseForm, \"ukBjWiOTFCdAUzWgE5/YzXdKf/8=\", false, function () {\n  return [useStyles, useCustomToast, useUpdateExpenses, useAddExpenses, useRecoilState, useExpensesContext, useForm];\n});\n\n_c = ExpenseForm;\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(1)\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1)\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1)\n  },\n  iconSmall: {\n    fontSize: 20\n  },\n  root: {\n    padding: theme.spacing(3, 2)\n  },\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 400\n  }\n}));\nexport default ExpenseForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-demo/src/components/ExpenseForm.js"],"names":["React","useState","Button","Icon","TextField","Paper","Typography","makeStyles","Box","Heading","Image","Input","Grid","GridItem","Document","Page","Viewer","useRecoilState","emailjs","loginLevelState","useExpensesContext","Controller","useForm","useCustomToast","useAddExpenses","useUpdateExpenses","AllPagesPDFViewer","SERVICE_ID","process","env","REACT_APP_EMAILJS_SERVICEID","TEMPLATE_ID","USER_ID","REACT_APP_EMAILJS_USERID","ExpenseForm","formdata","setFormdata","handleDialogClose","classes","useStyles","toast","updateExpenses","addExpenses","loginLevel","setLoginLevel","isExpenseEditing","editExpenseID","image","setImage","url","setUrl","uploadImage","data","FormData","append","fetch","method","body","then","resp","json","catch","err","console","log","handleSubmit","control","handleSentEmail","date","emaildata","to_name","loginUser","to_email","loginEmail","message","cc_to","reporting_email","send","response","status","text","title","onSubmit","e","preventDefault","id","empid","loginUserId","attachment","name","field","onChange","value","fieldState","error","textField","readOnly","shrink","required","purchased_from","description","amount","parseInt","target","remark","files","accept","button","rightIcon","theme","margin","spacing","leftIcon","marginRight","marginLeft","iconSmall","fontSize","root","padding","container","display","flexWrap","width"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Button, Icon, TextField, Paper, Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Box, Heading, Image, Input, Grid, GridItem } from \"@chakra-ui/react\";\r\nimport { Document , Page, Viewer} from \"@react-pdf/renderer\"\r\nimport { useRecoilState } from \"recoil\";\r\nimport * as emailjs from \"emailjs-com\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport { useExpensesContext } from \"../context/expenses_context\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport { useCustomToast } from \"../helpers/useCustomToast\";\r\n//import { useExpenses } from \"./expenses/useExpenses\";\r\nimport { useAddExpenses } from \"./expenses/useAddExpenses\";\r\n//import { useDeleteExpenses } from \"./expenses/useDeleteExpenses\";\r\nimport { useUpdateExpenses } from \"./expenses/useUpdateExpenses\";\r\nimport AllPagesPDFViewer from \"./PDFViewerAllPages\"\r\n\r\nconst SERVICE_ID = process.env.REACT_APP_EMAILJS_SERVICEID;\r\nconst TEMPLATE_ID = \"template_1y8odlq\";\r\nconst USER_ID = process.env.REACT_APP_EMAILJS_USERID;\r\n\r\n// const initial_values = {\r\n//   name: \"\",\r\n//   date: \"\",\r\n//   purchased_date: \"\",\r\n//   purchased_from: \"\",\r\n//   description: \"\",\r\n//   remark: \"\",\r\n//   status: \"Pending\",\r\n//   amount: 0,\r\n//};\r\n\r\nconst ExpenseForm = ({ formdata, setFormdata, handleDialogClose }) => {\r\n  const classes = useStyles();\r\n  const toast = useCustomToast();\r\n  //const { expenses, filter, setFilter, setExpenseId } = useExpenses();\r\n  const updateExpenses = useUpdateExpenses();\r\n  const addExpenses = useAddExpenses();\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const { isExpenseEditing, editExpenseID } = useExpensesContext();\r\n  const [image, setImage] = useState(\"\");\r\n  const [url, setUrl] = useState(\"\");\r\n\r\n  const uploadImage = () => {\r\n    const data = new FormData();\r\n\r\n    data.append(\"file\", image);\r\n    data.append(\"upload_preset\", \"appsmiths\");\r\n    data.append(\"cloud_name\", \"dlmzwvakr\");\r\n    fetch(\"https://api.cloudinary.com/v1_1/dlmzwvakr/image/upload\", {\r\n      method: \"post\",\r\n      body: data,\r\n    })\r\n      .then((resp) => resp.json())\r\n      .then((data) => {\r\n        setUrl(data.url);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  \r\n\r\n  const { handleSubmit, control } = useForm();\r\n\r\n  const handleSentEmail = (data) => {\r\n    const { date } = data;\r\n    //console.log(\"expense form\", loginLevel);\r\n    var emaildata = {\r\n      to_name: loginLevel.loginUser,\r\n      to_email: loginLevel.loginEmail,\r\n      message: `Your expenses claim application dated on ${date} has been successfully submitted for approval`,\r\n      cc_to: loginLevel.reporting_email,\r\n    };\r\n\r\n    emailjs.send(SERVICE_ID, TEMPLATE_ID, emaildata, USER_ID).then(\r\n      function (response) {\r\n        console.log(response.status, response.text);\r\n        toast({\r\n          title: `Email has sent successfully to ${emaildata.to_email}!`,\r\n          status: \"success\",\r\n        });\r\n      },\r\n      function (err) {\r\n        console.log(err);\r\n        toast({\r\n          title: `Email has fail to send to ${emaildata.to_email}!`,\r\n          status: \"warning\",\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  const onSubmit = (data, e) => {\r\n    e.preventDefault();\r\n    console.log(\"submit\", image)\r\n    if (isExpenseEditing) {\r\n      updateExpenses({ id: editExpenseID, ...data });\r\n    } else {\r\n      addExpenses({ empid: loginLevel.loginUserId, ...data, attachment: image.name });\r\n      handleSentEmail(data);\r\n    }\r\n\r\n    handleDialogClose();\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Grid templateColumns=\"repeat(2, 1fr)\" gap={6}>\r\n        <GridItem>\r\n          <Typography variant=\"h5\" component=\"h3\">\r\n            EXPENSES CLAIM FORM\r\n          </Typography>\r\n          <Typography component=\"p\">Expense Claim Application</Typography>\r\n\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div>\r\n              <Controller\r\n                name=\"name\"\r\n                control={control}\r\n                defaultValue={loginLevel.loginUser}\r\n                render={({\r\n                  field: { onChange, value },\r\n                  fieldState: { error },\r\n                }) => {\r\n                  return (\r\n                    <TextField\r\n                      label=\"Name\"\r\n                      id=\"margin-normal1\"\r\n                      name=\"name\"\r\n                      defaultValue={loginLevel.loginUser}\r\n                      className={classes.textField}\r\n                      onChange={onChange}\r\n                      error={!!error}\r\n                      helperText={error ? error.message : null}\r\n                      InputProps={{\r\n                        readOnly: true,\r\n                      }}\r\n                    ></TextField>\r\n                  );\r\n                }}\r\n              />\r\n            </div>\r\n            <div>\r\n              <Controller\r\n                name=\"date\"\r\n                control={control}\r\n                defaultValue={formdata.date}\r\n                render={({\r\n                  field: { onChange, value },\r\n                  fieldState: { error },\r\n                }) => {\r\n                  return (\r\n                    <TextField\r\n                      label=\"Date\"\r\n                      type=\"date\"\r\n                      id=\"margin-normal2\"\r\n                      name=\"formdata.date\"\r\n                      value={value}\r\n                      className={classes.textField}\r\n                      onChange={onChange}\r\n                      error={!!error}\r\n                      helperText={error ? error.message : null}\r\n                      InputLabelProps={{\r\n                        shrink: true,\r\n                      }}\r\n                    />\r\n                  );\r\n                }}\r\n                rules={{ required: \"From Date is required\" }}\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <Controller\r\n                name=\"purchased_from\"\r\n                control={control}\r\n                defaultValue={formdata.purchased_from}\r\n                render={({\r\n                  field: { onChange, value },\r\n                  fieldState: { error },\r\n                }) => {\r\n                  return (\r\n                    <TextField\r\n                      label=\"Purchased From\"\r\n                      id=\"margin-normal3\"\r\n                      name=\"purchased_from\"\r\n                      defaultValue={formdata.purchased_from}\r\n                      className={classes.textField}\r\n                      onChange={onChange}\r\n                      error={!!error}\r\n                      helperText={error ? error.message : null}\r\n                    />\r\n                  );\r\n                }}\r\n                // rules={{ required: \"Reason is required\" }}\r\n              />\r\n            </div>\r\n            <div>\r\n              <Controller\r\n                name=\"description\"\r\n                control={control}\r\n                defaultValue={formdata.description}\r\n                render={({\r\n                  field: { onChange, value },\r\n                  fieldState: { error },\r\n                }) => {\r\n                  return (\r\n                    <TextField\r\n                      label=\"Description\"\r\n                      id=\"margin-normal4\"\r\n                      name=\"description\"\r\n                      defaultValue={formdata.description}\r\n                      className={classes.textField}\r\n                      onChange={onChange}\r\n                      error={!!error}\r\n                      helperText={error ? error.message : null}\r\n                    />\r\n                  );\r\n                }}\r\n                // rules={{ required: \"Reason is required\" }}\r\n              />\r\n            </div>\r\n            <div>\r\n              <Controller\r\n                name=\"amount\"\r\n                control={control}\r\n                defaultValue={formdata.amount}\r\n                render={({\r\n                  field: { onChange, value },\r\n                  fieldState: { error },\r\n                }) => {\r\n                  return (\r\n                    <TextField\r\n                      label=\"Amount\"\r\n                      type=\"number\"\r\n                      id=\"standard-number1\"\r\n                      name=\"amount\"\r\n                      defaultValue={formdata.amount}\r\n                      className={classes.textField}\r\n                      //onChange={onChange}\r\n                      onChange={(e) => {\r\n                        onChange(parseInt(e.target.value, 10));\r\n                      }}\r\n                      error={!!error}\r\n                      helperText={error ? error.message : null}\r\n                    />\r\n                  );\r\n                }}\r\n                //rules={{ required: \"IC No required\" }}\r\n              />\r\n            </div>\r\n            <div>\r\n              <Controller\r\n                name=\"remark\"\r\n                control={control}\r\n                defaultValue={formdata.remark}\r\n                render={({\r\n                  field: { onChange, value },\r\n                  fieldState: { error },\r\n                }) => {\r\n                  return (\r\n                    <TextField\r\n                      label=\"Remark\"\r\n                      id=\"margin-normal5\"\r\n                      name=\"remark\"\r\n                      defaultValue={formdata.remark}\r\n                      className={classes.textField}\r\n                      onChange={onChange}\r\n                      error={!!error}\r\n                      helperText={error ? error.message : null}\r\n                    />\r\n                  );\r\n                }}\r\n                // rules={{ required: \"Reason is required\" }}\r\n              />\r\n            </div>\r\n            <div>\r\n              <Controller\r\n                name=\"status\"\r\n                control={control}\r\n                defaultValue=\"Pending\"\r\n                render={({\r\n                  field: { onChange, value },\r\n                  fieldState: { error },\r\n                }) => {\r\n                  return (\r\n                    <TextField\r\n                      label=\"Status\"\r\n                      id=\"margin-normal6\"\r\n                      name=\"status\"\r\n                      defaultValue=\"Pending\"\r\n                      className={classes.textField}\r\n                      onChange={onChange}\r\n                      error={!!error}\r\n                      helperText={error ? error.message : null}\r\n                      InputProps={{\r\n                        readOnly: true,\r\n                      }}\r\n                    ></TextField>\r\n                  );\r\n                }}\r\n                //rules={{ required: \"Status is required\" }}\r\n              />\r\n            </div>\r\n            <div>\r\n              <Controller\r\n                name=\"attachment\"\r\n                control={control}\r\n                defaultValue={formdata.attachment}\r\n                render={({\r\n                  field: { onChange, value },\r\n                  fieldState: { error },\r\n                }) => {\r\n                  return (\r\n                    <TextField\r\n                      type=\"file\"\r\n                      label=\"Attachment\"\r\n                      id=\"margin-normal=attachment\"\r\n                      name=\"attachment\"\r\n                      className={classes.textField}\r\n                      onChange={(e) => setImage(e.target.files[0])}\r\n                      error={!!error}\r\n                      helperText={error ? error.message : null}\r\n                      InputLabelProps={{\r\n                        shrink: true,\r\n                      }}\r\n                      inputProps={{\r\n                        accept: \".gif,.jpg,.jpeg,.png\",\r\n                      }}\r\n                    ></TextField>\r\n                  );\r\n                }}\r\n                //rules={{ required: \"Status is required\" }}\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n                //onClick={() => handleSubmit(onSubmit)()}\r\n              >\r\n                Save <Icon className={classes.rightIcon}>send</Icon>\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n                onClick={() => uploadImage()}\r\n              >\r\n                View Attachment\r\n              </Button>\r\n            </div>\r\n          </form>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Box>\r\n            <Heading>Your attachment:</Heading>\r\n            <Image src={url} fallbackSrc=\"https://via.placeholder.com/500\" />\r\n          </Box>\r\n        </GridItem>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  leftIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  iconSmall: {\r\n    fontSize: 20,\r\n  },\r\n  root: {\r\n    padding: theme.spacing(3, 2),\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 400,\r\n  },\r\n}));\r\n\r\nexport default ExpenseForm;\r\n"]},"metadata":{},"sourceType":"module"}
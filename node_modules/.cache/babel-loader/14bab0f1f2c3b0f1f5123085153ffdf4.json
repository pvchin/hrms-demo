{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-airtable\\\\src\\\\components\\\\PayslipTableViewManager.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useMemo } from \"react\";\nimport MaterialTable from \"material-table\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\n//import {\n//payPeriodState,\n//payPeriodEndMonthState,\n//payPeriodEmpIdState,\n//} from \"./data/atomdata\";\nimport { usePayslipsContext } from \"../context/payslips_context\";\nimport { loginLevelState } from \"./data/atomdata\";\nimport ApprovalManagerScreen from \"./ApprovalManagerScreen\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FILTERSTRING = \"Verified\";\nexport default function PayslipTableVIew() {\n  _s();\n  //et history = useHistory();\n  const classes = useStyles();\n  const {\n    batchpayrun,\n    getBatchPayrun\n    //batchpayrun_loading,\n    //batchpayrun_error,\n    //loadPendingPayslips,\n  } = usePayslipsContext();\n  //const { loadEmployees, employees } = useEmployeesContext();\n\n  const columns = useMemo(() => [{\n    title: \"Batch\",\n    field: \"payrun\",\n    editable: \"never\"\n  },\n  // { title: \"Period\", field: \"period\", editable: \"never\" },\n  // {\n  //   title: \"PayDate\",\n  //   field: \"pay_date\",\n  //   type: \"date\",\n  //   dateSetting: { locale: \"en-GB\" },\n  //   editable: \"never\",\n  // },\n  {\n    title: \"Wages\",\n    field: \"totalwages\",\n    type: \"currency\",\n    editable: \"never\"\n  }, {\n    title: \"TAP Amount\",\n    field: \"totaltap\",\n    type: \"currency\",\n    editable: \"never\"\n  }, {\n    title: \"SCP Amount\",\n    field: \"totalscp\",\n    type: \"currency\",\n    editable: \"never\"\n  }, {\n    title: \"Site Allowances\",\n    field: \"totalsitesallows\",\n    type: \"currency\",\n    editable: \"never\"\n  }, {\n    title: \"Expenses Claims\",\n    field: \"totalexpensesclaims\",\n    type: \"currency\",\n    editable: \"never\"\n  }, {\n    title: \"Allowances\",\n    field: \"totalallows\",\n    type: \"currency\",\n    editable: \"never\"\n  }, {\n    title: \"Deductions\",\n    field: \"totaldeducts\",\n    type: \"currency\",\n    editable: \"never\"\n  }, {\n    title: \"Payroll\",\n    field: \"totalpayroll\",\n    type: \"currency\",\n    editable: \"never\"\n  },\n  // { title: \"Bank Name\", field: \"bank_name\" },\n  // { title: \"Bank AC No\", field: \"bank_accno\" },\n  {\n    title: \"Status\",\n    field: \"status\",\n    editable: \"never\"\n  }], []);\n  useEffect(() => {\n    getBatchPayrun(FILTERSTRING);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: \"100%\",\n        paddingTop: \"5px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n        columns: columns,\n        data: batchpayrun,\n        title: \"Payslips\",\n        options: {\n          filtering: false,\n          search: false,\n          toolbar: false,\n          headerStyle: {\n            backgroundColor: \"#90CDF4\",\n            color: \"black\"\n          },\n          showTitle: false\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n}\n_s(PayslipTableVIew, \"JMGVBapguvXMP1XSLuakF9H2dLk=\", false, function () {\n  return [useStyles, usePayslipsContext];\n});\n_c = PayslipTableVIew;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: 0\n  }\n}));\nvar _c;\n$RefreshReg$(_c, \"PayslipTableVIew\");","map":{"version":3,"names":["React","useEffect","useMemo","MaterialTable","makeStyles","usePayslipsContext","loginLevelState","ApprovalManagerScreen","FILTERSTRING","PayslipTableVIew","classes","useStyles","batchpayrun","getBatchPayrun","columns","title","field","editable","type","root","maxWidth","paddingTop","filtering","search","toolbar","headerStyle","backgroundColor","color","showTitle","theme","padding"],"sources":["D:/react-myprojects/hrms-airtable/src/components/PayslipTableViewManager.js"],"sourcesContent":["import React, { useEffect, useMemo } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n//import {\r\n//payPeriodState,\r\n//payPeriodEndMonthState,\r\n//payPeriodEmpIdState,\r\n//} from \"./data/atomdata\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport ApprovalManagerScreen from \"./ApprovalManagerScreen\";\r\n\r\nconst FILTERSTRING = \"Verified\";\r\n\r\nexport default function PayslipTableVIew() {\r\n  //et history = useHistory();\r\n  const classes = useStyles();\r\n  const {\r\n    batchpayrun,\r\n    getBatchPayrun,\r\n    //batchpayrun_loading,\r\n    //batchpayrun_error,\r\n    //loadPendingPayslips,\r\n  } = usePayslipsContext();\r\n  //const { loadEmployees, employees } = useEmployeesContext();\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        title: \"Batch\",\r\n        field: \"payrun\",\r\n        editable: \"never\",\r\n      },\r\n      // { title: \"Period\", field: \"period\", editable: \"never\" },\r\n      // {\r\n      //   title: \"PayDate\",\r\n      //   field: \"pay_date\",\r\n      //   type: \"date\",\r\n      //   dateSetting: { locale: \"en-GB\" },\r\n      //   editable: \"never\",\r\n      // },\r\n      {\r\n        title: \"Wages\",\r\n        field: \"totalwages\",\r\n        type: \"currency\",\r\n        editable: \"never\",\r\n      },\r\n      {\r\n        title: \"TAP Amount\",\r\n        field: \"totaltap\",\r\n        type: \"currency\",\r\n        editable: \"never\",\r\n      },\r\n      {\r\n        title: \"SCP Amount\",\r\n        field: \"totalscp\",\r\n        type: \"currency\",\r\n        editable: \"never\",\r\n      },\r\n      {\r\n        title: \"Site Allowances\",\r\n        field: \"totalsitesallows\",\r\n        type: \"currency\",\r\n        editable: \"never\",\r\n      },\r\n      {\r\n        title: \"Expenses Claims\",\r\n        field: \"totalexpensesclaims\",\r\n        type: \"currency\",\r\n        editable: \"never\",\r\n      },\r\n      {\r\n        title: \"Allowances\",\r\n        field: \"totalallows\",\r\n        type: \"currency\",\r\n        editable: \"never\",\r\n      },\r\n      {\r\n        title: \"Deductions\",\r\n        field: \"totaldeducts\",\r\n        type: \"currency\",\r\n        editable: \"never\",\r\n      },\r\n      {\r\n        title: \"Payroll\",\r\n        field: \"totalpayroll\",\r\n        type: \"currency\",\r\n        editable: \"never\",\r\n      },\r\n      // { title: \"Bank Name\", field: \"bank_name\" },\r\n      // { title: \"Bank AC No\", field: \"bank_accno\" },\r\n      { title: \"Status\", field: \"status\", editable: \"never\" },\r\n    ],\r\n    []\r\n  );\r\n\r\n  useEffect(() => {\r\n    getBatchPayrun(FILTERSTRING);\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={batchpayrun}\r\n          title=\"Payslips\"\r\n       \r\n          options={{\r\n            filtering: false,\r\n            search: false,\r\n            toolbar: false,\r\n            headerStyle: {\r\n              backgroundColor: \"#90CDF4\",\r\n              color: \"black\",\r\n            },\r\n            showTitle: false,\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-demo\\\\src\\\\components\\\\AllEmployeesTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useMemo } from \"react\";\nimport MaterialTable, { MTableToolbar } from \"material-table\";\nimport { useHistory } from \"react-router-dom\";\nimport { Box, Heading, Modal, ModalOverlay, ModalContent //ModalHeader,\n//ModalFooter,\n, ModalBody, ModalCloseButton, Tabs, TabList, TabPanels, Tab, TabPanel, useDisclosure } from \"@chakra-ui/react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button, Icon } from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { useCustomToast } from \"../helpers/useCustomToast\"; //import { useRecoilState } from \"recoil\";\n//import { editEmployeeIdState } from \"./data/atomdata\";\n\nimport { CustomDialog } from \"../helpers/CustomDialog\";\nimport { AlertDialogBox } from \"../helpers/AlertDialogBox\";\nimport EmployeeView from \"./EmployeeView\";\nimport { useEmployeesContext } from \"../context/employees_context\"; //import { useTablesContext } from \"../context/tables_context\";\n//import { useDepartments } from \"./departments/useDepartments\";\n//import { useDesignations } from \"./designations/useDesignations\";\n\nimport { useEmployees } from \"./employees/useEmployees\"; //import { useAllEmployees } from \"./employees/useAllEmployees\";\n\nimport { useDeleteEmployees } from \"./employees/useDeleteEmployees\";\nimport App from \"../utils/firebase\";\nimport EmployeeFormAdd from \"./EmployeeFormAdd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AllEmployeesTable() {\n  _s();\n\n  let history = useHistory();\n  const classes = useStyles();\n  const toast = useCustomToast(); //const { designations } = useDesignations();\n  //const { departments } = useDepartments();\n\n  const {\n    employees,\n    setEmployeeId\n  } = useEmployees(); //const { allemployees, setAllEmpId } = useAllEmployees();\n  //const [empId, setEmpId] = useRecoilState(editEmployeeIdState);\n\n  const deleteEmployees = useDeleteEmployees();\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\n  const {\n    isOpen: isAddEmpFormOpen,\n    onOpen: onAddEmpFormOpen,\n    onClose: onAddEmpFormClose\n  } = useDisclosure();\n  const columns = useMemo(() => [{\n    title: \"Name\",\n    field: \"name\"\n  }, {\n    title: \"IC No\",\n    field: \"ic_no\"\n  }, {\n    title: \"Gender\",\n    field: \"gender\"\n  }, {\n    title: \"Birth Date\",\n    field: \"birthdate\",\n    type: \"date\",\n    dateSetting: {\n      locale: \"en-GB\"\n    }\n  }, {\n    title: \"Email\",\n    field: \"email\"\n  }]);\n  const {\n    editEmployeeID,\n    //employees_loading,\n    //deleteEmployee,\n    //loadEmployees,\n    setEditEmployeeID,\n    setIsEditingOn,\n    //setIsEditingOff,\n    resetSingleEmployee,\n    resetEmployees //getSingleEmployee,\n\n  } = useEmployeesContext(); //const { loadDepartments, loadDesignations, resetTables } = useTablesContext();\n  // useEffect(() => {\n  //   setAllEmpId(\"111\");\n  // }, []);\n  // useEffect(() => {\n  //   resetEmployees();\n  //   loadEmployees();\n  // }, []);\n\n  const update_Employee = async data => {\n    const {\n      id\n    } = data;\n    resetSingleEmployee();\n    resetEmployees();\n    setEditEmployeeID(id);\n    setIsEditingOn();\n    setEmployeeId(id);\n    history.push(\"/singleemployee\");\n  };\n\n  const add_Employee = async data => {\n    //resetSingleEmployee();\n    //setEditEmployeeID(\"\");\n    //setIsEditingOff();\n    //handleDialogOpen();\n    onAddEmpFormOpen(); //history.push(\"/singleemployee\");\n  };\n\n  const delete_Employee = data => {\n    const {\n      id\n    } = data;\n    setEditEmployeeID(id);\n    handleAlertOpen(); //deleteEmployee(id);\n    //loadEmployees();\n  }; // const handleDialogOpen = () => {\n  //   setIsDialogOpen(true);\n  // };\n\n\n  const handleDialogClose = () => {\n    setIsDialogOpen(false); //loadEmployees();\n  };\n\n  const handleAlertOpen = () => {\n    setIsAlertOpen(true);\n  };\n\n  const handleAlertClose = () => {\n    setIsAlertOpen(false);\n  };\n\n  const handleOnDeleteConfirm = () => {\n    const id = editEmployeeID;\n    deleteEmployees(id); //loadEmployees();\n  }; // const calculateAge = (dob) => {\n  //   var today = new Date();\n  //   var birthDate = new Date(dob);\n  //   var age = today.getFullYear() - birthDate.getFullYear();\n  //   var m = today.getMonth() - birthDate.getMonth();\n  //   if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\n  //     age--;\n  //   }\n  //   return age;\n  // };\n\n\n  const Reset_PW = () => {\n    employees.forEach(rec => {\n      if (rec.tableData.checked) {\n        try {\n          if (rec.password) {\n            App.auth().createUserWithEmailAndPassword(rec.email, rec.password);\n          } else {\n            App.auth().createUserWithEmailAndPassword(rec.email, \"abc123*\");\n          }\n        } catch (error) {\n          console.log(error);\n        }\n\n        try {\n          App.auth().sendPasswordResetEmail(rec.email);\n          toast({\n            title: `Reset Password sent to ${rec.email}!`,\n            status: \"success\"\n          });\n        } catch (error) {\n          toast({\n            title: `Error send to  ${rec.email}!`,\n            status: \"warning\"\n          });\n        }\n      }\n    });\n    employees.forEach(d => {\n      if (d.tableData) d.tableData.checked = false;\n    });\n  }; // if (employees_loading) {\n  //   return <div>Loading...</div>;\n  // } else {\n  //   //console.log(employees);\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      p: 2,\n      children: /*#__PURE__*/_jsxDEV(Heading, {\n        size: \"md\",\n        children: \"Employee Listing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n      children: [/*#__PURE__*/_jsxDEV(TabList, {\n        children: [/*#__PURE__*/_jsxDEV(Tab, {\n          children: \"Current\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          children: \"Resigned\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TabPanels, {\n        children: [/*#__PURE__*/_jsxDEV(TabPanel, {\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            maxW: \"100%\",\n            pt: \"5px\",\n            children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n              columns: columns,\n              data: employees.filter(r => !r.hasresigned).sort((a, b) => a.name > b.name ? 1 : b.name > a.name ? -1 : 0),\n              title: \"Current Employees\",\n              icons: {\n                Add: props => /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 35\n                }, this),\n                Edit: props => /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 36\n                }, this),\n                Delete: props => /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 38\n                }, this),\n                Clear: props => /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 37\n                }, this),\n                Check: props => /*#__PURE__*/_jsxDEV(CheckIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 37\n                }, this),\n                Search: props => /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 38\n                }, this),\n                ResetSearch: props => /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 43\n                }, this)\n              },\n              actions: [{\n                icon: \"edit\",\n                tooltip: \"Edit Record\",\n                position: \"row\",\n                onClick: (event, rowData) => {\n                  update_Employee(rowData);\n                }\n              }, {\n                icon: \"delete\",\n                tooltip: \"Delete Record\",\n                position: \"row\",\n                onClick: (event, rowData) => {\n                  delete_Employee(rowData);\n                }\n              }, {\n                icon: \"add\",\n                tooltip: \"Add Record\",\n                isFreeAction: true,\n                onClick: (event, rowData) => {\n                  add_Employee(rowData);\n                }\n              }],\n              options: {\n                filtering: true,\n                selection: true,\n                paging: false,\n                headerStyle: {\n                  //backgroundColor: \"#DAAD86\",\n                  backgroundColor: \"#90CDF4\",\n                  color: \"secondary\"\n                },\n                showTitle: true\n              },\n              components: {\n                Toolbar: props => /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(MTableToolbar, { ...props\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 269,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      padding: \"5px 10px\"\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      type: \"submit\",\n                      variant: \"contained\",\n                      color: \"secondary\",\n                      className: classes.button,\n                      onClick: Reset_PW,\n                      children: [\"Reset PW\", \" \", /*#__PURE__*/_jsxDEV(Icon, {\n                        className: classes.rightIcon,\n                        children: \"send\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 279,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 271,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 270,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 268,\n                  columnNumber: 21\n                }, this)\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            maxW: \"100%\",\n            pt: \"5px\",\n            children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n              columns: columns,\n              data: employees.filter(r => r.hasresigned).sort((a, b) => a.name > b.name ? 1 : b.name > a.name ? -1 : 0),\n              title: \"Resigned Employees\",\n              icons: {\n                Add: props => /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 299,\n                  columnNumber: 35\n                }, this),\n                Edit: props => /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 300,\n                  columnNumber: 36\n                }, this),\n                Delete: props => /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 301,\n                  columnNumber: 38\n                }, this),\n                Clear: props => /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 302,\n                  columnNumber: 37\n                }, this),\n                Check: props => /*#__PURE__*/_jsxDEV(CheckIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 37\n                }, this),\n                Search: props => /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 38\n                }, this),\n                ResetSearch: props => /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 305,\n                  columnNumber: 43\n                }, this)\n              },\n              actions: [{\n                icon: \"edit\",\n                tooltip: \"Edit Record\",\n                position: \"row\",\n                onClick: (event, rowData) => {\n                  update_Employee(rowData);\n                }\n              }, {\n                icon: \"delete\",\n                tooltip: \"Delete Record\",\n                position: \"row\",\n                onClick: (event, rowData) => {\n                  delete_Employee(rowData);\n                }\n              }, {\n                icon: \"add\",\n                tooltip: \"Add Record\",\n                isFreeAction: true,\n                onClick: (event, rowData) => {\n                  add_Employee(rowData);\n                }\n              }],\n              options: {\n                filtering: true,\n                selection: false,\n                paging: false,\n                headerStyle: {\n                  //backgroundColor: \"#DAAD86\",\n                  backgroundColor: \"#90CDF4\",\n                  color: \"secondary\"\n                },\n                showTitle: true\n              },\n              components: {\n                Toolbar: props => /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(MTableToolbar, { ...props\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 347,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      padding: \"5px 10px\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 348,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 346,\n                  columnNumber: 21\n                }, this)\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      closeOnOverlayClick: false,\n      isOpen: isAddEmpFormOpen,\n      onClose: onAddEmpFormClose,\n      size: \"md\",\n      children: [/*#__PURE__*/_jsxDEV(ModalOverlay, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalContent, {\n        children: [/*#__PURE__*/_jsxDEV(ModalCloseButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          children: /*#__PURE__*/_jsxDEV(EmployeeFormAdd, {\n            onAddEmpFormClose: onAddEmpFormClose\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CustomDialog, {\n      isOpen: isDialogOpen,\n      handleClose: handleDialogClose,\n      title: \"\",\n      showButton: true,\n      isFullscreen: true,\n      isFullwidth: true,\n      children: /*#__PURE__*/_jsxDEV(EmployeeView, {\n        handleDialogClose: handleDialogClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AlertDialogBox, {\n      onClose: handleAlertClose,\n      onConfirm: handleOnDeleteConfirm,\n      isOpen: isAlertOpen,\n      title: \"Delete Employee\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Are you sure you want to delete ?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 200,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AllEmployeesTable, \"sTDB3pxI+1m/1ZZEZf9NJjflXFc=\", false, function () {\n  return [useHistory, useStyles, useCustomToast, useEmployees, useDeleteEmployees, useDisclosure, useEmployeesContext];\n});\n\n_c = AllEmployeesTable;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3, 2)\n  }\n}));\n\nvar _c;\n\n$RefreshReg$(_c, \"AllEmployeesTable\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-demo/src/components/AllEmployeesTable.js"],"names":["React","useState","useMemo","MaterialTable","MTableToolbar","useHistory","Box","Heading","Modal","ModalOverlay","ModalContent","ModalBody","ModalCloseButton","Tabs","TabList","TabPanels","Tab","TabPanel","useDisclosure","makeStyles","Button","Icon","AddIcon","EditIcon","DeleteIcon","CheckIcon","SearchIcon","useCustomToast","CustomDialog","AlertDialogBox","EmployeeView","useEmployeesContext","useEmployees","useDeleteEmployees","App","EmployeeFormAdd","AllEmployeesTable","history","classes","useStyles","toast","employees","setEmployeeId","deleteEmployees","isDialogOpen","setIsDialogOpen","isAlertOpen","setIsAlertOpen","isOpen","isAddEmpFormOpen","onOpen","onAddEmpFormOpen","onClose","onAddEmpFormClose","columns","title","field","type","dateSetting","locale","editEmployeeID","setEditEmployeeID","setIsEditingOn","resetSingleEmployee","resetEmployees","update_Employee","data","id","push","add_Employee","delete_Employee","handleAlertOpen","handleDialogClose","handleAlertClose","handleOnDeleteConfirm","Reset_PW","forEach","rec","tableData","checked","password","auth","createUserWithEmailAndPassword","email","error","console","log","sendPasswordResetEmail","status","d","root","filter","r","hasresigned","sort","a","b","name","Add","props","Edit","Delete","Clear","Check","Search","ResetSearch","icon","tooltip","position","onClick","event","rowData","isFreeAction","filtering","selection","paging","headerStyle","backgroundColor","color","showTitle","Toolbar","padding","button","rightIcon","theme","spacing"],"mappings":"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","sourcesContent":["import React, { useState, useMemo } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Box,\r\n  Heading,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  //ModalHeader,\r\n  //ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  Tabs,\r\n  TabList,\r\n  TabPanels,\r\n  Tab,\r\n  TabPanel,\r\n  useDisclosure,\r\n} from \"@chakra-ui/react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button, Icon } from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { useCustomToast } from \"../helpers/useCustomToast\";\r\n//import { useRecoilState } from \"recoil\";\r\n//import { editEmployeeIdState } from \"./data/atomdata\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { AlertDialogBox } from \"../helpers/AlertDialogBox\";\r\nimport EmployeeView from \"./EmployeeView\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\n//import { useTablesContext } from \"../context/tables_context\";\r\n//import { useDepartments } from \"./departments/useDepartments\";\r\n//import { useDesignations } from \"./designations/useDesignations\";\r\nimport { useEmployees } from \"./employees/useEmployees\";\r\n//import { useAllEmployees } from \"./employees/useAllEmployees\";\r\nimport { useDeleteEmployees } from \"./employees/useDeleteEmployees\";\r\nimport App from \"../utils/firebase\";\r\nimport EmployeeFormAdd from \"./EmployeeFormAdd\";\r\n\r\nexport default function AllEmployeesTable() {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const toast = useCustomToast();\r\n  //const { designations } = useDesignations();\r\n  //const { departments } = useDepartments();\r\n  const { employees, setEmployeeId } = useEmployees();\r\n  //const { allemployees, setAllEmpId } = useAllEmployees();\r\n  //const [empId, setEmpId] = useRecoilState(editEmployeeIdState);\r\n  const deleteEmployees = useDeleteEmployees();\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\r\n  const {\r\n    isOpen: isAddEmpFormOpen,\r\n    onOpen: onAddEmpFormOpen,\r\n    onClose: onAddEmpFormClose,\r\n  } = useDisclosure();\r\n  const columns = useMemo(() => [\r\n    {\r\n      title: \"Name\",\r\n      field: \"name\",\r\n    },\r\n    { title: \"IC No\", field: \"ic_no\" },\r\n    { title: \"Gender\", field: \"gender\" },\r\n    {\r\n      title: \"Birth Date\",\r\n      field: \"birthdate\",\r\n      type: \"date\",\r\n      dateSetting: { locale: \"en-GB\" },\r\n    },\r\n    { title: \"Email\", field: \"email\" },\r\n  ]);\r\n\r\n  const {\r\n    editEmployeeID,\r\n    //employees_loading,\r\n    //deleteEmployee,\r\n    //loadEmployees,\r\n    setEditEmployeeID,\r\n    setIsEditingOn,\r\n    //setIsEditingOff,\r\n    resetSingleEmployee,\r\n    resetEmployees,\r\n    //getSingleEmployee,\r\n  } = useEmployeesContext();\r\n\r\n  //const { loadDepartments, loadDesignations, resetTables } = useTablesContext();\r\n\r\n  // useEffect(() => {\r\n  //   setAllEmpId(\"111\");\r\n  // }, []);\r\n\r\n  // useEffect(() => {\r\n  //   resetEmployees();\r\n  //   loadEmployees();\r\n  // }, []);\r\n\r\n  const update_Employee = async (data) => {\r\n    const { id } = data;\r\n    resetSingleEmployee();\r\n    resetEmployees();\r\n    setEditEmployeeID(id);\r\n    setIsEditingOn();\r\n    setEmployeeId(id);\r\n\r\n    history.push(\"/singleemployee\");\r\n  };\r\n\r\n  const add_Employee = async (data) => {\r\n    //resetSingleEmployee();\r\n    //setEditEmployeeID(\"\");\r\n    //setIsEditingOff();\r\n    //handleDialogOpen();\r\n    onAddEmpFormOpen()\r\n    //history.push(\"/singleemployee\");\r\n  };\r\n\r\n  const delete_Employee = (data) => {\r\n    const { id } = data;\r\n    setEditEmployeeID(id);\r\n    handleAlertOpen();\r\n    //deleteEmployee(id);\r\n    //loadEmployees();\r\n  };\r\n\r\n  // const handleDialogOpen = () => {\r\n  //   setIsDialogOpen(true);\r\n  // };\r\n\r\n  const handleDialogClose = () => {\r\n    setIsDialogOpen(false);\r\n    //loadEmployees();\r\n  };\r\n\r\n  const handleAlertOpen = () => {\r\n    setIsAlertOpen(true);\r\n  };\r\n\r\n  const handleAlertClose = () => {\r\n    setIsAlertOpen(false);\r\n  };\r\n\r\n  const handleOnDeleteConfirm = () => {\r\n    const id = editEmployeeID;\r\n    deleteEmployees(id);\r\n    //loadEmployees();\r\n  };\r\n\r\n  // const calculateAge = (dob) => {\r\n  //   var today = new Date();\r\n  //   var birthDate = new Date(dob);\r\n  //   var age = today.getFullYear() - birthDate.getFullYear();\r\n  //   var m = today.getMonth() - birthDate.getMonth();\r\n  //   if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n  //     age--;\r\n  //   }\r\n  //   return age;\r\n  // };\r\n\r\n  const Reset_PW = () => {\r\n    employees.forEach((rec) => {\r\n      if (rec.tableData.checked) {\r\n        try {\r\n          if (rec.password) {\r\n            App.auth().createUserWithEmailAndPassword(rec.email, rec.password);\r\n          } else {\r\n            App.auth().createUserWithEmailAndPassword(rec.email, \"abc123*\");\r\n          }\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n        try {\r\n          App.auth().sendPasswordResetEmail(rec.email);\r\n          toast({\r\n            title: `Reset Password sent to ${rec.email}!`,\r\n            status: \"success\",\r\n          });\r\n        } catch (error) {\r\n          toast({\r\n            title: `Error send to  ${rec.email}!`,\r\n            status: \"warning\",\r\n          });\r\n        }\r\n      }\r\n    });\r\n    employees.forEach((d) => {\r\n      if (d.tableData) d.tableData.checked = false;\r\n    });\r\n  };\r\n\r\n  // if (employees_loading) {\r\n  //   return <div>Loading...</div>;\r\n  // } else {\r\n  //   //console.log(employees);\r\n  // }\r\n  return (\r\n    <div className={classes.root}>\r\n      <Box p={2}>\r\n        <Heading size=\"md\">Employee Listing</Heading>\r\n      </Box>\r\n      <Tabs>\r\n        <TabList>\r\n          <Tab>Current</Tab>\r\n          <Tab>Resigned</Tab>\r\n        </TabList>\r\n        <TabPanels>\r\n          <TabPanel>\r\n            <Box maxW=\"100%\" pt=\"5px\">\r\n              <MaterialTable\r\n                columns={columns}\r\n                data={employees\r\n                  .filter((r) => !r.hasresigned)\r\n                  .sort((a, b) =>\r\n                    a.name > b.name ? 1 : b.name > a.name ? -1 : 0\r\n                  )}\r\n                title=\"Current Employees\"\r\n                icons={{\r\n                  Add: (props) => <AddIcon />,\r\n                  Edit: (props) => <EditIcon />,\r\n                  Delete: (props) => <DeleteIcon />,\r\n                  Clear: (props) => <DeleteIcon />,\r\n                  Check: (props) => <CheckIcon />,\r\n                  Search: (props) => <SearchIcon />,\r\n                  ResetSearch: (props) => <DeleteIcon />,\r\n                }}\r\n                actions={[\r\n                  {\r\n                    icon: \"edit\",\r\n                    tooltip: \"Edit Record\",\r\n                    position: \"row\",\r\n                    onClick: (event, rowData) => {\r\n                      update_Employee(rowData);\r\n                    },\r\n                  },\r\n                  {\r\n                    icon: \"delete\",\r\n                    tooltip: \"Delete Record\",\r\n                    position: \"row\",\r\n                    onClick: (event, rowData) => {\r\n                      delete_Employee(rowData);\r\n                    },\r\n                  },\r\n                  {\r\n                    icon: \"add\",\r\n                    tooltip: \"Add Record\",\r\n                    isFreeAction: true,\r\n                    onClick: (event, rowData) => {\r\n                      add_Employee(rowData);\r\n                    },\r\n                  },\r\n                ]}\r\n                options={{\r\n                  filtering: true,\r\n                  selection: true,\r\n                  paging: false,\r\n                  headerStyle: {\r\n                    //backgroundColor: \"#DAAD86\",\r\n                    backgroundColor: \"#90CDF4\",\r\n                    color: \"secondary\",\r\n                  },\r\n                  showTitle: true,\r\n                }}\r\n                components={{\r\n                  Toolbar: (props) => (\r\n                    <div>\r\n                      <MTableToolbar {...props} />\r\n                      <div style={{ padding: \"5px 10px\" }}>\r\n                        <Button\r\n                          type=\"submit\"\r\n                          variant=\"contained\"\r\n                          color=\"secondary\"\r\n                          className={classes.button}\r\n                          onClick={Reset_PW}\r\n                        >\r\n                          Reset PW{\" \"}\r\n                          <Icon className={classes.rightIcon}>send</Icon>\r\n                        </Button>\r\n                      </div>\r\n                    </div>\r\n                  ),\r\n                }}\r\n              />\r\n            </Box>\r\n          </TabPanel>\r\n          <TabPanel>\r\n            <Box maxW=\"100%\" pt=\"5px\">\r\n              <MaterialTable\r\n                columns={columns}\r\n                data={employees\r\n                  .filter((r) => r.hasresigned)\r\n                  .sort((a, b) =>\r\n                    a.name > b.name ? 1 : b.name > a.name ? -1 : 0\r\n                  )}\r\n                title=\"Resigned Employees\"\r\n                icons={{\r\n                  Add: (props) => <AddIcon />,\r\n                  Edit: (props) => <EditIcon />,\r\n                  Delete: (props) => <DeleteIcon />,\r\n                  Clear: (props) => <DeleteIcon />,\r\n                  Check: (props) => <CheckIcon />,\r\n                  Search: (props) => <SearchIcon />,\r\n                  ResetSearch: (props) => <DeleteIcon />,\r\n                }}\r\n                actions={[\r\n                  {\r\n                    icon: \"edit\",\r\n                    tooltip: \"Edit Record\",\r\n                    position: \"row\",\r\n                    onClick: (event, rowData) => {\r\n                      update_Employee(rowData);\r\n                    },\r\n                  },\r\n                  {\r\n                    icon: \"delete\",\r\n                    tooltip: \"Delete Record\",\r\n                    position: \"row\",\r\n                    onClick: (event, rowData) => {\r\n                      delete_Employee(rowData);\r\n                    },\r\n                  },\r\n                  {\r\n                    icon: \"add\",\r\n                    tooltip: \"Add Record\",\r\n                    isFreeAction: true,\r\n                    onClick: (event, rowData) => {\r\n                      add_Employee(rowData);\r\n                    },\r\n                  },\r\n                ]}\r\n                options={{\r\n                  filtering: true,\r\n                  selection: false,\r\n                  paging: false,\r\n                  headerStyle: {\r\n                    //backgroundColor: \"#DAAD86\",\r\n                    backgroundColor: \"#90CDF4\",\r\n                    color: \"secondary\",\r\n                  },\r\n                  showTitle: true,\r\n                }}\r\n                components={{\r\n                  Toolbar: (props) => (\r\n                    <div>\r\n                      <MTableToolbar {...props} />\r\n                      <div style={{ padding: \"5px 10px\" }}>\r\n                        {/* <Button\r\n                          type=\"submit\"\r\n                          variant=\"contained\"\r\n                          color=\"secondary\"\r\n                          className={classes.button}\r\n                          onClick={Reset_PW}\r\n                        >\r\n                          Reset PW{\" \"}\r\n                          <Icon className={classes.rightIcon}>send</Icon>\r\n                        </Button> */}\r\n                      </div>\r\n                    </div>\r\n                  ),\r\n                }}\r\n              />\r\n            </Box>\r\n          </TabPanel>\r\n        </TabPanels>\r\n      </Tabs>\r\n      <Modal\r\n        closeOnOverlayClick={false}\r\n        isOpen={isAddEmpFormOpen}\r\n        onClose={onAddEmpFormClose}\r\n        size=\"md\"\r\n      >\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          {/* <ModalHeader>Product Form</ModalHeader> */}\r\n          <ModalCloseButton />\r\n          <ModalBody>\r\n            <EmployeeFormAdd onAddEmpFormClose={onAddEmpFormClose} />\r\n          </ModalBody>\r\n\r\n          {/* <ModalFooter>\r\n            <Button colorScheme=\"blue\" mr={3} onClick={onProductClose}>\r\n              Close\r\n            </Button>\r\n          </ModalFooter> */}\r\n        </ModalContent>\r\n      </Modal>\r\n      <CustomDialog\r\n        isOpen={isDialogOpen}\r\n        handleClose={handleDialogClose}\r\n        title=\"\"\r\n        showButton={true}\r\n        isFullscreen={true}\r\n        isFullwidth={true}\r\n      >\r\n        <EmployeeView handleDialogClose={handleDialogClose} />\r\n      </CustomDialog>\r\n\r\n      <AlertDialogBox\r\n        onClose={handleAlertClose}\r\n        onConfirm={handleOnDeleteConfirm}\r\n        isOpen={isAlertOpen}\r\n        title=\"Delete Employee\"\r\n      >\r\n        <h2>Are you sure you want to delete ?</h2>\r\n      </AlertDialogBox>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(3, 2),\r\n  },\r\n}));\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-demo\\\\src\\\\components\\\\EmpTrainings.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport MaterialTable, { MTableToolbar } from \"material-table\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { TextField, MenuItem } from \"@material-ui/core\";\nimport { useRecoilState } from \"recoil\";\nimport { loginLevelState } from \"./data/atomdata\";\nimport { useEmployeesContext } from \"../context/employees_context\"; //import { useTrainingsContext } from \"../context/trainings_context\";\n\nimport { useTrainings } from \"./trainings/useTrainings\";\nimport { useInstitutes } from \"./institutes/useInstitutes\";\nimport { useUpdateTrainings } from \"./trainings/useUpdateTrainings\";\nimport { useAddTrainings } from \"./trainings/useAddTrainings\";\nimport { useDeleteTrainings } from \"./trainings/useDeleteTrainings\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Emp_Training({\n  trainingdata,\n  setTrainingdata,\n  handleDialogClose\n}) {\n  _s();\n\n  const classes = useStyles();\n  const {\n    trainings,\n    setTrainingId\n  } = useTrainings();\n  const {\n    institutes\n  } = useInstitutes();\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\n  const updateTrainings = useUpdateTrainings();\n  const addTrainings = useAddTrainings();\n  const deleteTrainings = useDeleteTrainings();\n  const {\n    editEmployeeID\n  } = useEmployeesContext(); // const {\n  //   //getSingleBatchTraining,\n  //   //singlebatch_training,\n  //   //addTraining,\n  //   //deleteTraining,\n  //   //updateTraining,\n  //   //singlebatch_training_loading,\n  // } = useTrainingsContext();\n\n  const columns = useMemo(() => [{\n    title: \"Institute\",\n    field: \"institute\",\n    editComponent: props => /*#__PURE__*/_jsxDEV(TextField //defaultValue={props.value || null}\n    , {\n      onChange: e => props.onChange(e.target.value),\n      style: {\n        width: 100\n      },\n      value: props.value,\n      select: true,\n      children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n        value: \"\",\n        children: \"None\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), institutes.length > 0 && institutes.map(r => {\n        return /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: r.name,\n          children: r.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 24\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }, this)\n  }, {\n    title: \"Course\",\n    field: \"course\"\n  }, {\n    title: \"From Date\",\n    field: \"from_date\",\n    type: \"date\",\n    dateSetting: {\n      locale: \"en-GB\"\n    },\n    editComponent: props => /*#__PURE__*/_jsxDEV(TextField, {\n      defaultValue: props.value || new Date(),\n      onChange: e => props.onChange(e.target.value),\n      type: \"date\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }, this)\n  }, {\n    title: \"To Date\",\n    field: \"to_date\",\n    type: \"date\",\n    dateSetting: {\n      locale: \"en-GB\"\n    },\n    editComponent: props => /*#__PURE__*/_jsxDEV(TextField, {\n      defaultValue: props.value || new Date(),\n      onChange: e => props.onChange(e.target.value),\n      type: \"date\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }, this)\n  }, {\n    title: \"Expiry Date\",\n    field: \"expiry_date\",\n    type: \"date\",\n    dateSetting: {\n      locale: \"en-GB\"\n    },\n    editComponent: props => /*#__PURE__*/_jsxDEV(TextField, {\n      defaultValue: props.value || new Date(),\n      onChange: e => props.onChange(e.target.value),\n      type: \"date\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }, this)\n  }], []);\n  useEffect(() => {\n    setTrainingId(editEmployeeID);\n  }, []);\n\n  const add_Training = data => {\n    addTrainings({ ...data,\n      name: loginLevel.loginUser,\n      empid: editEmployeeID\n    });\n  };\n\n  const delete_Training = data => {\n    const {\n      id\n    } = data;\n    deleteTrainings(id);\n  };\n\n  const update_Training = data => {\n    const {\n      id,\n      rec_id,\n      tableData,\n      ...fields\n    } = data;\n    updateTrainings({\n      id,\n      ...fields\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: \"100%\",\n        paddingTop: \"5px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n        columns: columns,\n        data: trainings,\n        title: \"Training\",\n        editable: {\n          onRowAdd: newData => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              add_Training(newData);\n              resolve();\n            }, 1000);\n          }),\n          onRowUpdate: (newData, oldData) => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              update_Training(newData);\n              resolve();\n            }, 1000);\n          }),\n          onRowDelete: oldData => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              delete_Training(oldData);\n              resolve();\n            }, 1000);\n          })\n        },\n        options: {\n          filtering: true,\n          headerStyle: {\n            backgroundColor: \"orange\",\n            color: \"primary\"\n          },\n          showTitle: true\n        },\n        components: {\n          Toolbar: props => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(MTableToolbar, { ...props\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }, this)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Emp_Training, \"2e9bkDTl0oB7n9aHNSVJahYlmvM=\", false, function () {\n  return [useStyles, useTrainings, useInstitutes, useRecoilState, useUpdateTrainings, useAddTrainings, useDeleteTrainings, useEmployeesContext];\n});\n\n_c = Emp_Training;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: 0\n  }\n}));\n\nvar _c;\n\n$RefreshReg$(_c, \"Emp_Training\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-demo/src/components/EmpTrainings.js"],"names":["React","useState","useEffect","useMemo","MaterialTable","MTableToolbar","makeStyles","TextField","MenuItem","useRecoilState","loginLevelState","useEmployeesContext","useTrainings","useInstitutes","useUpdateTrainings","useAddTrainings","useDeleteTrainings","Emp_Training","trainingdata","setTrainingdata","handleDialogClose","classes","useStyles","trainings","setTrainingId","institutes","loginLevel","setLoginLevel","updateTrainings","addTrainings","deleteTrainings","editEmployeeID","columns","title","field","editComponent","props","e","onChange","target","value","width","length","map","r","name","type","dateSetting","locale","Date","add_Training","data","loginUser","empid","delete_Training","id","update_Training","rec_id","tableData","fields","root","maxWidth","paddingTop","onRowAdd","newData","Promise","resolve","reject","setTimeout","onRowUpdate","oldData","onRowDelete","filtering","headerStyle","backgroundColor","color","showTitle","Toolbar","theme","padding"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { TextField, MenuItem } from \"@material-ui/core\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\n//import { useTrainingsContext } from \"../context/trainings_context\";\r\nimport { useTrainings } from \"./trainings/useTrainings\";\r\nimport { useInstitutes } from \"./institutes/useInstitutes\";\r\nimport { useUpdateTrainings } from \"./trainings/useUpdateTrainings\";\r\nimport { useAddTrainings } from \"./trainings/useAddTrainings\";\r\nimport { useDeleteTrainings } from \"./trainings/useDeleteTrainings\";\r\n\r\nexport default function Emp_Training({\r\n  trainingdata,\r\n  setTrainingdata,\r\n  handleDialogClose,\r\n}) {\r\n  const classes = useStyles();\r\n  const { trainings, setTrainingId } = useTrainings();\r\n  const { institutes } = useInstitutes();\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const updateTrainings = useUpdateTrainings();\r\n  const addTrainings = useAddTrainings();\r\n  const deleteTrainings = useDeleteTrainings();\r\n  const { editEmployeeID } = useEmployeesContext();\r\n  // const {\r\n  //   //getSingleBatchTraining,\r\n  //   //singlebatch_training,\r\n  //   //addTraining,\r\n  //   //deleteTraining,\r\n  //   //updateTraining,\r\n  //   //singlebatch_training_loading,\r\n  // } = useTrainingsContext();\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        title: \"Institute\",\r\n        field: \"institute\",\r\n        editComponent: (props) => (\r\n          <TextField\r\n            //defaultValue={props.value || null}\r\n            onChange={(e) => props.onChange(e.target.value)}\r\n            style={{ width: 100 }}\r\n            value={props.value}\r\n            select\r\n          >\r\n            <MenuItem value=\"\">None</MenuItem>\r\n            {institutes.length > 0 &&\r\n              institutes.map((r) => {\r\n                return <MenuItem value={r.name}>{r.name}</MenuItem>;\r\n              })}\r\n          </TextField>\r\n        ),\r\n      },\r\n      {\r\n        title: \"Course\",\r\n        field: \"course\",\r\n      },\r\n      {\r\n        title: \"From Date\",\r\n        field: \"from_date\",\r\n        type: \"date\",\r\n        dateSetting: { locale: \"en-GB\" },\r\n        editComponent: (props) => (\r\n          <TextField\r\n            defaultValue={props.value || new Date()}\r\n            onChange={(e) => props.onChange(e.target.value)}\r\n            type=\"date\"\r\n          />\r\n        ),\r\n      },\r\n      {\r\n        title: \"To Date\",\r\n        field: \"to_date\",\r\n        type: \"date\",\r\n        dateSetting: { locale: \"en-GB\" },\r\n        editComponent: (props) => (\r\n          <TextField\r\n            defaultValue={props.value || new Date()}\r\n            onChange={(e) => props.onChange(e.target.value)}\r\n            type=\"date\"\r\n          />\r\n        ),\r\n      },\r\n      {\r\n        title: \"Expiry Date\",\r\n        field: \"expiry_date\",\r\n        type: \"date\",\r\n        dateSetting: { locale: \"en-GB\" },\r\n        editComponent: (props) => (\r\n          <TextField\r\n            defaultValue={props.value || new Date()}\r\n            onChange={(e) => props.onChange(e.target.value)}\r\n            type=\"date\"\r\n          />\r\n        ),\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  useEffect(() => {\r\n    setTrainingId(editEmployeeID);\r\n  }, []);\r\n\r\n  const add_Training = (data) => {\r\n    addTrainings({\r\n      ...data,\r\n      name: loginLevel.loginUser,\r\n      empid: editEmployeeID,\r\n    });\r\n  };\r\n\r\n  const delete_Training = (data) => {\r\n    const { id } = data;\r\n    deleteTrainings(id);\r\n  };\r\n\r\n  const update_Training = (data) => {\r\n    const { id, rec_id, tableData, ...fields } = data;\r\n    updateTrainings({ id, ...fields });\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={trainings}\r\n          title=\"Training\"\r\n          editable={{\r\n            onRowAdd: (newData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  add_Training(newData);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowUpdate: (newData, oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  update_Training(newData);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowDelete: (oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  delete_Training(oldData);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n          }}\r\n          options={{\r\n            filtering: true,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"primary\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n"]},"metadata":{},"sourceType":"module"}
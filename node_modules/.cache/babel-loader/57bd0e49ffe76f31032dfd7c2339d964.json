{"ast":null,"code":"import { SET_EDITTRAININGID, SET_ISTRAININGEDITING_ON, SET_ISTRAININGEDITING_OFF,\n//SET_SINGLETRAINING,\nGET_TRAININGS_BEGIN, GET_TRAININGS_SUCCESS, GET_TRAININGS_ERROR, GET_SINGLE_TRAINING_BEGIN, GET_SINGLE_TRAINING_SUCCESS, GET_SINGLE_TRAINING_ERROR, GET_SINGLEBATCH_TRAINING_BEGIN, GET_SINGLEBATCH_TRAINING_SUCCESS, GET_SINGLEBATCH_TRAINING_ERROR, ADD_TRAINING_BEGIN, ADD_TRAINING_SUCCESS, ADD_TRAINING_ERROR, DELETE_TRAINING_BEGIN, DELETE_TRAINING_SUCCESS, DELETE_TRAINING_ERROR, UPDATE_TRAINING_BEGIN, UPDATE_TRAINING_SUCCESS, UPDATE_TRAINING_ERROR, RESET_SINGLE_TRAINING\n//RESET_TABLES,\n} from \"../actions\";\nconst trainings_reducer = (state, action) => {\n  // set training variables\n  if (action.type === SET_EDITTRAININGID) {\n    return {\n      ...state,\n      editTrainingID: action.payload\n    };\n  }\n  if (action.type === SET_ISTRAININGEDITING_ON) {\n    return {\n      ...state,\n      isTrainingEditing: true\n    };\n  }\n  if (action.type === SET_ISTRAININGEDITING_OFF) {\n    return {\n      ...state,\n      isTrainingEditing: false\n    };\n  }\n  if (action.type === RESET_SINGLE_TRAINING) {\n    return {\n      ...state,\n      single_training: {}\n    };\n  }\n  // get trainings\n  if (action.type === GET_TRAININGS_BEGIN) {\n    return {\n      ...state,\n      trainings_loading: true\n    };\n  }\n  if (action.type === GET_TRAININGS_SUCCESS) {\n    return {\n      ...state,\n      trainings_loading: false,\n      trainings: action.payload\n    };\n  }\n  if (action.type === GET_TRAININGS_ERROR) {\n    return {\n      ...state,\n      trainings_loading: false,\n      trainings_error: true\n    };\n  }\n\n  // add training\n  if (action.type === ADD_TRAINING_BEGIN) {\n    return {\n      ...state,\n      add_training_loading: true\n    };\n  }\n  if (action.type === ADD_TRAINING_SUCCESS) {\n    return {\n      ...state,\n      add_trainings_loading: false,\n      trainings: action.payload\n    };\n  }\n  if (action.type === ADD_TRAINING_ERROR) {\n    return {\n      ...state,\n      trainings_loading: false,\n      add_training_error: true\n    };\n  }\n  // update trainig\n  if (action.type === UPDATE_TRAINING_BEGIN) {\n    return {\n      ...state,\n      update_training_loading: true\n    };\n  }\n  if (action.type === UPDATE_TRAINING_SUCCESS) {\n    return {\n      ...state,\n      trainings_loading: false,\n      single_training: action.payload\n    };\n  }\n  if (action.type === UPDATE_TRAINING_ERROR) {\n    return {\n      ...state,\n      update_training_loading: false,\n      update_training_error: true\n    };\n  }\n\n  // delete training\n  if (action.type === DELETE_TRAINING_BEGIN) {\n    return {\n      ...state,\n      delete_training_loading: true,\n      delete_training_error: false\n    };\n  }\n  if (action.type === DELETE_TRAINING_SUCCESS) {\n    return {\n      ...state,\n      delete_training_loading: false,\n      delete_training_error: false\n    };\n  }\n  if (action.type === DELETE_TRAINING_ERROR) {\n    return {\n      ...state,\n      delete_training_loading: false,\n      delete_training_error: true\n    };\n  }\n\n  //single training\n  if (action.type === GET_SINGLE_TRAINING_BEGIN) {\n    return {\n      ...state,\n      single_training_loading: true,\n      single_training_error: false\n    };\n  }\n  if (action.type === GET_SINGLE_TRAINING_SUCCESS) {\n    return {\n      ...state,\n      single_training_loading: false,\n      single_training: action.payload\n    };\n  }\n  if (action.type === GET_SINGLE_TRAINING_ERROR) {\n    return {\n      ...state,\n      single_training_loading: false,\n      single_training_error: true\n    };\n  }\n\n  //single batch training\n  if (action.type === GET_SINGLEBATCH_TRAINING_BEGIN) {\n    return {\n      ...state,\n      singlebatch_training_loading: true,\n      singlebatch_training_error: false\n    };\n  }\n  if (action.type === GET_SINGLEBATCH_TRAINING_SUCCESS) {\n    return {\n      ...state,\n      singlebatch_training_loading: false,\n      singlebatch_training: action.payload\n    };\n  }\n  if (action.type === GET_SINGLEBATCH_TRAINING_ERROR) {\n    return {\n      ...state,\n      singlebatch_training_loading: false,\n      singlebatch_training_error: true\n    };\n  }\n\n  // return state;\n  throw new Error(`No Matching \"${action.type}\" - action type`);\n};\nexport default trainings_reducer;","map":{"version":3,"names":["SET_EDITTRAININGID","SET_ISTRAININGEDITING_ON","SET_ISTRAININGEDITING_OFF","GET_TRAININGS_BEGIN","GET_TRAININGS_SUCCESS","GET_TRAININGS_ERROR","GET_SINGLE_TRAINING_BEGIN","GET_SINGLE_TRAINING_SUCCESS","GET_SINGLE_TRAINING_ERROR","GET_SINGLEBATCH_TRAINING_BEGIN","GET_SINGLEBATCH_TRAINING_SUCCESS","GET_SINGLEBATCH_TRAINING_ERROR","ADD_TRAINING_BEGIN","ADD_TRAINING_SUCCESS","ADD_TRAINING_ERROR","DELETE_TRAINING_BEGIN","DELETE_TRAINING_SUCCESS","DELETE_TRAINING_ERROR","UPDATE_TRAINING_BEGIN","UPDATE_TRAINING_SUCCESS","UPDATE_TRAINING_ERROR","RESET_SINGLE_TRAINING","trainings_reducer","state","action","type","editTrainingID","payload","isTrainingEditing","single_training","trainings_loading","trainings","trainings_error","add_training_loading","add_trainings_loading","add_training_error","update_training_loading","update_training_error","delete_training_loading","delete_training_error","single_training_loading","single_training_error","singlebatch_training_loading","singlebatch_training_error","singlebatch_training","Error"],"sources":["D:/react-myprojects/hrms-airtable/src/reducers/trainings_reducer.js"],"sourcesContent":["import {\r\n  SET_EDITTRAININGID,\r\n  SET_ISTRAININGEDITING_ON,\r\n  SET_ISTRAININGEDITING_OFF,\r\n  //SET_SINGLETRAINING,\r\n  GET_TRAININGS_BEGIN,\r\n  GET_TRAININGS_SUCCESS,\r\n  GET_TRAININGS_ERROR,\r\n  GET_SINGLE_TRAINING_BEGIN,\r\n  GET_SINGLE_TRAINING_SUCCESS,\r\n  GET_SINGLE_TRAINING_ERROR,\r\n  GET_SINGLEBATCH_TRAINING_BEGIN,\r\n  GET_SINGLEBATCH_TRAINING_SUCCESS,\r\n  GET_SINGLEBATCH_TRAINING_ERROR,\r\n  ADD_TRAINING_BEGIN,\r\n  ADD_TRAINING_SUCCESS,\r\n  ADD_TRAINING_ERROR,\r\n  DELETE_TRAINING_BEGIN,\r\n  DELETE_TRAINING_SUCCESS,\r\n  DELETE_TRAINING_ERROR,\r\n  UPDATE_TRAINING_BEGIN,\r\n  UPDATE_TRAINING_SUCCESS,\r\n  UPDATE_TRAINING_ERROR,\r\n  RESET_SINGLE_TRAINING,\r\n  //RESET_TABLES,\r\n} from \"../actions\";\r\n\r\nconst trainings_reducer = (state, action) => {\r\n  // set training variables\r\n  if (action.type === SET_EDITTRAININGID) {\r\n    return { ...state, editTrainingID: action.payload };\r\n  }\r\n\r\n  if (action.type === SET_ISTRAININGEDITING_ON) {\r\n    return { ...state, isTrainingEditing: true };\r\n  }\r\n  if (action.type === SET_ISTRAININGEDITING_OFF) {\r\n    return { ...state, isTrainingEditing: false };\r\n  }\r\n  if (action.type === RESET_SINGLE_TRAINING) {\r\n    return { ...state, single_training: {} };\r\n  }\r\n  // get trainings\r\n  if (action.type === GET_TRAININGS_BEGIN) {\r\n    return { ...state, trainings_loading: true };\r\n  }\r\n  if (action.type === GET_TRAININGS_SUCCESS) {\r\n    return { ...state, trainings_loading: false, trainings: action.payload };\r\n  }\r\n  if (action.type === GET_TRAININGS_ERROR) {\r\n    return { ...state, trainings_loading: false, trainings_error: true };\r\n  }\r\n\r\n  // add training\r\n  if (action.type === ADD_TRAINING_BEGIN) {\r\n    return { ...state, add_training_loading: true };\r\n  }\r\n  if (action.type === ADD_TRAINING_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      add_trainings_loading: false,\r\n      trainings: action.payload,\r\n    };\r\n  }\r\n  if (action.type === ADD_TRAINING_ERROR) {\r\n    return { ...state, trainings_loading: false, add_training_error: true };\r\n  }\r\n  // update trainig\r\n  if (action.type === UPDATE_TRAINING_BEGIN) {\r\n    return { ...state, update_training_loading: true };\r\n  }\r\n  if (action.type === UPDATE_TRAINING_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      trainings_loading: false,\r\n      single_training: action.payload,\r\n    };\r\n  }\r\n  if (action.type === UPDATE_TRAINING_ERROR) {\r\n    return {\r\n      ...state,\r\n      update_training_loading: false,\r\n      update_training_error: true,\r\n    };\r\n  }\r\n\r\n  // delete training\r\n  if (action.type === DELETE_TRAINING_BEGIN) {\r\n    return {\r\n      ...state,\r\n      delete_training_loading: true,\r\n      delete_training_error: false,\r\n    };\r\n  }\r\n\r\n  if (action.type === DELETE_TRAINING_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      delete_training_loading: false,\r\n      delete_training_error: false,\r\n    };\r\n  }\r\n  if (action.type === DELETE_TRAINING_ERROR) {\r\n    return {\r\n      ...state,\r\n      delete_training_loading: false,\r\n      delete_training_error: true,\r\n    };\r\n  }\r\n\r\n  //single training\r\n  if (action.type === GET_SINGLE_TRAINING_BEGIN) {\r\n    return {\r\n      ...state,\r\n      single_training_loading: true,\r\n      single_training_error: false,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLE_TRAINING_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      single_training_loading: false,\r\n      single_training: action.payload,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLE_TRAINING_ERROR) {\r\n    return {\r\n      ...state,\r\n      single_training_loading: false,\r\n      single_training_error: true,\r\n    };\r\n  }\r\n\r\n  //single batch training\r\n  if (action.type === GET_SINGLEBATCH_TRAINING_BEGIN) {\r\n    return {\r\n      ...state,\r\n      singlebatch_training_loading: true,\r\n      singlebatch_training_error: false,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLEBATCH_TRAINING_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      singlebatch_training_loading: false,\r\n      singlebatch_training: action.payload,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLEBATCH_TRAINING_ERROR) {\r\n    return {\r\n      ...state,\r\n      singlebatch_training_loading: false,\r\n      singlebatch_training_error: true,\r\n    };\r\n  }\r\n\r\n  // return state;\r\n  throw new Error(`No Matching \"${action.type}\" - action type`);\r\n};\r\n\r\nexport default trainings_reducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
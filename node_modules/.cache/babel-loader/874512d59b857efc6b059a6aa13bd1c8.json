{"ast":null,"code":"import { SET_EDITLEAVEID, SET_ISLEAVEEDITING_ON, SET_ISLEAVEEDITING_OFF //SET_SINGLELEAVE,\n, GET_LEAVES_BEGIN, GET_LEAVES_SUCCESS, GET_LEAVES_ERROR, GET_SINGLE_LEAVE_BEGIN, GET_SINGLE_LEAVE_SUCCESS, GET_SINGLE_LEAVE_ERROR, GET_SINGLEBATCH_LEAVE_BEGIN, GET_SINGLEBATCH_LEAVE_SUCCESS, GET_SINGLEBATCH_LEAVE_ERROR, ADD_LEAVE_BEGIN, ADD_LEAVE_SUCCESS, ADD_LEAVE_ERROR, DELETE_LEAVE_BEGIN, DELETE_LEAVE_SUCCESS, DELETE_LEAVE_ERROR, UPDATE_LEAVE_BEGIN, UPDATE_LEAVE_SUCCESS, UPDATE_LEAVE_ERROR, RESET_SINGLE_LEAVE } from \"../actions\";\n\nconst leaves_reducer = (state, action) => {\n  // set leaves variables\n  if (action.type === SET_EDITLEAVEID) {\n    return { ...state,\n      editLeaveID: action.payload\n    };\n  }\n\n  if (action.type === SET_ISLEAVEEDITING_ON) {\n    return { ...state,\n      isLeaveEditing: true\n    };\n  }\n\n  if (action.type === SET_ISLEAVEEDITING_OFF) {\n    return { ...state,\n      isLeaveEditing: false\n    };\n  }\n\n  if (action.type === RESET_SINGLE_LEAVE) {\n    return { ...state,\n      single_leave: {}\n    };\n  } // get leaves\n\n\n  if (action.type === GET_LEAVES_BEGIN) {\n    return { ...state,\n      leaves_loading: true\n    };\n  }\n\n  if (action.type === GET_LEAVES_SUCCESS) {\n    return { ...state,\n      leaves_loading: false,\n      leaves: action.payload\n    };\n  }\n\n  if (action.type === GET_LEAVES_ERROR) {\n    return { ...state,\n      leaves_loading: false,\n      leaves_error: true\n    };\n  } // add leave\n\n\n  if (action.type === ADD_LEAVE_BEGIN) {\n    return { ...state,\n      add_leave_loading: true\n    };\n  }\n\n  if (action.type === ADD_LEAVE_SUCCESS) {\n    return { ...state,\n      add_leaves_loading: false,\n      leaves: action.payload\n    };\n  }\n\n  if (action.type === ADD_LEAVE_ERROR) {\n    return { ...state,\n      leaves_loading: false,\n      add_leave_error: true\n    };\n  } // update leave\n\n\n  if (action.type === UPDATE_LEAVE_BEGIN) {\n    return { ...state,\n      update_leave_loading: true\n    };\n  }\n\n  if (action.type === UPDATE_LEAVE_SUCCESS) {\n    return { ...state,\n      leaves_loading: false,\n      single_leave: action.payload\n    };\n  }\n\n  if (action.type === UPDATE_LEAVE_ERROR) {\n    return { ...state,\n      update_leave_loading: false,\n      update_leave_error: true\n    };\n  } // delete leave\n\n\n  if (action.type === DELETE_LEAVE_BEGIN) {\n    return { ...state,\n      delete_leave_loading: true,\n      delete_leave_error: false\n    };\n  }\n\n  if (action.type === DELETE_LEAVE_SUCCESS) {\n    return { ...state,\n      delete_leave_loading: false,\n      delete_leave_error: false\n    };\n  }\n\n  if (action.type === DELETE_LEAVE_ERROR) {\n    return { ...state,\n      delete_leave_loading: false,\n      delete_leave_error: true\n    };\n  } //single leave\n\n\n  if (action.type === GET_SINGLE_LEAVE_BEGIN) {\n    return { ...state,\n      single_leave_loading: true,\n      single_leave_error: false\n    };\n  }\n\n  if (action.type === GET_SINGLE_LEAVE_SUCCESS) {\n    return { ...state,\n      single_leave_loading: false,\n      single_leave: action.payload\n    };\n  }\n\n  if (action.type === GET_SINGLE_LEAVE_ERROR) {\n    return { ...state,\n      single_leave_loading: false,\n      single_leave_error: true\n    };\n  } //single batch leave\n\n\n  if (action.type === GET_SINGLEBATCH_LEAVE_BEGIN) {\n    return { ...state,\n      singlebatch_leave_loading: true,\n      singlebatch_leave_error: false\n    };\n  }\n\n  if (action.type === GET_SINGLEBATCH_LEAVE_SUCCESS) {\n    return { ...state,\n      singlebatch_leave_loading: false,\n      singlebatch_leave: action.payload\n    };\n  }\n\n  if (action.type === GET_SINGLEBATCH_LEAVE_ERROR) {\n    return { ...state,\n      singlebatch_leave_loading: false,\n      singlebatch_leave_error: true\n    };\n  } // return state;\n\n\n  throw new Error(`No Matching \"${action.type}\" - action type`);\n};\n\nexport default leaves_reducer;","map":{"version":3,"sources":["D:/react-myprojects/hrms-demo/src/reducers/leaves_reducer.js"],"names":["SET_EDITLEAVEID","SET_ISLEAVEEDITING_ON","SET_ISLEAVEEDITING_OFF","GET_LEAVES_BEGIN","GET_LEAVES_SUCCESS","GET_LEAVES_ERROR","GET_SINGLE_LEAVE_BEGIN","GET_SINGLE_LEAVE_SUCCESS","GET_SINGLE_LEAVE_ERROR","GET_SINGLEBATCH_LEAVE_BEGIN","GET_SINGLEBATCH_LEAVE_SUCCESS","GET_SINGLEBATCH_LEAVE_ERROR","ADD_LEAVE_BEGIN","ADD_LEAVE_SUCCESS","ADD_LEAVE_ERROR","DELETE_LEAVE_BEGIN","DELETE_LEAVE_SUCCESS","DELETE_LEAVE_ERROR","UPDATE_LEAVE_BEGIN","UPDATE_LEAVE_SUCCESS","UPDATE_LEAVE_ERROR","RESET_SINGLE_LEAVE","leaves_reducer","state","action","type","editLeaveID","payload","isLeaveEditing","single_leave","leaves_loading","leaves","leaves_error","add_leave_loading","add_leaves_loading","add_leave_error","update_leave_loading","update_leave_error","delete_leave_loading","delete_leave_error","single_leave_loading","single_leave_error","singlebatch_leave_loading","singlebatch_leave_error","singlebatch_leave","Error"],"mappings":"AAAA,SACEA,eADF,EAEEC,qBAFF,EAGEC,sBAHF,CAIE;AAJF,EAKEC,gBALF,EAMEC,kBANF,EAOEC,gBAPF,EAQEC,sBARF,EASEC,wBATF,EAUEC,sBAVF,EAWEC,2BAXF,EAYEC,6BAZF,EAaEC,2BAbF,EAcEC,eAdF,EAeEC,iBAfF,EAgBEC,eAhBF,EAiBEC,kBAjBF,EAkBEC,oBAlBF,EAmBEC,kBAnBF,EAoBEC,kBApBF,EAqBEC,oBArBF,EAsBEC,kBAtBF,EAuBEC,kBAvBF,QAwBO,YAxBP;;AA0BA,MAAMC,cAAc,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACxC;AACA,MAAIA,MAAM,CAACC,IAAP,KAAgBzB,eAApB,EAAqC;AACnC,WAAO,EAAE,GAAGuB,KAAL;AAAYG,MAAAA,WAAW,EAAEF,MAAM,CAACG;AAAhC,KAAP;AACD;;AAED,MAAIH,MAAM,CAACC,IAAP,KAAgBxB,qBAApB,EAA2C;AACzC,WAAO,EAAE,GAAGsB,KAAL;AAAYK,MAAAA,cAAc,EAAE;AAA5B,KAAP;AACD;;AACD,MAAIJ,MAAM,CAACC,IAAP,KAAgBvB,sBAApB,EAA4C;AAC1C,WAAO,EAAE,GAAGqB,KAAL;AAAYK,MAAAA,cAAc,EAAE;AAA5B,KAAP;AACD;;AACD,MAAIJ,MAAM,CAACC,IAAP,KAAgBJ,kBAApB,EAAwC;AACtC,WAAO,EAAE,GAAGE,KAAL;AAAYM,MAAAA,YAAY,EAAE;AAA1B,KAAP;AACD,GAduC,CAexC;;;AACA,MAAIL,MAAM,CAACC,IAAP,KAAgBtB,gBAApB,EAAsC;AACpC,WAAO,EAAE,GAAGoB,KAAL;AAAYO,MAAAA,cAAc,EAAE;AAA5B,KAAP;AACD;;AACD,MAAIN,MAAM,CAACC,IAAP,KAAgBrB,kBAApB,EAAwC;AACtC,WAAO,EAAE,GAAGmB,KAAL;AAAYO,MAAAA,cAAc,EAAE,KAA5B;AAAmCC,MAAAA,MAAM,EAAEP,MAAM,CAACG;AAAlD,KAAP;AACD;;AACD,MAAIH,MAAM,CAACC,IAAP,KAAgBpB,gBAApB,EAAsC;AACpC,WAAO,EAAE,GAAGkB,KAAL;AAAYO,MAAAA,cAAc,EAAE,KAA5B;AAAmCE,MAAAA,YAAY,EAAE;AAAjD,KAAP;AACD,GAxBuC,CA0BxC;;;AACA,MAAIR,MAAM,CAACC,IAAP,KAAgBb,eAApB,EAAqC;AACnC,WAAO,EAAE,GAAGW,KAAL;AAAYU,MAAAA,iBAAiB,EAAE;AAA/B,KAAP;AACD;;AACD,MAAIT,MAAM,CAACC,IAAP,KAAgBZ,iBAApB,EAAuC;AACrC,WAAO,EACL,GAAGU,KADE;AAELW,MAAAA,kBAAkB,EAAE,KAFf;AAGLH,MAAAA,MAAM,EAAEP,MAAM,CAACG;AAHV,KAAP;AAKD;;AACD,MAAIH,MAAM,CAACC,IAAP,KAAgBX,eAApB,EAAqC;AACnC,WAAO,EAAE,GAAGS,KAAL;AAAYO,MAAAA,cAAc,EAAE,KAA5B;AAAmCK,MAAAA,eAAe,EAAE;AAApD,KAAP;AACD,GAvCuC,CAwCxC;;;AACA,MAAIX,MAAM,CAACC,IAAP,KAAgBP,kBAApB,EAAwC;AACtC,WAAO,EAAE,GAAGK,KAAL;AAAYa,MAAAA,oBAAoB,EAAE;AAAlC,KAAP;AACD;;AACD,MAAIZ,MAAM,CAACC,IAAP,KAAgBN,oBAApB,EAA0C;AACxC,WAAO,EACL,GAAGI,KADE;AAELO,MAAAA,cAAc,EAAE,KAFX;AAGLD,MAAAA,YAAY,EAAEL,MAAM,CAACG;AAHhB,KAAP;AAKD;;AACD,MAAIH,MAAM,CAACC,IAAP,KAAgBL,kBAApB,EAAwC;AACtC,WAAO,EACL,GAAGG,KADE;AAELa,MAAAA,oBAAoB,EAAE,KAFjB;AAGLC,MAAAA,kBAAkB,EAAE;AAHf,KAAP;AAKD,GAzDuC,CA2DxC;;;AACA,MAAIb,MAAM,CAACC,IAAP,KAAgBV,kBAApB,EAAwC;AACtC,WAAO,EACL,GAAGQ,KADE;AAELe,MAAAA,oBAAoB,EAAE,IAFjB;AAGLC,MAAAA,kBAAkB,EAAE;AAHf,KAAP;AAKD;;AAED,MAAIf,MAAM,CAACC,IAAP,KAAgBT,oBAApB,EAA0C;AACxC,WAAO,EACL,GAAGO,KADE;AAELe,MAAAA,oBAAoB,EAAE,KAFjB;AAGLC,MAAAA,kBAAkB,EAAE;AAHf,KAAP;AAKD;;AACD,MAAIf,MAAM,CAACC,IAAP,KAAgBR,kBAApB,EAAwC;AACtC,WAAO,EACL,GAAGM,KADE;AAELe,MAAAA,oBAAoB,EAAE,KAFjB;AAGLC,MAAAA,kBAAkB,EAAE;AAHf,KAAP;AAKD,GAjFuC,CAmFxC;;;AACA,MAAIf,MAAM,CAACC,IAAP,KAAgBnB,sBAApB,EAA4C;AAC1C,WAAO,EACL,GAAGiB,KADE;AAELiB,MAAAA,oBAAoB,EAAE,IAFjB;AAGLC,MAAAA,kBAAkB,EAAE;AAHf,KAAP;AAKD;;AACD,MAAIjB,MAAM,CAACC,IAAP,KAAgBlB,wBAApB,EAA8C;AAC5C,WAAO,EACL,GAAGgB,KADE;AAELiB,MAAAA,oBAAoB,EAAE,KAFjB;AAGLX,MAAAA,YAAY,EAAEL,MAAM,CAACG;AAHhB,KAAP;AAKD;;AACD,MAAIH,MAAM,CAACC,IAAP,KAAgBjB,sBAApB,EAA4C;AAC1C,WAAO,EACL,GAAGe,KADE;AAELiB,MAAAA,oBAAoB,EAAE,KAFjB;AAGLC,MAAAA,kBAAkB,EAAE;AAHf,KAAP;AAKD,GAxGuC,CA0GxC;;;AACA,MAAIjB,MAAM,CAACC,IAAP,KAAgBhB,2BAApB,EAAiD;AAC/C,WAAO,EACL,GAAGc,KADE;AAELmB,MAAAA,yBAAyB,EAAE,IAFtB;AAGLC,MAAAA,uBAAuB,EAAE;AAHpB,KAAP;AAKD;;AACD,MAAInB,MAAM,CAACC,IAAP,KAAgBf,6BAApB,EAAmD;AACjD,WAAO,EACL,GAAGa,KADE;AAELmB,MAAAA,yBAAyB,EAAE,KAFtB;AAGLE,MAAAA,iBAAiB,EAAEpB,MAAM,CAACG;AAHrB,KAAP;AAKD;;AACD,MAAIH,MAAM,CAACC,IAAP,KAAgBd,2BAApB,EAAiD;AAC/C,WAAO,EACL,GAAGY,KADE;AAELmB,MAAAA,yBAAyB,EAAE,KAFtB;AAGLC,MAAAA,uBAAuB,EAAE;AAHpB,KAAP;AAKD,GA/HuC,CAiIxC;;;AACA,QAAM,IAAIE,KAAJ,CAAW,gBAAerB,MAAM,CAACC,IAAK,iBAAtC,CAAN;AACD,CAnID;;AAqIA,eAAeH,cAAf","sourcesContent":["import {\r\n  SET_EDITLEAVEID,\r\n  SET_ISLEAVEEDITING_ON,\r\n  SET_ISLEAVEEDITING_OFF,\r\n  //SET_SINGLELEAVE,\r\n  GET_LEAVES_BEGIN,\r\n  GET_LEAVES_SUCCESS,\r\n  GET_LEAVES_ERROR,\r\n  GET_SINGLE_LEAVE_BEGIN,\r\n  GET_SINGLE_LEAVE_SUCCESS,\r\n  GET_SINGLE_LEAVE_ERROR,\r\n  GET_SINGLEBATCH_LEAVE_BEGIN,\r\n  GET_SINGLEBATCH_LEAVE_SUCCESS,\r\n  GET_SINGLEBATCH_LEAVE_ERROR,\r\n  ADD_LEAVE_BEGIN,\r\n  ADD_LEAVE_SUCCESS,\r\n  ADD_LEAVE_ERROR,\r\n  DELETE_LEAVE_BEGIN,\r\n  DELETE_LEAVE_SUCCESS,\r\n  DELETE_LEAVE_ERROR,\r\n  UPDATE_LEAVE_BEGIN,\r\n  UPDATE_LEAVE_SUCCESS,\r\n  UPDATE_LEAVE_ERROR,\r\n  RESET_SINGLE_LEAVE,\r\n} from \"../actions\";\r\n\r\nconst leaves_reducer = (state, action) => {\r\n  // set leaves variables\r\n  if (action.type === SET_EDITLEAVEID) {\r\n    return { ...state, editLeaveID: action.payload };\r\n  }\r\n\r\n  if (action.type === SET_ISLEAVEEDITING_ON) {\r\n    return { ...state, isLeaveEditing: true };\r\n  }\r\n  if (action.type === SET_ISLEAVEEDITING_OFF) {\r\n    return { ...state, isLeaveEditing: false };\r\n  }\r\n  if (action.type === RESET_SINGLE_LEAVE) {\r\n    return { ...state, single_leave: {} };\r\n  }\r\n  // get leaves\r\n  if (action.type === GET_LEAVES_BEGIN) {\r\n    return { ...state, leaves_loading: true };\r\n  }\r\n  if (action.type === GET_LEAVES_SUCCESS) {\r\n    return { ...state, leaves_loading: false, leaves: action.payload };\r\n  }\r\n  if (action.type === GET_LEAVES_ERROR) {\r\n    return { ...state, leaves_loading: false, leaves_error: true };\r\n  }\r\n\r\n  // add leave\r\n  if (action.type === ADD_LEAVE_BEGIN) {\r\n    return { ...state, add_leave_loading: true };\r\n  }\r\n  if (action.type === ADD_LEAVE_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      add_leaves_loading: false,\r\n      leaves: action.payload,\r\n    };\r\n  }\r\n  if (action.type === ADD_LEAVE_ERROR) {\r\n    return { ...state, leaves_loading: false, add_leave_error: true };\r\n  }\r\n  // update leave\r\n  if (action.type === UPDATE_LEAVE_BEGIN) {\r\n    return { ...state, update_leave_loading: true };\r\n  }\r\n  if (action.type === UPDATE_LEAVE_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      leaves_loading: false,\r\n      single_leave: action.payload,\r\n    };\r\n  }\r\n  if (action.type === UPDATE_LEAVE_ERROR) {\r\n    return {\r\n      ...state,\r\n      update_leave_loading: false,\r\n      update_leave_error: true,\r\n    };\r\n  }\r\n\r\n  // delete leave\r\n  if (action.type === DELETE_LEAVE_BEGIN) {\r\n    return {\r\n      ...state,\r\n      delete_leave_loading: true,\r\n      delete_leave_error: false,\r\n    };\r\n  }\r\n\r\n  if (action.type === DELETE_LEAVE_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      delete_leave_loading: false,\r\n      delete_leave_error: false,\r\n    };\r\n  }\r\n  if (action.type === DELETE_LEAVE_ERROR) {\r\n    return {\r\n      ...state,\r\n      delete_leave_loading: false,\r\n      delete_leave_error: true,\r\n    };\r\n  }\r\n\r\n  //single leave\r\n  if (action.type === GET_SINGLE_LEAVE_BEGIN) {\r\n    return {\r\n      ...state,\r\n      single_leave_loading: true,\r\n      single_leave_error: false,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLE_LEAVE_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      single_leave_loading: false,\r\n      single_leave: action.payload,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLE_LEAVE_ERROR) {\r\n    return {\r\n      ...state,\r\n      single_leave_loading: false,\r\n      single_leave_error: true,\r\n    };\r\n  }\r\n\r\n  //single batch leave\r\n  if (action.type === GET_SINGLEBATCH_LEAVE_BEGIN) {\r\n    return {\r\n      ...state,\r\n      singlebatch_leave_loading: true,\r\n      singlebatch_leave_error: false,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLEBATCH_LEAVE_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      singlebatch_leave_loading: false,\r\n      singlebatch_leave: action.payload,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLEBATCH_LEAVE_ERROR) {\r\n    return {\r\n      ...state,\r\n      singlebatch_leave_loading: false,\r\n      singlebatch_leave_error: true,\r\n    };\r\n  }\r\n\r\n  // return state;\r\n  throw new Error(`No Matching \"${action.type}\" - action type`);\r\n};\r\n\r\nexport default leaves_reducer;\r\n"]},"metadata":{},"sourceType":"module"}
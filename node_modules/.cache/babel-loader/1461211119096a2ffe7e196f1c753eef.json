{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-demo\\\\src\\\\components\\\\EmpExperiences.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useMemo } from \"react\";\nimport MaterialTable, { MTableToolbar } from \"material-table\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { TextField } from \"@material-ui/core\";\nimport { useEmployeesContext } from \"../context/employees_context\";\nimport { useTablesContext } from \"../context/tables_context\";\nimport { useExperiences } from \"./experiences/useExperiences\";\nimport { useUpdateExperiences } from \"./experiences/useUpdateExperiences\";\nimport { useAddExperiences } from \"./experiences/useAddExperiences\";\nimport { useDeleteExperiences } from \"./experiences/useDeleteExperiences\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Emp_Experiences({\n  experiencedata,\n  setExperiencedata,\n  handleDialogClose\n}) {\n  _s();\n\n  const classes = useStyles();\n  const {\n    experiences,\n    setExperienceId\n  } = useExperiences();\n  const updateExperiences = useUpdateExperiences();\n  const addExperiences = useAddExperiences();\n  const deleteExperiences = useDeleteExperiences();\n  const {\n    editEmployeeID\n  } = useEmployeesContext();\n  const columns = useMemo(() => [{\n    title: \"Company\",\n    field: \"company\"\n  }, {\n    title: \"Location\",\n    field: \"location\"\n  }, {\n    title: \"Position\",\n    field: \"position\"\n  }, {\n    title: \"From Date\",\n    field: \"from_date\",\n    type: \"date\",\n    editComponent: props => /*#__PURE__*/_jsxDEV(TextField, {\n      defaultValue: props.value || new Date(),\n      onChange: e => props.onChange(e.target.value),\n      type: \"date\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)\n  }, {\n    title: \"To Date\",\n    field: \"to_date\",\n    type: \"date\",\n    editComponent: props => /*#__PURE__*/_jsxDEV(TextField, {\n      defaultValue: props.value || new Date(),\n      onChange: e => props.onChange(e.target.value),\n      type: \"date\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)\n  }, {\n    title: \"Remark\",\n    field: \"remark\"\n  }], []);\n  useEffect(() => {\n    setExperienceId(editEmployeeID);\n  }, []);\n\n  const update_Experience = data => {\n    const {\n      id,\n      rec_id,\n      tableData,\n      ...fields\n    } = data;\n    updateExperiences({\n      id,\n      ...fields\n    });\n  };\n\n  const add_Experience = data => {\n    addExperiences({ ...data,\n      empid: editEmployeeID\n    });\n  };\n\n  const delete_Experience = data => {\n    const {\n      id\n    } = data;\n    deleteExperiences(id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: \"100%\",\n        paddingTop: \"5px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n        columns: columns,\n        data: experiences,\n        title: \"Experience\",\n        editable: {\n          onRowAdd: newData => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              add_Experience(newData);\n              resolve();\n            }, 1000);\n          }),\n          onRowUpdate: (newData, oldData) => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              update_Experience(newData);\n              resolve();\n            }, 1000);\n          }),\n          onRowDelete: oldData => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              delete_Experience(oldData);\n              resolve();\n            }, 1000);\n          })\n        },\n        options: {\n          filtering: true,\n          headerStyle: {\n            backgroundColor: \"orange\",\n            color: \"primary\"\n          },\n          showTitle: true\n        },\n        components: {\n          Toolbar: props => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(MTableToolbar, { ...props\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Emp_Experiences, \"pF524HsCxlzAKb6PE1QfBP6HVAY=\", false, function () {\n  return [useStyles, useExperiences, useUpdateExperiences, useAddExperiences, useDeleteExperiences, useEmployeesContext];\n});\n\n_c = Emp_Experiences;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: 0\n  }\n}));\n\nvar _c;\n\n$RefreshReg$(_c, \"Emp_Experiences\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-demo/src/components/EmpExperiences.js"],"names":["React","useEffect","useMemo","MaterialTable","MTableToolbar","makeStyles","TextField","useEmployeesContext","useTablesContext","useExperiences","useUpdateExperiences","useAddExperiences","useDeleteExperiences","Emp_Experiences","experiencedata","setExperiencedata","handleDialogClose","classes","useStyles","experiences","setExperienceId","updateExperiences","addExperiences","deleteExperiences","editEmployeeID","columns","title","field","type","editComponent","props","value","Date","e","onChange","target","update_Experience","data","id","rec_id","tableData","fields","add_Experience","empid","delete_Experience","root","maxWidth","paddingTop","onRowAdd","newData","Promise","resolve","reject","setTimeout","onRowUpdate","oldData","onRowDelete","filtering","headerStyle","backgroundColor","color","showTitle","Toolbar","theme","padding"],"mappings":"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","sourcesContent":["import React, { useEffect, useMemo } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useTablesContext } from \"../context/tables_context\";\r\nimport { useExperiences } from \"./experiences/useExperiences\";\r\nimport { useUpdateExperiences } from \"./experiences/useUpdateExperiences\";\r\nimport { useAddExperiences } from \"./experiences/useAddExperiences\";\r\nimport { useDeleteExperiences } from \"./experiences/useDeleteExperiences\";\r\n\r\nexport default function Emp_Experiences({\r\n  experiencedata,\r\n  setExperiencedata,\r\n  handleDialogClose,\r\n}) {\r\n  const classes = useStyles();\r\n  const { experiences, setExperienceId } = useExperiences();\r\n  const updateExperiences = useUpdateExperiences();\r\n  const addExperiences = useAddExperiences();\r\n  const deleteExperiences = useDeleteExperiences();\r\n  const { editEmployeeID } = useEmployeesContext();\r\n\r\n  const columns = useMemo(() => [\r\n    {\r\n      title: \"Company\",\r\n      field: \"company\",\r\n    },\r\n    {\r\n      title: \"Location\",\r\n      field: \"location\",\r\n    },\r\n    {\r\n      title: \"Position\",\r\n      field: \"position\",\r\n    },\r\n    {\r\n      title: \"From Date\",\r\n      field: \"from_date\",\r\n      type: \"date\",\r\n      editComponent: (props) => (\r\n        <TextField\r\n          defaultValue={props.value || new Date()}\r\n          onChange={(e) => props.onChange(e.target.value)}\r\n          type=\"date\"\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      title: \"To Date\",\r\n      field: \"to_date\",\r\n      type: \"date\",\r\n      editComponent: (props) => (\r\n        <TextField\r\n          defaultValue={props.value || new Date()}\r\n          onChange={(e) => props.onChange(e.target.value)}\r\n          type=\"date\"\r\n        />\r\n      ),\r\n    },\r\n    { title: \"Remark\", field: \"remark\" },\r\n  ],[]);\r\n\r\n  useEffect(() => {\r\n    setExperienceId(editEmployeeID);\r\n  }, []);\r\n\r\n  const update_Experience = (data) => {\r\n    const { id, rec_id, tableData, ...fields } = data;\r\n    updateExperiences({ id, ...fields });\r\n  };\r\n\r\n  const add_Experience = (data) => {\r\n    addExperiences({ ...data, empid: editEmployeeID });\r\n  };\r\n\r\n  const delete_Experience = (data) => {\r\n    const { id } = data;\r\n    deleteExperiences(id);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={experiences}\r\n          title=\"Experience\"\r\n          editable={{\r\n            onRowAdd: (newData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  add_Experience(newData);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowUpdate: (newData, oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  update_Experience(newData);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowDelete: (oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  delete_Experience(oldData);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n          }}\r\n          options={{\r\n            filtering: true,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"primary\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n"]},"metadata":{},"sourceType":"module"}
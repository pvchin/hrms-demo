{"ast":null,"code":"import pdfMake from \"pdfmake/build/pdfmake\";\nimport vfsFonts from \"pdfmake/build/vfs_fonts\";\nimport { formatPrice } from \"../helpers/Utils\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport { payrunState } from \"./data/atomdata\";\nimport { usePayslipsContext } from \"../context/payslips_context\";\nimport { useEmployees } from \"./employees/useEmployees\";\n\nconst PrintPayslip = ({\n  data,\n  emp\n}) => {\n  console.log(\"payslip\", data);\n  console.log(\"payslip emp\", emp);\n  const subtitle = \"Payslips for the period \" + data.rowData.period;\n  const {\n    empno,\n    address,\n    phone\n  } = emp[0];\n  const {\n    name,\n    total_allowances,\n    total_deductions\n  } = data.rowData;\n  const totalEarnings = data.rowData.wages + data.rowData.total_allowances;\n  const totalDeductions = data.rowData.tap_amount + data.rowData.scp_amount + data.rowData.total_deductions;\n  const earningsdesp = [\"Wages\", data.rowData.allows_type1, data.rowData.allows_type2, data.rowData.allows_type3, data.rowData.allows_type4, data.rowData.allows_type5, data.rowData.allows_type6, data.rowData.allows_type7, data.rowData.allows_type8];\n  const earningsamt = [formatPrice(data.rowData.wages), formatPrice(data.rowData.allows_type1amt), formatPrice(data.rowData.allows_type2amt), formatPrice(data.rowData.allows_type3amt), formatPrice(data.rowData.allows_type4amt), formatPrice(data.rowData.allows_type5amt), formatPrice(data.rowData.allows_type6amt), formatPrice(data.rowData.allows_type7amt), formatPrice(data.rowData.allows_type8amt)];\n  const deductionsdesp = [\"TAP Amount\", \"SCP Amount\", data.rowData.deducts_type1, data.rowData.deducts_type2, data.rowData.deducts_type3, data.rowData.deducts_type4, data.rowData.deducts_type5, data.rowData.deducts_type6, data.rowData.deducts_type7, data.rowData.deducts_type8];\n  const deductionsamt = [formatPrice(parseInt(data.rowData.tap_amount, 10)), formatPrice(parseInt(data.rowData.scp_amount, 10)), formatPrice(data.rowData.deducts_type1amt), formatPrice(data.rowData.deducts_type2amt), formatPrice(data.rowData.deducts_type3amt), formatPrice(data.rowData.deducts_type4amt), formatPrice(data.rowData.deducts_type5amt), formatPrice(data.rowData.deducts_type6amt), formatPrice(data.rowData.deducts_type7amt), formatPrice(data.rowData.deducts_type8amt)];\n  const {\n    vfs\n  } = vfsFonts.pdfMake;\n  pdfMake.vfs = vfs;\n  const documentDefinition = {\n    pageSize: \"A4\",\n    pageOrientation: \"landscape\",\n    content: [// {\n    //   image: \"logo\",\n    //   width: 200,\n    // },\n    {\n      text: \"AppSmith Sutera Sdn Bhd\",\n      style: \"header\"\n    }, {\n      text: subtitle + \"\\n\\n\",\n      style: \"subheader\"\n    }, // {\n    //   style: \"tableExample\",\n    //   table: {\n    //     body: [\n    //     { text: \"Emp No: \" + empno + \"\\n\", style: \"text\" },\n    //       { text: \"Name: \" + name + \"\\n\", style: \"text\" },\n    //       { text: \"Addess: \" + address + \"\\n\", style: \"text\" },\n    //     { text: \"Phone: \" + phone + \"\\n\", style: \"text\" },\n    //     ],\n    //   },\n    // },\n    // {\n    //   columns: [\n    //     { width: 80, text: \"Emp No\", style: \"text\" },\n    //     { width: \"auto\",text: empno + \"\\n\", style: \"Text\"}\n    //   ]\n    // },\n    {\n      text: [{\n        text: \"Emp No : \" + empno + \"\\n\",\n        style: \"text\"\n      }, {\n        text: \"Name   : \" + name + \"\\n\",\n        style: \"text\"\n      }, {\n        text: \"Addess : \" + address + \"\\n\",\n        style: \"text\"\n      }, {\n        text: \"Phone  : \" + phone + \"\\n\\n\",\n        style: \"text\"\n      }]\n    }, {\n      style: \"tableExample\",\n      table: {\n        widths: [200, 80, 200, 80],\n        body: [[{\n          alignment: \"left\",\n          text: \"Earnings\"\n        }, {\n          alignment: \"right\",\n          text: \"Amount\"\n        }, {\n          alignment: \"left\",\n          text: \"Deductions\"\n        }, {\n          alignment: \"right\",\n          text: \"Amount\"\n        }], [{\n          stack: [{\n            type: \"none\",\n            fontSize: 12,\n            ul: earningsdesp\n          }]\n        }, {\n          stack: [{\n            type: \"none\",\n            fontSize: 12,\n            alignment: \"right\",\n            ul: earningsamt\n          }]\n        }, {\n          stack: [{\n            type: \"none\",\n            fontSize: 12,\n            ul: deductionsdesp\n          }]\n        }, {\n          stack: [{\n            type: \"none\",\n            fontSize: 12,\n            alignment: \"right\",\n            ul: deductionsamt\n          }]\n        }], [{\n          alignment: \"left\",\n          text: \"Total Earnings\"\n        }, {\n          alignment: \"right\",\n          text: formatPrice(totalEarnings)\n        }, {\n          alignment: \"left\",\n          text: \"Total Deductions\"\n        }, {\n          alignment: \"right\",\n          text: formatPrice(totalDeductions)\n        }], [{\n          alignment: \"left\",\n          text: \"\"\n        }, {\n          alignment: \"right\",\n          text: \"\"\n        }, {\n          alignment: \"left\",\n          text: \"NettPay\"\n        }, {\n          alignment: \"right\",\n          text: formatPrice(data.rowData.nett_pay)\n        }]]\n      }\n    } // {\n    //   style: \"tableExample\",\n    //   table: {\n    //     widths: [480, 80],\n    //     body: [\n    //       [\n    //         { alignment: \"left\", text: \"Nettpay\" },\n    //         { alignment: \"right\", text: \"Amount\" },\n    //       ],\n    //     ],\n    //   },\n    // },\n    ],\n    styles: {\n      header: {\n        fontSize: 18,\n        bold: true,\n        margin: [0, 0, 0, 10]\n      },\n      subheader: {\n        fontSize: 16,\n        bold: true,\n        margin: [0, 10, 0, 5]\n      },\n      text: {\n        fontSize: 12,\n        bold: false,\n        margin: [0, 10, 0, 5]\n      },\n      tableExample: {\n        margin: [0, 5, 0, 15]\n      },\n      tableOpacityExample: {\n        margin: [0, 5, 0, 15],\n        fillColor: \"blue\",\n        fillOpacity: 0.3\n      },\n      tableHeader: {\n        bold: true,\n        fontSize: 13,\n        color: \"black\"\n      }\n    },\n    defaultStyle: {// alignment: 'justify'\n    }\n  };\n  pdfMake.createPdf(documentDefinition).open();\n};\n\n_c = PrintPayslip;\nexport default PrintPayslip;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrintPayslip\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-demo/src/components/PrintPayslip.js"],"names":["pdfMake","vfsFonts","formatPrice","useRecoilState","useRecoilValue","payrunState","usePayslipsContext","useEmployees","PrintPayslip","data","emp","console","log","subtitle","rowData","period","empno","address","phone","name","total_allowances","total_deductions","totalEarnings","wages","totalDeductions","tap_amount","scp_amount","earningsdesp","allows_type1","allows_type2","allows_type3","allows_type4","allows_type5","allows_type6","allows_type7","allows_type8","earningsamt","allows_type1amt","allows_type2amt","allows_type3amt","allows_type4amt","allows_type5amt","allows_type6amt","allows_type7amt","allows_type8amt","deductionsdesp","deducts_type1","deducts_type2","deducts_type3","deducts_type4","deducts_type5","deducts_type6","deducts_type7","deducts_type8","deductionsamt","parseInt","deducts_type1amt","deducts_type2amt","deducts_type3amt","deducts_type4amt","deducts_type5amt","deducts_type6amt","deducts_type7amt","deducts_type8amt","vfs","documentDefinition","pageSize","pageOrientation","content","text","style","table","widths","body","alignment","stack","type","fontSize","ul","nett_pay","styles","header","bold","margin","subheader","tableExample","tableOpacityExample","fillColor","fillOpacity","tableHeader","color","defaultStyle","createPdf","open"],"mappings":"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","sourcesContent":["import pdfMake from \"pdfmake/build/pdfmake\";\r\nimport vfsFonts from \"pdfmake/build/vfs_fonts\";\r\nimport { formatPrice } from \"../helpers/Utils\";\r\nimport { useRecoilState, useRecoilValue } from \"recoil\";\r\nimport { payrunState } from \"./data/atomdata\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\nimport { useEmployees } from \"./employees/useEmployees\";\r\n\r\nconst PrintPayslip = ({ data, emp }) => {\r\n  console.log(\"payslip\", data);\r\n  console.log(\"payslip emp\", emp);\r\n  const subtitle = \"Payslips for the period \" + data.rowData.period;\r\n  const { empno, address, phone } = emp[0];\r\n  const { name, total_allowances, total_deductions } = data.rowData;\r\n  const totalEarnings = data.rowData.wages + data.rowData.total_allowances;\r\n  const totalDeductions =\r\n    data.rowData.tap_amount +\r\n    data.rowData.scp_amount +\r\n    data.rowData.total_deductions;\r\n  const earningsdesp = [\r\n    \"Wages\",\r\n    data.rowData.allows_type1,\r\n    data.rowData.allows_type2,\r\n    data.rowData.allows_type3,\r\n    data.rowData.allows_type4,\r\n    data.rowData.allows_type5,\r\n    data.rowData.allows_type6,\r\n    data.rowData.allows_type7,\r\n    data.rowData.allows_type8,\r\n  ];\r\n  const earningsamt = [\r\n    formatPrice(data.rowData.wages),\r\n    formatPrice(data.rowData.allows_type1amt),\r\n    formatPrice(data.rowData.allows_type2amt),\r\n    formatPrice(data.rowData.allows_type3amt),\r\n    formatPrice(data.rowData.allows_type4amt),\r\n    formatPrice(data.rowData.allows_type5amt),\r\n    formatPrice(data.rowData.allows_type6amt),\r\n    formatPrice(data.rowData.allows_type7amt),\r\n    formatPrice(data.rowData.allows_type8amt),\r\n  ];\r\n  const deductionsdesp = [\r\n    \"TAP Amount\",\r\n    \"SCP Amount\",\r\n    data.rowData.deducts_type1,\r\n    data.rowData.deducts_type2,\r\n    data.rowData.deducts_type3,\r\n    data.rowData.deducts_type4,\r\n    data.rowData.deducts_type5,\r\n    data.rowData.deducts_type6,\r\n    data.rowData.deducts_type7,\r\n    data.rowData.deducts_type8,\r\n  ];\r\n  const deductionsamt = [\r\n    formatPrice(parseInt(data.rowData.tap_amount, 10)),\r\n    formatPrice(parseInt(data.rowData.scp_amount, 10)),\r\n    formatPrice(data.rowData.deducts_type1amt),\r\n    formatPrice(data.rowData.deducts_type2amt),\r\n    formatPrice(data.rowData.deducts_type3amt),\r\n    formatPrice(data.rowData.deducts_type4amt),\r\n    formatPrice(data.rowData.deducts_type5amt),\r\n    formatPrice(data.rowData.deducts_type6amt),\r\n    formatPrice(data.rowData.deducts_type7amt),\r\n    formatPrice(data.rowData.deducts_type8amt),\r\n  ];\r\n\r\n  const { vfs } = vfsFonts.pdfMake;\r\n  pdfMake.vfs = vfs;\r\n\r\n  const documentDefinition = {\r\n    pageSize: \"A4\",\r\n    pageOrientation: \"landscape\",\r\n    content: [\r\n      // {\r\n      //   image: \"logo\",\r\n      //   width: 200,\r\n      // },\r\n      { text: \"AppSmith Sutera Sdn Bhd\", style: \"header\" },\r\n      { text: subtitle + \"\\n\\n\", style: \"subheader\" },\r\n      // {\r\n      //   style: \"tableExample\",\r\n      //   table: {\r\n      //     body: [\r\n      //     { text: \"Emp No: \" + empno + \"\\n\", style: \"text\" },\r\n      //       { text: \"Name: \" + name + \"\\n\", style: \"text\" },\r\n      //       { text: \"Addess: \" + address + \"\\n\", style: \"text\" },\r\n      //     { text: \"Phone: \" + phone + \"\\n\", style: \"text\" },\r\n      //     ],\r\n      //   },\r\n      // },\r\n      // {\r\n      //   columns: [\r\n      //     { width: 80, text: \"Emp No\", style: \"text\" },\r\n      //     { width: \"auto\",text: empno + \"\\n\", style: \"Text\"}\r\n      //   ]\r\n      // },\r\n      {\r\n        text: [\r\n          { text: \"Emp No : \" + empno + \"\\n\", style: \"text\" },\r\n          { text: \"Name   : \" + name + \"\\n\", style: \"text\" },\r\n          { text: \"Addess : \" + address + \"\\n\", style: \"text\" },\r\n          { text: \"Phone  : \" + phone + \"\\n\\n\", style: \"text\" },\r\n        ],\r\n      },\r\n\r\n      {\r\n        style: \"tableExample\",\r\n        table: {\r\n          widths: [200, 80, 200, 80],\r\n          body: [\r\n            [\r\n              { alignment: \"left\", text: \"Earnings\" },\r\n              { alignment: \"right\", text: \"Amount\" },\r\n              { alignment: \"left\", text: \"Deductions\" },\r\n              { alignment: \"right\", text: \"Amount\" },\r\n            ],\r\n            [\r\n              {\r\n                stack: [\r\n                  {\r\n                    type: \"none\",\r\n                    fontSize: 12,\r\n                    ul: earningsdesp,\r\n                  },\r\n                ],\r\n              },\r\n              {\r\n                stack: [\r\n                  {\r\n                    type: \"none\",\r\n                    fontSize: 12,\r\n                    alignment: \"right\",\r\n                    ul: earningsamt,\r\n                  },\r\n                ],\r\n              },\r\n              {\r\n                stack: [\r\n                  {\r\n                    type: \"none\",\r\n                    fontSize: 12,\r\n                    ul: deductionsdesp,\r\n                  },\r\n                ],\r\n              },\r\n              {\r\n                stack: [\r\n                  {\r\n                    type: \"none\",\r\n                    fontSize: 12,\r\n                    alignment: \"right\",\r\n                    ul: deductionsamt,\r\n                  },\r\n                ],\r\n              },\r\n            ],\r\n            [\r\n              { alignment: \"left\", text: \"Total Earnings\" },\r\n              { alignment: \"right\", text: formatPrice(totalEarnings) },\r\n              { alignment: \"left\", text: \"Total Deductions\" },\r\n              { alignment: \"right\", text: formatPrice(totalDeductions) },\r\n            ],\r\n            [\r\n              { alignment: \"left\", text: \"\" },\r\n              { alignment: \"right\", text: \"\" },\r\n              { alignment: \"left\", text: \"NettPay\" },\r\n              { alignment: \"right\", text: formatPrice(data.rowData.nett_pay) },\r\n            ],\r\n          ],\r\n        },\r\n      },\r\n      // {\r\n      //   style: \"tableExample\",\r\n      //   table: {\r\n      //     widths: [480, 80],\r\n      //     body: [\r\n      //       [\r\n      //         { alignment: \"left\", text: \"Nettpay\" },\r\n      //         { alignment: \"right\", text: \"Amount\" },\r\n      //       ],\r\n      //     ],\r\n      //   },\r\n      // },\r\n    ],\r\n    styles: {\r\n      header: {\r\n        fontSize: 18,\r\n        bold: true,\r\n        margin: [0, 0, 0, 10],\r\n      },\r\n      subheader: {\r\n        fontSize: 16,\r\n        bold: true,\r\n        margin: [0, 10, 0, 5],\r\n      },\r\n      text: {\r\n        fontSize: 12,\r\n        bold: false,\r\n        margin: [0, 10, 0, 5],\r\n      },\r\n      tableExample: {\r\n        margin: [0, 5, 0, 15],\r\n      },\r\n      tableOpacityExample: {\r\n        margin: [0, 5, 0, 15],\r\n        fillColor: \"blue\",\r\n        fillOpacity: 0.3,\r\n      },\r\n      tableHeader: {\r\n        bold: true,\r\n        fontSize: 13,\r\n        color: \"black\",\r\n      },\r\n    },\r\n    defaultStyle: {\r\n      // alignment: 'justify'\r\n    },\r\n  };\r\n\r\n  pdfMake.createPdf(documentDefinition).open();\r\n};\r\n\r\nexport default PrintPayslip;\r\n"]},"metadata":{},"sourceType":"module"}
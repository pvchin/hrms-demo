{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-demo\\\\src\\\\components\\\\ExpenseForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Icon, TextField, Paper, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useRecoilState } from \"recoil\";\nimport * as emailjs from \"emailjs-com\";\nimport axios from \"axios\";\nimport currency from \"currency.js\";\nimport CurrencyTextField from \"@unicef/material-ui-currency-textfield\";\nimport { Box, Grid, GridItem, Heading } from \"@chakra-ui/react\";\nimport { loginLevelState } from \"./data/atomdata\";\nimport { useExpensesContext } from \"../context/expenses_context\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport { useCustomToast } from \"../helpers/useCustomToast\"; //import { useExpenses } from \"./expenses/useExpenses\";\n\nimport { useAddExpenses } from \"./expenses/useAddExpenses\";\nimport { useDeleteExpenses } from \"./expenses/useDeleteExpenses\";\nimport { useUpdateExpenses } from \"./expenses/useUpdateExpenses\";\nimport ImageUpload from \"../helpers/ImageUpload\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SERVICE_ID = process.env.REACT_APP_EMAILJS_SERVICEID;\nconst TEMPLATE_ID = \"template_1y8odlq\";\nconst USER_ID = process.env.REACT_APP_EMAILJS_USERID;\nconst UPLOADURL = \"https://api.cloudinary.com/v1_1/dlmzwvakr/image/upload\";\nconst DOWNLOADURL = \"https://res.cloudinary.com/v1_1/dlmzwvakr/image/upload\";\nconst UPLOADPRESET = \"appsmiths\"; // const initial_values = {\n//   name: \"\",\n//   date: \"\",\n//   purchased_date: \"\",\n//   purchased_from: \"\",\n//   description: \"\",\n//   remark: \"\",\n//   status: \"Pending\",\n//   amount: 0,\n//};\n\nconst ExpenseForm = ({\n  formdata,\n  setFormdata,\n  handleDialogClose\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const toast = useCustomToast(); //const { acceptedFiles, getRootProps, getInputProps } = useDropzone();\n  //const { expenses, filter, setFilter, setExpenseId } = useExpenses();\n\n  const updateExpenses = useUpdateExpenses();\n  const addExpenses = useAddExpenses();\n  const delExpenses = useDeleteExpenses();\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\n  const {\n    isExpenseEditing,\n    editExpenseID\n  } = useExpensesContext();\n  const [files, setFiles] = useState([]);\n  const [filename, setFilename] = useState(\"\");\n  const [newFile, setNewFile] = useState({});\n  const {\n    handleSubmit,\n    control,\n    setValue\n  } = useForm({\n    defaultValues: { ...formdata\n    }\n  });\n  console.log(\"formdata\", formdata);\n  console.log(\"files\", files);\n\n  const onDrop = acceptedFiles => {\n    acceptedFiles.forEach(file => {\n      const formData = new FormData();\n      formData.append(\"file\", file);\n      formData.append(\"upload_preset\", UPLOADPRESET);\n      axios({\n        url: UPLOADURL,\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\"\n        },\n        data: formData\n      }).then(res => {\n        //console.log(\"res\", res.data);\n        // Object.assign(file, {\n        //   preview: res.data.url,\n        // });\n        setFiles(prev => prev = [...files, ...[{\n          name: res.data.original_filename,\n          preview: res.data.url\n        }]]);\n      }).catch(err => {\n        setNewFile({});\n        console.log(err);\n      }); // Object.assign(file, {\n      //   preview: URL.createObjectURL(file),\n      // });\n    }); //const allfiles = [...files, ...acceptedFiles];\n    //setFiles(allfiles);\n  };\n\n  const upLoad = () => {\n    const uploadURL = \"https://api.cloudinary.com/v1_1/dlmzwvakr/image/upload\";\n    const uploadPreset = \"appsmiths\";\n    files.forEach(file => {\n      const formData = new FormData();\n      formData.append(\"file\", file);\n      formData.append(\"upload_preset\", uploadPreset);\n      axios({\n        url: uploadURL,\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\"\n        },\n        data: formData\n      }).then(res => {\n        setFilename(prev => prev = res.data.public_id);\n        console.log(res.data.public_id); //console.log(\"filename\", filename);\n      }).catch(err => console.log(err));\n    });\n  };\n\n  const handleSentEmail = data => {\n    const {\n      date\n    } = data; //console.log(\"expense form\", loginLevel);\n\n    var emaildata = {\n      to_name: loginLevel.loginUser,\n      to_email: loginLevel.loginEmail,\n      message: `Your expenses claim application dated on ${date} has been successfully submitted for approval`,\n      cc_to: loginLevel.reporting_email\n    };\n    emailjs.send(SERVICE_ID, TEMPLATE_ID, emaildata, USER_ID).then(function (response) {\n      console.log(response.status, response.text);\n      toast({\n        title: `Email has sent successfully to ${emaildata.to_email}!`,\n        status: \"success\"\n      });\n    }, function (err) {\n      console.log(err);\n      toast({\n        title: `Email has fail to send to ${emaildata.to_email}!`,\n        status: \"warning\"\n      });\n    });\n  };\n\n  const onSubmit = (data, e) => {\n    e.preventDefault();\n    console.log(\"onSubmit\", isExpenseEditing);\n    let newData = { ...data,\n      attachment1_name: files.length >= 1 ? files[0].name : \"\",\n      attachment1_url: files.length >= 1 ? files[0].preview : \"\",\n      attachment2_name: files.length >= 2 ? files[1].name : \"\",\n      attachment2_url: files.length >= 2 ? files[1].preview : \"\",\n      attachment3_name: files.length >= 3 ? files[2].name : \"\",\n      attachment3_url: files.length >= 3 ? files[2].preview : \"\"\n    };\n\n    if (isExpenseEditing) {\n      updateExpenses({\n        id: editExpenseID,\n        ...newData\n      });\n    } else {\n      console.log(\"newData\", newData);\n      addExpenses({ ...newData,\n        empid: loginLevel.loginUserId,\n        name: loginLevel.loginUser\n      });\n      handleSentEmail(data);\n    }\n\n    handleDialogClose();\n  };\n\n  useEffect(() => {\n    if (isExpenseEditing) {\n      const data = [{\n        name: formdata.attachment1_name,\n        preview: formdata.attachment1_url\n      }, {\n        name: formdata.attachment2_name,\n        preview: formdata.attachment2_url\n      }, {\n        name: formdata.attachment3_name,\n        preview: formdata.attachment3_url\n      }];\n      console.log(\"data\", data);\n      setFiles(data);\n    } else {\n      setFiles([]);\n    }\n  }, []);\n  useEffect(() => {\n    setValue('attachment1_name', files.length >= 1 ? files[0].name : \"\");\n    setValue('attachment2_name', files.length >= 2 ? files[0].name : \"\");\n    setValue('attachment3_name', files.length >= 3 ? files[0].name : \"\");\n  }, [files]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      size: \"x1\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        component: \"h3\",\n        children: \"EXPENSES CLAIM FORM\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        component: \"p\",\n        children: \"Expense Claim Application\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          templateColumns: \"repeat(3, 1fr)\",\n          gap: 4,\n          children: [/*#__PURE__*/_jsxDEV(GridItem, {\n            colSpan: 1,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Controller, {\n                name: \"name\",\n                control: control,\n                defaultValue: loginLevel.loginUser,\n                render: ({\n                  field: {\n                    onChange,\n                    value\n                  },\n                  fieldState: {\n                    error\n                  }\n                }) => {\n                  return /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Name\",\n                    id: \"margin-normal1\",\n                    name: \"name\",\n                    defaultValue: loginLevel.loginUser,\n                    className: classes.textField,\n                    onChange: onChange,\n                    error: !!error,\n                    helperText: error ? error.message : null,\n                    InputProps: {\n                      readOnly: true\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 233,\n                    columnNumber: 23\n                  }, this);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Controller, {\n                name: \"date\",\n                control: control,\n                defaultValue: formdata.date,\n                render: ({\n                  field: {\n                    onChange,\n                    value\n                  },\n                  fieldState: {\n                    error\n                  }\n                }) => {\n                  return /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Date\",\n                    type: \"date\",\n                    id: \"margin-normal2\",\n                    name: \"formdata.date\",\n                    value: value,\n                    className: classes.textField,\n                    onChange: onChange,\n                    error: !!error,\n                    helperText: error ? error.message : null,\n                    InputLabelProps: {\n                      shrink: true\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 260,\n                    columnNumber: 23\n                  }, this);\n                },\n                rules: {\n                  required: \"From Date is required\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Controller, {\n                name: \"purchased_from\",\n                control: control,\n                defaultValue: formdata.purchased_from,\n                render: ({\n                  field: {\n                    onChange,\n                    value\n                  },\n                  fieldState: {\n                    error\n                  }\n                }) => {\n                  return /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Purchased From\",\n                    id: \"margin-normal3\",\n                    name: \"purchased_from\",\n                    defaultValue: formdata.purchased_from,\n                    className: classes.textField,\n                    onChange: onChange,\n                    error: !!error,\n                    helperText: error ? error.message : null\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 290,\n                    columnNumber: 23\n                  }, this);\n                } // rules={{ required: \"Reason is required\" }}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Controller, {\n                name: \"description\",\n                control: control,\n                defaultValue: formdata.description,\n                render: ({\n                  field: {\n                    onChange,\n                    value\n                  },\n                  fieldState: {\n                    error\n                  }\n                }) => {\n                  return /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Description\",\n                    id: \"margin-normal4\",\n                    name: \"description\",\n                    defaultValue: formdata.description,\n                    className: classes.textField,\n                    onChange: onChange,\n                    error: !!error,\n                    helperText: error ? error.message : null\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 315,\n                    columnNumber: 23\n                  }, this);\n                } // rules={{ required: \"Reason is required\" }}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Controller, {\n                name: \"amount\",\n                control: control,\n                defaultValue: formdata.amount,\n                render: ({\n                  field: {\n                    onChange,\n                    value\n                  },\n                  fieldState: {\n                    error\n                  }\n                }) => {\n                  return (\n                    /*#__PURE__*/\n                    // <TextField\n                    //   label=\"Amount\"\n                    //   type=\"number\"\n                    //   id=\"standard-number1\"\n                    //   name=\"amount\"\n                    //   defaultValue={formdata.amount}\n                    //   className={classes.textField}\n                    //   //onChange={onChange}\n                    //   onChange={(e) => {\n                    //     onChange(parseInt(e.target.value, 10));\n                    //   }}\n                    //   error={!!error}\n                    //   helperText={error ? error.message : null}\n                    // />\n                    _jsxDEV(CurrencyTextField, {\n                      label: \"Amount\",\n                      variant: \"standard\",\n                      value: formdata.amount,\n                      currencySymbol: \"$\",\n                      outputFormat: \"string\",\n                      decimalCharacter: \".\",\n                      digitGroupSeparator: \",\",\n                      decimalPlaces: \"2\",\n                      className: classes.textField,\n                      id: \"standard-amount\",\n                      name: \"amount\",\n                      style: {\n                        width: 100\n                      } //onChange={onChange}\n                      ,\n                      onChange: e => {\n                        onChange(parseFloat(currency(e.target.value), 10));\n                      },\n                      error: !!error,\n                      helperText: error ? error.message : null\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 354,\n                      columnNumber: 23\n                    }, this)\n                  );\n                } //rules={{ required: \"IC No required\" }}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Controller, {\n                name: \"remark\",\n                control: control,\n                defaultValue: formdata.remark,\n                render: ({\n                  field: {\n                    onChange,\n                    value\n                  },\n                  fieldState: {\n                    error\n                  }\n                }) => {\n                  return /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Remark\",\n                    id: \"margin-normal5\",\n                    name: \"remark\",\n                    defaultValue: formdata.remark,\n                    className: classes.textField,\n                    onChange: onChange,\n                    error: !!error,\n                    helperText: error ? error.message : null\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 389,\n                    columnNumber: 23\n                  }, this);\n                } // rules={{ required: \"Reason is required\" }}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 380,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Controller, {\n                name: \"status\",\n                control: control,\n                defaultValue: \"Pending\",\n                render: ({\n                  field: {\n                    onChange,\n                    value\n                  },\n                  fieldState: {\n                    error\n                  }\n                }) => {\n                  return /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Status\",\n                    id: \"margin-normal6\",\n                    name: \"status\",\n                    defaultValue: \"Pending\",\n                    className: classes.textField,\n                    onChange: onChange,\n                    error: !!error,\n                    helperText: error ? error.message : null,\n                    InputProps: {\n                      readOnly: true\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 414,\n                    columnNumber: 23\n                  }, this);\n                } //rules={{ required: \"Status is required\" }}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 405,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Controller, {\n                name: \"attachment1_name\",\n                control: control //defaultValue={files.length >= 1 ? files[0].name : \"\"}\n                ,\n                defaultValue: formdata.attachment1_name,\n                render: ({\n                  field: {\n                    onChange,\n                    value\n                  },\n                  fieldState: {\n                    error\n                  }\n                }) => {\n                  return /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Attachment #1\",\n                    id: \"margin-normal6\",\n                    name: \"attachment1_name\" //defaultValue={files.length >= 1 ? files[0].name : \"\"}\n                    ,\n                    defaultValue: formdata.attachment1_name,\n                    className: classes.textField,\n                    onChange: onChange,\n                    error: !!error,\n                    helperText: error ? error.message : null,\n                    InputProps: {\n                      readOnly: true\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 443,\n                    columnNumber: 23\n                  }, this);\n                } //rules={{ required: \"Status is required\" }}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 433,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Controller, {\n                name: \"attachment2_name\",\n                control: control //defaultValue={files.length >= 2 ? files[1].name : \"\"}\n                ,\n                defaultValue: formdata.attachment2_name,\n                render: ({\n                  field: {\n                    onChange,\n                    value\n                  },\n                  fieldState: {\n                    error\n                  }\n                }) => {\n                  return /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Attachment #2\",\n                    id: \"margin-normal6\",\n                    name: \"attachment2_name\" //defaultValue={files.length >= 2 ? files[1].name : \"\"}\n                    ,\n                    defaultValue: formdata.attachment2_name,\n                    className: classes.textField,\n                    onChange: onChange,\n                    error: !!error,\n                    helperText: error ? error.message : null,\n                    InputProps: {\n                      readOnly: true\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 473,\n                    columnNumber: 23\n                  }, this);\n                } //rules={{ required: \"Status is required\" }}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 463,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 462,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Controller, {\n                name: \"attachment3_name\",\n                control: control //defaultValue={files.length >= 3 ? files[2].name : \"\"}\n                ,\n                defaultValue: formdata.attachment3_name,\n                render: ({\n                  field: {\n                    onChange,\n                    value\n                  },\n                  fieldState: {\n                    error\n                  }\n                }) => {\n                  return /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Attachment #3\",\n                    id: \"margin-normal6\",\n                    name: \"attachment3_name\" //defaultValue={files.length >= 3 ? files[2].name : \"\"}\n                    ,\n                    defaultValue: formdata.attachment3_name,\n                    className: classes.textField,\n                    onChange: onChange,\n                    error: !!error,\n                    helperText: error ? error.message : null,\n                    InputProps: {\n                      readOnly: true\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 503,\n                    columnNumber: 23\n                  }, this);\n                } //rules={{ required: \"Status is required\" }}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 493,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 492,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                variant: \"contained\",\n                color: \"primary\",\n                className: classes.button //onClick={() => handleSubmit(onSubmit)()}\n                ,\n                children: [\"Save \", /*#__PURE__*/_jsxDEV(Icon, {\n                  className: classes.rightIcon,\n                  children: \"send\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 531,\n                  columnNumber: 24\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 524,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 523,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n            colSpan: 2,\n            children: /*#__PURE__*/_jsxDEV(ImageUpload, {\n              files: files,\n              setFiles: setFiles,\n              onDrop: onDrop\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 536,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 535,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 214,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ExpenseForm, \"y8F5PmCu9MbrIuIh44I3dKVLOZM=\", false, function () {\n  return [useStyles, useCustomToast, useUpdateExpenses, useAddExpenses, useDeleteExpenses, useRecoilState, useExpensesContext, useForm];\n});\n\n_c = ExpenseForm;\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(1)\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1)\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1)\n  },\n  iconSmall: {\n    fontSize: 20\n  },\n  root: {\n    padding: theme.spacing(3, 2)\n  },\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 400\n  }\n}));\nexport default ExpenseForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-demo/src/components/ExpenseForm.js"],"names":["React","useState","useEffect","Button","Icon","TextField","Paper","Typography","makeStyles","useRecoilState","emailjs","axios","currency","CurrencyTextField","Box","Grid","GridItem","Heading","loginLevelState","useExpensesContext","Controller","useForm","useCustomToast","useAddExpenses","useDeleteExpenses","useUpdateExpenses","ImageUpload","SERVICE_ID","process","env","REACT_APP_EMAILJS_SERVICEID","TEMPLATE_ID","USER_ID","REACT_APP_EMAILJS_USERID","UPLOADURL","DOWNLOADURL","UPLOADPRESET","ExpenseForm","formdata","setFormdata","handleDialogClose","classes","useStyles","toast","updateExpenses","addExpenses","delExpenses","loginLevel","setLoginLevel","isExpenseEditing","editExpenseID","files","setFiles","filename","setFilename","newFile","setNewFile","handleSubmit","control","setValue","defaultValues","console","log","onDrop","acceptedFiles","forEach","file","formData","FormData","append","url","method","headers","data","then","res","prev","name","original_filename","preview","catch","err","upLoad","uploadURL","uploadPreset","public_id","handleSentEmail","date","emaildata","to_name","loginUser","to_email","loginEmail","message","cc_to","reporting_email","send","response","status","text","title","onSubmit","e","preventDefault","newData","attachment1_name","length","attachment1_url","attachment2_name","attachment2_url","attachment3_name","attachment3_url","id","empid","loginUserId","field","onChange","value","fieldState","error","textField","readOnly","shrink","required","purchased_from","description","amount","width","parseFloat","target","remark","button","rightIcon","theme","margin","spacing","leftIcon","marginRight","marginLeft","iconSmall","fontSize","root","padding","container","display","flexWrap"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Button, Icon, TextField, Paper, Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport * as emailjs from \"emailjs-com\";\r\nimport axios from \"axios\";\r\nimport currency from \"currency.js\";\r\nimport CurrencyTextField from \"@unicef/material-ui-currency-textfield\";\r\nimport { Box, Grid, GridItem, Heading } from \"@chakra-ui/react\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport { useExpensesContext } from \"../context/expenses_context\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport { useCustomToast } from \"../helpers/useCustomToast\";\r\n//import { useExpenses } from \"./expenses/useExpenses\";\r\nimport { useAddExpenses } from \"./expenses/useAddExpenses\";\r\nimport { useDeleteExpenses } from \"./expenses/useDeleteExpenses\";\r\nimport { useUpdateExpenses } from \"./expenses/useUpdateExpenses\";\r\nimport ImageUpload from \"../helpers/ImageUpload\";\r\n\r\nconst SERVICE_ID = process.env.REACT_APP_EMAILJS_SERVICEID;\r\nconst TEMPLATE_ID = \"template_1y8odlq\";\r\nconst USER_ID = process.env.REACT_APP_EMAILJS_USERID;\r\nconst UPLOADURL = \"https://api.cloudinary.com/v1_1/dlmzwvakr/image/upload\";\r\nconst DOWNLOADURL = \"https://res.cloudinary.com/v1_1/dlmzwvakr/image/upload\";\r\nconst UPLOADPRESET = \"appsmiths\";\r\n// const initial_values = {\r\n//   name: \"\",\r\n//   date: \"\",\r\n//   purchased_date: \"\",\r\n//   purchased_from: \"\",\r\n//   description: \"\",\r\n//   remark: \"\",\r\n//   status: \"Pending\",\r\n//   amount: 0,\r\n//};\r\n\r\nconst ExpenseForm = ({ formdata, setFormdata, handleDialogClose }) => {\r\n  const classes = useStyles();\r\n  const toast = useCustomToast();\r\n  //const { acceptedFiles, getRootProps, getInputProps } = useDropzone();\r\n  //const { expenses, filter, setFilter, setExpenseId } = useExpenses();\r\n  const updateExpenses = useUpdateExpenses();\r\n  const addExpenses = useAddExpenses();\r\n  const delExpenses = useDeleteExpenses();\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const { isExpenseEditing, editExpenseID } = useExpensesContext();\r\n  const [files, setFiles] = useState([]);\r\n  const [filename, setFilename] = useState(\"\");\r\n  const [newFile, setNewFile] = useState({});\r\n\r\n  const { handleSubmit, control, setValue } = useForm({\r\n    defaultValues: {\r\n      ...formdata,\r\n    },\r\n  });\r\n\r\n  console.log(\"formdata\", formdata);\r\n  console.log(\"files\", files);\r\n\r\n  const onDrop = (acceptedFiles) => {\r\n    acceptedFiles.forEach((file) => {\r\n      const formData = new FormData();\r\n      formData.append(\"file\", file);\r\n      formData.append(\"upload_preset\", UPLOADPRESET);\r\n      axios({\r\n        url: UPLOADURL,\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n        },\r\n        data: formData,\r\n      })\r\n        .then((res) => {\r\n          //console.log(\"res\", res.data);\r\n          // Object.assign(file, {\r\n          //   preview: res.data.url,\r\n          // });\r\n          setFiles(\r\n            (prev) =>\r\n              (prev = [\r\n                ...files,\r\n                ...[\r\n                  { name: res.data.original_filename, preview: res.data.url },\r\n                ],\r\n              ])\r\n          );\r\n        })\r\n        .catch((err) => {\r\n          setNewFile({});\r\n          console.log(err);\r\n        });\r\n      // Object.assign(file, {\r\n      //   preview: URL.createObjectURL(file),\r\n      // });\r\n    });\r\n\r\n    //const allfiles = [...files, ...acceptedFiles];\r\n    //setFiles(allfiles);\r\n  };\r\n\r\n  const upLoad = () => {\r\n    const uploadURL = \"https://api.cloudinary.com/v1_1/dlmzwvakr/image/upload\";\r\n    const uploadPreset = \"appsmiths\";\r\n\r\n    files.forEach((file) => {\r\n      const formData = new FormData();\r\n      formData.append(\"file\", file);\r\n      formData.append(\"upload_preset\", uploadPreset);\r\n\r\n      axios({\r\n        url: uploadURL,\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n        },\r\n        data: formData,\r\n      })\r\n        .then((res) => {\r\n          setFilename((prev) => (prev = res.data.public_id));\r\n          console.log(res.data.public_id);\r\n          //console.log(\"filename\", filename);\r\n        })\r\n        .catch((err) => console.log(err));\r\n    });\r\n  };\r\n\r\n  const handleSentEmail = (data) => {\r\n    const { date } = data;\r\n    //console.log(\"expense form\", loginLevel);\r\n    var emaildata = {\r\n      to_name: loginLevel.loginUser,\r\n      to_email: loginLevel.loginEmail,\r\n      message: `Your expenses claim application dated on ${date} has been successfully submitted for approval`,\r\n      cc_to: loginLevel.reporting_email,\r\n    };\r\n\r\n    emailjs.send(SERVICE_ID, TEMPLATE_ID, emaildata, USER_ID).then(\r\n      function (response) {\r\n        console.log(response.status, response.text);\r\n        toast({\r\n          title: `Email has sent successfully to ${emaildata.to_email}!`,\r\n          status: \"success\",\r\n        });\r\n      },\r\n      function (err) {\r\n        console.log(err);\r\n        toast({\r\n          title: `Email has fail to send to ${emaildata.to_email}!`,\r\n          status: \"warning\",\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  const onSubmit = (data, e) => {\r\n    e.preventDefault();\r\n    console.log(\"onSubmit\", isExpenseEditing);\r\n    let newData = {\r\n      ...data,\r\n      attachment1_name: files.length >= 1 ? files[0].name : \"\",\r\n      attachment1_url: files.length >= 1 ? files[0].preview : \"\",\r\n      attachment2_name: files.length >= 2 ? files[1].name : \"\",\r\n      attachment2_url: files.length >= 2 ? files[1].preview : \"\",\r\n      attachment3_name: files.length >= 3 ? files[2].name : \"\",\r\n      attachment3_url: files.length >= 3 ? files[2].preview : \"\",\r\n    };\r\n\r\n    if (isExpenseEditing) {\r\n      updateExpenses({ id: editExpenseID, ...newData });\r\n    } else {\r\n      console.log(\"newData\", newData);\r\n      addExpenses({\r\n        ...newData,\r\n        empid: loginLevel.loginUserId,\r\n        name: loginLevel.loginUser,\r\n      });\r\n      handleSentEmail(data);\r\n    }\r\n\r\n    handleDialogClose();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isExpenseEditing) {\r\n      const data = [\r\n        {\r\n          name: formdata.attachment1_name,\r\n          preview: formdata.attachment1_url,\r\n        },\r\n        {\r\n          name: formdata.attachment2_name,\r\n          preview: formdata.attachment2_url,\r\n        },\r\n        {\r\n          name: formdata.attachment3_name,\r\n          preview: formdata.attachment3_url,\r\n        },\r\n      ];\r\n      console.log(\"data\", data);\r\n      setFiles(data);\r\n    } else {\r\n      setFiles([]);\r\n    }\r\n  }, []);\r\n\r\n\r\n  useEffect(() => {\r\n    setValue('attachment1_name', files.length >= 1 ? files[0].name : \"\")\r\n      setValue('attachment2_name', files.length >= 2 ? files[0].name : \"\")\r\n        setValue('attachment3_name', files.length >= 3 ? files[0].name : \"\")\r\n  },[files])\r\n\r\n  return (\r\n    <div>\r\n      <Box size=\"x1\">\r\n        <Typography variant=\"h5\" component=\"h3\">\r\n          EXPENSES CLAIM FORM\r\n        </Typography>\r\n        <Typography component=\"p\">Expense Claim Application</Typography>\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <Grid templateColumns=\"repeat(3, 1fr)\" gap={4}>\r\n            <GridItem colSpan={1}>\r\n              <div>\r\n                <Controller\r\n                  name=\"name\"\r\n                  control={control}\r\n                  defaultValue={loginLevel.loginUser}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Name\"\r\n                        id=\"margin-normal1\"\r\n                        name=\"name\"\r\n                        defaultValue={loginLevel.loginUser}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        InputProps={{\r\n                          readOnly: true,\r\n                        }}\r\n                      ></TextField>\r\n                    );\r\n                  }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"date\"\r\n                  control={control}\r\n                  defaultValue={formdata.date}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Date\"\r\n                        type=\"date\"\r\n                        id=\"margin-normal2\"\r\n                        name=\"formdata.date\"\r\n                        value={value}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                      />\r\n                    );\r\n                  }}\r\n                  rules={{ required: \"From Date is required\" }}\r\n                />\r\n              </div>\r\n\r\n              <div>\r\n                <Controller\r\n                  name=\"purchased_from\"\r\n                  control={control}\r\n                  defaultValue={formdata.purchased_from}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Purchased From\"\r\n                        id=\"margin-normal3\"\r\n                        name=\"purchased_from\"\r\n                        defaultValue={formdata.purchased_from}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  // rules={{ required: \"Reason is required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"description\"\r\n                  control={control}\r\n                  defaultValue={formdata.description}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Description\"\r\n                        id=\"margin-normal4\"\r\n                        name=\"description\"\r\n                        defaultValue={formdata.description}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  // rules={{ required: \"Reason is required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"amount\"\r\n                  control={control}\r\n                  defaultValue={formdata.amount}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      // <TextField\r\n                      //   label=\"Amount\"\r\n                      //   type=\"number\"\r\n                      //   id=\"standard-number1\"\r\n                      //   name=\"amount\"\r\n                      //   defaultValue={formdata.amount}\r\n                      //   className={classes.textField}\r\n                      //   //onChange={onChange}\r\n                      //   onChange={(e) => {\r\n                      //     onChange(parseInt(e.target.value, 10));\r\n                      //   }}\r\n                      //   error={!!error}\r\n                      //   helperText={error ? error.message : null}\r\n                      // />\r\n                      <CurrencyTextField\r\n                        label=\"Amount\"\r\n                        variant=\"standard\"\r\n                        value={formdata.amount}\r\n                        currencySymbol=\"$\"\r\n                        outputFormat=\"string\"\r\n                        decimalCharacter=\".\"\r\n                        digitGroupSeparator=\",\"\r\n                        decimalPlaces=\"2\"\r\n                        className={classes.textField}\r\n                        id=\"standard-amount\"\r\n                        name=\"amount\"\r\n                        style={{ width: 100 }}\r\n                        //onChange={onChange}\r\n                        onChange={(e) => {\r\n                          onChange(parseFloat(currency(e.target.value), 10));\r\n                        }}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"IC No required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"remark\"\r\n                  control={control}\r\n                  defaultValue={formdata.remark}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Remark\"\r\n                        id=\"margin-normal5\"\r\n                        name=\"remark\"\r\n                        defaultValue={formdata.remark}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  // rules={{ required: \"Reason is required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"status\"\r\n                  control={control}\r\n                  defaultValue=\"Pending\"\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Status\"\r\n                        id=\"margin-normal6\"\r\n                        name=\"status\"\r\n                        defaultValue=\"Pending\"\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        InputProps={{\r\n                          readOnly: true,\r\n                        }}\r\n                      ></TextField>\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Status is required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"attachment1_name\"\r\n                  control={control}\r\n                  //defaultValue={files.length >= 1 ? files[0].name : \"\"}\r\n                  defaultValue={formdata.attachment1_name}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Attachment #1\"\r\n                        id=\"margin-normal6\"\r\n                        name=\"attachment1_name\"\r\n                        //defaultValue={files.length >= 1 ? files[0].name : \"\"}\r\n                        defaultValue={formdata.attachment1_name}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        InputProps={{\r\n                          readOnly: true,\r\n                        }}\r\n                      ></TextField>\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Status is required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"attachment2_name\"\r\n                  control={control}\r\n                  //defaultValue={files.length >= 2 ? files[1].name : \"\"}\r\n                  defaultValue={formdata.attachment2_name}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Attachment #2\"\r\n                        id=\"margin-normal6\"\r\n                        name=\"attachment2_name\"\r\n                        //defaultValue={files.length >= 2 ? files[1].name : \"\"}\r\n                        defaultValue={formdata.attachment2_name}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        InputProps={{\r\n                          readOnly: true,\r\n                        }}\r\n                      ></TextField>\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Status is required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"attachment3_name\"\r\n                  control={control}\r\n                  //defaultValue={files.length >= 3 ? files[2].name : \"\"}\r\n                  defaultValue={formdata.attachment3_name}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Attachment #3\"\r\n                        id=\"margin-normal6\"\r\n                        name=\"attachment3_name\"\r\n                        //defaultValue={files.length >= 3 ? files[2].name : \"\"}\r\n                        defaultValue={formdata.attachment3_name}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        InputProps={{\r\n                          readOnly: true,\r\n                        }}\r\n                      ></TextField>\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Status is required\" }}\r\n                />\r\n              </div>\r\n\r\n              <div>\r\n                <Button\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  //onClick={() => handleSubmit(onSubmit)()}\r\n                >\r\n                  Save <Icon className={classes.rightIcon}>send</Icon>\r\n                </Button>\r\n              </div>\r\n            </GridItem>\r\n            <GridItem colSpan={2}>\r\n              <ImageUpload files={files} setFiles={setFiles} onDrop={onDrop} />\r\n            </GridItem>\r\n          </Grid>\r\n        </form>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  leftIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  iconSmall: {\r\n    fontSize: 20,\r\n  },\r\n  root: {\r\n    padding: theme.spacing(3, 2),\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 400,\r\n  },\r\n}));\r\n\r\nexport default ExpenseForm;\r\n"]},"metadata":{},"sourceType":"module"}
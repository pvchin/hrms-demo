{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-demo\\\\src\\\\helpers\\\\AlertDialogBox.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from \"react\";\nimport { AlertDialog, AlertDialogBody, AlertDialogFooter, AlertDialogHeader, AlertDialogContent, AlertDialogOverlay, Button } from \"@chakra-ui/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AlertDialogBox = ({\n  isOpen,\n  onClose,\n  onConfirm,\n  title,\n  children\n}) => {\n  _s();\n\n  const cancelRef = useRef(null);\n  return /*#__PURE__*/_jsxDEV(AlertDialog, {\n    isOpen: isOpen,\n    cancelRef: cancelRef,\n    onClose: onClose,\n    conConfirm: onConfirm,\n    blockScrollOnMount: true,\n    children: /*#__PURE__*/_jsxDEV(AlertDialogOverlay, {\n      children: /*#__PURE__*/_jsxDEV(AlertDialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(AlertDialogHeader, {\n          fontFamily: \"roboto\",\n          fontWeight: \"bold\",\n          fontSize: \"1.5rem\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AlertDialogBody, {\n          fontFamily: \"roboto\",\n          fontSize: \"1.25rem\",\n          children: children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AlertDialogFooter, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            w: \"100px\",\n            py: \"0.5rem\",\n            fontFamily: \"cursive\",\n            onClick: onClose,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            colorScheme: \"red\",\n            py: \"0.5rem\",\n            w: \"100px\",\n            ml: 3,\n            fontFamily: \"cursive\",\n            onClick: () => {\n              onClose();\n              onConfirm();\n            },\n            children: \"Confirm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}; // export const AlertDialogBox = ({\n//   isOpen,\n//   onClose,\n//   cancelRef,\n//   heading,\n//   children,\n// }) => {\n//   return (\n//     <>\n//       <AlertDialog\n//         isopen={isOpen}\n//         onClose={onClose}\n//         leastDestructiveRef={cancelRef}\n//       >\n//         <AlertDialogOverlay>\n//           <AlertDialogContent>\n//             <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\n//               {heading}\n//             </AlertDialogHeader>\n//             <AlertDialogBody>{children}</AlertDialogBody>\n//             <AlertDialogFooter>\n//               <Button ref={cancelRef} onClick={onClose}>\n//                 Cancel\n//               </Button>\n//               <Button\n//                 colorScheme=\"red\"\n//                 onClick={() => {\n//                   // handleClose();\n//                   // onConfirm();\n//                   onClose();\n//                 }}\n//                 ml={3}\n//               >\n//                 Confirm\n//               </Button>\n//             </AlertDialogFooter>\n//           </AlertDialogContent>\n//         </AlertDialogOverlay>\n//       </AlertDialog>\n//     </>\n//   );\n// };\n// AlertDialogBox.propTypes = {\n//   isOpen: PropTypes.bool.isRequired,\n//   handleClose: PropTypes.func.isRequired,\n//   onConfirm: PropTypes.func.isRequired,\n//   title: PropTypes.string.isRequired,\n//   children: PropTypes.element.isRequired,\n// };\n\n_s(AlertDialogBox, \"Y+dGSNwH3NtA7WLcY5ZdCuteC+E=\");\n\n_c = AlertDialogBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"AlertDialogBox\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-demo/src/helpers/AlertDialogBox.js"],"names":["React","useRef","AlertDialog","AlertDialogBody","AlertDialogFooter","AlertDialogHeader","AlertDialogContent","AlertDialogOverlay","Button","AlertDialogBox","isOpen","onClose","onConfirm","title","children","cancelRef"],"mappings":";;;AAAA,OAAOA,KAAP,IAAiBC,MAAjB,QAA+B,OAA/B;AACA,SACEC,WADF,EAEEC,eAFF,EAGEC,iBAHF,EAIEC,iBAJF,EAKEC,kBALF,EAMEC,kBANF,EAOEC,MAPF,QAQO,kBARP;;AAUA,OAAO,MAAMC,cAAc,GAAG,CAAC;AAC7BC,EAAAA,MAD6B;AAE7BC,EAAAA,OAF6B;AAG7BC,EAAAA,SAH6B;AAI7BC,EAAAA,KAJ6B;AAK7BC,EAAAA;AAL6B,CAAD,KAMxB;AAAA;;AACJ,QAAMC,SAAS,GAAGd,MAAM,CAAC,IAAD,CAAxB;AAEA,sBACE,QAAC,WAAD;AACE,IAAA,MAAM,EAAES,MADV;AAEE,IAAA,SAAS,EAAEK,SAFb;AAGE,IAAA,OAAO,EAAEJ,OAHX;AAIE,IAAA,UAAU,EAAEC,SAJd;AAKE,IAAA,kBAAkB,EAAE,IALtB;AAAA,2BAOE,QAAC,kBAAD;AAAA,6BACE,QAAC,kBAAD;AAAA,gCACE,QAAC,iBAAD;AACE,UAAA,UAAU,EAAC,QADb;AAEE,UAAA,UAAU,EAAC,MAFb;AAGE,UAAA,QAAQ,EAAC,QAHX;AAAA,oBAKGC;AALH;AAAA;AAAA;AAAA;AAAA,gBADF,eASE,QAAC,eAAD;AAAiB,UAAA,UAAU,EAAC,QAA5B;AAAqC,UAAA,QAAQ,EAAC,SAA9C;AAAA,oBACGC;AADH;AAAA;AAAA;AAAA;AAAA,gBATF,eAaE,QAAC,iBAAD;AAAA,kCAEE,QAAC,MAAD;AACE,YAAA,CAAC,EAAC,OADJ;AAEE,YAAA,EAAE,EAAC,QAFL;AAGE,YAAA,UAAU,EAAC,SAHb;AAIE,YAAA,OAAO,EAAEH,OAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAUE,QAAC,MAAD;AACE,YAAA,WAAW,EAAC,KADd;AAEE,YAAA,EAAE,EAAC,QAFL;AAGE,YAAA,CAAC,EAAC,OAHJ;AAIE,YAAA,EAAE,EAAE,CAJN;AAKE,YAAA,UAAU,EAAC,SALb;AAME,YAAA,OAAO,EAAE,MAAM;AACbA,cAAAA,OAAO;AACPC,cAAAA,SAAS;AACV,aATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,UADF;AAkDD,CA3DM,C,CA6DP;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;GA/GaH,c;;KAAAA,c","sourcesContent":["import React, {  useRef } from \"react\";\r\nimport {\r\n  AlertDialog,\r\n  AlertDialogBody,\r\n  AlertDialogFooter,\r\n  AlertDialogHeader,\r\n  AlertDialogContent,\r\n  AlertDialogOverlay,\r\n  Button,\r\n} from \"@chakra-ui/react\";\r\n\r\nexport const AlertDialogBox = ({\r\n  isOpen,\r\n  onClose,\r\n  onConfirm,\r\n  title,\r\n  children,\r\n}) => {\r\n  const cancelRef = useRef(null);\r\n\r\n  return (\r\n    <AlertDialog\r\n      isOpen={isOpen}\r\n      cancelRef={cancelRef}\r\n      onClose={onClose}\r\n      conConfirm={onConfirm}\r\n      blockScrollOnMount={true}\r\n    >\r\n      <AlertDialogOverlay>\r\n        <AlertDialogContent>\r\n          <AlertDialogHeader\r\n            fontFamily=\"roboto\"\r\n            fontWeight=\"bold\"\r\n            fontSize=\"1.5rem\"\r\n          >\r\n            {title}\r\n          </AlertDialogHeader>\r\n\r\n          <AlertDialogBody fontFamily=\"roboto\" fontSize=\"1.25rem\">\r\n            {children}\r\n          </AlertDialogBody>\r\n\r\n          <AlertDialogFooter>\r\n            {/* <Button ref={cancelRef} onClick={onClose}> */}\r\n            <Button\r\n              w=\"100px\"\r\n              py=\"0.5rem\"\r\n              fontFamily=\"cursive\"\r\n              onClick={onClose}\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              colorScheme=\"red\"\r\n              py=\"0.5rem\"\r\n              w=\"100px\"\r\n              ml={3}\r\n              fontFamily=\"cursive\"\r\n              onClick={() => {\r\n                onClose();\r\n                onConfirm();\r\n              }}\r\n            >\r\n              Confirm\r\n            </Button>\r\n          </AlertDialogFooter>\r\n        </AlertDialogContent>\r\n      </AlertDialogOverlay>\r\n    </AlertDialog>\r\n  );\r\n};\r\n\r\n// export const AlertDialogBox = ({\r\n//   isOpen,\r\n//   onClose,\r\n//   cancelRef,\r\n//   heading,\r\n//   children,\r\n\r\n// }) => {\r\n//   return (\r\n//     <>\r\n//       <AlertDialog\r\n//         isopen={isOpen}\r\n//         onClose={onClose}\r\n//         leastDestructiveRef={cancelRef}\r\n//       >\r\n//         <AlertDialogOverlay>\r\n//           <AlertDialogContent>\r\n//             <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\r\n//               {heading}\r\n//             </AlertDialogHeader>\r\n//             <AlertDialogBody>{children}</AlertDialogBody>\r\n//             <AlertDialogFooter>\r\n//               <Button ref={cancelRef} onClick={onClose}>\r\n//                 Cancel\r\n//               </Button>\r\n//               <Button\r\n//                 colorScheme=\"red\"\r\n//                 onClick={() => {\r\n//                   // handleClose();\r\n//                   // onConfirm();\r\n//                   onClose();\r\n//                 }}\r\n//                 ml={3}\r\n//               >\r\n//                 Confirm\r\n//               </Button>\r\n//             </AlertDialogFooter>\r\n//           </AlertDialogContent>\r\n//         </AlertDialogOverlay>\r\n//       </AlertDialog>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// AlertDialogBox.propTypes = {\r\n//   isOpen: PropTypes.bool.isRequired,\r\n//   handleClose: PropTypes.func.isRequired,\r\n//   onConfirm: PropTypes.func.isRequired,\r\n//   title: PropTypes.string.isRequired,\r\n//   children: PropTypes.element.isRequired,\r\n// };\r\n"]},"metadata":{},"sourceType":"module"}
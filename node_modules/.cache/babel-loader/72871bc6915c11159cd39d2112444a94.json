{"ast":null,"code":"import { SET_EDITTRAININGID, SET_ISTRAININGEDITING_ON, SET_ISTRAININGEDITING_OFF //SET_SINGLETRAINING,\n, GET_TRAININGS_BEGIN, GET_TRAININGS_SUCCESS, GET_TRAININGS_ERROR, GET_SINGLE_TRAINING_BEGIN, GET_SINGLE_TRAINING_SUCCESS, GET_SINGLE_TRAINING_ERROR, GET_SINGLEBATCH_TRAINING_BEGIN, GET_SINGLEBATCH_TRAINING_SUCCESS, GET_SINGLEBATCH_TRAINING_ERROR, ADD_TRAINING_BEGIN, ADD_TRAINING_SUCCESS, ADD_TRAINING_ERROR, DELETE_TRAINING_BEGIN, DELETE_TRAINING_SUCCESS, DELETE_TRAINING_ERROR, UPDATE_TRAINING_BEGIN, UPDATE_TRAINING_SUCCESS, UPDATE_TRAINING_ERROR, RESET_SINGLE_TRAINING //RESET_TABLES,\n} from \"../actions\";\n\nconst trainings_reducer = (state, action) => {\n  // set training variables\n  if (action.type === SET_EDITTRAININGID) {\n    return { ...state,\n      editTrainingID: action.payload\n    };\n  }\n\n  if (action.type === SET_ISTRAININGEDITING_ON) {\n    return { ...state,\n      isTrainingEditing: true\n    };\n  }\n\n  if (action.type === SET_ISTRAININGEDITING_OFF) {\n    return { ...state,\n      isTrainingEditing: false\n    };\n  }\n\n  if (action.type === RESET_SINGLE_TRAINING) {\n    return { ...state,\n      single_training: {}\n    };\n  } // get trainings\n\n\n  if (action.type === GET_TRAININGS_BEGIN) {\n    return { ...state,\n      trainings_loading: true\n    };\n  }\n\n  if (action.type === GET_TRAININGS_SUCCESS) {\n    return { ...state,\n      trainings_loading: false,\n      trainings: action.payload\n    };\n  }\n\n  if (action.type === GET_TRAININGS_ERROR) {\n    return { ...state,\n      trainings_loading: false,\n      trainings_error: true\n    };\n  } // add training\n\n\n  if (action.type === ADD_TRAINING_BEGIN) {\n    return { ...state,\n      add_training_loading: true\n    };\n  }\n\n  if (action.type === ADD_TRAINING_SUCCESS) {\n    return { ...state,\n      add_trainings_loading: false,\n      trainings: action.payload\n    };\n  }\n\n  if (action.type === ADD_TRAINING_ERROR) {\n    return { ...state,\n      trainings_loading: false,\n      add_training_error: true\n    };\n  } // update trainig\n\n\n  if (action.type === UPDATE_TRAINING_BEGIN) {\n    return { ...state,\n      update_training_loading: true\n    };\n  }\n\n  if (action.type === UPDATE_TRAINING_SUCCESS) {\n    return { ...state,\n      trainings_loading: false,\n      single_training: action.payload\n    };\n  }\n\n  if (action.type === UPDATE_TRAINING_ERROR) {\n    return { ...state,\n      update_training_loading: false,\n      update_training_error: true\n    };\n  } // delete training\n\n\n  if (action.type === DELETE_TRAINING_BEGIN) {\n    return { ...state,\n      delete_training_loading: true,\n      delete_training_error: false\n    };\n  }\n\n  if (action.type === DELETE_TRAINING_SUCCESS) {\n    return { ...state,\n      delete_training_loading: false,\n      delete_training_error: false\n    };\n  }\n\n  if (action.type === DELETE_TRAINING_ERROR) {\n    return { ...state,\n      delete_training_loading: false,\n      delete_training_error: true\n    };\n  } //single training\n\n\n  if (action.type === GET_SINGLE_TRAINING_BEGIN) {\n    return { ...state,\n      single_training_loading: true,\n      single_training_error: false\n    };\n  }\n\n  if (action.type === GET_SINGLE_TRAINING_SUCCESS) {\n    return { ...state,\n      single_training_loading: false,\n      single_training: action.payload\n    };\n  }\n\n  if (action.type === GET_SINGLE_TRAINING_ERROR) {\n    return { ...state,\n      single_training_loading: false,\n      single_training_error: true\n    };\n  } //single batch training\n\n\n  if (action.type === GET_SINGLEBATCH_TRAINING_BEGIN) {\n    return { ...state,\n      singlebatch_training_loading: true,\n      singlebatch_training_error: false\n    };\n  }\n\n  if (action.type === GET_SINGLEBATCH_TRAINING_SUCCESS) {\n    return { ...state,\n      singlebatch_training_loading: false,\n      singlebatch_training: action.payload\n    };\n  }\n\n  if (action.type === GET_SINGLEBATCH_TRAINING_ERROR) {\n    return { ...state,\n      singlebatch_training_loading: false,\n      singlebatch_training_error: true\n    };\n  } // return state;\n\n\n  throw new Error(`No Matching \"${action.type}\" - action type`);\n};\n\nexport default trainings_reducer;","map":{"version":3,"sources":["D:/react-myprojects/hrms-demo/src/reducers/trainings_reducer.js"],"names":["SET_EDITTRAININGID","SET_ISTRAININGEDITING_ON","SET_ISTRAININGEDITING_OFF","GET_TRAININGS_BEGIN","GET_TRAININGS_SUCCESS","GET_TRAININGS_ERROR","GET_SINGLE_TRAINING_BEGIN","GET_SINGLE_TRAINING_SUCCESS","GET_SINGLE_TRAINING_ERROR","GET_SINGLEBATCH_TRAINING_BEGIN","GET_SINGLEBATCH_TRAINING_SUCCESS","GET_SINGLEBATCH_TRAINING_ERROR","ADD_TRAINING_BEGIN","ADD_TRAINING_SUCCESS","ADD_TRAINING_ERROR","DELETE_TRAINING_BEGIN","DELETE_TRAINING_SUCCESS","DELETE_TRAINING_ERROR","UPDATE_TRAINING_BEGIN","UPDATE_TRAINING_SUCCESS","UPDATE_TRAINING_ERROR","RESET_SINGLE_TRAINING","trainings_reducer","state","action","type","editTrainingID","payload","isTrainingEditing","single_training","trainings_loading","trainings","trainings_error","add_training_loading","add_trainings_loading","add_training_error","update_training_loading","update_training_error","delete_training_loading","delete_training_error","single_training_loading","single_training_error","singlebatch_training_loading","singlebatch_training_error","singlebatch_training","Error"],"mappings":"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","sourcesContent":["import {\r\n  SET_EDITTRAININGID,\r\n  SET_ISTRAININGEDITING_ON,\r\n  SET_ISTRAININGEDITING_OFF,\r\n  //SET_SINGLETRAINING,\r\n  GET_TRAININGS_BEGIN,\r\n  GET_TRAININGS_SUCCESS,\r\n  GET_TRAININGS_ERROR,\r\n  GET_SINGLE_TRAINING_BEGIN,\r\n  GET_SINGLE_TRAINING_SUCCESS,\r\n  GET_SINGLE_TRAINING_ERROR,\r\n  GET_SINGLEBATCH_TRAINING_BEGIN,\r\n  GET_SINGLEBATCH_TRAINING_SUCCESS,\r\n  GET_SINGLEBATCH_TRAINING_ERROR,\r\n  ADD_TRAINING_BEGIN,\r\n  ADD_TRAINING_SUCCESS,\r\n  ADD_TRAINING_ERROR,\r\n  DELETE_TRAINING_BEGIN,\r\n  DELETE_TRAINING_SUCCESS,\r\n  DELETE_TRAINING_ERROR,\r\n  UPDATE_TRAINING_BEGIN,\r\n  UPDATE_TRAINING_SUCCESS,\r\n  UPDATE_TRAINING_ERROR,\r\n  RESET_SINGLE_TRAINING,\r\n  //RESET_TABLES,\r\n} from \"../actions\";\r\n\r\nconst trainings_reducer = (state, action) => {\r\n  // set training variables\r\n  if (action.type === SET_EDITTRAININGID) {\r\n    return { ...state, editTrainingID: action.payload };\r\n  }\r\n\r\n  if (action.type === SET_ISTRAININGEDITING_ON) {\r\n    return { ...state, isTrainingEditing: true };\r\n  }\r\n  if (action.type === SET_ISTRAININGEDITING_OFF) {\r\n    return { ...state, isTrainingEditing: false };\r\n  }\r\n  if (action.type === RESET_SINGLE_TRAINING) {\r\n    return { ...state, single_training: {} };\r\n  }\r\n  // get trainings\r\n  if (action.type === GET_TRAININGS_BEGIN) {\r\n    return { ...state, trainings_loading: true };\r\n  }\r\n  if (action.type === GET_TRAININGS_SUCCESS) {\r\n    return { ...state, trainings_loading: false, trainings: action.payload };\r\n  }\r\n  if (action.type === GET_TRAININGS_ERROR) {\r\n    return { ...state, trainings_loading: false, trainings_error: true };\r\n  }\r\n\r\n  // add training\r\n  if (action.type === ADD_TRAINING_BEGIN) {\r\n    return { ...state, add_training_loading: true };\r\n  }\r\n  if (action.type === ADD_TRAINING_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      add_trainings_loading: false,\r\n      trainings: action.payload,\r\n    };\r\n  }\r\n  if (action.type === ADD_TRAINING_ERROR) {\r\n    return { ...state, trainings_loading: false, add_training_error: true };\r\n  }\r\n  // update trainig\r\n  if (action.type === UPDATE_TRAINING_BEGIN) {\r\n    return { ...state, update_training_loading: true };\r\n  }\r\n  if (action.type === UPDATE_TRAINING_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      trainings_loading: false,\r\n      single_training: action.payload,\r\n    };\r\n  }\r\n  if (action.type === UPDATE_TRAINING_ERROR) {\r\n    return {\r\n      ...state,\r\n      update_training_loading: false,\r\n      update_training_error: true,\r\n    };\r\n  }\r\n\r\n  // delete training\r\n  if (action.type === DELETE_TRAINING_BEGIN) {\r\n    return {\r\n      ...state,\r\n      delete_training_loading: true,\r\n      delete_training_error: false,\r\n    };\r\n  }\r\n\r\n  if (action.type === DELETE_TRAINING_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      delete_training_loading: false,\r\n      delete_training_error: false,\r\n    };\r\n  }\r\n  if (action.type === DELETE_TRAINING_ERROR) {\r\n    return {\r\n      ...state,\r\n      delete_training_loading: false,\r\n      delete_training_error: true,\r\n    };\r\n  }\r\n\r\n  //single training\r\n  if (action.type === GET_SINGLE_TRAINING_BEGIN) {\r\n    return {\r\n      ...state,\r\n      single_training_loading: true,\r\n      single_training_error: false,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLE_TRAINING_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      single_training_loading: false,\r\n      single_training: action.payload,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLE_TRAINING_ERROR) {\r\n    return {\r\n      ...state,\r\n      single_training_loading: false,\r\n      single_training_error: true,\r\n    };\r\n  }\r\n\r\n  //single batch training\r\n  if (action.type === GET_SINGLEBATCH_TRAINING_BEGIN) {\r\n    return {\r\n      ...state,\r\n      singlebatch_training_loading: true,\r\n      singlebatch_training_error: false,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLEBATCH_TRAINING_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      singlebatch_training_loading: false,\r\n      singlebatch_training: action.payload,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLEBATCH_TRAINING_ERROR) {\r\n    return {\r\n      ...state,\r\n      singlebatch_training_loading: false,\r\n      singlebatch_training_error: true,\r\n    };\r\n  }\r\n\r\n  // return state;\r\n  throw new Error(`No Matching \"${action.type}\" - action type`);\r\n};\r\n\r\nexport default trainings_reducer;\r\n"]},"metadata":{},"sourceType":"module"}
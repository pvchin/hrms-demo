{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-demo\\\\src\\\\components\\\\GroupsTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo } from \"react\";\nimport MaterialTable from \"material-table\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useGroups } from \"./groups/useGroups\";\nimport { useUpdateGroup } from \"./groups/useUpdateGroup\";\nimport { useDeleteGroup } from \"./groups/useDeleteGroup\";\nimport { useAddGroup } from \"./groups/useAddGroup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UpdateGroups({\n  type\n}) {\n  _s();\n\n  const classes = useStyles();\n  const {\n    groups\n  } = useGroups();\n  const updateGroup = useUpdateGroup();\n  const deleteGroup = useDeleteGroup();\n  const addGroup = useAddGroup();\n  const columns = useMemo(() => [{\n    title: \"Description\",\n    field: \"description\"\n  } // {\n  //   title: \"Type\",\n  //   field: \"grouptype\",\n  // },\n  ], []);\n\n  const update_Group = data => {\n    const {\n      id,\n      rec_id,\n      ...fields\n    } = data;\n    updateGroup({\n      id,\n      ...fields\n    });\n  };\n\n  const add_Group = data => {\n    const newData = { ...data,\n      grouptype: type\n    };\n    addGroup(newData);\n  };\n\n  const delete_Group = data => {\n    const {\n      id\n    } = data;\n    deleteGroup(id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: \"100%\",\n        paddingTop: \"5px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n        columns: columns,\n        data: groups,\n        title: type + \"Types\",\n        editable: {\n          onRowAdd: newData => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              add_Group(newData);\n              resolve();\n            }, 1000);\n          }),\n          onRowUpdate: (newData, oldData) => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              update_Group(newData);\n              resolve();\n            }, 1000);\n          }),\n          onRowDelete: oldData => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              delete_Group(oldData);\n              resolve();\n            }, 1000);\n          })\n        },\n        options: {\n          filtering: true,\n          headerStyle: {\n            backgroundColor: \"#90CDF4\",\n            color: \"primary\"\n          },\n          showTitle: true\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UpdateGroups, \"SOhZJUwzIW6q+R7L8hZpprFsPWk=\", false, function () {\n  return [useStyles, useGroups, useUpdateGroup, useDeleteGroup, useAddGroup];\n});\n\n_c = UpdateGroups;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: 0\n  }\n}));\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateGroups\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-demo/src/components/GroupsTable.js"],"names":["React","useMemo","MaterialTable","makeStyles","useGroups","useUpdateGroup","useDeleteGroup","useAddGroup","UpdateGroups","type","classes","useStyles","groups","updateGroup","deleteGroup","addGroup","columns","title","field","update_Group","data","id","rec_id","fields","add_Group","newData","grouptype","delete_Group","root","maxWidth","paddingTop","onRowAdd","Promise","resolve","reject","setTimeout","onRowUpdate","oldData","onRowDelete","filtering","headerStyle","backgroundColor","color","showTitle","theme","padding"],"mappings":"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","sourcesContent":["import React, { useMemo } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useGroups } from \"./groups/useGroups\";\r\nimport { useUpdateGroup } from \"./groups/useUpdateGroup\";\r\nimport { useDeleteGroup } from \"./groups/useDeleteGroup\";\r\nimport { useAddGroup } from \"./groups/useAddGroup\";\r\n\r\nexport default function UpdateGroups({ type }) {\r\n  const classes = useStyles();\r\n  const { groups } = useGroups();\r\n  const updateGroup = useUpdateGroup();\r\n  const deleteGroup = useDeleteGroup();\r\n  const addGroup = useAddGroup();\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        title: \"Description\",\r\n        field: \"description\",\r\n      },\r\n      // {\r\n      //   title: \"Type\",\r\n      //   field: \"grouptype\",\r\n      // },\r\n    ],\r\n    []\r\n  );\r\n\r\n  const update_Group = (data) => {\r\n    const { id, rec_id, ...fields } = data;\r\n    updateGroup({ id, ...fields });\r\n  };\r\n\r\n  const add_Group = (data) => {\r\n    const newData = { ...data, grouptype: type };\r\n    addGroup(newData);\r\n  };\r\n\r\n  const delete_Group = (data) => {\r\n    const { id } = data;\r\n    deleteGroup(id);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={groups}\r\n          title={type + \"Types\" }\r\n          editable={{\r\n            onRowAdd: (newData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  add_Group(newData);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowUpdate: (newData, oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  update_Group(newData);\r\n\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowDelete: (oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  delete_Group(oldData);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n          }}\r\n          options={{\r\n            filtering: true,\r\n            headerStyle: {\r\n              backgroundColor: \"#90CDF4\",\r\n              color: \"primary\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n"]},"metadata":{},"sourceType":"module"}
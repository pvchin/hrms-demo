{"ast":null,"code":"import { useState, useCallback } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { employees_url } from \"../../utils/constants\";\nimport { filterByEmpId } from \"./utils\";\nimport axios from \"axios\";\nimport { queryKeys } from \"../react-query/constants\";\nasync function getEmployees(empid) {\n  //const { data } = await axios.get(`${employees_url}?id=${empid}`);\n  const {\n    data\n  } = await axios.get(`${employees_url}`);\n  return data;\n}\nexport function useEmployees(empid) {\n  const [filter, setFilter] = useState(\"all\");\n  const [employeeId, setEmployeeId] = useState(\"\");\n  const selectFn = useCallback(unfiltered => filterByEmpId(unfiltered, filter), [filter]);\n  const fallback = [];\n  const {\n    data: employees = fallback\n  } = useQuery([queryKeys.employees], () => getEmployees(employeeId), {\n    select: filter !== \"all\" ? selectFn : undefined\n  });\n  return {\n    employees,\n    filter,\n    setFilter,\n    setEmployeeId\n  };\n}","map":{"version":3,"names":["useState","useCallback","useQuery","employees_url","filterByEmpId","axios","queryKeys","getEmployees","empid","data","get","useEmployees","filter","setFilter","employeeId","setEmployeeId","selectFn","unfiltered","fallback","employees","select","undefined"],"sources":["D:/react-myprojects/hrms-demo/src/components/employees/useEmployees.js"],"sourcesContent":["import { useState, useCallback } from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport { employees_url } from \"../../utils/constants\";\r\nimport { filterByEmpId } from \"./utils\";\r\n\r\nimport axios from \"axios\";\r\nimport { queryKeys } from \"../react-query/constants\";\r\n\r\nasync function getEmployees(empid) {\r\n  //const { data } = await axios.get(`${employees_url}?id=${empid}`);\r\n  const { data } = await axios.get(`${employees_url}`);\r\n  return data;\r\n}\r\n\r\nexport function useEmployees(empid) {\r\n  const [filter, setFilter] = useState(\"all\");\r\n  const [employeeId, setEmployeeId] = useState(\"\");\r\n\r\n  const selectFn = useCallback(\r\n    (unfiltered) => filterByEmpId(unfiltered, filter),\r\n    [filter]\r\n  );\r\n\r\n  const fallback = [];\r\n  const { data: employees = fallback } = useQuery(\r\n    [queryKeys.employees],\r\n    () => getEmployees(employeeId),\r\n    {\r\n      select: filter !== \"all\" ? selectFn : undefined,\r\n    }\r\n  );\r\n\r\n  return { employees, filter, setFilter, setEmployeeId };\r\n}\r\n"],"mappings":"AAAA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAC7C,SAASC,QAAQ,QAAQ,aAAa;AACtC,SAASC,aAAa,QAAQ,uBAAuB;AACrD,SAASC,aAAa,QAAQ,SAAS;AAEvC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,0BAA0B;AAEpD,eAAeC,YAAY,CAACC,KAAK,EAAE;EACjC;EACA,MAAM;IAAEC;EAAK,CAAC,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAE,GAAEP,aAAc,EAAC,CAAC;EACpD,OAAOM,IAAI;AACb;AAEA,OAAO,SAASE,YAAY,CAACH,KAAK,EAAE;EAClC,MAAM,CAACI,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAACc,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMgB,QAAQ,GAAGf,WAAW,CACzBgB,UAAU,IAAKb,aAAa,CAACa,UAAU,EAAEL,MAAM,CAAC,EACjD,CAACA,MAAM,CAAC,CACT;EAED,MAAMM,QAAQ,GAAG,EAAE;EACnB,MAAM;IAAET,IAAI,EAAEU,SAAS,GAAGD;EAAS,CAAC,GAAGhB,QAAQ,CAC7C,CAACI,SAAS,CAACa,SAAS,CAAC,EACrB,MAAMZ,YAAY,CAACO,UAAU,CAAC,EAC9B;IACEM,MAAM,EAAER,MAAM,KAAK,KAAK,GAAGI,QAAQ,GAAGK;EACxC,CAAC,CACF;EAED,OAAO;IAAEF,SAAS;IAAEP,MAAM;IAAEC,SAAS;IAAEE;EAAc,CAAC;AACxD"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-demo\\\\src\\\\components\\\\Export2Excel.js\";\nimport React, { useEffect } from \"react\";\nimport ReactExport from \"react-data-export\"; //import { ExcelFile, ExcelSheet } from \"react-export-excel\";\n\nimport { Button } from \"@chakra-ui/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExcelFile = ReactExport.ExcelFile;\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet; //const ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\n\nconst Export2Excel = ({\n  filename,\n  dataset,\n  title\n}) => {\n  const hoccols = [{\n    title: \"What is/are the findings?\",\n    width: {\n      wch: 34\n    },\n    style: {\n      font: {\n        sz: \"9\",\n        bold: true\n      },\n      //fill: { patternType: \"solid\", fgColor: { rgb: \"#F5FFFA\" } },\n      //fill: { patternType: \"solid\", fgColor: { rgb: \"#F5FFFA\" } },\n      alignment: {\n        wrapText: true,\n        horizontal: \"center\",\n        vertical: \"top\"\n      }\n    }\n  }, {\n    title: \"What is/are the potential hazard(s)/risk(s)?\",\n    width: {\n      wch: 34\n    },\n    style: {\n      font: {\n        sz: \"9\",\n        bold: true\n      },\n      //fill: { patternType: \"solid\", fgColor: { rgb: \"#F5FFFA\" } },\n      alignment: {\n        wrapText: true,\n        horizontal: \"center\",\n        vertical: \"top\"\n      }\n    }\n  }, {\n    title: \"Type / Category\",\n    width: {\n      wch: 14\n    },\n    style: {\n      font: {\n        sz: \"9\",\n        bold: true\n      },\n      //fill: { patternType: \"solid\", fgColor: { rgb: \"FF00FF00\" } },\n      alignment: {\n        wrapText: true,\n        horizontal: \"center\",\n        vertical: \"top\"\n      }\n    }\n  }, {\n    title: \"What\",\n    width: {\n      wch: 18\n    },\n    style: {\n      font: {\n        sz: \"9\",\n        bold: true\n      },\n      //fill: { patternType: \"solid\", fgColor: { rgb: \"FF00FF00\" } },\n      alignment: {\n        wrapText: true,\n        horizontal: \"center\",\n        vertical: \"top\"\n      }\n    }\n  }, {\n    title: \"What Details\",\n    width: {\n      wch: 28\n    },\n    style: {\n      font: {\n        sz: \"9\",\n        bold: true\n      },\n      //fill: { patternType: \"solid\", fgColor: { rgb: \"FF00FF00\" } },\n      alignment: {\n        wrapText: true,\n        horizontal: \"center\",\n        vertical: \"top\"\n      }\n    }\n  }, {\n    title: \"Why\",\n    width: {\n      wch: 18\n    },\n    style: {\n      font: {\n        sz: \"9\",\n        bold: true\n      },\n      //fill: { patternType: \"solid\", fgColor: { rgb: \"FF00FF00\" } },\n      alignment: {\n        wrapText: true,\n        horizontal: \"center\",\n        vertical: \"top\"\n      }\n    }\n  }, {\n    title: \"Why Details\",\n    width: {\n      wch: 28\n    },\n    style: {\n      font: {\n        sz: \"9\",\n        bold: true\n      },\n      //fill: { patternType: \"solid\", fgColor: { rgb: \"FF00FF00\" } },\n      alignment: {\n        wrapText: true,\n        horizontal: \"center\",\n        vertical: \"top\"\n      }\n    }\n  }, {\n    title: \"Did a conversation take place?\",\n    width: {\n      wch: 18\n    },\n    style: {\n      font: {\n        sz: \"9\",\n        bold: true\n      },\n      //fill: { patternType: \"solid\", fgColor: { rgb: \"FF00FF00\" } },\n      alignment: {\n        wrapText: true,\n        horizontal: \"center\",\n        vertical: \"top\"\n      }\n    }\n  }, {\n    title: \"Was there an agreed remedial/corrective or preventive action? \",\n    width: {\n      wch: 28\n    },\n    style: {\n      font: {\n        sz: \"9\",\n        bold: true\n      },\n      //fill: { patternType: \"solid\", fgColor: { rgb: \"FF00FF00\" } },\n      alignment: {\n        wrapText: true,\n        horizontal: \"center\",\n        vertical: \"top\"\n      }\n    }\n  }, {\n    title: \"Follow-up required?\",\n    width: {\n      wch: 18\n    },\n    style: {\n      font: {\n        sz: \"9\",\n        bold: true\n      },\n      //fill: { patternType: \"solid\", fgColor: { rgb: \"FF00FF00\" } },\n      alignment: {\n        wrapText: true,\n        horizontal: \"center\",\n        vertical: \"top\"\n      }\n    }\n  }, {\n    title: \"Work Related?\",\n    width: {\n      wch: 18\n    },\n    style: {\n      font: {\n        sz: \"9\",\n        bold: true\n      },\n      //fill: { patternType: \"solid\", fgColor: { rgb: \"FF00FF00\" } },\n      alignment: {\n        wrapText: true,\n        horizontal: \"center\",\n        vertical: \"top\"\n      }\n    }\n  }, {\n    title: \"Raised By\",\n    width: {\n      wch: 28\n    },\n    style: {\n      font: {\n        sz: \"9\",\n        bold: true\n      },\n      //fill: { patternType: \"solid\", fgColor: { rgb: \"FF00FF00\" } },\n      alignment: {\n        wrapText: true,\n        horizontal: \"center\",\n        vertical: \"top\"\n      }\n    }\n  }, {\n    title: \"Raised On\",\n    width: {\n      wch: 18\n    },\n    style: {\n      font: {\n        sz: \"9\",\n        bold: true\n      },\n      //fill: { patternType: \"solid\", fgColor: { rgb: \"FF00FF00\" } },\n      alignment: {\n        wrapText: true,\n        horizontal: \"center\",\n        vertical: \"top\"\n      }\n    }\n  }, {\n    title: \"Company\",\n    width: {\n      wch: 28\n    },\n    style: {\n      font: {\n        sz: \"9\",\n        bold: true\n      },\n      //fill: { patternType: \"solid\", fgColor: { rgb: \"FF00FF00\" } },\n      alignment: {\n        wrapText: true,\n        horizontal: \"center\",\n        vertical: \"top\"\n      }\n    }\n  }, {\n    title: \"Location\",\n    width: {\n      wch: 28\n    },\n    style: {\n      font: {\n        sz: \"9\",\n        bold: true\n      },\n      //fill: { patternType: \"solid\", fgColor: { rgb: \"FF00FF00\" } },\n      alignment: {\n        wrapText: true,\n        horizontal: \"center\",\n        vertical: \"top\"\n      }\n    }\n  }];\n  const hocdata = dataset.map((rec, index) => {\n    return [{\n      value: rec.findings ? rec.findings : \"\",\n      style: {\n        font: {\n          sz: \"9\"\n        },\n        alignment: {\n          wrapText: true,\n          horizontal: \"center\",\n          vertical: \"top\"\n        }\n      }\n    }, {\n      value: rec.risks ? rec.risks : \"\",\n      style: {\n        font: {\n          sz: \"9\"\n        },\n        alignment: {\n          wrapText: true,\n          horizontal: \"center\",\n          vertical: \"top\"\n        }\n      }\n    }, {\n      value: rec.category ? rec.category : \"\",\n      style: {\n        font: {\n          sz: \"9\"\n        },\n        alignment: {\n          wrapText: true,\n          horizontal: \"center\",\n          vertical: \"top\"\n        }\n      }\n    }, {\n      value: rec.what ? rec.what : \"\",\n      style: {\n        font: {\n          sz: \"9\"\n        },\n        alignment: {\n          wrapText: true,\n          horizontal: \"center\",\n          vertical: \"top\"\n        }\n      }\n    }, {\n      value: rec.what_details ? rec.what_details : \"\",\n      style: {\n        font: {\n          sz: \"9\"\n        },\n        alignment: {\n          wrapText: true,\n          horizontal: \"center\",\n          vertical: \"top\"\n        }\n      }\n    }, {\n      value: rec.why ? rec.why : \"\",\n      style: {\n        font: {\n          sz: \"9\"\n        },\n        alignment: {\n          wrapText: true,\n          horizontal: \"center\",\n          vertical: \"top\"\n        }\n      }\n    }, {\n      value: rec.why_details ? rec.why_details : \"\",\n      style: {\n        font: {\n          sz: \"9\"\n        },\n        alignment: {\n          wrapText: true,\n          horizontal: \"center\",\n          vertical: \"top\"\n        }\n      }\n    }, {\n      value: rec.discussion ? rec.discussion : \"\",\n      style: {\n        font: {\n          sz: \"9\"\n        },\n        alignment: {\n          wrapText: true,\n          horizontal: \"center\",\n          vertical: \"top\"\n        }\n      }\n    }, {\n      value: rec.action ? rec.action : \"\",\n      style: {\n        font: {\n          sz: \"9\"\n        },\n        alignment: {\n          wrapText: true,\n          horizontal: \"center\",\n          vertical: \"top\"\n        }\n      }\n    }, {\n      value: rec.isfollowup ? rec.isfollowup : \"\",\n      style: {\n        font: {\n          sz: \"9\"\n        },\n        alignment: {\n          wrapText: true,\n          horizontal: \"center\",\n          vertical: \"top\"\n        }\n      }\n    }, {\n      value: rec.isworkrelated ? rec.isworkrelated : \"\",\n      style: {\n        font: {\n          sz: \"9\"\n        },\n        alignment: {\n          wrapText: true,\n          horizontal: \"center\",\n          vertical: \"top\"\n        }\n      }\n    }, {\n      value: rec.raisedby ? rec.raisedby : \"\",\n      style: {\n        font: {\n          sz: \"9\"\n        },\n        alignment: {\n          wrapText: true,\n          horizontal: \"center\",\n          vertical: \"top\"\n        }\n      }\n    }, {\n      value: rec.raisedon ? rec.raisedon : \"\",\n      style: {\n        font: {\n          sz: \"9\"\n        },\n        alignment: {\n          wrapText: true,\n          horizontal: \"center\",\n          vertical: \"top\"\n        }\n      }\n    }, {\n      value: rec.company ? rec.company : \"\",\n      style: {\n        font: {\n          sz: \"9\"\n        },\n        alignment: {\n          wrapText: true,\n          horizontal: \"center\",\n          vertical: \"top\"\n        }\n      }\n    }, {\n      value: rec.location ? rec.location : \"\",\n      style: {\n        font: {\n          sz: \"9\"\n        },\n        alignment: {\n          wrapText: true,\n          horizontal: \"center\",\n          vertical: \"top\"\n        }\n      }\n    }];\n  });\n  const multiDataSet = [// {\n  //   columns: cols1,\n  //   data: [],\n  // },\n  {\n    columns: hoccols,\n    data: hocdata\n  }];\n  return (\n    /*#__PURE__*/\n    // <ExcelFile element={<Button>Export to Excel</Button>} filename={filename}>\n    //   <ExcelSheet dataSet={multiDataSet1} name=\"Organization\" />\n    // </ExcelFile>\n    _jsxDEV(ExcelFile, {\n      element: /*#__PURE__*/_jsxDEV(Button, {\n        colorScheme: \"teal\",\n        variant: \"solid\",\n        children: \"Download\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 9\n      }, this),\n      filename: filename,\n      children: /*#__PURE__*/_jsxDEV(ExcelSheet, {\n        dataSet: multiDataSet,\n        name: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 5\n    }, this) // <ExcelFile filename={filename}>\n    //   <ExcelSheet dataSet={multiDataSet} name=\"HOC\" />\n    // </ExcelFile>\n    // <ExcelFile element={<Button>Export to Excel</Button>} filename={filename}>\n    //   <ExcelSheet data={dataset} name={title}>\n    //     <ExcelColumn label=\"Name\" value=\"name\" />\n    //     <ExcelColumn label=\"From Date\" value=\"from_date\" />\n    //     <ExcelColumn label=\"To Date\" value=\"to_date\" />\n    //     <ExcelColumn label=\"No of Days\" value=\"no_of_days\" />\n    //     <ExcelColumn label=\"Reason\" value=\"reason\" />\n    //     <ExcelColumn label=\"Status\" value=\"status\" />\n    //   </ExcelSheet>\n    //</ExcelFile>\n\n  );\n};\n\n_c = Export2Excel;\nexport default Export2Excel;\n\nvar _c;\n\n$RefreshReg$(_c, \"Export2Excel\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-demo/src/components/Export2Excel.js"],"names":["React","useEffect","ReactExport","Button","ExcelFile","ExcelSheet","Export2Excel","filename","dataset","title","hoccols","width","wch","style","font","sz","bold","alignment","wrapText","horizontal","vertical","hocdata","map","rec","index","value","findings","risks","category","what","what_details","why","why_details","discussion","action","isfollowup","isworkrelated","raisedby","raisedon","company","location","multiDataSet","columns","data"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport ReactExport from \"react-data-export\";\r\n//import { ExcelFile, ExcelSheet } from \"react-export-excel\";\r\nimport { Button } from \"@chakra-ui/react\";\r\n\r\nconst ExcelFile = ReactExport.ExcelFile;\r\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\r\n//const ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\r\n\r\nconst Export2Excel = ({ filename, dataset, title }) => {\r\n  const hoccols = [\r\n    {\r\n      title: \"What is/are the findings?\",\r\n      width: { wch: 34 },\r\n      style: {\r\n        font: { sz: \"9\", bold: true },\r\n        //fill: { patternType: \"solid\", fgColor: { rgb: \"#F5FFFA\" } },\r\n        //fill: { patternType: \"solid\", fgColor: { rgb: \"#F5FFFA\" } },\r\n        alignment: {\r\n          wrapText: true,\r\n          horizontal: \"center\",\r\n          vertical: \"top\",\r\n        },\r\n      },\r\n    },\r\n    {\r\n      title: \"What is/are the potential hazard(s)/risk(s)?\",\r\n      width: { wch: 34 },\r\n      style: {\r\n        font: { sz: \"9\", bold: true },\r\n        //fill: { patternType: \"solid\", fgColor: { rgb: \"#F5FFFA\" } },\r\n        alignment: {\r\n          wrapText: true,\r\n          horizontal: \"center\",\r\n          vertical: \"top\",\r\n        },\r\n      },\r\n    },\r\n    {\r\n      title: \"Type / Category\",\r\n      width: { wch: 14 },\r\n      style: {\r\n        font: { sz: \"9\", bold: true },\r\n        //fill: { patternType: \"solid\", fgColor: { rgb: \"FF00FF00\" } },\r\n        alignment: {\r\n          wrapText: true,\r\n          horizontal: \"center\",\r\n          vertical: \"top\",\r\n        },\r\n      },\r\n    },\r\n    {\r\n      title: \"What\",\r\n      width: { wch: 18 },\r\n      style: {\r\n        font: { sz: \"9\", bold: true },\r\n        //fill: { patternType: \"solid\", fgColor: { rgb: \"FF00FF00\" } },\r\n        alignment: {\r\n          wrapText: true,\r\n          horizontal: \"center\",\r\n          vertical: \"top\",\r\n        },\r\n      },\r\n    },\r\n    {\r\n      title: \"What Details\",\r\n      width: { wch: 28 },\r\n      style: {\r\n        font: { sz: \"9\", bold: true },\r\n        //fill: { patternType: \"solid\", fgColor: { rgb: \"FF00FF00\" } },\r\n        alignment: {\r\n          wrapText: true,\r\n          horizontal: \"center\",\r\n          vertical: \"top\",\r\n        },\r\n      },\r\n    },\r\n    {\r\n      title: \"Why\",\r\n      width: { wch: 18 },\r\n      style: {\r\n        font: { sz: \"9\", bold: true },\r\n        //fill: { patternType: \"solid\", fgColor: { rgb: \"FF00FF00\" } },\r\n        alignment: {\r\n          wrapText: true,\r\n          horizontal: \"center\",\r\n          vertical: \"top\",\r\n        },\r\n      },\r\n    },\r\n    {\r\n      title: \"Why Details\",\r\n      width: { wch: 28 },\r\n      style: {\r\n        font: { sz: \"9\", bold: true },\r\n        //fill: { patternType: \"solid\", fgColor: { rgb: \"FF00FF00\" } },\r\n        alignment: {\r\n          wrapText: true,\r\n          horizontal: \"center\",\r\n          vertical: \"top\",\r\n        },\r\n      },\r\n    },\r\n    {\r\n      title: \"Did a conversation take place?\",\r\n      width: { wch: 18 },\r\n      style: {\r\n        font: { sz: \"9\", bold: true },\r\n        //fill: { patternType: \"solid\", fgColor: { rgb: \"FF00FF00\" } },\r\n        alignment: {\r\n          wrapText: true,\r\n          horizontal: \"center\",\r\n          vertical: \"top\",\r\n        },\r\n      },\r\n    },\r\n    {\r\n      title: \"Was there an agreed remedial/corrective or preventive action? \",\r\n      width: { wch: 28 },\r\n      style: {\r\n        font: { sz: \"9\", bold: true },\r\n        //fill: { patternType: \"solid\", fgColor: { rgb: \"FF00FF00\" } },\r\n        alignment: {\r\n          wrapText: true,\r\n          horizontal: \"center\",\r\n          vertical: \"top\",\r\n        },\r\n      },\r\n    },\r\n    {\r\n      title: \"Follow-up required?\",\r\n      width: { wch: 18 },\r\n      style: {\r\n        font: { sz: \"9\", bold: true },\r\n        //fill: { patternType: \"solid\", fgColor: { rgb: \"FF00FF00\" } },\r\n        alignment: {\r\n          wrapText: true,\r\n          horizontal: \"center\",\r\n          vertical: \"top\",\r\n        },\r\n      },\r\n    },\r\n    {\r\n      title: \"Work Related?\",\r\n      width: { wch: 18 },\r\n      style: {\r\n        font: { sz: \"9\", bold: true },\r\n        //fill: { patternType: \"solid\", fgColor: { rgb: \"FF00FF00\" } },\r\n        alignment: {\r\n          wrapText: true,\r\n          horizontal: \"center\",\r\n          vertical: \"top\",\r\n        },\r\n      },\r\n    },\r\n    {\r\n      title: \"Raised By\",\r\n      width: { wch: 28 },\r\n      style: {\r\n        font: { sz: \"9\", bold: true },\r\n        //fill: { patternType: \"solid\", fgColor: { rgb: \"FF00FF00\" } },\r\n        alignment: {\r\n          wrapText: true,\r\n          horizontal: \"center\",\r\n          vertical: \"top\",\r\n        },\r\n      },\r\n    },\r\n    {\r\n      title: \"Raised On\",\r\n      width: { wch: 18 },\r\n      style: {\r\n        font: { sz: \"9\", bold: true },\r\n        //fill: { patternType: \"solid\", fgColor: { rgb: \"FF00FF00\" } },\r\n        alignment: {\r\n          wrapText: true,\r\n          horizontal: \"center\",\r\n          vertical: \"top\",\r\n        },\r\n      },\r\n    },\r\n    {\r\n      title: \"Company\",\r\n      width: { wch: 28 },\r\n      style: {\r\n        font: { sz: \"9\", bold: true },\r\n        //fill: { patternType: \"solid\", fgColor: { rgb: \"FF00FF00\" } },\r\n        alignment: {\r\n          wrapText: true,\r\n          horizontal: \"center\",\r\n          vertical: \"top\",\r\n        },\r\n      },\r\n    },\r\n    {\r\n      title: \"Location\",\r\n      width: { wch: 28 },\r\n      style: {\r\n        font: { sz: \"9\", bold: true },\r\n        //fill: { patternType: \"solid\", fgColor: { rgb: \"FF00FF00\" } },\r\n        alignment: {\r\n          wrapText: true,\r\n          horizontal: \"center\",\r\n          vertical: \"top\",\r\n        },\r\n      },\r\n    },\r\n  ];\r\n\r\n  const hocdata = dataset.map((rec, index) => {\r\n    return [\r\n      {\r\n        value: rec.findings ? rec.findings : \"\",\r\n        style: {\r\n          font: { sz: \"9\" },\r\n          alignment: {\r\n            wrapText: true,\r\n            horizontal: \"center\",\r\n            vertical: \"top\",\r\n          },\r\n        },\r\n      },\r\n      {\r\n        value: rec.risks ? rec.risks : \"\",\r\n        style: {\r\n          font: { sz: \"9\" },\r\n          alignment: {\r\n            wrapText: true,\r\n            horizontal: \"center\",\r\n            vertical: \"top\",\r\n          },\r\n        },\r\n      },\r\n      {\r\n        value: rec.category ? rec.category : \"\",\r\n        style: {\r\n          font: { sz: \"9\" },\r\n          alignment: {\r\n            wrapText: true,\r\n            horizontal: \"center\",\r\n            vertical: \"top\",\r\n          },\r\n        },\r\n      },\r\n      {\r\n        value: rec.what ? rec.what : \"\",\r\n        style: {\r\n          font: { sz: \"9\" },\r\n          alignment: {\r\n            wrapText: true,\r\n            horizontal: \"center\",\r\n            vertical: \"top\",\r\n          },\r\n        },\r\n      },\r\n      {\r\n        value: rec.what_details ? rec.what_details : \"\",\r\n        style: {\r\n          font: { sz: \"9\" },\r\n          alignment: {\r\n            wrapText: true,\r\n            horizontal: \"center\",\r\n            vertical: \"top\",\r\n          },\r\n        },\r\n      },\r\n      {\r\n        value: rec.why ? rec.why : \"\",\r\n        style: {\r\n          font: { sz: \"9\" },\r\n          alignment: {\r\n            wrapText: true,\r\n            horizontal: \"center\",\r\n            vertical: \"top\",\r\n          },\r\n        },\r\n      },\r\n      {\r\n        value: rec.why_details ? rec.why_details : \"\",\r\n        style: {\r\n          font: { sz: \"9\" },\r\n          alignment: {\r\n            wrapText: true,\r\n            horizontal: \"center\",\r\n            vertical: \"top\",\r\n          },\r\n        },\r\n      },\r\n      {\r\n        value: rec.discussion ? rec.discussion : \"\",\r\n        style: {\r\n          font: { sz: \"9\" },\r\n          alignment: {\r\n            wrapText: true,\r\n            horizontal: \"center\",\r\n            vertical: \"top\",\r\n          },\r\n        },\r\n      },\r\n      {\r\n        value: rec.action ? rec.action : \"\",\r\n        style: {\r\n          font: { sz: \"9\" },\r\n          alignment: {\r\n            wrapText: true,\r\n            horizontal: \"center\",\r\n            vertical: \"top\",\r\n          },\r\n        },\r\n      },\r\n      {\r\n        value: rec.isfollowup ? rec.isfollowup : \"\",\r\n        style: {\r\n          font: { sz: \"9\" },\r\n          alignment: {\r\n            wrapText: true,\r\n            horizontal: \"center\",\r\n            vertical: \"top\",\r\n          },\r\n        },\r\n      },\r\n      {\r\n        value: rec.isworkrelated ? rec.isworkrelated : \"\",\r\n        style: {\r\n          font: { sz: \"9\" },\r\n          alignment: {\r\n            wrapText: true,\r\n            horizontal: \"center\",\r\n            vertical: \"top\",\r\n          },\r\n        },\r\n      },\r\n      {\r\n        value: rec.raisedby ? rec.raisedby : \"\",\r\n        style: {\r\n          font: { sz: \"9\" },\r\n          alignment: {\r\n            wrapText: true,\r\n            horizontal: \"center\",\r\n            vertical: \"top\",\r\n          },\r\n        },\r\n      },\r\n      {\r\n        value: rec.raisedon ? rec.raisedon : \"\",\r\n        style: {\r\n          font: { sz: \"9\" },\r\n          alignment: {\r\n            wrapText: true,\r\n            horizontal: \"center\",\r\n            vertical: \"top\",\r\n          },\r\n        },\r\n      },\r\n      {\r\n        value: rec.company ? rec.company : \"\",\r\n        style: {\r\n          font: { sz: \"9\" },\r\n          alignment: {\r\n            wrapText: true,\r\n            horizontal: \"center\",\r\n            vertical: \"top\",\r\n          },\r\n        },\r\n      },\r\n      {\r\n        value: rec.location ? rec.location : \"\",\r\n        style: {\r\n          font: { sz: \"9\" },\r\n          alignment: {\r\n            wrapText: true,\r\n            horizontal: \"center\",\r\n            vertical: \"top\",\r\n          },\r\n        },\r\n      },\r\n    ];\r\n  });\r\n\r\n  const multiDataSet = [\r\n    // {\r\n    //   columns: cols1,\r\n    //   data: [],\r\n    // },\r\n    {\r\n      columns: hoccols,\r\n      data: hocdata,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    // <ExcelFile element={<Button>Export to Excel</Button>} filename={filename}>\r\n    //   <ExcelSheet dataSet={multiDataSet1} name=\"Organization\" />\r\n    // </ExcelFile>\r\n\r\n    <ExcelFile\r\n      element={\r\n        <Button colorScheme=\"teal\" variant=\"solid\">\r\n          Download\r\n        </Button>\r\n      }\r\n      filename={filename}\r\n    >\r\n      <ExcelSheet dataSet={multiDataSet} name={title} />\r\n    </ExcelFile>\r\n\r\n    // <ExcelFile filename={filename}>\r\n    //   <ExcelSheet dataSet={multiDataSet} name=\"HOC\" />\r\n    // </ExcelFile>\r\n\r\n    // <ExcelFile element={<Button>Export to Excel</Button>} filename={filename}>\r\n    //   <ExcelSheet data={dataset} name={title}>\r\n    //     <ExcelColumn label=\"Name\" value=\"name\" />\r\n    //     <ExcelColumn label=\"From Date\" value=\"from_date\" />\r\n    //     <ExcelColumn label=\"To Date\" value=\"to_date\" />\r\n    //     <ExcelColumn label=\"No of Days\" value=\"no_of_days\" />\r\n    //     <ExcelColumn label=\"Reason\" value=\"reason\" />\r\n    //     <ExcelColumn label=\"Status\" value=\"status\" />\r\n    //   </ExcelSheet>\r\n    //</ExcelFile>\r\n  );\r\n};\r\n\r\nexport default Export2Excel;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import pdfMake from \"pdfmake/build/pdfmake\";\nimport vfsFonts from \"pdfmake/build/vfs_fonts\";\nimport { formatPrice, formatPriceZero } from \"../helpers/Utils\";\n\nconst PrintPayslip = ({\n  data,\n  emp\n}) => {\n  var months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  const subtitle = \"Payslip for the month of \" + months[parseInt(data.rowData.payrun.slice(-2) - 1)] + \" \" + data.rowData.payrun.slice(0, 4);\n  const footer = \"This is computer generated report so no signature is required\";\n  const {\n    empno,\n    ic_no,\n    designation,\n    bank_acno,\n    //bank_name,\n    tap_acno,\n    scp_acno //payrun,\n\n  } = emp[0];\n  const {\n    name\n  } = data.rowData;\n  const totalEarnings = data.rowData.wages_bnd + data.rowData.site_allows_bnd + data.rowData.expenses_claims_bnd + data.rowData.total_allowances_bnd;\n  const totalDeductions = data.rowData.tap_amount_bnd + data.rowData.scp_amount_bnd + data.rowData.total_deductions_bnd;\n  const earningsdesp = [\"Wages\", data.rowData.site_allows_bnd === 0 ? \"\" : data.rowData.allows_type1, data.rowData.expenses_claims_bnd === 0 ? \"\" : data.rowData.allows_type2, data.rowData.allows_type3, data.rowData.allows_type4, data.rowData.allows_type5, data.rowData.allows_type6, data.rowData.allows_type7, data.rowData.allows_type8];\n  const earningsamt = [formatPrice(data.rowData.wages_bnd), data.rowData.site_allows_bnd === 0 ? \"\" : formatPrice(data.rowData.site_allows_bnd), data.rowData.expenses_claims_bnd === 0 ? \"\" : formatPrice(data.rowData.expenses_claims_bnd), formatPrice(Math.round((data.rowData.allows_type3amt + Number.EPSILON) * data.rowData.currency_rate * 100) / 100), formatPrice(Math.round((data.rowData.allows_type4amt + Number.EPSILON) * data.rowData.currency_rate * 100) / 100), formatPrice(Math.round((data.rowData.allows_type5amt + Number.EPSILON) * data.rowData.currency_rate * 100) / 100), formatPrice(Math.round((data.rowData.allows_type6amt + Number.EPSILON) * data.rowData.currency_rate * 100) / 100), formatPrice(Math.round((data.rowData.allows_type7amt + Number.EPSILON) * data.rowData.currency_rate * 100) / 100), formatPrice(Math.round((data.rowData.allows_type8amt + Number.EPSILON) * data.rowData.currency_rate * 100) / 100)];\n  const deductionsdesp = [data.rowData.tap_amount_bnd === 0 ? \"\" : \"TAP Amount\", data.rowData.scp_amount_bnd === 0 ? \"\" : \"SCP Amount\", data.rowData.deducts_type1, data.rowData.deducts_type2, data.rowData.deducts_type3, data.rowData.deducts_type4, data.rowData.deducts_type5, data.rowData.deducts_type6, data.rowData.deducts_type7, data.rowData.deducts_type8];\n  const deductionsamt = [formatPrice(parseFloat(data.rowData.tap_amount_bnd, 10)), formatPrice(parseFloat(data.rowData.scp_amount_bnd, 10)), formatPrice(Math.round((data.rowData.deducts_type1amt + Number.EPSILON) * data.rowData.currency_rate * 100) / 100), formatPrice(Math.round((data.rowData.deducts_type2amt + Number.EPSILON) * data.rowData.currency_rate * 100) / 100), formatPrice(Math.round((data.rowData.deducts_type3amt + Number.EPSILON) * data.rowData.currency_rate * 100) / 100), formatPrice(Math.round((data.rowData.deducts_type4amt + Number.EPSILON) * data.rowData.currency_rate * 100) / 100), formatPrice(Math.round((data.rowData.deducts_type5amt + Number.EPSILON) * data.rowData.currency_rate * 100) / 100), formatPrice(Math.round((data.rowData.deducts_type6amt + Number.EPSILON) * data.rowData.currency_rate * 100) / 100), formatPrice(Math.round((data.rowData.deducts_type7amt + Number.EPSILON) * data.rowData.currency_rate * 100) / 100), formatPrice(Math.round((data.rowData.allows_type8amt + Number.EPSILON) * data.rowData.currency_rate * 100) / 100)]; // pdfMake.fonts = {\n  //   Courier: {\n  //     normal: \"Courier\",\n  //     bold: \"Courier-Bold\",\n  //     italics: \"Courier-Oblique\",\n  //     bolditalics: \"Courier-BoldOblique\",\n  //   },\n  //   Helvetica: {\n  //     normal: \"Helvetica\",\n  //     bold: \"Helvetica-Bold\",\n  //     italics: \"Helvetica-Oblique\",\n  //     bolditalics: \"Helvetica-BoldOblique\",\n  //   },\n  //   Times: {\n  //     normal: \"Times-Roman\",\n  //     bold: \"Times-Bold\",\n  //     italics: \"Times-Italic\",\n  //     bolditalics: \"Times-BoldItalic\",\n  //   },\n  //   Roboto: {\n  //     normal: \"Roboto-Regular.ttf\",\n  //     bold: \"Roboto-Medium.ttf\",\n  //     italics: \"Roboto-Italic.ttf\",\n  //     bolditalics: \"Roboto-MediumItalic.ttf\",\n  //   },\n  //   Symbol: {\n  //     normal: \"Symbol\",\n  //   },\n  //   ZapfDingbats: {\n  //     normal: \"ZapfDingbats\",\n  //   },\n  // };\n\n  const {\n    vfs\n  } = vfsFonts.pdfMake;\n  pdfMake.vfs = vfs;\n  const documentDefinition = {\n    pageSize: \"A4\",\n    pageOrientation: \"portrait\",\n    content: [{\n      image: \"logo\",\n      width: 200\n    }, // { text: \"AppSmith Sutera Sdn Bhd\", style: \"header\" },\n    {\n      text: subtitle + \"\\n\",\n      style: \"subheader\"\n    }, {\n      canvas: [{\n        type: \"line\",\n        x1: 0,\n        y1: 5,\n        x2: 500,\n        y2: 5,\n        lineWidth: 2\n      }]\n    }, // {\n    //   columns: [\n    //     {\n    //       width: 90,\n    //       text: \"\\n\",\n    //     },\n    //     {\n    //       width: 20,\n    //       text: \"\",\n    //     },\n    //     {\n    //       width: \"200\",\n    //       text: \"\",\n    //     },\n    //     {\n    //       width: \"*\",\n    //       text: \"\",\n    //     },\n    //   ],\n    // },\n    // {\n    //   columns: [\n    //     {\n    //       width: 90,\n    //       text: \"Emp No \",\n    //     },\n    //     {\n    //       width: 20,\n    //       text: \":\",\n    //     },\n    //     {\n    //       width: \"200\",\n    //       text: empno,\n    //     },\n    //     {\n    //       width: \"*\",\n    //       text: \"\",\n    //     },\n    //   ],\n    // },\n    // {\n    //   columns: [\n    //     {\n    //       width: 90,\n    //       text: \"Name \",\n    //     },\n    //     {\n    //       width: 20,\n    //       text: \":\",\n    //     },\n    //     {\n    //       width: 200,\n    //       text: name,\n    //     },\n    //     {\n    //       width: \"*\",\n    //       text: \"\",\n    //     },\n    //   ],\n    // },\n    // {\n    //   columns: [\n    //     {\n    //       width: 90,\n    //       text: \"I/C No \",\n    //     },\n    //     {\n    //       width: 20,\n    //       text: \":\",\n    //     },\n    //     {\n    //       width: 200,\n    //       text: ic_no,\n    //     },\n    //     {\n    //       width: \"*\",\n    //       text: \"\",\n    //     },\n    //   ],\n    // },\n    // {\n    //   columns: [\n    //     {\n    //       width: 90,\n    //       text: \"Designation \",\n    //     },\n    //     {\n    //       width: 20,\n    //       text: \":\",\n    //     },\n    //     {\n    //       width: 200,\n    //       text: designation,\n    //     },\n    //     {\n    //       width: \"*\",\n    //       text: \"\",\n    //     },\n    //   ],\n    // },\n    // {\n    //   columns: [\n    //     {\n    //       width: 90,\n    //       text: \"Bank A/C No \",\n    //     },\n    //     {\n    //       width: 20,\n    //       text: \":\",\n    //     },\n    //     {\n    //       width: 200,\n    //       text: bank_acno,\n    //     },\n    //     {\n    //       width: \"*\",\n    //       text: \"\",\n    //     },\n    //   ],\n    // },\n    // {\n    //   columns: [\n    //     {\n    //       width: 90,\n    //       text: \"TAP No \",\n    //     },\n    //     {\n    //       width: 20,\n    //       text: \":\",\n    //     },\n    //     {\n    //       width: 200,\n    //       text: tap_acno,\n    //     },\n    //     {\n    //       width: \"*\",\n    //       text: \"\",\n    //     },\n    //   ],\n    // },\n    // {\n    //   columns: [\n    //     {\n    //       width: 90,\n    //       text: \"SCP No \",\n    //     },\n    //     {\n    //       width: 20,\n    //       text: \":\",\n    //     },\n    //     {\n    //       width: 200,\n    //       text: scp_acno,\n    //     },\n    //     {\n    //       width: \"*\",\n    //       text: \"\",\n    //     },\n    //   ],\n    // },\n    // {\n    //   text: [\n    //     { text: \"Emp No : \" + empno + \"\\n\", style: \"text\" },\n    //     { text: \"Name   : \" + name + \"\\n\", style: \"text\" },\n    //     { text: \"Addess : \" + address + \"\\n\", style: \"text\" },\n    //     { text: \"Phone  : \" + phone + \"\\n\\n\", style: \"text\" },\n    //   ],\n    // },\n    // {\n    //   table: {\n    //     headerRows: 1,\n    //     widths: [\"97%\"],\n    //     body: [[\"\"], [\"\"]],\n    //   },\n    //   layout: \"headerLineOnly\",\n    // },\n    // {\n    //   style: \"tableExample\",\n    //   table: {\n    //     widths: [150, 80, 150, 80],\n    //     body: [\n    //       [\n    //         { alignment: \"left\", text: \"Earnings\" },\n    //         { alignment: \"right\", text: \"Amount\" },\n    //         { alignment: \"left\", text: \"Deductions\" },\n    //         { alignment: \"right\", text: \"Amount\" },\n    //       ],\n    //       [\n    //         {\n    //           stack: [\n    //             {\n    //               type: \"none\",\n    //               fontSize: 12,\n    //               ul: earningsdesp,\n    //             },\n    //           ],\n    //         },\n    //         {\n    //           stack: [\n    //             {\n    //               type: \"none\",\n    //               fontSize: 12,\n    //               alignment: \"right\",\n    //               ul: earningsamt,\n    //             },\n    //           ],\n    //         },\n    //         {\n    //           stack: [\n    //             {\n    //               type: \"none\",\n    //               fontSize: 12,\n    //               ul: deductionsdesp,\n    //             },\n    //           ],\n    //         },\n    //         {\n    //           stack: [\n    //             {\n    //               type: \"none\",\n    //               fontSize: 12,\n    //               alignment: \"right\",\n    //               ul: deductionsamt,\n    //             },\n    //           ],\n    //         },\n    //       ],\n    //       [\n    //         { alignment: \"left\", text: \"Total Earnings\" },\n    //         { alignment: \"right\", text: formatPrice(totalEarnings) },\n    //         { alignment: \"left\", text: \"Total Deductions\" },\n    //         { alignment: \"right\", text: formatPriceZero(totalDeductions) },\n    //       ],\n    //       [\n    //         { alignment: \"left\", text: \"\" },\n    //         { alignment: \"right\", text: \"\" },\n    //         { alignment: \"left\", text: \"Nett Pay\" },\n    //         { alignment: \"right\", text: formatPrice(data.rowData.nett_pay) },\n    //       ],\n    //     ],\n    //   },\n    // },\n    // {\n    //   style: \"tableExample\",\n    //   table: {\n    //     widths: [480, 80],\n    //     body: [\n    //       [\n    //         { alignment: \"left\", text: \"Nettpay\" },\n    //         { alignment: \"right\", text: \"Amount\" },\n    //       ],\n    //     ],\n    //   },\n    // },\n    {\n      text: footer + \"\\n\",\n      style: \"footer\"\n    }],\n    styles: {\n      header: {\n        fontSize: 18,\n        bold: true,\n        margin: [0, 0, 0, 10]\n      },\n      subheader: {\n        fontSize: 16,\n        bold: true,\n        margin: [0, 10, 0, 5]\n      },\n      text: {\n        fontSize: 12,\n        bold: false,\n        margin: [0, 10, 0, 5]\n      },\n      tableExample: {\n        margin: [0, 5, 0, 15]\n      },\n      tableOpacityExample: {\n        margin: [0, 5, 0, 15],\n        fillColor: \"blue\",\n        fillOpacity: 0.3\n      },\n      tableHeader: {\n        bold: true,\n        fontSize: 13,\n        color: \"black\"\n      }\n    },\n    defaultStyle: {// alignment: 'justify'\n      //font: \"Helvetica\",\n    },\n    images: {\n      logo: \"https://res.cloudinary.com/dlmzwvakr/image/upload/v1626939253/appsmith/AppSutLogo_rakamz.jpg\",\n      img1: \"./AppSutLogo.jpg\"\n    }\n  };\n  pdfMake.createPdf(documentDefinition).open();\n};\n\n_c = PrintPayslip;\nexport default PrintPayslip;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrintPayslip\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-demo/src/components/PrintPayslip.js"],"names":["pdfMake","vfsFonts","formatPrice","formatPriceZero","PrintPayslip","data","emp","months","subtitle","parseInt","rowData","payrun","slice","footer","empno","ic_no","designation","bank_acno","tap_acno","scp_acno","name","totalEarnings","wages_bnd","site_allows_bnd","expenses_claims_bnd","total_allowances_bnd","totalDeductions","tap_amount_bnd","scp_amount_bnd","total_deductions_bnd","earningsdesp","allows_type1","allows_type2","allows_type3","allows_type4","allows_type5","allows_type6","allows_type7","allows_type8","earningsamt","Math","round","allows_type3amt","Number","EPSILON","currency_rate","allows_type4amt","allows_type5amt","allows_type6amt","allows_type7amt","allows_type8amt","deductionsdesp","deducts_type1","deducts_type2","deducts_type3","deducts_type4","deducts_type5","deducts_type6","deducts_type7","deducts_type8","deductionsamt","parseFloat","deducts_type1amt","deducts_type2amt","deducts_type3amt","deducts_type4amt","deducts_type5amt","deducts_type6amt","deducts_type7amt","vfs","documentDefinition","pageSize","pageOrientation","content","image","width","text","style","canvas","type","x1","y1","x2","y2","lineWidth","styles","header","fontSize","bold","margin","subheader","tableExample","tableOpacityExample","fillColor","fillOpacity","tableHeader","color","defaultStyle","images","logo","img1","createPdf","open"],"mappings":"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","sourcesContent":["import pdfMake from \"pdfmake/build/pdfmake\";\r\nimport vfsFonts from \"pdfmake/build/vfs_fonts\";\r\nimport { formatPrice, formatPriceZero } from \"../helpers/Utils\";\r\n\r\nconst PrintPayslip = ({ data, emp }) => {\r\n  var months = [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\",\r\n  ];\r\n  const subtitle =\r\n    \"Payslip for the month of \" +\r\n    months[parseInt(data.rowData.payrun.slice(-2) - 1)] +\r\n    \" \" +\r\n    data.rowData.payrun.slice(0, 4);\r\n  const footer =\r\n    \"This is computer generated report so no signature is required\";\r\n  const {\r\n    empno,\r\n    ic_no,\r\n    designation,\r\n    bank_acno,\r\n    //bank_name,\r\n    tap_acno,\r\n    scp_acno,\r\n    //payrun,\r\n  } = emp[0];\r\n  const { name } = data.rowData;\r\n  const totalEarnings =\r\n    data.rowData.wages_bnd +\r\n    data.rowData.site_allows_bnd +\r\n    data.rowData.expenses_claims_bnd +\r\n    data.rowData.total_allowances_bnd;\r\n  const totalDeductions =\r\n    data.rowData.tap_amount_bnd +\r\n    data.rowData.scp_amount_bnd +\r\n    data.rowData.total_deductions_bnd;\r\n  const earningsdesp = [\r\n    \"Wages\",\r\n    data.rowData.site_allows_bnd === 0 ? \"\" : data.rowData.allows_type1,\r\n    data.rowData.expenses_claims_bnd === 0 ? \"\" : data.rowData.allows_type2,\r\n    data.rowData.allows_type3,\r\n    data.rowData.allows_type4,\r\n    data.rowData.allows_type5,\r\n    data.rowData.allows_type6,\r\n    data.rowData.allows_type7,\r\n    data.rowData.allows_type8,\r\n  ];\r\n  const earningsamt = [\r\n    formatPrice(data.rowData.wages_bnd),\r\n    data.rowData.site_allows_bnd === 0\r\n      ? \"\"\r\n      : formatPrice(data.rowData.site_allows_bnd),\r\n    data.rowData.expenses_claims_bnd === 0\r\n      ? \"\"\r\n      : formatPrice(data.rowData.expenses_claims_bnd),\r\n    formatPrice(\r\n      Math.round(\r\n        (data.rowData.allows_type3amt + Number.EPSILON) *\r\n          data.rowData.currency_rate *\r\n          100\r\n      ) / 100\r\n    ),\r\n    formatPrice(\r\n      Math.round(\r\n        (data.rowData.allows_type4amt + Number.EPSILON) *\r\n          data.rowData.currency_rate *\r\n          100\r\n      ) / 100\r\n    ),\r\n    formatPrice(\r\n      Math.round(\r\n        (data.rowData.allows_type5amt + Number.EPSILON) *\r\n          data.rowData.currency_rate *\r\n          100\r\n      ) / 100\r\n    ),\r\n    formatPrice(\r\n      Math.round(\r\n        (data.rowData.allows_type6amt + Number.EPSILON) *\r\n          data.rowData.currency_rate *\r\n          100\r\n      ) / 100\r\n    ),\r\n    formatPrice(\r\n      Math.round(\r\n        (data.rowData.allows_type7amt + Number.EPSILON) *\r\n          data.rowData.currency_rate *\r\n          100\r\n      ) / 100\r\n    ),\r\n    formatPrice(\r\n      Math.round(\r\n        (data.rowData.allows_type8amt + Number.EPSILON) *\r\n          data.rowData.currency_rate *\r\n          100\r\n      ) / 100\r\n    ),\r\n  ];\r\n  const deductionsdesp = [\r\n    data.rowData.tap_amount_bnd === 0 ? \"\" : \"TAP Amount\",\r\n    data.rowData.scp_amount_bnd === 0 ? \"\" : \"SCP Amount\",\r\n    data.rowData.deducts_type1,\r\n    data.rowData.deducts_type2,\r\n    data.rowData.deducts_type3,\r\n    data.rowData.deducts_type4,\r\n    data.rowData.deducts_type5,\r\n    data.rowData.deducts_type6,\r\n    data.rowData.deducts_type7,\r\n    data.rowData.deducts_type8,\r\n  ];\r\n  const deductionsamt = [\r\n    formatPrice(parseFloat(data.rowData.tap_amount_bnd, 10)),\r\n    formatPrice(parseFloat(data.rowData.scp_amount_bnd, 10)),\r\n    formatPrice(\r\n      Math.round(\r\n        (data.rowData.deducts_type1amt + Number.EPSILON) *\r\n          data.rowData.currency_rate *\r\n          100\r\n      ) / 100\r\n    ),\r\n    formatPrice(\r\n      Math.round(\r\n        (data.rowData.deducts_type2amt + Number.EPSILON) *\r\n          data.rowData.currency_rate *\r\n          100\r\n      ) / 100\r\n    ),\r\n    formatPrice(\r\n      Math.round(\r\n        (data.rowData.deducts_type3amt + Number.EPSILON) *\r\n          data.rowData.currency_rate *\r\n          100\r\n      ) / 100\r\n    ),\r\n    formatPrice(\r\n      Math.round(\r\n        (data.rowData.deducts_type4amt + Number.EPSILON) *\r\n          data.rowData.currency_rate *\r\n          100\r\n      ) / 100\r\n    ),\r\n    formatPrice(\r\n      Math.round(\r\n        (data.rowData.deducts_type5amt + Number.EPSILON) *\r\n          data.rowData.currency_rate *\r\n          100\r\n      ) / 100\r\n    ),\r\n    formatPrice(\r\n      Math.round(\r\n        (data.rowData.deducts_type6amt + Number.EPSILON) *\r\n          data.rowData.currency_rate *\r\n          100\r\n      ) / 100\r\n    ),\r\n    formatPrice(\r\n      Math.round(\r\n        (data.rowData.deducts_type7amt + Number.EPSILON) *\r\n          data.rowData.currency_rate *\r\n          100\r\n      ) / 100\r\n    ),\r\n    formatPrice(\r\n      Math.round(\r\n        (data.rowData.allows_type8amt + Number.EPSILON) *\r\n          data.rowData.currency_rate *\r\n          100\r\n      ) / 100\r\n    ),\r\n  ];\r\n\r\n  // pdfMake.fonts = {\r\n  //   Courier: {\r\n  //     normal: \"Courier\",\r\n  //     bold: \"Courier-Bold\",\r\n  //     italics: \"Courier-Oblique\",\r\n  //     bolditalics: \"Courier-BoldOblique\",\r\n  //   },\r\n  //   Helvetica: {\r\n  //     normal: \"Helvetica\",\r\n  //     bold: \"Helvetica-Bold\",\r\n  //     italics: \"Helvetica-Oblique\",\r\n  //     bolditalics: \"Helvetica-BoldOblique\",\r\n  //   },\r\n  //   Times: {\r\n  //     normal: \"Times-Roman\",\r\n  //     bold: \"Times-Bold\",\r\n  //     italics: \"Times-Italic\",\r\n  //     bolditalics: \"Times-BoldItalic\",\r\n  //   },\r\n  //   Roboto: {\r\n  //     normal: \"Roboto-Regular.ttf\",\r\n  //     bold: \"Roboto-Medium.ttf\",\r\n  //     italics: \"Roboto-Italic.ttf\",\r\n  //     bolditalics: \"Roboto-MediumItalic.ttf\",\r\n  //   },\r\n  //   Symbol: {\r\n  //     normal: \"Symbol\",\r\n  //   },\r\n  //   ZapfDingbats: {\r\n  //     normal: \"ZapfDingbats\",\r\n  //   },\r\n  // };\r\n\r\n  const { vfs } = vfsFonts.pdfMake;\r\n  pdfMake.vfs = vfs;\r\n\r\n  const documentDefinition = {\r\n    pageSize: \"A4\",\r\n    pageOrientation: \"portrait\",\r\n    content: [\r\n      {\r\n        image: \"logo\",\r\n        width: 200,\r\n      },\r\n      // { text: \"AppSmith Sutera Sdn Bhd\", style: \"header\" },\r\n      { text: subtitle + \"\\n\", style: \"subheader\" },\r\n      {\r\n        canvas: [\r\n          {\r\n            type: \"line\",\r\n            x1: 0,\r\n            y1: 5,\r\n            x2: 500,\r\n            y2: 5,\r\n            lineWidth: 2,\r\n          },\r\n        ],\r\n      },\r\n      // {\r\n      //   columns: [\r\n      //     {\r\n      //       width: 90,\r\n      //       text: \"\\n\",\r\n      //     },\r\n      //     {\r\n      //       width: 20,\r\n      //       text: \"\",\r\n      //     },\r\n      //     {\r\n      //       width: \"200\",\r\n      //       text: \"\",\r\n      //     },\r\n      //     {\r\n      //       width: \"*\",\r\n      //       text: \"\",\r\n      //     },\r\n      //   ],\r\n      // },\r\n      // {\r\n      //   columns: [\r\n      //     {\r\n      //       width: 90,\r\n      //       text: \"Emp No \",\r\n      //     },\r\n      //     {\r\n      //       width: 20,\r\n      //       text: \":\",\r\n      //     },\r\n      //     {\r\n      //       width: \"200\",\r\n      //       text: empno,\r\n      //     },\r\n      //     {\r\n      //       width: \"*\",\r\n      //       text: \"\",\r\n      //     },\r\n      //   ],\r\n      // },\r\n      // {\r\n      //   columns: [\r\n      //     {\r\n      //       width: 90,\r\n      //       text: \"Name \",\r\n      //     },\r\n      //     {\r\n      //       width: 20,\r\n      //       text: \":\",\r\n      //     },\r\n      //     {\r\n      //       width: 200,\r\n      //       text: name,\r\n      //     },\r\n      //     {\r\n      //       width: \"*\",\r\n      //       text: \"\",\r\n      //     },\r\n      //   ],\r\n      // },\r\n      // {\r\n      //   columns: [\r\n      //     {\r\n      //       width: 90,\r\n      //       text: \"I/C No \",\r\n      //     },\r\n      //     {\r\n      //       width: 20,\r\n      //       text: \":\",\r\n      //     },\r\n      //     {\r\n      //       width: 200,\r\n      //       text: ic_no,\r\n      //     },\r\n      //     {\r\n      //       width: \"*\",\r\n      //       text: \"\",\r\n      //     },\r\n      //   ],\r\n      // },\r\n      // {\r\n      //   columns: [\r\n      //     {\r\n      //       width: 90,\r\n      //       text: \"Designation \",\r\n      //     },\r\n      //     {\r\n      //       width: 20,\r\n      //       text: \":\",\r\n      //     },\r\n      //     {\r\n      //       width: 200,\r\n      //       text: designation,\r\n      //     },\r\n      //     {\r\n      //       width: \"*\",\r\n      //       text: \"\",\r\n      //     },\r\n      //   ],\r\n      // },\r\n      // {\r\n      //   columns: [\r\n      //     {\r\n      //       width: 90,\r\n      //       text: \"Bank A/C No \",\r\n      //     },\r\n      //     {\r\n      //       width: 20,\r\n      //       text: \":\",\r\n      //     },\r\n      //     {\r\n      //       width: 200,\r\n      //       text: bank_acno,\r\n      //     },\r\n      //     {\r\n      //       width: \"*\",\r\n      //       text: \"\",\r\n      //     },\r\n      //   ],\r\n      // },\r\n      // {\r\n      //   columns: [\r\n      //     {\r\n      //       width: 90,\r\n      //       text: \"TAP No \",\r\n      //     },\r\n      //     {\r\n      //       width: 20,\r\n      //       text: \":\",\r\n      //     },\r\n      //     {\r\n      //       width: 200,\r\n      //       text: tap_acno,\r\n      //     },\r\n      //     {\r\n      //       width: \"*\",\r\n      //       text: \"\",\r\n      //     },\r\n      //   ],\r\n      // },\r\n      // {\r\n      //   columns: [\r\n      //     {\r\n      //       width: 90,\r\n      //       text: \"SCP No \",\r\n      //     },\r\n      //     {\r\n      //       width: 20,\r\n      //       text: \":\",\r\n      //     },\r\n      //     {\r\n      //       width: 200,\r\n      //       text: scp_acno,\r\n      //     },\r\n      //     {\r\n      //       width: \"*\",\r\n      //       text: \"\",\r\n      //     },\r\n      //   ],\r\n      // },\r\n      // {\r\n      //   text: [\r\n      //     { text: \"Emp No : \" + empno + \"\\n\", style: \"text\" },\r\n      //     { text: \"Name   : \" + name + \"\\n\", style: \"text\" },\r\n      //     { text: \"Addess : \" + address + \"\\n\", style: \"text\" },\r\n      //     { text: \"Phone  : \" + phone + \"\\n\\n\", style: \"text\" },\r\n      //   ],\r\n      // },\r\n\r\n      // {\r\n      //   table: {\r\n      //     headerRows: 1,\r\n      //     widths: [\"97%\"],\r\n      //     body: [[\"\"], [\"\"]],\r\n      //   },\r\n      //   layout: \"headerLineOnly\",\r\n      // },\r\n      // {\r\n      //   style: \"tableExample\",\r\n      //   table: {\r\n      //     widths: [150, 80, 150, 80],\r\n      //     body: [\r\n      //       [\r\n      //         { alignment: \"left\", text: \"Earnings\" },\r\n      //         { alignment: \"right\", text: \"Amount\" },\r\n      //         { alignment: \"left\", text: \"Deductions\" },\r\n      //         { alignment: \"right\", text: \"Amount\" },\r\n      //       ],\r\n      //       [\r\n      //         {\r\n      //           stack: [\r\n      //             {\r\n      //               type: \"none\",\r\n      //               fontSize: 12,\r\n      //               ul: earningsdesp,\r\n      //             },\r\n      //           ],\r\n      //         },\r\n      //         {\r\n      //           stack: [\r\n      //             {\r\n      //               type: \"none\",\r\n      //               fontSize: 12,\r\n      //               alignment: \"right\",\r\n      //               ul: earningsamt,\r\n      //             },\r\n      //           ],\r\n      //         },\r\n      //         {\r\n      //           stack: [\r\n      //             {\r\n      //               type: \"none\",\r\n      //               fontSize: 12,\r\n      //               ul: deductionsdesp,\r\n      //             },\r\n      //           ],\r\n      //         },\r\n      //         {\r\n      //           stack: [\r\n      //             {\r\n      //               type: \"none\",\r\n      //               fontSize: 12,\r\n      //               alignment: \"right\",\r\n      //               ul: deductionsamt,\r\n      //             },\r\n      //           ],\r\n      //         },\r\n      //       ],\r\n      //       [\r\n      //         { alignment: \"left\", text: \"Total Earnings\" },\r\n      //         { alignment: \"right\", text: formatPrice(totalEarnings) },\r\n      //         { alignment: \"left\", text: \"Total Deductions\" },\r\n      //         { alignment: \"right\", text: formatPriceZero(totalDeductions) },\r\n      //       ],\r\n      //       [\r\n      //         { alignment: \"left\", text: \"\" },\r\n      //         { alignment: \"right\", text: \"\" },\r\n      //         { alignment: \"left\", text: \"Nett Pay\" },\r\n      //         { alignment: \"right\", text: formatPrice(data.rowData.nett_pay) },\r\n      //       ],\r\n      //     ],\r\n      //   },\r\n      // },\r\n      // {\r\n      //   style: \"tableExample\",\r\n      //   table: {\r\n      //     widths: [480, 80],\r\n      //     body: [\r\n      //       [\r\n      //         { alignment: \"left\", text: \"Nettpay\" },\r\n      //         { alignment: \"right\", text: \"Amount\" },\r\n      //       ],\r\n      //     ],\r\n      //   },\r\n      // },\r\n      { text: footer + \"\\n\", style: \"footer\" },\r\n    ],\r\n    styles: {\r\n      header: {\r\n        fontSize: 18,\r\n        bold: true,\r\n        margin: [0, 0, 0, 10],\r\n      },\r\n      subheader: {\r\n        fontSize: 16,\r\n        bold: true,\r\n        margin: [0, 10, 0, 5],\r\n      },\r\n      text: {\r\n        fontSize: 12,\r\n        bold: false,\r\n        margin: [0, 10, 0, 5],\r\n      },\r\n      tableExample: {\r\n        margin: [0, 5, 0, 15],\r\n      },\r\n      tableOpacityExample: {\r\n        margin: [0, 5, 0, 15],\r\n        fillColor: \"blue\",\r\n        fillOpacity: 0.3,\r\n      },\r\n      tableHeader: {\r\n        bold: true,\r\n        fontSize: 13,\r\n        color: \"black\",\r\n      },\r\n    },\r\n    defaultStyle: {\r\n      // alignment: 'justify'\r\n      //font: \"Helvetica\",\r\n    },\r\n    images: {\r\n      logo: \"https://res.cloudinary.com/dlmzwvakr/image/upload/v1626939253/appsmith/AppSutLogo_rakamz.jpg\",\r\n      img1: \"./AppSutLogo.jpg\",\r\n    },\r\n  };\r\n\r\n  pdfMake.createPdf(documentDefinition).open();\r\n};\r\n\r\nexport default PrintPayslip;\r\n"]},"metadata":{},"sourceType":"module"}
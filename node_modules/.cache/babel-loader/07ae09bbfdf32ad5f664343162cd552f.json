{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useCallback } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { payslips_url } from \"../../utils/constants\";\nimport { filterByPayrun } from \"./utils\";\nimport axios from \"axios\";\nimport { queryKeys } from \"../react-query/constants\";\n\nasync function getPayslips(payrun) {\n  const {\n    data\n  } = await axios.get(`${payslips_url}?fv=${payrun}`); //const { data } = await axios.get(`${payslips_url}`);\n\n  return data;\n}\n\nexport function usePayslipsBatch(payrun) {\n  _s();\n\n  const [filter, setFilter] = useState(\"all\");\n  const [psbpayrunId, setPSBPayrunId] = useState(\"\");\n  const selectFn = useCallback(unfiltered => filterByPayrun(unfiltered, filter), [filter]);\n  const fallback = [];\n  const {\n    data: payslipsbatch = fallback\n  } = useQuery([queryKeys.payslipsbatch, psbpayrunId], //queryKeys.payslips,\n  () => getPayslips(psbpayrunId), {\n    select: filter !== \"all\" ? selectFn : undefined\n  });\n  return {\n    payslipsbatch,\n    filter,\n    setFilter,\n    setPSBPayrunId\n  };\n}\n\n_s(usePayslipsBatch, \"3I7FwR9BsCgD/hC7lJxBn431zCc=\", false, function () {\n  return [useQuery];\n});","map":{"version":3,"sources":["D:/react-myprojects/hrms-demo/src/components/payslips/usePayslipsBatch.js"],"names":["useState","useCallback","useQuery","payslips_url","filterByPayrun","axios","queryKeys","getPayslips","payrun","data","get","usePayslipsBatch","filter","setFilter","psbpayrunId","setPSBPayrunId","selectFn","unfiltered","fallback","payslipsbatch","select","undefined"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,OAAtC;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,YAAT,QAA6B,uBAA7B;AACA,SAASC,cAAT,QAA+B,SAA/B;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,0BAA1B;;AAEA,eAAeC,WAAf,CAA2BC,MAA3B,EAAmC;AACjC,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMJ,KAAK,CAACK,GAAN,CAAW,GAAEP,YAAa,OAAMK,MAAO,EAAvC,CAAvB,CADiC,CAEjC;;AACA,SAAOC,IAAP;AACD;;AAED,OAAO,SAASE,gBAAT,CAA0BH,MAA1B,EAAkC;AAAA;;AACvC,QAAM,CAACI,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACc,WAAD,EAAcC,cAAd,IAAgCf,QAAQ,CAAC,EAAD,CAA9C;AAEA,QAAMgB,QAAQ,GAAGf,WAAW,CACzBgB,UAAD,IAAgBb,cAAc,CAACa,UAAD,EAAaL,MAAb,CADJ,EAE1B,CAACA,MAAD,CAF0B,CAA5B;AAKA,QAAMM,QAAQ,GAAG,EAAjB;AACA,QAAM;AAAET,IAAAA,IAAI,EAAEU,aAAa,GAAGD;AAAxB,MAAqChB,QAAQ,CACjD,CAACI,SAAS,CAACa,aAAX,EAA0BL,WAA1B,CADiD,EAEjD;AACA,QAAMP,WAAW,CAACO,WAAD,CAHgC,EAIjD;AACEM,IAAAA,MAAM,EAAER,MAAM,KAAK,KAAX,GAAmBI,QAAnB,GAA8BK;AADxC,GAJiD,CAAnD;AASA,SAAO;AAAEF,IAAAA,aAAF;AAAiBP,IAAAA,MAAjB;AAAyBC,IAAAA,SAAzB;AAAoCE,IAAAA;AAApC,GAAP;AACD;;GApBeJ,gB;UAU6BT,Q","sourcesContent":["import { useState, useCallback } from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport { payslips_url } from \"../../utils/constants\";\r\nimport { filterByPayrun } from \"./utils\";\r\n\r\nimport axios from \"axios\";\r\nimport { queryKeys } from \"../react-query/constants\";\r\n\r\nasync function getPayslips(payrun) {\r\n  const { data } = await axios.get(`${payslips_url}?fv=${payrun}`);\r\n  //const { data } = await axios.get(`${payslips_url}`);\r\n  return data;\r\n}\r\n\r\nexport function usePayslipsBatch(payrun) {\r\n  const [filter, setFilter] = useState(\"all\");\r\n  const [psbpayrunId, setPSBPayrunId] = useState(\"\");\r\n\r\n  const selectFn = useCallback(\r\n    (unfiltered) => filterByPayrun(unfiltered, filter),\r\n    [filter]\r\n  );\r\n\r\n  const fallback = [];\r\n  const { data: payslipsbatch = fallback } = useQuery(\r\n    [queryKeys.payslipsbatch, psbpayrunId],\r\n    //queryKeys.payslips,\r\n    () => getPayslips(psbpayrunId),\r\n    {\r\n      select: filter !== \"all\" ? selectFn : undefined,\r\n    }\r\n  );\r\n\r\n  return { payslipsbatch, filter, setFilter, setPSBPayrunId };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
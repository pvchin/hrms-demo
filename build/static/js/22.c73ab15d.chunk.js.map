{"version":3,"sources":["components/Example6.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","container","margin","padding","width","display","gridTemplateColumns","gridAutoRows","position","left","transform","justifyContent","backgroundColor","fixedHeight","height","paper","spacing","overflow","flexDirection","border","color","bcakgroundColor","card","section","maxWidth","underline","marginBottom","background","marginLeft","marginRight","title","marginbottom","textAlign","jobscenter","btncontainer","flexWrap","jobbtn","borderColor","textTransform","fontSize","letterSpacing","transition","cursor","lineHeight","outlineColor","boxShadow","activebtn","jobinfo","fontWeight","Example","classes","toast","useCustomToast","fixedHeightPaper","clsx","useState","setData","emailstatus","setEmailStatus","useEffect","axios","then","res","data","catch","err","console","log","useMemo","Header","columns","accessor","Cell","value","cell","href","className","style","boxSize","src","alt","onClick","emailjs","process","to_name","to_email","message","cc_to","response","status","text"],"mappings":"2LA+KMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,GAEZC,UAAW,CACTC,OAAQ,EACRC,QAAS,EACTC,MAAO,OACPC,QAAS,OACTC,oBAAqB,0BACrBC,aAAc,OACdC,SAAU,WACVC,KAAM,MACNC,UAAW,mBACXC,eAAgB,SAChBC,gBAAiB,WAEnBC,YAAa,CACXC,OAAQ,KAEVC,MAAO,CACLZ,QAASL,EAAMkB,QAAQ,IAEvBX,QAAS,OACTY,SAAU,OACVC,cAAe,SACfC,OAAQ,YACRf,MAAO,OACPgB,MAAO,UACPC,gBAAiB,SAEnBC,KAAM,CACJV,gBAAiB,SAEnBW,QAAS,CACPnB,MAAO,OACPF,OAAQ,YACRsB,SAAU,oBAEZC,UAAW,CACTrB,MAAO,OACPU,OAAQ,UACRY,aAAc,UACdC,WAAY,uBACZC,WAAY,OACZC,YAAa,QAEfC,MAAO,CACLC,aAAc,OACdC,UAAW,UAEbC,WAAY,CACV7B,MAAO,OACPF,OAAQ,SACRsB,SAAU,mBACVN,cAAe,OAEjBgB,aAAc,CACZ7B,QAAS,OACTa,cAAe,MACfP,eAAgB,SAChBe,aAAc,OACdS,SAAU,QAEZC,OAAQ,CACNT,WAAY,cACZU,YAAa,cACbC,cAAe,aACfC,SAAU,UACVC,cAAe,iBACftC,OAAQ,WACRuC,WAAY,oBACZC,OAAQ,UACRvC,QAAS,YACTwC,WAAY,IACZC,aAAc,wBACd,UAAW,CACTxB,MAAO,uBACPyB,UAAW,+BAGfC,UAAW,CACT1B,MAAO,uBACPyB,UAAW,8BAEbE,QAAS,CACPC,WAAY,WAIDC,UApOC,WACd,IAAMC,EAAUtD,IACVuD,EAAQC,cACRC,EAAmBC,YAAKJ,EAAQnC,MAAOmC,EAAQrC,aAHjC,EAII0C,mBAAS,IAJb,mBAIPC,GAJO,aAOkBD,mBAAS,IAP3B,mBAObE,EAPa,KAOAC,EAPA,KASpBC,qBAAU,WACRC,IAAM,8CACHC,MAAK,SAACC,GACLN,EAAQM,EAAIC,SAEbC,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,QAC7B,IAuBaG,mBAAQ,iBAAM,CAC5B,CACEC,OAAQ,UACRC,QAAS,CACP,CACED,OAAQ,OACRE,SAAU,aAEZ,CACEF,OAAQ,WACRE,SAAU,iBAEZ,CACEF,OAAQ,gBACRE,SAAU,oBACVC,KAAM,gBAAWC,EAAX,EAAGC,KAAQD,MAAX,OACJA,EAAQ,mBAAGE,KAAMF,EAAT,SAAiBA,IAAa,MAE1C,CACEJ,OAAQ,SACRE,SAAU,eAEZ,CACEF,OAAQ,YACRE,SAAU,iBACVC,KAAM,qBAAGE,KAAQD,OAAuB,MAE1C,CACEJ,OAAQ,OACRE,SAAU,qBACVC,KAAM,qBAAGE,KAAQD,OAAuB,YAiChD,OACE,uBAAOG,UAAWvB,EAAkBwB,MAAO,CAAEjE,gBAAiB,SAA9D,SACE,0BAASgE,UAAW1B,EAAQ3B,QAA5B,UAkBE,cAAC,IAAD,CACEuD,QAAQ,QACRC,IAAI,sGACJC,IAAI,gBAEN,sBAAKJ,UAAU,MAAf,UACE,6BACE,wDAGF,wBAAQK,QAzDU,WAQxBC,IAtFeC,kBACC,mBA8EL,CACTC,QAAS,SACTC,SAAU,qBACVC,QAAS,uBACTC,MAAO,sBAjFGJ,8BAoFyCtB,MACnD,SAAU2B,GACRtB,QAAQC,IAAIqB,EAASC,OAAQD,EAASE,MACtChC,EAAe,cAEjB,SAAUO,GACRC,QAAQC,IAAIF,GACZP,EAAe,cAGnBQ,QAAQC,IAAI,QAASV,GACD,YAAhBA,GACFN,EAAM,CACJrB,MAAO,6BACP2D,OAAQ,aAmCN","file":"static/js/22.c73ab15d.chunk.js","sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useCustomToast } from \"../helpers/useCustomToast\";\r\nimport * as emailjs from \"emailjs-com\";\r\nimport axios from \"axios\";\r\nimport clsx from \"clsx\";\r\n//import Table from \"../helpers/TableContainer\";\r\nimport { Box, Image } from \"@chakra-ui/react\";\r\n//import Paper from \"@material-ui/core/Paper\";\r\n//import { Cloudinary, Transformation } from \"@cloudinary/base\";\r\n// import {Image ,\r\n//   AdvancedImage,\r\n//   accessibility,\r\n//   responsive,\r\n// } from \"@cloudinary/react\";\r\n// Import required actions.\r\n//import { thumbnail, scale } from \"@cloudinary/base/actions/resize\";\r\n//import { byRadius } from \"@cloudinary/base/actions/roundCorners\";\r\n//import { sepia } from \"@cloudinary/base/actions/effect\";\r\n//import { source } from \"@cloudinary/base/actions/overlay\";\r\n//import { opacity, brightness } from \"@cloudinary/base/actions/adjust\";\r\n//import { byAngle } from \"@cloudinary/base/actions/rotate\";\r\n//import { format } from \"@cloudinary/base/actions/delivery\";\r\n// Import required qualifiers.\r\n//import { face } from \"@cloudinary/base/qualifiers/focusOn\";\r\n//import { focusOn } from \"@cloudinary/base/qualifiers/gravity\";\r\n//import { image } from \"@cloudinary/base/qualifiers/source\";\r\n//import { Position } from \"@cloudinary/base/qualifiers/position\";\r\n//import { southEast } from \"@cloudinary/base/qualifiers/compass\";\r\n//import { compass } from \"@cloudinary/base/qualifiers/gravity\";\r\n//import { png } from \"@cloudinary/base/qualifiers/format\";\r\n\r\n//const drawerWidth = 240;\r\nconst SERVICE_ID = process.env.REACT_APP_EMAILJS_SERVICEID;\r\nconst TEMPLATE_ID = \"template_1y8odlq\";\r\nconst USER_ID = process.env.REACT_APP_EMAILJS_USERID;\r\n\r\nconst Example = () => {\r\n  const classes = useStyles();\r\n  const toast = useCustomToast();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  const [data, setData] = useState([]);\r\n  // const myCld = new Cloudinary({ cloudName: \"dlmzwvakr\" });\r\n  // const myImage = myCld.image(\"sample\");\r\n  const [emailstatus, setEmailStatus] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    axios(\"http://api.tvmaze.com/search/shows?q=girls\")\r\n      .then((res) => {\r\n        setData(res.data);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  // Apply the transformation.\r\n  // myImage\r\n  //   .resize(thumbnail().width(150).height(150).gravity(focusOn(face()))) // Crop the image.\r\n  //   .roundCorners(byRadius(20)) // Round the corners.\r\n  //   .effect(sepia()) // Apply a sepia effect.\r\n  //   .overlay(\r\n  //     // Overlay the Cloudinary logo.\r\n  //     source(\r\n  //       image(\"cloudinary_icon_blue\").transformation(\r\n  //         new Transformation()\r\n  //           .resize(scale(50)) // Resize the logo.\r\n  //           .adjust(opacity(60)) // Adjust the opacity of the logo.\r\n  //           .adjust(brightness(200))\r\n  //       ) // Adjust the brightness of the logo.\r\n  //     ).position(\r\n  //       new Position().gravity(compass(southEast())).offsetX(5).offsetY(5)\r\n  //     ) // Position the logo.\r\n  //   )\r\n  //   .rotate(byAngle(10)) // Rotate the result.\r\n  //   .delivery(format(png())); // Deliver as PNG. */\r\n\r\n  const columns = useMemo(() => [\r\n    {\r\n      Header: \"TV Show\",\r\n      columns: [\r\n        {\r\n          Header: \"Name\",\r\n          accessor: \"show.name\",\r\n        },\r\n        {\r\n          Header: \"Language\",\r\n          accessor: \"show.language\",\r\n        },\r\n        {\r\n          Header: \"Official Site\",\r\n          accessor: \"show.officialSite\",\r\n          Cell: ({ cell: { value } }) =>\r\n            value ? <a href={value}>{value}</a> : \"-\",\r\n        },\r\n        {\r\n          Header: \"Status\",\r\n          accessor: \"show.status\",\r\n        },\r\n        {\r\n          Header: \"Premiered\",\r\n          accessor: \"show.premiered\",\r\n          Cell: ({ cell: { value } }) => value || \"-\",\r\n        },\r\n        {\r\n          Header: \"Time\",\r\n          accessor: \"show.schedule.time\",\r\n          Cell: ({ cell: { value } }) => value || \"-\",\r\n        },\r\n      ],\r\n    },\r\n  ]);\r\n\r\n  const handleButtonClick = () => {\r\n    var data = {\r\n      to_name: \"pvchin\",\r\n      to_email: \"pvchinbn@gmail.com\",\r\n      message: \"This is a reminder!!\",\r\n      cc_to: \"pvchinbn@yahoo.com\",\r\n    };\r\n\r\n    emailjs.send(SERVICE_ID, TEMPLATE_ID, data, USER_ID).then(\r\n      function (response) {\r\n        console.log(response.status, response.text);\r\n        setEmailStatus(\"success\");\r\n      },\r\n      function (err) {\r\n        console.log(err);\r\n        setEmailStatus(\"failure\");\r\n      }\r\n    );\r\n    console.log(\"email\", emailstatus);\r\n    if (emailstatus === \"success\") {\r\n      toast({\r\n        title: \"Invalid email or password!\",\r\n        status: \"warning\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <paper className={fixedHeightPaper} style={{ backgroundColor: \"white\" }}>\r\n      <section className={classes.section}>\r\n        {/* <Image\r\n          cloudName=\"dlmzwvakr\"\r\n          secure=\"true\"\r\n          upload_preset=\"advtrade\"\r\n          publicId=\"smartsecurity-ss3_d21ecw.jpg\"\r\n        >\r\n          <Transformation\r\n            width=\"400\"\r\n            height=\"250\"\r\n            gravity=\"face\"\r\n            crop=\"thumb\"\r\n          />\r\n        </Image> */}\r\n        {/* <div>\r\n          <AdvancedImage cldImg={myImage} />\r\n        </div>{\" \"} */}\r\n\r\n        <Image\r\n          boxSize=\"200px\"\r\n          src=\"https://res.cloudinary.com/dlmzwvakr/image/upload/v1626538637/advtrade/smartsecurity-ss3_d21ecw.jpg\"\r\n          alt=\"Dan Abramov\"\r\n        />\r\n        <div className=\"App\">\r\n          <h1>\r\n            <center>React Table Demo</center>\r\n          </h1>\r\n          {/* <Table columns={columns} data={data} /> */}\r\n          <button onClick={handleButtonClick}>Send Email</button>\r\n        </div>\r\n      </section>\r\n    </paper>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  container: {\r\n    margin: 0,\r\n    padding: 0,\r\n    width: \"80vw\",\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"repeat(auto-fill,250px)\",\r\n    gridAutoRows: \"10px\",\r\n    position: \"absolute\",\r\n    left: \"50%\",\r\n    transform: \"translateX(-50%)\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"primary\",\r\n  },\r\n  fixedHeight: {\r\n    height: 800,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(10),\r\n    // display: \"flex\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid\",\r\n    width: \"100%\",\r\n    color: \"primary\",\r\n    bcakgroundColor: \"black\",\r\n  },\r\n  card: {\r\n    backgroundColor: \"black\",\r\n  },\r\n  section: {\r\n    width: \"90vw\",\r\n    margin: \"5rem auto\",\r\n    maxWidth: \"var(--max-width)\",\r\n  },\r\n  underline: {\r\n    width: \"5rem\",\r\n    height: \"0.25rem\",\r\n    marginBottom: \"1.25rem\",\r\n    background: \"var(--clr-primary-5)\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n  },\r\n  title: {\r\n    marginbottom: \"4rem\",\r\n    textAlign: \"center\",\r\n  },\r\n  jobscenter: {\r\n    width: \"80vw\",\r\n    margin: \"0 auto\",\r\n    maxWidth: \"var(--max-width)\",\r\n    flexDirection: \"row\",\r\n  },\r\n  btncontainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    marginBottom: \"4rem\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  jobbtn: {\r\n    background: \"transparent\",\r\n    borderColor: \"transparent\",\r\n    textTransform: \"capitalize\",\r\n    fontSize: \"1.25rem\",\r\n    letterSpacing: \"var(--spacing)\",\r\n    margin: \"0 0.5rem\",\r\n    transition: \"var(--transition)\",\r\n    cursor: \"pointer\",\r\n    padding: \"0.25rem 0\",\r\n    lineHeight: \"1\",\r\n    outlineColor: \"var(--clr-primary-10)\",\r\n    \"&:hover\": {\r\n      color: \"var(--clr-primary-5)\",\r\n      boxShadow: \"0 2px var(--clr-primary-5)\",\r\n    },\r\n  },\r\n  activebtn: {\r\n    color: \"var(--clr-primary-5)\",\r\n    boxShadow: \"0 2px var(--clr-primary-5)\",\r\n  },\r\n  jobinfo: {\r\n    fontWeight: \"400\",\r\n  },\r\n}));\r\n\r\nexport default Example;\r\n"],"sourceRoot":""}
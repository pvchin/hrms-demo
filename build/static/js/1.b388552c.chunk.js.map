{"version":3,"sources":["components/Export2ExcelDialog.js"],"names":["Export2Excel","React","lazy","months","name","value","Export2ExcelDialog","state","setState","field_width","dataset","onClose","useState","isLoad","setIsload","useHocPeriod","hocperiod","setHocPeriodYrId","setHocPeriodMthId","handleChange","evt","target","useEffect","year","month","p","size","w","py","children","minWidth","type","width","onChange","borderColor","isReadOnly","placeholder","map","rec","index","title","filename"],"mappings":"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","file":"static/js/1.b388552c.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  //AspectRatio,\r\n  Box,\r\n  Button,\r\n  //ButtonGroup,\r\n  //Center,\r\n  Checkbox,\r\n  //Container,\r\n  Divider,\r\n  //Flex,\r\n  FormControl,\r\n  //FormLabel,\r\n  //FormErrorMessage,\r\n  //FormHelperText,\r\n  //Grid,\r\n  //GridItem,\r\n  Heading,\r\n  HStack,\r\n  //Icon,\r\n  //IconButton,\r\n  //Image,\r\n  Input,\r\n  InputGroup,\r\n  InputLeftAddon,\r\n  //InputLeftElement,\r\n  //Modal,\r\n  //ModalOverlay,\r\n  //ModalContent,\r\n  //ModalHeader,\r\n  //ModalFooter,\r\n  //ModalBody,\r\n  //ModalCloseButton,\r\n  //Radio,\r\n  //RadioGroup,\r\n  Select,\r\n  //SimpleGrid,\r\n  //Stack,\r\n  //StackDivider,\r\n  //Text,\r\n  //Tabs,\r\n} from \"@chakra-ui/react\";\r\nimport { useHocPeriod } from \"./hoc/useHocPeriod\";\r\n//import Export2Excel from \"./Export2Excel\";\r\n\r\n// const initial_state = {\r\n//   type: \"\",\r\n//   month: new Date().getMonth(),\r\n//   year: new Date().getFullYear(),\r\n//   filename: \"\",\r\n//};\r\n\r\nconst Export2Excel = React.lazy(()=> import(\"./Export2Excel\"))\r\n\r\nconst months = [\r\n  { name: \"January\", value: 1 },\r\n  { name: \"February\", value: 2 },\r\n  { name: \"March\", value: 3 },\r\n  { name: \"April\", value: 4 },\r\n  { name: \"May\", value: 5 },\r\n  { name: \"June\", value: 6 },\r\n  { name: \"July\", value: 7 },\r\n  { name: \"August\", value: 8 },\r\n  { name: \"September\", value: 9 },\r\n  { name: \"October\", value: 10 },\r\n  { name: \"November\", value: 11 },\r\n  { name: \"December\", value: 12 },\r\n];\r\n\r\nconst Export2ExcelDialog = ({ state, setState, dataset, onClose }) => {\r\n  const field_width = \"138\";\r\n  const [isLoad, setIsload] = useState(true);\r\n  const { hocperiod, setHocPeriodYrId, setHocPeriodMthId } = useHocPeriod();\r\n  //console.log(\"expstate\", state);\r\n\r\n  const handleChange = (evt) => {\r\n    const value = evt.target.value;\r\n    setState({\r\n      ...state,\r\n      [evt.target.name]: value,\r\n    });\r\n    if (evt.target.name === \"month\") {\r\n      setIsload(true);\r\n    }\r\n    if (evt.target.name === \"year\") {\r\n      setIsload(true);\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    onClose();\r\n  };\r\n\r\n  useEffect(() => {\r\n    setHocPeriodYrId(state.year);\r\n    setHocPeriodMthId(state.month);\r\n    setIsload(false);\r\n  }, [isLoad]);\r\n\r\n  // useEffect(() => {\r\n  //   setState(initial_state);\r\n  //   setState({ ...formdata });\r\n  //   setState({ ...formdata });\r\n  //   console.log(\"laeve form\",state)\r\n  // }, [initialValues]);\r\n\r\n  return (\r\n    <Box>\r\n      <Box p={2}>\r\n        <Heading size=\"md\">EXPORT TO EXCEL DIALOG</Heading>\r\n      </Box>\r\n      {/* <Box>\r\n        <Export2Excel filename=\"hoc\" dataset={hoc} title=\"Hoc\" />\r\n      </Box> */}\r\n      <Divider />\r\n\r\n      <div>\r\n        <FormControl>\r\n          <InputGroup>\r\n            <HStack w=\"100%\" py={1}>\r\n              <InputLeftAddon children=\"Type\" minWidth={field_width} />\r\n              <Input\r\n                name=\"type\"\r\n                value={state.type}\r\n                width=\"full\"\r\n                onChange={handleChange}\r\n                borderColor=\"gray.400\"\r\n                isReadOnly\r\n                //textTransform=\"capitalize\"\r\n                //ref={ref}\r\n                placeholder=\"type\"\r\n              />\r\n            </HStack>\r\n          </InputGroup>\r\n        </FormControl>\r\n      </div>\r\n      <div>\r\n        <FormControl>\r\n          <InputGroup>\r\n            <HStack w=\"100%\" py={1}>\r\n              <InputLeftAddon children=\"Month\" minWidth={field_width} />\r\n              <Select\r\n                name=\"month\"\r\n                value={state.month}\r\n                width=\"full\"\r\n                onChange={handleChange}\r\n                borderColor=\"gray.400\"\r\n                //textTransform=\"capitalize\"\r\n                //ref={ref}\r\n                //placeholder=\"category\"\r\n              >\r\n                {months &&\r\n                  months.map((rec, index) => {\r\n                    return (\r\n                      <option key={rec.index} value={rec.value}>\r\n                        {rec.name}\r\n                      </option>\r\n                    );\r\n                  })}\r\n              </Select>\r\n            </HStack>\r\n          </InputGroup>\r\n        </FormControl>\r\n      </div>\r\n      <div>\r\n        <FormControl>\r\n          <InputGroup>\r\n            <HStack w=\"100%\" py={1}>\r\n              <InputLeftAddon children=\"Year\" minWidth={field_width} />\r\n              <Select\r\n                name=\"year\"\r\n                value={state.year}\r\n                width=\"full\"\r\n                onChange={handleChange}\r\n                borderColor=\"gray.400\"\r\n                //textTransform=\"capitalize\"\r\n                //ref={ref}\r\n                //placeholder=\"category\"\r\n              >\r\n                <option value=\"2021\">2021</option>\r\n                <option value=\"2022\">2022</option>\r\n              </Select>\r\n            </HStack>\r\n          </InputGroup>\r\n        </FormControl>\r\n      </div>\r\n      <div>\r\n        <FormControl>\r\n          <InputGroup>\r\n            <HStack w=\"100%\" py={1}>\r\n              <InputLeftAddon children=\"Title\" minWidth={field_width} />\r\n              <Input\r\n                name=\"title\"\r\n                value={state.title}\r\n                width=\"full\"\r\n                onChange={handleChange}\r\n                borderColor=\"gray.400\"\r\n                //ref={ref}\r\n                placeholder=\"title\"\r\n              />\r\n            </HStack>\r\n          </InputGroup>\r\n        </FormControl>\r\n      </div>\r\n      <div>\r\n        <FormControl>\r\n          <InputGroup>\r\n            <HStack w=\"100%\" py={1}>\r\n              <InputLeftAddon children=\"Filename\" minWidth={field_width} />\r\n              <Input\r\n                name=\"filename\"\r\n                value={state.filename}\r\n                width=\"full\"\r\n                onChange={handleChange}\r\n                borderColor=\"gray.400\"\r\n                //ref={ref}\r\n                placeholder=\"filename\"\r\n              />\r\n            </HStack>\r\n          </InputGroup>\r\n        </FormControl>\r\n      </div>\r\n      <Divider />\r\n      <Box p={2}>\r\n        <Export2Excel\r\n          filename={state.filename}\r\n          dataset={hocperiod}\r\n          title={state.title}\r\n        />\r\n      </Box>\r\n      {/* <div>\r\n          <Button\r\n            type=\"submit\"\r\n            colorScheme=\"teal\"\r\n            variant=\"solid\"\r\n            onClick={handleSubmit(onSubmit)}\r\n          >\r\n            Download\r\n          </Button>\r\n        </div> */}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Export2ExcelDialog;\r\n"],"sourceRoot":""}
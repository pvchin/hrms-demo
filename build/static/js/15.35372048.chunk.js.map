{"version":3,"sources":["helpers/CardLayout3.js","components/ApprovalManager.js","components/dailyallows/useDailyAllowsStatus.js"],"names":["useStyles","makeStyles","theme","root","maxWidth","card","margin","padding","border","borderRadius","backgroundColor","small","gridRowEnd","medium","large","CardLayout3","title","children","handleClick","classes","Card","className","CardHeader","action","IconButton","aria-label","onClick","CardContent","LeaveTableViewManager","React","lazy","LeaveTableManager","ExpenseTableView","ExpenseTableManager","PayslipTableViewManager","PayslipTableAdmin","DailyAllowancesTableViewManager","DailyAllowancesTableManager","FILTERSTRING","display","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","menuButtonHidden","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","spacing","breakpoints","up","appBarSpacer","content","height","overflow","container","paddingTop","paddingBottom","paper","flexDirection","fixedHeight","EmployeeView","useState","setLeavesdata","isLeaveDialogOpen","setIsLeaveDialogOpen","setExpensesdata","isExpenseDialogOpen","setIsExpenseDialogOpen","payslipsdata","setPayslipsdata","isPayslipDialogOpen","setIsPayslipDialogOpen","dailyallowancesdata","setDailyAllowancesdata","isDailyAllowancesDialogOpen","setIsDailyAllowancesDialogOpen","useDailyAllowsStatus","dailyallowsstatus","setDailyAllowsStatusId","useLeavesContext","leaves","loadPendingLeaves","useExpensesContext","expenses","loadPendingExpenses","loadPendingPayslips","usePayslipsContext","loadPendingDailyAllowances","useDailyAllowancesContext","handleLeaveDialogClose","handleExpenseDialogClose","handlePayslipDialogClose","handleDailyAllowancesDialogClose","dailyallowsfiltered","filter","r","status","style","paddingLeft","Container","Grid","item","xs","md","lg","Box","pt","Copyright","CustomDialog","isOpen","handleClose","showButton","isFullscreen","isFullwidth","handleDialogClose","a","axios","get","dailyallowances_url","data","empid","setFilter","dailyAllowsStatusId","selectFn","useCallback","unfiltered","filterByEmpId","useQuery","queryKeys","dailyallowstatus","getDailyAllowsStatus","select","undefined"],"mappings":"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","file":"static/js/15.35372048.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nconst CardLayout3 = ({ title, children, handleClick }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardHeader\r\n        action={\r\n          <div>\r\n            {/* <IconButton aria-label=\"settings\">\r\n              <Badge badgeContent={0} color=\"secondary\">\r\n                <NotificationsIcon />\r\n              </Badge>\r\n            </IconButton> */}\r\n            <IconButton aria-label=\"settings\" onClick={handleClick}>\r\n              <EditIcon />\r\n            </IconButton>\r\n          </div>\r\n        }\r\n        title={title}\r\n      />\r\n      <CardContent>{children}</CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: \"500\",\r\n  },\r\n  card: {\r\n    margin: \"15px 10px\",\r\n    padding: 0,\r\n    border: \"solid 1px black\",\r\n    borderRadius: \"16px\",\r\n    backgroundColor: \"dark\",\r\n  },\r\n  small: {\r\n    gridRowEnd: \"span 26\",\r\n  },\r\n  medium: {\r\n    gridRowEnd: \"span 33\",\r\n  },\r\n  large: {\r\n    gridRowEnd: \"span 45\",\r\n  },\r\n}));\r\n\r\nexport default CardLayout3;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n//import clsx from \"clsx\";\r\nimport { Grid, Container, Box } from \"@material-ui/core\";\r\n//import CardLayout from \"../helpers/CardLayout\";\r\n//import CardLayout2 from \"../helpers/CardLayout2\";\r\nimport CardLayout3 from \"../helpers/CardLayout3\";\r\nimport Copyright from \"./Copyright\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\n//import { useRecoilState } from \"recoil\";\r\n//import { loginLevelState } from \"./data/atomdata\";\r\nimport { useLeavesContext } from \"../context/leaves_context\";\r\nimport { useExpensesContext } from \"../context/expenses_context\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\nimport { useDailyAllowancesContext } from \"../context/dailyallowances_context\";\r\n//import LeaveTableViewManager from \"./LeaveTableViewManager\";\r\n//import LeaveTableManager from \"./LeaveTableManager\";\r\n//import ExpenseTableView from \"./ExpenseTableView\";\r\n//import ExpenseTableManager from \"./ExpenseTableManager\";\r\n//import PayslipTableViewManager from \"./PayslipTableViewManager\";\r\n//import PayslipTableAdmin from \"./PayslipTableAdmin\";\r\n//import DailyAllowancesTableView from \"./DailyAllowancesTableView\";\r\n//import DailyAllowancesTableAdmin from \"./DailyAllowancesTableAdmin\";\r\n//import OnLeavesView from \"./OnLeavesView\";\r\n//import WPExpiryView from \"./WPExpiryView\";\r\nimport { useDailyAllowsStatus } from \"./dailyallows/useDailyAllowsStatus\";\r\n\r\nconst LeaveTableViewManager = React.lazy(() =>\r\n  import(\"./LeaveTableViewManager\")\r\n);\r\nconst LeaveTableManager = React.lazy(() => import(\"./LeaveTableManager\"));\r\nconst ExpenseTableView = React.lazy(() => import(\"./ExpenseTableView\"));\r\nconst ExpenseTableManager = React.lazy(() => import(\"./ExpenseTableManager\"));\r\nconst PayslipTableViewManager = React.lazy(() =>\r\n  import(\"./PayslipTableViewManager\")\r\n);\r\nconst PayslipTableAdmin = React.lazy(() => import(\"./PayslipTableAdmin\"));\r\nconst DailyAllowancesTableViewManager = React.lazy(() =>\r\n  import(\"./DailyAllowancesTableViewManager\")\r\n);\r\nconst DailyAllowancesTableManager = React.lazy(() =>\r\n  import(\"./DailyAllowancesTableManager\")\r\n);\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst FILTERSTRING = \"Pending\";\r\n\r\nconst EmployeeView = () => {\r\n  const classes = useStyles();\r\n  //const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  //const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const [leavesdata, setLeavesdata] = useState([]);\r\n  const [isLeaveDialogOpen, setIsLeaveDialogOpen] = useState(false);\r\n  const [expensesdata, setExpensesdata] = useState([]);\r\n  const [isExpenseDialogOpen, setIsExpenseDialogOpen] = useState(false);\r\n  const [payslipsdata, setPayslipsdata] = useState([]);\r\n  const [isPayslipDialogOpen, setIsPayslipDialogOpen] = useState(false);\r\n  const [dailyallowancesdata, setDailyAllowancesdata] = useState([]);\r\n  const [isDailyAllowancesDialogOpen, setIsDailyAllowancesDialogOpen] =\r\n    useState(false);\r\n  const { dailyallowsstatus, setDailyAllowsStatusId } = useDailyAllowsStatus();\r\n  const { leaves, loadPendingLeaves } = useLeavesContext();\r\n  const { expenses, loadPendingExpenses } = useExpensesContext();\r\n  const { loadPendingPayslips } = usePayslipsContext();\r\n  const { loadPendingDailyAllowances } = useDailyAllowancesContext();\r\n\r\n  const handleLeaveDialogOpen = () => {\r\n    setLeavesdata([]);\r\n    setLeavesdata([...leaves]);\r\n    setIsLeaveDialogOpen(true);\r\n  };\r\n\r\n  const handleLeaveDialogClose = () => {\r\n    setIsLeaveDialogOpen(false);\r\n    loadPendingLeaves(FILTERSTRING);\r\n  };\r\n\r\n  const handleExpenseDialogOpen = () => {\r\n    setExpensesdata([]);\r\n    setExpensesdata({ ...expenses });\r\n    setExpensesdata({ ...expenses });\r\n    setIsExpenseDialogOpen(true);\r\n  };\r\n\r\n  const handleExpenseDialogClose = () => {\r\n    setIsExpenseDialogOpen(false);\r\n    loadPendingExpenses(FILTERSTRING);\r\n  };\r\n\r\n  const handlePayslipDialogOpen = () => {\r\n    setPayslipsdata([]);\r\n    //setPayslipsdata([...batchpayslips]);\r\n    setIsPayslipDialogOpen(true);\r\n  };\r\n\r\n  const handlePayslipDialogClose = () => {\r\n    setIsPayslipDialogOpen(false);\r\n    loadPendingPayslips(FILTERSTRING);\r\n  };\r\n\r\n  const handleDailyAllowancesDialogOpen = () => {\r\n    setDailyAllowancesdata([]);\r\n    setDailyAllowancesdata([...dailyallowsstatus]);\r\n    setIsDailyAllowancesDialogOpen(true);\r\n  };\r\n\r\n  const handleDailyAllowancesDialogClose = () => {\r\n    setIsDailyAllowancesDialogOpen(false);\r\n    loadPendingDailyAllowances(FILTERSTRING);\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   setDailyAllowsStatusId(\"Verified\");\r\n  // },[])\r\n\r\n  const dailyallowsfiltered = dailyallowancesdata.filter(\r\n    (r) => r.status === \"Submitted\" || r.status === \"Verified\"\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.appBarSpacer} />\r\n      <div style={{ paddingLeft: 50 }}>\r\n        {/* <h2>Welcome {loginLevel.loginUser}!</h2>\r\n        <h3>Dashboard</h3> */}\r\n      </div>\r\n      <Container maxWidth=\"lg\" className={classes.container}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} md={8} lg={12}>\r\n            <CardLayout3\r\n              title=\"Leaves pending for approval\"\r\n              handleClick={handleLeaveDialogOpen}\r\n            >\r\n              <LeaveTableViewManager />\r\n            </CardLayout3>\r\n          </Grid>\r\n          <Grid item xs={12} md={8} lg={12}>\r\n            <CardLayout3\r\n              title=\"Expenses pending for approval\"\r\n              handleClick={handleExpenseDialogOpen}\r\n            >\r\n              <ExpenseTableView />\r\n            </CardLayout3>\r\n          </Grid>\r\n          <Grid item xs={12} md={8} lg={12}>\r\n            <CardLayout3\r\n              title=\"Site Allowances pending for approval\"\r\n              handleClick={handleDailyAllowancesDialogOpen}\r\n            >\r\n              <DailyAllowancesTableViewManager />\r\n            </CardLayout3>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={8} lg={12}>\r\n            <CardLayout3\r\n              title=\"Payroll pending for approval\"\r\n              handleClick={handlePayslipDialogOpen}\r\n            >\r\n              <PayslipTableViewManager />\r\n            </CardLayout3>\r\n          </Grid>\r\n        </Grid>\r\n        <Box pt={4}>\r\n          <Copyright />\r\n        </Box>\r\n        <CustomDialog\r\n          isOpen={isLeaveDialogOpen}\r\n          handleClose={handleLeaveDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscreen={false}\r\n          isFullwidth={false}\r\n        >\r\n          <LeaveTableManager\r\n            setLeavesdata={setLeavesdata}\r\n            //leavesdata={leavesdata}\r\n            handleDialogClose={handleLeaveDialogClose}\r\n          />\r\n        </CustomDialog>\r\n        <CustomDialog\r\n          isOpen={isExpenseDialogOpen}\r\n          handleClose={handleExpenseDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscreen={false}\r\n          isFullwidth={false}\r\n        >\r\n          <ExpenseTableManager\r\n            setExpensesdata={setExpensesdata}\r\n            //expensesdata={expensesdata}\r\n            handleDialogClose={handleExpenseDialogClose}\r\n          />\r\n        </CustomDialog>\r\n        <CustomDialog\r\n          isOpen={isPayslipDialogOpen}\r\n          handleClose={handlePayslipDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscreen={true}\r\n          isFullwidth={false}\r\n        >\r\n          <PayslipTableAdmin\r\n            setPayslipsdata={setPayslipsdata}\r\n            payslipsdata={payslipsdata}\r\n            handleDialogClose={handlePayslipDialogClose}\r\n          />\r\n        </CustomDialog>\r\n        <CustomDialog\r\n          isOpen={isDailyAllowancesDialogOpen}\r\n          handleClose={handleDailyAllowancesDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscreen={true}\r\n          isFullwidth={false}\r\n        >\r\n          <DailyAllowancesTableManager\r\n            setDailyAllowancesdata={setDailyAllowancesdata}\r\n            dailyallowancesdata={dailyallowsfiltered}\r\n            handleDialogClose={handleDailyAllowancesDialogClose}\r\n          />\r\n        </CustomDialog>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n\r\nexport default EmployeeView;\r\n","import { useState, useCallback } from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport { dailyallowances_url } from \"../../utils/constants\";\r\nimport { filterByEmpId } from \"./utils\";\r\n\r\nimport axios from \"axios\";\r\nimport { queryKeys } from \"../react-query/constants\";\r\n\r\nasync function getDailyAllowsStatus(status) {\r\n  const { data } = await axios.get(`${dailyallowances_url}?fi=${status}`);\r\n  //const { data } = await axios.get(`${dailyallowances_url}`);\r\n  return data;\r\n}\r\n\r\nexport function useDailyAllowsStatus(empid) {\r\n  const [filter, setFilter] = useState(\"all\");\r\n  const [dailyAllowsStatusId, setDailyAllowsStatusId] = useState(\"\");\r\n\r\n  const selectFn = useCallback(\r\n    (unfiltered) => filterByEmpId(unfiltered, filter),\r\n    [filter]\r\n  );\r\n\r\n  const fallback = [];\r\n  const { data: dailyallowsstatus = fallback } = useQuery(\r\n    [queryKeys.dailyallowstatus, dailyAllowsStatusId],\r\n\r\n    () => getDailyAllowsStatus(dailyAllowsStatusId),\r\n    {\r\n      select: filter !== \"all\" ? selectFn : undefined,\r\n    }\r\n  );\r\n\r\n  return {\r\n    dailyallowsstatus,\r\n    filter,\r\n    setFilter,\r\n    setDailyAllowsStatusId,\r\n  };\r\n}\r\n"],"sourceRoot":""}
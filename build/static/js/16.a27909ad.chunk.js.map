{"version":3,"sources":["components/DailyAllowancesTableVerify.js","components/dailyallows/useDailyAllowsStatus.js"],"names":["DailyAllowancesTable","toast","useCustomToast","classes","useStyles","useState","isDialogOpen","useRecoilState","allowsDataState","allowsdata","setAllowsdata","useDailyAllowsStatus","dailyallowsstatus","setDailyAllowsStatusId","updateDailyAllows","useUpdateDailyAllows","columns","useMemo","title","field","editable","type","editComponent","props","onChange","e","target","value","style","width","select","useEffect","Verify_DailyAllowancesData","forEach","rec","tableData","checked","status","id","d","Reject_DailyAllowancesData","className","root","maxWidth","paddingTop","data","icons","Add","Edit","Delete","Clear","Check","Search","ResetSearch","options","filtering","selection","headerStyle","backgroundColor","color","showTitle","components","Toolbar","p","variant","bgColor","onClick","dialog","isOpen","showButton","isFullscreen","isFullwidth","makeStyles","theme","padding","button","margin","spacing","a","axios","get","dailyallowances_url","empid","filter","setFilter","dailyAllowsStatusId","selectFn","useCallback","unfiltered","filterByEmpId","useQuery","queryKeys","dailyallowstatus","getDailyAllowsStatus","undefined"],"mappings":"0XAgCe,SAASA,IAEtB,IAAMC,EAAQC,cACRC,EAAUC,IAH6B,EAILC,oBAAS,GAJJ,mBAItCC,EAJsC,aAQTC,YAAeC,MARN,mBAQtCC,EARsC,KAQ1BC,EAR0B,OASSC,cAA9CC,EATqC,EASrCA,kBAAmBC,EATkB,EASlBA,uBACrBC,EAAoBC,cAIpBC,EAAUC,mBACd,iBAAM,CACJ,CACEC,MAAO,OACPC,MAAO,OACPC,SAAU,SAEZ,CAAEF,MAAO,SAAUC,MAAO,SAAUC,SAAU,SAC9C,CAAEF,MAAO,WAAYC,MAAO,WAAYC,SAAU,SAClD,CAAEF,MAAO,eAAgBC,MAAO,UAAWC,SAAU,SACrD,CACEF,MAAO,aACPC,MAAO,aACPE,KAAM,UACND,SAAU,SAEZ,CAAEF,MAAO,SAAUC,MAAO,SAAUE,KAAM,WAAYD,SAAU,SAChE,CACEF,MAAO,SACPC,MAAO,SACPG,cAAe,SAACC,GAAD,OACb,eAAC,IAAD,CAEEC,SAAU,SAACC,GAAD,OAAOF,EAAMC,SAASC,EAAEC,OAAOC,QACzCC,MAAO,CAAEC,MAAO,KAChBF,MAAOJ,EAAMI,MACbG,QAAM,EALR,UAOE,cAAC,IAAD,CAAUH,MAAM,UAAhB,qBACA,cAAC,IAAD,CAAUA,MAAM,WAAhB,sBACA,cAAC,IAAD,CAAUA,MAAM,WAAhB,sBACA,cAAC,IAAD,CAAUA,MAAM,SAAhB,4BAKR,IAGFI,qBAAU,WACRlB,EAAuB,eACtB,IAYH,IAAMmB,EAA6B,WACjCpB,EAAkBqB,SAAQ,SAACC,GACrBA,EAAIC,UAAUC,UACGF,EACRG,OAAS,WACpBvB,EAAkB,CAAEwB,GAAIJ,EAAII,GAAID,OAAQ,aACxCpC,EAAM,CACJiB,MAAO,oCACPmB,OAAQ,gBASdzB,EAAkBqB,SAAQ,SAACM,GACrBA,EAAEJ,YAAWI,EAAEJ,UAAUC,SAAU,OAIrCI,EAA6B,WACjC5B,EAAkBqB,SAAQ,SAACC,GACrBA,EAAIC,UAAUC,UACGF,EACRG,OAAS,WACpBvB,EAAkB,CAAEwB,GAAIJ,EAAII,GAAID,OAAQ,aACxCpC,EAAM,CACJiB,MAAO,qCACPmB,OAAQ,gBASdzB,EAAkBqB,SAAQ,SAACM,GACrBA,EAAEJ,YAAWI,EAAEJ,UAAUC,SAAU,OAI3C,OACE,qBAAKK,UAAWtC,EAAQuC,KAAxB,SACE,sBAAKd,MAAO,CAAEe,SAAU,OAAQC,WAAY,OAA5C,UACE,cAAC,IAAD,CACE5B,QAASA,EACT6B,KAAMjC,EACNM,MAAM,0BACN4B,MAAO,CACLC,IAAK,SAACxB,GAAD,OAAW,cAAC,IAAD,KAChByB,KAAM,SAACzB,GAAD,OAAW,cAAC,IAAD,KACjB0B,OAAQ,SAAC1B,GAAD,OAAW,cAAC,IAAD,KACnB2B,MAAO,SAAC3B,GAAD,OAAW,cAAC,IAAD,KAClB4B,MAAO,SAAC5B,GAAD,OAAW,cAAC,IAAD,KAClB6B,OAAQ,SAAC7B,GAAD,OAAW,cAAC,IAAD,KACnB8B,YAAa,SAAC9B,GAAD,OAAW,cAAC,IAAD,MAgB1B+B,QAAS,CACPC,WAAW,EACXC,WAAW,EACXC,YAAa,CACXC,gBAAiB,wBACjBC,MAAO,SAETC,WAAW,GAEbC,WAAY,CACVC,QAAS,SAACvC,GAAD,OACP,gCACE,cAAC,gBAAD,eAAmBA,IACnB,eAAC,IAAD,CAAQwC,EAAG,EAAX,UACE,cAAC,IAAD,CACE1C,KAAK,SACL2C,QAAQ,QACRL,MAAM,QACNM,QAAQ,MACRC,QAASlC,EALX,oBASA,cAAC,IAAD,CACEX,KAAK,SACL2C,QAAQ,QACRL,MAAM,QACNM,QAAQ,MACRC,QAAS1B,EALX,8BAcV,qBAAKC,UAAWtC,EAAQgE,OAAxB,SACE,cAAC,IAAD,CACEC,OAAQ9D,EAERY,MAAM,GACNmD,YAAY,EACZC,cAAc,EACdC,aAAa,EANf,SAQE,cAAC,IAAD,CACE7D,cAAeA,EACfD,WAAYA,aAU1B,IAAML,EAAYoE,aAAW,SAACC,GAAD,MAAY,CACvC/B,KAAM,CACJgC,QAAS,GAEXC,OAAQ,CACNC,OAAQH,EAAMI,QAAQ,IAExBV,OAAQ,CACNtC,MAAO,U,2MCvOX,WAAoCQ,GAApC,iBAAAyC,EAAA,sEACyBC,IAAMC,IAAN,UAAaC,IAAb,eAAuC5C,IADhE,uBACUQ,EADV,EACUA,KADV,kBAGSA,GAHT,4C,sBAMO,SAASlC,EAAqBuE,GAAQ,IAAD,EACd7E,mBAAS,OADK,mBACnC8E,EADmC,KAC3BC,EAD2B,OAEY/E,mBAAS,IAFrB,mBAEnCgF,EAFmC,KAEdxE,EAFc,KAIpCyE,EAAWC,uBACf,SAACC,GAAD,OAAgBC,YAAcD,EAAYL,KAC1C,CAACA,IANuC,EAUKO,mBAC7C,CAACC,IAAUC,iBAAkBP,IAE7B,kB,2CAAMQ,CAAqBR,KAC3B,CACEvD,OAAmB,QAAXqD,EAAmBG,OAAWQ,IALlCjD,KASR,MAAO,CACLjC,uBApBwC,MASzB,GATyB,EAqBxCuE,SACAC,YACAvE","file":"static/js/16.a27909ad.chunk.js","sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { TextField, MenuItem } from \"@material-ui/core\";\r\nimport { Button, HStack } from \"@chakra-ui/react\";\r\nimport {\r\n  useSetRecoilState,\r\n  useRecoilValue,\r\n  useRecoilState,\r\n  ///useRecoilValueLoadable,\r\n} from \"recoil\";\r\nimport {\r\n  allowsPeriodState,\r\n  allowsDataState,\r\n  empidState,\r\n} from \"./data/atomdata\";\r\n//import { fetchDailyAllowancesSelector } from \"./data/selectordata\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n//import ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { useCustomToast } from \"../helpers/useCustomToast\";\r\n//import { useEmployeesContext } from \"../context/employees_context\";\r\nimport DailyAllowsDetlsTable from \"./DailyAllowsDetlsTable\";\r\nimport { useDailyAllowsStatus } from \"./dailyallows/useDailyAllowsStatus\";\r\nimport { useUpdateDailyAllows } from \"./dailyallows/useUpdateDailyAllows\";\r\n\r\n//const FILTERSTRING = \"Submitted\";\r\n\r\nexport default function DailyAllowancesTable() {\r\n  //let history = useHistory();\r\n  const toast = useCustomToast();\r\n  const classes = useStyles();\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  //const [tmpallowsdata, setTmpallowsdata] = useState([]);\r\n  //const allows_period = useRecoilValue(allowsPeriodState);\r\n  //const allows_empid = useRecoilValue(empidState);\r\n  const [allowsdata, setAllowsdata] = useRecoilState(allowsDataState);\r\n  const { dailyallowsstatus, setDailyAllowsStatusId } = useDailyAllowsStatus();\r\n  const updateDailyAllows = useUpdateDailyAllows();\r\n  //const setEmpID = useSetRecoilState(empidState);\r\n  //const title = `Site Allowances (${allows_period})`;\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        title: \"Name\",\r\n        field: \"name\",\r\n        editable: \"never\",\r\n      },\r\n      { title: \"Period\", field: \"period\", editable: \"never\" },\r\n      { title: \"Location\", field: \"location\", editable: \"never\" },\r\n      { title: \"Manager Name\", field: \"manager\", editable: \"never\" },\r\n      {\r\n        title: \"No Of Days\",\r\n        field: \"no_of_days\",\r\n        type: \"numeric\",\r\n        editable: \"never\",\r\n      },\r\n      { title: \"Amount\", field: \"amount\", type: \"currency\", editable: \"never\" },\r\n      {\r\n        title: \"Status\",\r\n        field: \"status\",\r\n        editComponent: (props) => (\r\n          <TextField\r\n            //defaultValue={props.value || null}\r\n            onChange={(e) => props.onChange(e.target.value)}\r\n            style={{ width: 100 }}\r\n            value={props.value}\r\n            select\r\n          >\r\n            <MenuItem value=\"Pending\">Pending</MenuItem>\r\n            <MenuItem value=\"Approved\">Approved</MenuItem>\r\n            <MenuItem value=\"Rejected\">Rejected</MenuItem>\r\n            <MenuItem value=\"Cancel\">Cancel</MenuItem>\r\n          </TextField>\r\n        ),\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  useEffect(() => {\r\n    setDailyAllowsStatusId(\"Submitted\");\r\n  }, []);\r\n\r\n  // const Save_DailyAllowancesData = () => {\r\n  //   dailyallowsstatus.forEach((data) => {\r\n  //     const { id } = data;\r\n  //     if (id) {\r\n  //       const { id, rec_id, tableData, ...fields } = data;\r\n  //       updateDailyAllowance({ id, ...fields });\r\n  //     }\r\n  //   });\r\n  // };\r\n\r\n  const Verify_DailyAllowancesData = () => {\r\n    dailyallowsstatus.forEach((rec) => {\r\n      if (rec.tableData.checked) {\r\n        const currentrec = rec;\r\n        currentrec.status = \"Verified\";\r\n        updateDailyAllows({ id: rec.id, status: \"Verified\" });\r\n        toast({\r\n          title: \"Site Allows record being updated!\",\r\n          status: \"success\",\r\n        });\r\n        //update leavesdata\r\n        // if (!update_dailyallowance_error) {\r\n        //   const recdata = dailyallowancesdata.filter((r) => r.id === rec.id);\r\n        //   recdata[0].status = \"Approved\";\r\n        // }\r\n      }\r\n    });\r\n    dailyallowsstatus.forEach((d) => {\r\n      if (d.tableData) d.tableData.checked = false;\r\n    });\r\n  };\r\n\r\n  const Reject_DailyAllowancesData = () => {\r\n    dailyallowsstatus.forEach((rec) => {\r\n      if (rec.tableData.checked) {\r\n        const currentrec = rec;\r\n        currentrec.status = \"Rejected\";\r\n        updateDailyAllows({ id: rec.id, status: \"Rejected\" });\r\n        toast({\r\n          title: \"Site Allows record being rejected!\",\r\n          status: \"warning\",\r\n        });\r\n        //update leavesdata\r\n        // if (!update_dailyallowance_error) {\r\n        //   const recdata = dailyallowancesdata.filter((r) => r.id === rec.id);\r\n        //   recdata[0].status = \"Rejected\";\r\n        // }\r\n      }\r\n    });\r\n    dailyallowsstatus.forEach((d) => {\r\n      if (d.tableData) d.tableData.checked = false;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={dailyallowsstatus}\r\n          title=\"Site Allows Application\"\r\n          icons={{\r\n            Add: (props) => <AddIcon />,\r\n            Edit: (props) => <EditIcon />,\r\n            Delete: (props) => <DeleteIcon />,\r\n            Clear: (props) => <DeleteIcon />,\r\n            Check: (props) => <CheckIcon />,\r\n            Search: (props) => <SearchIcon />,\r\n            ResetSearch: (props) => <DeleteIcon />,\r\n          }}\r\n          // editable={{\r\n          //   onRowUpdate: (newData, oldData) =>\r\n          //     new Promise((resolve, reject) => {\r\n          //       setTimeout(() => {\r\n          //         const dataUpdate = [...dailyallowancesdata];\r\n          //         const index = oldData.tableData.id;\r\n          //         dataUpdate[index] = newData;\r\n          //         setDailyAllowancesdata([...dataUpdate]);\r\n          //         //approve_Expense(newData);\r\n\r\n          //         resolve();\r\n          //       }, 1000);\r\n          //     }),\r\n          // }}\r\n          options={{\r\n            filtering: true,\r\n            selection: true,\r\n            headerStyle: {\r\n              backgroundColor: \"rgba(75, 192, 192, 1)\",\r\n              color: \"white\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n                <HStack p={2}>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"solid\"\r\n                    color=\"white\"\r\n                    bgColor=\"red\"\r\n                    onClick={Verify_DailyAllowancesData}\r\n                  >\r\n                    Verify\r\n                  </Button>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"solid\"\r\n                    color=\"white\"\r\n                    bgColor=\"red\"\r\n                    onClick={Reject_DailyAllowancesData}\r\n                  >\r\n                    Reject\r\n                  </Button>\r\n                </HStack>\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n        <div className={classes.dialog}>\r\n          <CustomDialog\r\n            isOpen={isDialogOpen}\r\n            //handleClose={handleDialogClose}\r\n            title=\"\"\r\n            showButton={true}\r\n            isFullscreen={true}\r\n            isFullwidth={true}\r\n          >\r\n            <DailyAllowsDetlsTable\r\n              setAllowsdata={setAllowsdata}\r\n              allowsdata={allowsdata}\r\n              //handleDialogClose={handleDialogClose}\r\n            />\r\n          </CustomDialog>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  dialog: {\r\n    width: 1000,\r\n  },\r\n}));\r\n","import { useState, useCallback } from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport { dailyallowances_url } from \"../../utils/constants\";\r\nimport { filterByEmpId } from \"./utils\";\r\n\r\nimport axios from \"axios\";\r\nimport { queryKeys } from \"../react-query/constants\";\r\n\r\nasync function getDailyAllowsStatus(status) {\r\n  const { data } = await axios.get(`${dailyallowances_url}?fi=${status}`);\r\n  //const { data } = await axios.get(`${dailyallowances_url}`);\r\n  return data;\r\n}\r\n\r\nexport function useDailyAllowsStatus(empid) {\r\n  const [filter, setFilter] = useState(\"all\");\r\n  const [dailyAllowsStatusId, setDailyAllowsStatusId] = useState(\"\");\r\n\r\n  const selectFn = useCallback(\r\n    (unfiltered) => filterByEmpId(unfiltered, filter),\r\n    [filter]\r\n  );\r\n\r\n  const fallback = [];\r\n  const { data: dailyallowsstatus = fallback } = useQuery(\r\n    [queryKeys.dailyallowstatus, dailyAllowsStatusId],\r\n\r\n    () => getDailyAllowsStatus(dailyAllowsStatusId),\r\n    {\r\n      select: filter !== \"all\" ? selectFn : undefined,\r\n    }\r\n  );\r\n\r\n  return {\r\n    dailyallowsstatus,\r\n    filter,\r\n    setFilter,\r\n    setDailyAllowsStatusId,\r\n  };\r\n}\r\n"],"sourceRoot":""}
{"version":3,"sources":["components/PayslipTableViewManager.js"],"names":["PayslipTableVIew","classes","useStyles","usePayslipsContext","batchpayrun","getBatchPayrun","columns","useMemo","title","field","editable","type","useEffect","className","root","style","maxWidth","paddingTop","data","options","filtering","search","toolbar","headerStyle","backgroundColor","color","showTitle","makeStyles","theme","padding"],"mappings":"gGAAA,mGAYe,SAASA,IAEtB,IAAMC,EAAUC,IAFyB,EAUrCC,cALFC,EALuC,EAKvCA,YACAC,EANuC,EAMvCA,eAOIC,EAAUC,mBACd,iBAAM,CACJ,CACEC,MAAO,QACPC,MAAO,SACPC,SAAU,SAUZ,CACEF,MAAO,QACPC,MAAO,aACPE,KAAM,WACND,SAAU,SAEZ,CACEF,MAAO,aACPC,MAAO,WACPE,KAAM,WACND,SAAU,SAEZ,CACEF,MAAO,aACPC,MAAO,WACPE,KAAM,WACND,SAAU,SAEZ,CACEF,MAAO,kBACPC,MAAO,mBACPE,KAAM,WACND,SAAU,SAEZ,CACEF,MAAO,kBACPC,MAAO,sBACPE,KAAM,WACND,SAAU,SAEZ,CACEF,MAAO,aACPC,MAAO,cACPE,KAAM,WACND,SAAU,SAEZ,CACEF,MAAO,aACPC,MAAO,eACPE,KAAM,WACND,SAAU,SAEZ,CACEF,MAAO,UACPC,MAAO,eACPE,KAAM,WACND,SAAU,SAIZ,CAAEF,MAAO,SAAUC,MAAO,SAAUC,SAAU,YAEhD,IAOF,OAJAE,qBAAU,WACRP,EAtFiB,cAuFhB,IAGD,qBAAKQ,UAAWZ,EAAQa,KAAxB,SACE,qBAAKC,MAAO,CAAEC,SAAU,OAAQC,WAAY,OAA5C,SACE,cAAC,IAAD,CACEX,QAASA,EACTY,KAAMd,EACNI,MAAM,WACNW,QAAS,CACPC,WAAW,EACXC,QAAQ,EACRC,SAAS,EACTC,YAAa,CACXC,gBAAiB,UACjBC,MAAO,SAETC,WAAW,SAQvB,IAAMxB,EAAYyB,aAAW,SAACC,GAAD,MAAY,CACvCd,KAAM,CACJe,QAAS","file":"static/js/26.dfedc42f.chunk.js","sourcesContent":["import React, { useEffect, useMemo } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n//import {\r\n//payPeriodState,\r\n//payPeriodEndMonthState,\r\n//payPeriodEmpIdState,\r\n//} from \"./data/atomdata\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\n\r\nconst FILTERSTRING = \"Verified\";\r\n\r\nexport default function PayslipTableVIew() {\r\n  //et history = useHistory();\r\n  const classes = useStyles();\r\n\r\n  const {\r\n    batchpayrun,\r\n    getBatchPayrun,\r\n    //batchpayrun_loading,\r\n    //batchpayrun_error,\r\n    //loadPendingPayslips,\r\n  } = usePayslipsContext();\r\n  //const { loadEmployees, employees } = useEmployeesContext();\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        title: \"Batch\",\r\n        field: \"payrun\",\r\n        editable: \"never\",\r\n      },\r\n      // { title: \"Period\", field: \"period\", editable: \"never\" },\r\n      // {\r\n      //   title: \"PayDate\",\r\n      //   field: \"pay_date\",\r\n      //   type: \"date\",\r\n      //   dateSetting: { locale: \"en-GB\" },\r\n      //   editable: \"never\",\r\n      // },\r\n      {\r\n        title: \"Wages\",\r\n        field: \"totalwages\",\r\n        type: \"currency\",\r\n        editable: \"never\",\r\n      },\r\n      {\r\n        title: \"TAP Amount\",\r\n        field: \"totaltap\",\r\n        type: \"currency\",\r\n        editable: \"never\",\r\n      },\r\n      {\r\n        title: \"SCP Amount\",\r\n        field: \"totalscp\",\r\n        type: \"currency\",\r\n        editable: \"never\",\r\n      },\r\n      {\r\n        title: \"Site Allowances\",\r\n        field: \"totalsitesallows\",\r\n        type: \"currency\",\r\n        editable: \"never\",\r\n      },\r\n      {\r\n        title: \"Expenses Claims\",\r\n        field: \"totalexpensesclaims\",\r\n        type: \"currency\",\r\n        editable: \"never\",\r\n      },\r\n      {\r\n        title: \"Allowances\",\r\n        field: \"totalallows\",\r\n        type: \"currency\",\r\n        editable: \"never\",\r\n      },\r\n      {\r\n        title: \"Deductions\",\r\n        field: \"totaldeducts\",\r\n        type: \"currency\",\r\n        editable: \"never\",\r\n      },\r\n      {\r\n        title: \"Payroll\",\r\n        field: \"totalpayroll\",\r\n        type: \"currency\",\r\n        editable: \"never\",\r\n      },\r\n      // { title: \"Bank Name\", field: \"bank_name\" },\r\n      // { title: \"Bank AC No\", field: \"bank_accno\" },\r\n      { title: \"Status\", field: \"status\", editable: \"never\" },\r\n    ],\r\n    []\r\n  );\r\n\r\n  useEffect(() => {\r\n    getBatchPayrun(FILTERSTRING);\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={batchpayrun}\r\n          title=\"Payslips\"\r\n          options={{\r\n            filtering: false,\r\n            search: false,\r\n            toolbar: false,\r\n            headerStyle: {\r\n              backgroundColor: \"#90CDF4\",\r\n              color: \"black\",\r\n            },\r\n            showTitle: false,\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n"],"sourceRoot":""}
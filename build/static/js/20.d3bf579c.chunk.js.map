{"version":3,"sources":["components/DailyAllowancesTableManager.js"],"names":["DailyAllowancesTable","dailyallowancesdata","update_dailyallowance_error","setDailyAllowancesdata","handleDialogClose","classes","useStyles","useState","isDialogOpen","allows_period","useRecoilValue","allowsPeriodState","useRecoilState","allowsDataState","allowsdata","setAllowsdata","title","updateDailyAllowance","useDailyAllowancesContext","columns","useMemo","field","editable","type","editComponent","props","onChange","e","target","value","style","width","select","Approve_DailyAllowancesData","forEach","rec","tableData","checked","id","status","filter","r","d","Reject_DailyAllowancesData","className","root","maxWidth","paddingTop","data","icons","Add","Edit","Delete","Clear","Check","Search","ResetSearch","options","filtering","selection","headerStyle","backgroundColor","color","showTitle","components","Toolbar","padding","variant","button","onClick","dialog","isOpen","handleClose","showButton","isFullscreen","isFullwidth","makeStyles","theme","margin","spacing"],"mappings":"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","file":"static/js/20.d3bf579c.chunk.js","sourcesContent":["import React, { useState, useMemo } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { TextField, Button, MenuItem } from \"@material-ui/core\";\r\nimport {\r\n  //useSetRecoilState,\r\n  useRecoilValue,\r\n  useRecoilState,\r\n  //useRecoilValueLoadable,\r\n} from \"recoil\";\r\nimport {\r\n  allowsPeriodState,\r\n  allowsDataState,\r\n  //empidState,\r\n} from \"./data/atomdata\";\r\n//import { fetchDailyAllowancesSelector } from \"./data/selectordata\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n//import ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { useDailyAllowancesContext } from \"../context/dailyallowances_context\";\r\n//import { useEmployeesContext } from \"../context/employees_context\";\r\nimport DailyAllowsDetlsTable from \"./DailyAllowsDetlsTable\";\r\n\r\n//const FILTERSTRING = \"Submitted\";\r\n\r\nexport default function DailyAllowancesTable({\r\n  dailyallowancesdata,\r\n  setDailyAllowancesdata,\r\n  update_dailyallowance_error,\r\n  handleDialogClose,\r\n}) {\r\n  //let history = useHistory();\r\n  const classes = useStyles();\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  //const [tmpallowsdata, setTmpallowsdata] = useState([]);\r\n  const allows_period = useRecoilValue(allowsPeriodState);\r\n  //const allows_empid = useRecoilValue(empidState);\r\n  const [allowsdata, setAllowsdata] = useRecoilState(allowsDataState);\r\n  //const setEmpID = useSetRecoilState(empidState);\r\n  const title = `Site Allowances (${allows_period})`;\r\n  const {\r\n    //dailyallowances_loading,\r\n    //singlebatch_dailyallowance,\r\n    //singlebatch_dailyallowance_loading,\r\n    //deleteDailyAllowance,\r\n    updateDailyAllowance,\r\n    //setEditDailyAllowanceID,\r\n    //setIsDailyAllowanceEditingOn,\r\n    //setIsDailyAllowanceEditingOff,\r\n    //resetSingleDailyAllowance,\r\n    //dailyallowance_period,\r\n    //getSingleBatchDailyAllowance,\r\n  } = useDailyAllowancesContext();\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        title: \"Name\",\r\n        field: \"name\",\r\n        editable: \"never\",\r\n      },\r\n      { title: \"Period\", field: \"period\", editable: \"never\" },\r\n      { title: \"Location\", field: \"location\", editable: \"never\" },\r\n      { title: \"Manager Name\", field: \"manager\", editable: \"never\" },\r\n      {\r\n        title: \"No Of Days\",\r\n        field: \"no_of_days\",\r\n        type: \"numeric\",\r\n        editable: \"never\",\r\n      },\r\n      { title: \"Amount\", field: \"amount\", type: \"currency\", editable: \"never\" },\r\n      {\r\n        title: \"Status\",\r\n        field: \"status\",\r\n        editComponent: (props) => (\r\n          <TextField\r\n            //defaultValue={props.value || null}\r\n            onChange={(e) => props.onChange(e.target.value)}\r\n            style={{ width: 100 }}\r\n            value={props.value}\r\n            select\r\n          >\r\n            <MenuItem value=\"Pending\">Pending</MenuItem>\r\n            <MenuItem value=\"Approved\">Approved</MenuItem>\r\n            <MenuItem value=\"Rejected\">Rejected</MenuItem>\r\n            <MenuItem value=\"Cancel\">Cancel</MenuItem>\r\n          </TextField>\r\n        ),\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  // const Save_DailyAllowancesData = () => {\r\n  //   dailyallowancesdata.forEach((data) => {\r\n  //     const { id } = data;\r\n  //     if (id) {\r\n  //       const { id, rec_id, tableData, ...fields } = data;\r\n  //       updateDailyAllowance({ id, ...fields });\r\n  //     }\r\n  //   });\r\n\r\n  //   handleDialogClose();\r\n  // };\r\n\r\n  const Approve_DailyAllowancesData = () => {\r\n    dailyallowancesdata.forEach((rec) => {\r\n      if (rec.tableData.checked) {\r\n        updateDailyAllowance({ id: rec.id, status: \"Approved\" });\r\n        //update leavesdata\r\n        if (!update_dailyallowance_error) {\r\n          const recdata = dailyallowancesdata.filter((r) => r.id === rec.id);\r\n          recdata[0].status = \"Approved\";\r\n        }\r\n      }\r\n    });\r\n    dailyallowancesdata.forEach((d) => {\r\n      if (d.tableData) d.tableData.checked = false;\r\n    });\r\n  };\r\n\r\n  const Reject_DailyAllowancesData = () => {\r\n    dailyallowancesdata.forEach((rec) => {\r\n      if (rec.tableData.checked) {\r\n        updateDailyAllowance({ id: rec.id, status: \"Rejected\" });\r\n        //update leavesdata\r\n        if (!update_dailyallowance_error) {\r\n          const recdata = dailyallowancesdata.filter((r) => r.id === rec.id);\r\n          recdata[0].status = \"Rejected\";\r\n        }\r\n      }\r\n    });\r\n    dailyallowancesdata.forEach((d) => {\r\n      if (d.tableData) d.tableData.checked = false;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={dailyallowancesdata}\r\n          title={title}\r\n          icons={{\r\n            Add: (props) => <AddIcon />,\r\n            Edit: (props) => <EditIcon />,\r\n            Delete: (props) => <DeleteIcon />,\r\n            Clear: (props) => <DeleteIcon />,\r\n            Check: (props) => <CheckIcon />,\r\n            Search: (props) => <SearchIcon />,\r\n            ResetSearch: (props) => <DeleteIcon />,\r\n          }}\r\n          // editable={{\r\n          //   onRowUpdate: (newData, oldData) =>\r\n          //     new Promise((resolve, reject) => {\r\n          //       setTimeout(() => {\r\n          //         const dataUpdate = [...dailyallowancesdata];\r\n          //         const index = oldData.tableData.id;\r\n          //         dataUpdate[index] = newData;\r\n          //         setDailyAllowancesdata([...dataUpdate]);\r\n          //         //approve_Expense(newData);\r\n\r\n          //         resolve();\r\n          //       }, 1000);\r\n          //     }),\r\n          // }}\r\n          options={{\r\n            filtering: true,\r\n            selection: true,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"#FFF\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n                <div style={{ padding: \"5px 10px\" }}>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    onClick={Approve_DailyAllowancesData}\r\n                  >\r\n                    Approve\r\n                  </Button>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    onClick={Reject_DailyAllowancesData}\r\n                  >\r\n                    Reject\r\n                  </Button>\r\n                  {/* <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    onClick={Save_DailyAllowancesData}\r\n                  >\r\n                    Update <Icon className={classes.rightIcon}>send</Icon>\r\n                  </Button> */}\r\n                </div>\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n        <div className={classes.dialog}>\r\n          <CustomDialog\r\n            isOpen={isDialogOpen}\r\n            handleClose={handleDialogClose}\r\n            title=\"\"\r\n            showButton={true}\r\n            isFullscreen={true}\r\n            isFullwidth={true}\r\n          >\r\n            <DailyAllowsDetlsTable\r\n              setAllowsdata={setAllowsdata}\r\n              allowsdata={allowsdata}\r\n              handleDialogClose={handleDialogClose}\r\n            />\r\n          </CustomDialog>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  dialog: {\r\n    width: 1000,\r\n  },\r\n}));\r\n"],"sourceRoot":""}
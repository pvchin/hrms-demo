{"version":3,"sources":["components/DaiylAllowanceForm.js","components/SingleDailyAllowance.js"],"names":["initial_values","name","period","location","manager_name","status","no_of_days","amount","useStyles","makeStyles","theme","button","margin","spacing","leftIcon","marginRight","rightIcon","marginLeft","iconSmall","fontSize","root","padding","container","display","flexWrap","textField","width","DailyAllowanceForm","navigate","useNavigate","classes","useDailyAllowancesContext","isDailyAllowanceEditing","single_dailyallowance","updateDailyAllowance","addDailyAllowance","editDailyAllowanceID","loadDailyAllowances","single_dailyallowance_loading","dailyallowance_period","useEmployeesContext","loadEmployees","employees","useForm","handleSubmit","control","useEffect","Paper","className","Typography","variant","component","onSubmit","data","id","defaultValue","render","field","onChange","error","value","fieldState","TextField","label","helperText","message","select","map","e","MenuItem","rules","required","InputProps","readOnly","type","parseInt","target","Button","color","Icon","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","menuButtonHidden","title","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","content","height","overflow","paddingTop","paddingBottom","border","paper","flexDirection","fixedHeight","SingleDailyAllowance","fixedHeightPaper","clsx","CssBaseline","Container","maxWidth","Grid","item","xs","to"],"mappings":"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","file":"static/js/27.9ffd59ab.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport {\r\n  Button,\r\n  Icon,\r\n  TextField,\r\n  Paper,\r\n  Typography,\r\n  } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useDailyAllowancesContext } from \"../context/dailyallowances_context\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst initial_values = {\r\n  name: \"\",\r\n  period: \"\",\r\n  location: \"\",\r\n  manager_name: \"\",\r\n  status: \"Pending\",\r\n  no_of_days: 0,\r\n  amount: 0,\r\n};\r\n\r\nconst DailyAllowanceForm = () => {\r\n  let navigate = useNavigate();\r\n  const classes = useStyles();\r\n  const {\r\n    isDailyAllowanceEditing,\r\n    single_dailyallowance,\r\n    updateDailyAllowance,\r\n    addDailyAllowance,\r\n    editDailyAllowanceID,\r\n    loadDailyAllowances,\r\n    single_dailyallowance_loading,\r\n    dailyallowance_period,\r\n  } = useDailyAllowancesContext();\r\n  const { loadEmployees, employees } = useEmployeesContext();\r\n  const { name, period, location, manager_name, status, no_of_days, amount } =\r\n    single_dailyallowance || initial_values;\r\n  const { handleSubmit, control } = useForm();\r\n\r\n  useEffect(() => {\r\n    loadEmployees();\r\n  }, []);\r\n\r\n  const onSubmit = (data) => {\r\n    if (isDailyAllowanceEditing) {\r\n      updateDailyAllowance({ id: editDailyAllowanceID, ...data });\r\n    } else {\r\n      addDailyAllowance({ ...data });\r\n    }\r\n    loadDailyAllowances();\r\n    navigate(\"/batchdailyallowances\");\r\n  };\r\n\r\n  if (single_dailyallowance_loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n  return (\r\n    <div>\r\n      <Paper className={classes.root}>\r\n        <Typography variant=\"h5\" component=\"h3\">\r\n          DAILY ALLOWANCES CLAIM FORM\r\n        </Typography>\r\n        <Typography component=\"p\">\r\n          Daily Allowances Claim Application\r\n        </Typography>\r\n\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <div>\r\n            <Controller\r\n              name=\"name\"\r\n              control={control}\r\n              defaultValue={name}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Name\"\r\n                    id=\"margin-normal\"\r\n                    name=\"name\"\r\n                    defaultValue={name}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    select\r\n                  >\r\n                    {employees.map((e) => {\r\n                      return (\r\n                        <MenuItem key={e.name} value={e.name}>\r\n                          {e.name}\r\n                        </MenuItem>\r\n                      );\r\n                    })}\r\n                  </TextField>\r\n                );\r\n              }}\r\n              rules={{ required: \"Name required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"period\"\r\n              control={control}\r\n              defaultValue={\r\n                isDailyAllowanceEditing ? period : dailyallowance_period\r\n              }\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Period\"\r\n                    id=\"margin-normal\"\r\n                    name=\"period\"\r\n                    defaultValue={\r\n                      isDailyAllowanceEditing ? period : dailyallowance_period\r\n                    }\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                  />\r\n                );\r\n              }}\r\n              rules={{ required: \"Period is required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"location\"\r\n              control={control}\r\n              defaultValue={location}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Location\"\r\n                    id=\"margin-normal\"\r\n                    name=\"location\"\r\n                    defaultValue={location}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                  />\r\n                );\r\n              }}\r\n              rules={{ required: \"Purchased Date is required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"manager_name\"\r\n              control={control}\r\n              defaultValue={manager_name}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Manager Name\"\r\n                    id=\"margin-normal\"\r\n                    name=\"manager_name\"\r\n                    defaultValue={manager_name}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                  />\r\n                );\r\n              }}\r\n              // rules={{ required: \"Reason is required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"no_of_days\"\r\n              control={control}\r\n              defaultValue={no_of_days}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"No Of Days\"\r\n                    type=\"number\"\r\n                    id=\"standard-number\"\r\n                    name=\"no_of_days\"\r\n                    defaultValue={no_of_days}\r\n                    className={classes.textField}\r\n                    //onChange={onChange}\r\n                    onChange={(e) => {\r\n                      onChange(parseInt(e.target.value, 10));\r\n                    }}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                  />\r\n                );\r\n              }}\r\n              //rules={{ required: \"IC No required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"amount\"\r\n              control={control}\r\n              defaultValue={amount}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Amount\"\r\n                    type=\"number\"\r\n                    id=\"standard-number\"\r\n                    name=\"amount\"\r\n                    defaultValue={amount}\r\n                    className={classes.textField}\r\n                    //onChange={onChange}\r\n                    onChange={(e) => {\r\n                      onChange(parseInt(e.target.value, 10));\r\n                    }}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                  />\r\n                );\r\n              }}\r\n              //rules={{ required: \"IC No required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"status\"\r\n              control={control}\r\n              defaultValue=\"Pending\"\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Status\"\r\n                    id=\"margin-normal\"\r\n                    name=\"status\"\r\n                    defaultValue={status}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    select\r\n                  >\r\n                    <MenuItem value=\"Pending\">Pending</MenuItem>\r\n                    <MenuItem value=\"Cancel\">Cancel</MenuItem>\r\n                    <MenuItem value=\"Approved\">Approved</MenuItem>\r\n                    <MenuItem value=\"Rejected\">Rejected</MenuItem>\r\n                  </TextField>\r\n                );\r\n              }}\r\n              //rules={{ required: \"Status is required\" }}\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n            >\r\n              Submit <Icon className={classes.rightIcon}>send</Icon>\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  leftIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  iconSmall: {\r\n    fontSize: 20,\r\n  },\r\n  root: {\r\n    padding: theme.spacing(3, 2),\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 400,\r\n  },\r\n}));\r\n\r\nexport default DailyAllowanceForm;\r\n","import React from \"react\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport clsx from \"clsx\";\r\nimport {  makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DailyAllowanceForm from \"./DaiylAllowanceForm\";\r\n\r\nconst drawerWidth = 240;\r\n\r\n\r\nconst SingleDailyAllowance = ({ title }) => {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  return (\r\n    <div>\r\n      <CssBaseline />\r\n\r\n      <div className={classes.appBarSpacer}>\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Grid container spacing={3}>\r\n            {/* <Grid item xs={12} md={8} lg={9}> */}\r\n            <Grid item xs={12}>\r\n              <Paper className={fixedHeightPaper}>\r\n                <Link to=\"/batchdailyallowances\">\r\n                  <div>\r\n                    <ArrowBackIcon fontSize=\"large\" color=\"primary\" />\r\n                  </div>\r\n                </Link>\r\n                <div>\r\n                  {/* <ToolbarHeader title={title} /> */}\r\n\r\n                  <DailyAllowanceForm />\r\n                </div>\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(9),\r\n    paddingBottom: theme.spacing(4),\r\n    border: \"1px solid\",\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    // display: \"flex\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid\",\r\n    width: \"100%\",\r\n  },\r\n  fixedHeight: {\r\n    height: 800,\r\n  },\r\n}));\r\n\r\n\r\n\r\nexport default SingleDailyAllowance;\r\n"],"sourceRoot":""}
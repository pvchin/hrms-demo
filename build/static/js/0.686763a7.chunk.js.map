{"version":3,"sources":["components/dailyallows/useDailyAllowsPeriod.js","components/DailyAllowancesTableViewSummary.js"],"names":["period","a","axios","get","dailyallowances_url","data","useDailyAllowsPeriod","useState","filter","setFilter","dailyallowsperiodId","setDailyAllowsPeriodId","selectFn","useCallback","unfiltered","filterByEmpId","useQuery","queryKeys","dailyallowsperiod","getDailyAllowsPeriod","select","undefined","DailyAllowancesTable","month","year","classes","useStyles","allows_period","useRecoilValue","allowsPeriodState","title","columns","useMemo","field","type","useEffect","className","root","maxW","pt","overflow","options","filtering","search","toolbar","paging","headerStyle","backgroundColor","color","showTitle","makeStyles","theme","padding","dialog","width"],"mappings":"wUAQA,WAAoCA,GAApC,iBAAAC,EAAA,sEACyBC,IAAMC,IAAN,UAAaC,IAAb,eAAuCJ,IADhE,uBACUK,EADV,EACUA,KADV,kBAESA,GAFT,4C,sBAKO,SAASC,IAAwB,IAAD,EACTC,mBAAS,OADA,mBAC9BC,EAD8B,KACtBC,EADsB,OAEiBF,mBAAS,IAF1B,mBAE9BG,EAF8B,KAETC,EAFS,KAI/BC,EAAWC,uBACf,SAACC,GAAD,OAAgBC,YAAcD,EAAYN,KAC1C,CAACA,IANkC,EAUUQ,mBAC7C,CAACC,IAAUC,kBAAmBR,IAE9B,kB,2CAAMS,CAAqBT,KAC3B,CACEU,OAAmB,QAAXZ,EAAmBI,OAAWS,IALlChB,KASR,MAAO,CACLa,uBApBmC,MASpB,GAToB,EAqBnCV,SACAC,YACAE,0B,WCPW,SAASW,EAAT,GAAgD,IAAhBC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,KAE9CC,EAAUC,IACV1B,EAAM,UAAMwB,EAAN,YAAcD,GAIpBI,EAAgBC,YAAeC,KAI/BC,EAAK,2BAAuBH,EAAvB,KAXiD,EAYNrB,IAA9CY,EAZoD,EAYpDA,kBAAmBP,EAZiC,EAYjCA,uBAerBoB,EAAUC,mBAAQ,iBAAM,CAC5B,CACEF,MAAO,OACPG,MAAO,QAET,CAAEH,MAAO,SAAUG,MAAO,UAC1B,CAAEH,MAAO,WAAYG,MAAO,YAC5B,CAAEH,MAAO,UAAWG,MAAO,WAC3B,CAAEH,MAAO,OAAQG,MAAO,aAAcC,KAAM,WAC5C,CAAEJ,MAAO,SAAUG,MAAO,SAAUC,KAAM,YAC1C,CAAEJ,MAAO,SAAUG,MAAO,aAC1B,IAiBF,OAfAE,qBAAU,WACRxB,EAAuBX,KACtB,IAcD,qBAAKoC,UAAWX,EAAQY,KAAxB,SACE,cAAC,IAAD,CAAKC,KAAK,OAAOC,GAAG,MAAMC,SAAS,SAAnC,SACE,cAAC,IAAD,CACET,QAASA,EACT1B,KAAMa,EACNY,MAAOA,EACPW,QAAS,CACPC,WAAW,EACXC,QAAQ,EACRC,SAAS,EACTC,QAAQ,EACRC,YAAa,CACXC,gBAAiB,wBACjBC,MAAO,QAETC,WAAW,SAQvB,IAAMvB,EAAYwB,aAAW,SAACC,GAAD,MAAY,CACvCd,KAAM,CACJe,QAAS,GAEXC,OAAQ,CACNC,MAAO","file":"static/js/0.686763a7.chunk.js","sourcesContent":["import { useState, useCallback } from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport { dailyallowances_url } from \"../../utils/constants\";\r\nimport { filterByEmpId } from \"./utils\";\r\n\r\nimport axios from \"axios\";\r\nimport { queryKeys } from \"../react-query/constants\";\r\n\r\nasync function getDailyAllowsPeriod(period) {\r\n  const { data } = await axios.get(`${dailyallowances_url}?fv=${period}`);\r\n  return data;\r\n}\r\n\r\nexport function useDailyAllowsPeriod() {\r\n  const [filter, setFilter] = useState(\"all\");\r\n  const [dailyallowsperiodId, setDailyAllowsPeriodId] = useState(\"\");\r\n\r\n  const selectFn = useCallback(\r\n    (unfiltered) => filterByEmpId(unfiltered, filter),\r\n    [filter]\r\n  );\r\n\r\n  const fallback = [];\r\n  const { data: dailyallowsperiod = fallback } = useQuery(\r\n    [queryKeys.dailyallowsperiod, dailyallowsperiodId],\r\n    //queryKeys.dailyallows,\r\n    () => getDailyAllowsPeriod(dailyallowsperiodId),\r\n    {\r\n      select: filter !== \"all\" ? selectFn : undefined,\r\n    }\r\n  );\r\n\r\n  return {\r\n    dailyallowsperiod,\r\n    filter,\r\n    setFilter,\r\n    setDailyAllowsPeriodId,\r\n  };\r\n}\r\n","import React, { useState, useEffect, useMemo } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Box } from \"@chakra-ui/react\";\r\nimport {\r\n  //useSetRecoilState,\r\n  useRecoilValue,\r\n  //useRecoilState,\r\n  //useRecoilValueLoadable,\r\n} from \"recoil\";\r\nimport {\r\n  allowsPeriodState,\r\n  //allowsDataState,\r\n  //empidState,\r\n} from \"./data/atomdata\";\r\n//import { fetchDailyAllowancesSelector } from \"./data/selectordata\";\r\n//import AddIcon from \"@material-ui/icons/Add\";\r\n//import EditIcon from \"@material-ui/icons/Edit\";\r\n//import DeleteIcon from \"@material-ui/icons/Delete\";\r\n//import CheckIcon from \"@material-ui/icons/Check\";\r\n//import SearchIcon from \"@material-ui/icons/Search\";\r\n//import ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\n//import { CustomDialog } from \"../helpers/CustomDialog\";\r\n//import { useDailyAllowancesContext } from \"../context/dailyallowances_context\";\r\n//import { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useDailyAllowsPeriod } from \"./dailyallows/useDailyAllowsPeriod\";\r\n\r\n//const FILTERSTRING = \"Submitted\";\r\n\r\nexport default function DailyAllowancesTable({ month, year }) {\r\n  //let history = useHistory();\r\n  const classes = useStyles();\r\n  const period = `${year}-${month}`;\r\n\r\n  //const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  //const [tmpallowsdata, setTmpallowsdata] = useState([]);\r\n  const allows_period = useRecoilValue(allowsPeriodState);\r\n  //const allows_empid = useRecoilValue(empidState);\r\n  //const [allowsdata, setAllowsdata] = useRecoilState(allowsDataState);\r\n  //const setEmpID = useSetRecoilState(empidState);\r\n  const title = `Site Allowances (${allows_period})`;\r\n  const { dailyallowsperiod, setDailyAllowsPeriodId } = useDailyAllowsPeriod();\r\n  // const {\r\n  //   dailyallowances,\r\n  //   loadPendingDailyAllowances,\r\n  //   singlebatch_dailyallowance,\r\n  //   singlebatch_dailyallowance_loading,\r\n  //   deleteDailyAllowance,\r\n  //   setEditDailyAllowanceID,\r\n  //   setIsDailyAllowanceEditingOn,\r\n  //   setIsDailyAllowanceEditingOff,\r\n  //   resetSingleDailyAllowance,\r\n  //   dailyallowance_period,\r\n  //   getSingleBatchDailyAllowance,\r\n  // } = useDailyAllowancesContext();\r\n\r\n  const columns = useMemo(() => [\r\n    {\r\n      title: \"Name\",\r\n      field: \"name\",\r\n    },\r\n    { title: \"Period\", field: \"period\" },\r\n    { title: \"Location\", field: \"location\" },\r\n    { title: \"Manager\", field: \"manager\" },\r\n    { title: \"Days\", field: \"no_of_days\", type: \"numeric\" },\r\n    { title: \"Amount\", field: \"amount\", type: \"currency\" },\r\n    { title: \"Status\", field: \"status\" },\r\n  ],[]);\r\n\r\n  useEffect(() => {\r\n    setDailyAllowsPeriodId(period);\r\n  }, []);\r\n\r\n  //const handleDialogOpen = () => {\r\n  //console.log(\"allowsdetls\", allowsdata, allowsdataRef, singlebatch_dailyallowsdetl);\r\n  //setAllowsdata({ singlebatch_dailyallowsdetl });\r\n  //setIsDialogOpen(true);\r\n  //};\r\n\r\n  //const handleDialogClose = () => {\r\n  //setIsDialogOpen(false);\r\n  //getSingleBatchDailyAllowance(dailyallowance_period);\r\n  //};\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Box maxW=\"100%\" pt=\"5px\" overflow=\"scroll\">\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={dailyallowsperiod}\r\n          title={title}\r\n          options={{\r\n            filtering: false,\r\n            search: false,\r\n            toolbar: false,\r\n            paging: false,\r\n            headerStyle: {\r\n              backgroundColor: \"rgba(75, 192, 192, 1)\",\r\n              color: \"#FFF\",\r\n            },\r\n            showTitle: false,\r\n          }}\r\n        />\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n  dialog: {\r\n    width: 1000,\r\n  },\r\n}));\r\n"],"sourceRoot":""}